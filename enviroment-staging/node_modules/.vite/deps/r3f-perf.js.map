{
  "version": 3,
  "sources": ["../../eventemitter3/index.js", "../../r3f-perf/node_modules/zustand/esm/traditional.mjs", "../../r3f-perf/node_modules/zustand/esm/vanilla.mjs", "../../r3f-perf/node_modules/zustand/esm/shallow.mjs", "../../r3f-perf/src/store.ts", "../../r3f-perf/src/internal.ts", "../../r3f-perf/src/helpers/countGeoDrawCalls.ts", "../../@utsubo/events/src/vanilla.ts", "../../@utsubo/events/src/react.ts", "../../r3f-perf/src/components/PerfHeadless.tsx", "../../r3f-perf/src/styles.tsx", "../../@radix-ui/react-icons/src/AccessibilityIcon.tsx", "../../@radix-ui/react-icons/src/ActivityLogIcon.tsx", "../../@radix-ui/react-icons/src/AlignBaselineIcon.tsx", "../../@radix-ui/react-icons/src/AlignBottomIcon.tsx", "../../@radix-ui/react-icons/src/AlignCenterHorizontallyIcon.tsx", "../../@radix-ui/react-icons/src/AlignCenterVerticallyIcon.tsx", "../../@radix-ui/react-icons/src/AlignLeftIcon.tsx", "../../@radix-ui/react-icons/src/AlignRightIcon.tsx", "../../@radix-ui/react-icons/src/AlignTopIcon.tsx", "../../@radix-ui/react-icons/src/AllSidesIcon.tsx", "../../@radix-ui/react-icons/src/AngleIcon.tsx", "../../@radix-ui/react-icons/src/ArchiveIcon.tsx", "../../@radix-ui/react-icons/src/ArrowBottomLeftIcon.tsx", "../../@radix-ui/react-icons/src/ArrowBottomRightIcon.tsx", "../../@radix-ui/react-icons/src/ArrowDownIcon.tsx", "../../@radix-ui/react-icons/src/ArrowLeftIcon.tsx", "../../@radix-ui/react-icons/src/ArrowRightIcon.tsx", "../../@radix-ui/react-icons/src/ArrowTopLeftIcon.tsx", "../../@radix-ui/react-icons/src/ArrowTopRightIcon.tsx", "../../@radix-ui/react-icons/src/ArrowUpIcon.tsx", "../../@radix-ui/react-icons/src/AspectRatioIcon.tsx", "../../@radix-ui/react-icons/src/AvatarIcon.tsx", "../../@radix-ui/react-icons/src/BackpackIcon.tsx", "../../@radix-ui/react-icons/src/BadgeIcon.tsx", "../../@radix-ui/react-icons/src/BarChartIcon.tsx", "../../@radix-ui/react-icons/src/BellIcon.tsx", "../../@radix-ui/react-icons/src/BlendingModeIcon.tsx", "../../@radix-ui/react-icons/src/BookmarkIcon.tsx", "../../@radix-ui/react-icons/src/BookmarkFilledIcon.tsx", "../../@radix-ui/react-icons/src/BorderAllIcon.tsx", "../../@radix-ui/react-icons/src/BorderBottomIcon.tsx", "../../@radix-ui/react-icons/src/BorderDashedIcon.tsx", "../../@radix-ui/react-icons/src/BorderDottedIcon.tsx", "../../@radix-ui/react-icons/src/BorderLeftIcon.tsx", "../../@radix-ui/react-icons/src/BorderNoneIcon.tsx", "../../@radix-ui/react-icons/src/BorderRightIcon.tsx", "../../@radix-ui/react-icons/src/BorderSolidIcon.tsx", "../../@radix-ui/react-icons/src/BorderSplitIcon.tsx", "../../@radix-ui/react-icons/src/BorderStyleIcon.tsx", "../../@radix-ui/react-icons/src/BorderTopIcon.tsx", "../../@radix-ui/react-icons/src/BorderWidthIcon.tsx", "../../@radix-ui/react-icons/src/BoxIcon.tsx", "../../@radix-ui/react-icons/src/BoxModelIcon.tsx", "../../@radix-ui/react-icons/src/ButtonIcon.tsx", "../../@radix-ui/react-icons/src/CalendarIcon.tsx", "../../@radix-ui/react-icons/src/CameraIcon.tsx", "../../@radix-ui/react-icons/src/CardStackIcon.tsx", "../../@radix-ui/react-icons/src/CardStackMinusIcon.tsx", "../../@radix-ui/react-icons/src/CardStackPlusIcon.tsx", "../../@radix-ui/react-icons/src/CaretDownIcon.tsx", "../../@radix-ui/react-icons/src/CaretLeftIcon.tsx", "../../@radix-ui/react-icons/src/CaretRightIcon.tsx", "../../@radix-ui/react-icons/src/CaretSortIcon.tsx", "../../@radix-ui/react-icons/src/CaretUpIcon.tsx", "../../@radix-ui/react-icons/src/ChatBubbleIcon.tsx", "../../@radix-ui/react-icons/src/CheckIcon.tsx", "../../@radix-ui/react-icons/src/CheckCircledIcon.tsx", "../../@radix-ui/react-icons/src/CheckboxIcon.tsx", "../../@radix-ui/react-icons/src/ChevronDownIcon.tsx", "../../@radix-ui/react-icons/src/ChevronLeftIcon.tsx", "../../@radix-ui/react-icons/src/ChevronRightIcon.tsx", "../../@radix-ui/react-icons/src/ChevronUpIcon.tsx", "../../@radix-ui/react-icons/src/CircleIcon.tsx", "../../@radix-ui/react-icons/src/CircleBackslashIcon.tsx", "../../@radix-ui/react-icons/src/ClipboardIcon.tsx", "../../@radix-ui/react-icons/src/ClipboardCopyIcon.tsx", "../../@radix-ui/react-icons/src/ClockIcon.tsx", "../../@radix-ui/react-icons/src/CodeIcon.tsx", "../../@radix-ui/react-icons/src/CodeSandboxLogoIcon.tsx", "../../@radix-ui/react-icons/src/ColorWheelIcon.tsx", "../../@radix-ui/react-icons/src/ColumnSpacingIcon.tsx", "../../@radix-ui/react-icons/src/ColumnsIcon.tsx", "../../@radix-ui/react-icons/src/CommitIcon.tsx", "../../@radix-ui/react-icons/src/Component1Icon.tsx", "../../@radix-ui/react-icons/src/Component2Icon.tsx", "../../@radix-ui/react-icons/src/ComponentBooleanIcon.tsx", "../../@radix-ui/react-icons/src/ComponentInstanceIcon.tsx", "../../@radix-ui/react-icons/src/ComponentNoneIcon.tsx", "../../@radix-ui/react-icons/src/ComponentPlaceholderIcon.tsx", "../../@radix-ui/react-icons/src/ContainerIcon.tsx", "../../@radix-ui/react-icons/src/CookieIcon.tsx", "../../@radix-ui/react-icons/src/CopyIcon.tsx", "../../@radix-ui/react-icons/src/CornerBottomLeftIcon.tsx", "../../@radix-ui/react-icons/src/CornerBottomRightIcon.tsx", "../../@radix-ui/react-icons/src/CornerTopLeftIcon.tsx", "../../@radix-ui/react-icons/src/CornerTopRightIcon.tsx", "../../@radix-ui/react-icons/src/CornersIcon.tsx", "../../@radix-ui/react-icons/src/CountdownTimerIcon.tsx", "../../@radix-ui/react-icons/src/CounterClockwiseClockIcon.tsx", "../../@radix-ui/react-icons/src/CropIcon.tsx", "../../@radix-ui/react-icons/src/Cross1Icon.tsx", "../../@radix-ui/react-icons/src/Cross2Icon.tsx", "../../@radix-ui/react-icons/src/CrossCircledIcon.tsx", "../../@radix-ui/react-icons/src/Crosshair1Icon.tsx", "../../@radix-ui/react-icons/src/Crosshair2Icon.tsx", "../../@radix-ui/react-icons/src/CrumpledPaperIcon.tsx", "../../@radix-ui/react-icons/src/CubeIcon.tsx", "../../@radix-ui/react-icons/src/CursorArrowIcon.tsx", "../../@radix-ui/react-icons/src/CursorTextIcon.tsx", "../../@radix-ui/react-icons/src/DashIcon.tsx", "../../@radix-ui/react-icons/src/DashboardIcon.tsx", "../../@radix-ui/react-icons/src/DesktopIcon.tsx", "../../@radix-ui/react-icons/src/DimensionsIcon.tsx", "../../@radix-ui/react-icons/src/DiscIcon.tsx", "../../@radix-ui/react-icons/src/DiscordLogoIcon.tsx", "../../@radix-ui/react-icons/src/DividerHorizontalIcon.tsx", "../../@radix-ui/react-icons/src/DividerVerticalIcon.tsx", "../../@radix-ui/react-icons/src/DotIcon.tsx", "../../@radix-ui/react-icons/src/DotFilledIcon.tsx", "../../@radix-ui/react-icons/src/DotsHorizontalIcon.tsx", "../../@radix-ui/react-icons/src/DotsVerticalIcon.tsx", "../../@radix-ui/react-icons/src/DoubleArrowDownIcon.tsx", "../../@radix-ui/react-icons/src/DoubleArrowLeftIcon.tsx", "../../@radix-ui/react-icons/src/DoubleArrowRightIcon.tsx", "../../@radix-ui/react-icons/src/DoubleArrowUpIcon.tsx", "../../@radix-ui/react-icons/src/DownloadIcon.tsx", "../../@radix-ui/react-icons/src/DragHandleDots1Icon.tsx", "../../@radix-ui/react-icons/src/DragHandleDots2Icon.tsx", "../../@radix-ui/react-icons/src/DragHandleHorizontalIcon.tsx", "../../@radix-ui/react-icons/src/DragHandleVerticalIcon.tsx", "../../@radix-ui/react-icons/src/DrawingPinIcon.tsx", "../../@radix-ui/react-icons/src/DrawingPinFilledIcon.tsx", "../../@radix-ui/react-icons/src/DropdownMenuIcon.tsx", "../../@radix-ui/react-icons/src/EnterIcon.tsx", "../../@radix-ui/react-icons/src/EnterFullScreenIcon.tsx", "../../@radix-ui/react-icons/src/EnvelopeClosedIcon.tsx", "../../@radix-ui/react-icons/src/EnvelopeOpenIcon.tsx", "../../@radix-ui/react-icons/src/EraserIcon.tsx", "../../@radix-ui/react-icons/src/ExclamationTriangleIcon.tsx", "../../@radix-ui/react-icons/src/ExitIcon.tsx", "../../@radix-ui/react-icons/src/ExitFullScreenIcon.tsx", "../../@radix-ui/react-icons/src/ExternalLinkIcon.tsx", "../../@radix-ui/react-icons/src/EyeClosedIcon.tsx", "../../@radix-ui/react-icons/src/EyeNoneIcon.tsx", "../../@radix-ui/react-icons/src/EyeOpenIcon.tsx", "../../@radix-ui/react-icons/src/FaceIcon.tsx", "../../@radix-ui/react-icons/src/FigmaLogoIcon.tsx", "../../@radix-ui/react-icons/src/FileIcon.tsx", "../../@radix-ui/react-icons/src/FileMinusIcon.tsx", "../../@radix-ui/react-icons/src/FilePlusIcon.tsx", "../../@radix-ui/react-icons/src/FileTextIcon.tsx", "../../@radix-ui/react-icons/src/FontBoldIcon.tsx", "../../@radix-ui/react-icons/src/FontFamilyIcon.tsx", "../../@radix-ui/react-icons/src/FontItalicIcon.tsx", "../../@radix-ui/react-icons/src/FontRomanIcon.tsx", "../../@radix-ui/react-icons/src/FontSizeIcon.tsx", "../../@radix-ui/react-icons/src/FontStyleIcon.tsx", "../../@radix-ui/react-icons/src/FrameIcon.tsx", "../../@radix-ui/react-icons/src/FramerLogoIcon.tsx", "../../@radix-ui/react-icons/src/GearIcon.tsx", "../../@radix-ui/react-icons/src/GitHubLogoIcon.tsx", "../../@radix-ui/react-icons/src/GlobeIcon.tsx", "../../@radix-ui/react-icons/src/GridIcon.tsx", "../../@radix-ui/react-icons/src/GroupIcon.tsx", "../../@radix-ui/react-icons/src/Half1Icon.tsx", "../../@radix-ui/react-icons/src/Half2Icon.tsx", "../../@radix-ui/react-icons/src/HamburgerMenuIcon.tsx", "../../@radix-ui/react-icons/src/HandIcon.tsx", "../../@radix-ui/react-icons/src/HeadingIcon.tsx", "../../@radix-ui/react-icons/src/HeartIcon.tsx", "../../@radix-ui/react-icons/src/HeartFilledIcon.tsx", "../../@radix-ui/react-icons/src/HeightIcon.tsx", "../../@radix-ui/react-icons/src/HobbyKnifeIcon.tsx", "../../@radix-ui/react-icons/src/HomeIcon.tsx", "../../@radix-ui/react-icons/src/IconJarLogoIcon.tsx", "../../@radix-ui/react-icons/src/IdCardIcon.tsx", "../../@radix-ui/react-icons/src/ImageIcon.tsx", "../../@radix-ui/react-icons/src/InfoCircledIcon.tsx", "../../@radix-ui/react-icons/src/InputIcon.tsx", "../../@radix-ui/react-icons/src/InstagramLogoIcon.tsx", "../../@radix-ui/react-icons/src/KeyboardIcon.tsx", "../../@radix-ui/react-icons/src/LapTimerIcon.tsx", "../../@radix-ui/react-icons/src/LaptopIcon.tsx", "../../@radix-ui/react-icons/src/LayersIcon.tsx", "../../@radix-ui/react-icons/src/LayoutIcon.tsx", "../../@radix-ui/react-icons/src/LetterCaseCapitalizeIcon.tsx", "../../@radix-ui/react-icons/src/LetterCaseLowercaseIcon.tsx", "../../@radix-ui/react-icons/src/LetterCaseToggleIcon.tsx", "../../@radix-ui/react-icons/src/LetterCaseUppercaseIcon.tsx", "../../@radix-ui/react-icons/src/LetterSpacingIcon.tsx", "../../@radix-ui/react-icons/src/LightningBoltIcon.tsx", "../../@radix-ui/react-icons/src/LineHeightIcon.tsx", "../../@radix-ui/react-icons/src/Link1Icon.tsx", "../../@radix-ui/react-icons/src/Link2Icon.tsx", "../../@radix-ui/react-icons/src/LinkBreak1Icon.tsx", "../../@radix-ui/react-icons/src/LinkBreak2Icon.tsx", "../../@radix-ui/react-icons/src/LinkNone1Icon.tsx", "../../@radix-ui/react-icons/src/LinkNone2Icon.tsx", "../../@radix-ui/react-icons/src/LinkedInLogoIcon.tsx", "../../@radix-ui/react-icons/src/ListBulletIcon.tsx", "../../@radix-ui/react-icons/src/LockClosedIcon.tsx", "../../@radix-ui/react-icons/src/LockOpen1Icon.tsx", "../../@radix-ui/react-icons/src/LockOpen2Icon.tsx", "../../@radix-ui/react-icons/src/LoopIcon.tsx", "../../@radix-ui/react-icons/src/MagicWandIcon.tsx", "../../@radix-ui/react-icons/src/MagnifyingGlassIcon.tsx", "../../@radix-ui/react-icons/src/MarginIcon.tsx", "../../@radix-ui/react-icons/src/MaskOffIcon.tsx", "../../@radix-ui/react-icons/src/MaskOnIcon.tsx", "../../@radix-ui/react-icons/src/MinusIcon.tsx", "../../@radix-ui/react-icons/src/MinusCircledIcon.tsx", "../../@radix-ui/react-icons/src/MixIcon.tsx", "../../@radix-ui/react-icons/src/MixerHorizontalIcon.tsx", "../../@radix-ui/react-icons/src/MixerVerticalIcon.tsx", "../../@radix-ui/react-icons/src/MobileIcon.tsx", "../../@radix-ui/react-icons/src/ModulzLogoIcon.tsx", "../../@radix-ui/react-icons/src/MoonIcon.tsx", "../../@radix-ui/react-icons/src/MoveIcon.tsx", "../../@radix-ui/react-icons/src/NotionLogoIcon.tsx", "../../@radix-ui/react-icons/src/OpacityIcon.tsx", "../../@radix-ui/react-icons/src/OpenInNewWindowIcon.tsx", "../../@radix-ui/react-icons/src/OverlineIcon.tsx", "../../@radix-ui/react-icons/src/PaddingIcon.tsx", "../../@radix-ui/react-icons/src/PaperPlaneIcon.tsx", "../../@radix-ui/react-icons/src/PauseIcon.tsx", "../../@radix-ui/react-icons/src/Pencil1Icon.tsx", "../../@radix-ui/react-icons/src/Pencil2Icon.tsx", "../../@radix-ui/react-icons/src/PersonIcon.tsx", "../../@radix-ui/react-icons/src/PieChartIcon.tsx", "../../@radix-ui/react-icons/src/PilcrowIcon.tsx", "../../@radix-ui/react-icons/src/PinBottomIcon.tsx", "../../@radix-ui/react-icons/src/PinLeftIcon.tsx", "../../@radix-ui/react-icons/src/PinRightIcon.tsx", "../../@radix-ui/react-icons/src/PinTopIcon.tsx", "../../@radix-ui/react-icons/src/PlayIcon.tsx", "../../@radix-ui/react-icons/src/PlusIcon.tsx", "../../@radix-ui/react-icons/src/PlusCircledIcon.tsx", "../../@radix-ui/react-icons/src/QuestionMarkIcon.tsx", "../../@radix-ui/react-icons/src/QuestionMarkCircledIcon.tsx", "../../@radix-ui/react-icons/src/QuoteIcon.tsx", "../../@radix-ui/react-icons/src/RadiobuttonIcon.tsx", "../../@radix-ui/react-icons/src/ReaderIcon.tsx", "../../@radix-ui/react-icons/src/ReloadIcon.tsx", "../../@radix-ui/react-icons/src/ResetIcon.tsx", "../../@radix-ui/react-icons/src/ResumeIcon.tsx", "../../@radix-ui/react-icons/src/RocketIcon.tsx", "../../@radix-ui/react-icons/src/RotateCounterClockwiseIcon.tsx", "../../@radix-ui/react-icons/src/RowSpacingIcon.tsx", "../../@radix-ui/react-icons/src/RowsIcon.tsx", "../../@radix-ui/react-icons/src/RulerHorizontalIcon.tsx", "../../@radix-ui/react-icons/src/RulerSquareIcon.tsx", "../../@radix-ui/react-icons/src/ScissorsIcon.tsx", "../../@radix-ui/react-icons/src/SectionIcon.tsx", "../../@radix-ui/react-icons/src/SewingPinIcon.tsx", "../../@radix-ui/react-icons/src/SewingPinFilledIcon.tsx", "../../@radix-ui/react-icons/src/ShadowIcon.tsx", "../../@radix-ui/react-icons/src/ShadowInnerIcon.tsx", "../../@radix-ui/react-icons/src/ShadowNoneIcon.tsx", "../../@radix-ui/react-icons/src/ShadowOuterIcon.tsx", "../../@radix-ui/react-icons/src/Share1Icon.tsx", "../../@radix-ui/react-icons/src/Share2Icon.tsx", "../../@radix-ui/react-icons/src/ShuffleIcon.tsx", "../../@radix-ui/react-icons/src/SizeIcon.tsx", "../../@radix-ui/react-icons/src/SketchLogoIcon.tsx", "../../@radix-ui/react-icons/src/SlashIcon.tsx", "../../@radix-ui/react-icons/src/SliderIcon.tsx", "../../@radix-ui/react-icons/src/SpaceBetweenHorizontallyIcon.tsx", "../../@radix-ui/react-icons/src/SpaceBetweenVerticallyIcon.tsx", "../../@radix-ui/react-icons/src/SpaceEvenlyHorizontallyIcon.tsx", "../../@radix-ui/react-icons/src/SpaceEvenlyVerticallyIcon.tsx", "../../@radix-ui/react-icons/src/SpeakerLoudIcon.tsx", "../../@radix-ui/react-icons/src/SpeakerModerateIcon.tsx", "../../@radix-ui/react-icons/src/SpeakerOffIcon.tsx", "../../@radix-ui/react-icons/src/SpeakerQuietIcon.tsx", "../../@radix-ui/react-icons/src/SquareIcon.tsx", "../../@radix-ui/react-icons/src/StackIcon.tsx", "../../@radix-ui/react-icons/src/StarIcon.tsx", "../../@radix-ui/react-icons/src/StarFilledIcon.tsx", "../../@radix-ui/react-icons/src/StitchesLogoIcon.tsx", "../../@radix-ui/react-icons/src/StopIcon.tsx", "../../@radix-ui/react-icons/src/StopwatchIcon.tsx", "../../@radix-ui/react-icons/src/StretchHorizontallyIcon.tsx", "../../@radix-ui/react-icons/src/StretchVerticallyIcon.tsx", "../../@radix-ui/react-icons/src/StrikethroughIcon.tsx", "../../@radix-ui/react-icons/src/SunIcon.tsx", "../../@radix-ui/react-icons/src/SwitchIcon.tsx", "../../@radix-ui/react-icons/src/SymbolIcon.tsx", "../../@radix-ui/react-icons/src/TableIcon.tsx", "../../@radix-ui/react-icons/src/TargetIcon.tsx", "../../@radix-ui/react-icons/src/TextIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignBottomIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignCenterIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignJustifyIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignLeftIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignMiddleIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignRightIcon.tsx", "../../@radix-ui/react-icons/src/TextAlignTopIcon.tsx", "../../@radix-ui/react-icons/src/TextNoneIcon.tsx", "../../@radix-ui/react-icons/src/ThickArrowDownIcon.tsx", "../../@radix-ui/react-icons/src/ThickArrowLeftIcon.tsx", "../../@radix-ui/react-icons/src/ThickArrowRightIcon.tsx", "../../@radix-ui/react-icons/src/ThickArrowUpIcon.tsx", "../../@radix-ui/react-icons/src/TimerIcon.tsx", "../../@radix-ui/react-icons/src/TokensIcon.tsx", "../../@radix-ui/react-icons/src/TrackNextIcon.tsx", "../../@radix-ui/react-icons/src/TrackPreviousIcon.tsx", "../../@radix-ui/react-icons/src/TransformIcon.tsx", "../../@radix-ui/react-icons/src/TransparencyGridIcon.tsx", "../../@radix-ui/react-icons/src/TrashIcon.tsx", "../../@radix-ui/react-icons/src/TriangleDownIcon.tsx", "../../@radix-ui/react-icons/src/TriangleLeftIcon.tsx", "../../@radix-ui/react-icons/src/TriangleRightIcon.tsx", "../../@radix-ui/react-icons/src/TriangleUpIcon.tsx", "../../@radix-ui/react-icons/src/TwitterLogoIcon.tsx", "../../@radix-ui/react-icons/src/UnderlineIcon.tsx", "../../@radix-ui/react-icons/src/UpdateIcon.tsx", "../../@radix-ui/react-icons/src/UploadIcon.tsx", "../../@radix-ui/react-icons/src/ValueIcon.tsx", "../../@radix-ui/react-icons/src/ValueNoneIcon.tsx", "../../@radix-ui/react-icons/src/VercelLogoIcon.tsx", "../../@radix-ui/react-icons/src/VideoIcon.tsx", "../../@radix-ui/react-icons/src/ViewGridIcon.tsx", "../../@radix-ui/react-icons/src/ViewHorizontalIcon.tsx", "../../@radix-ui/react-icons/src/ViewNoneIcon.tsx", "../../@radix-ui/react-icons/src/ViewVerticalIcon.tsx", "../../@radix-ui/react-icons/src/WidthIcon.tsx", "../../@radix-ui/react-icons/src/ZoomInIcon.tsx", "../../@radix-ui/react-icons/src/ZoomOutIcon.tsx", "../../r3f-perf/node_modules/@react-three/drei/web/Html.js", "../../r3f-perf/node_modules/@react-three/drei/web/CycleRaycast.js", "../../r3f-perf/node_modules/@react-three/drei/web/useCursor.js", "../../r3f-perf/node_modules/@react-three/drei/web/Loader.js", "../../r3f-perf/node_modules/@react-three/drei/core/Progress.js", "../../r3f-perf/node_modules/@react-three/drei/node_modules/zustand/esm/vanilla.mjs", "../../r3f-perf/node_modules/@react-three/drei/node_modules/zustand/esm/react.mjs", "../../r3f-perf/node_modules/@react-three/drei/web/DragControls.js", "../../r3f-perf/node_modules/@react-three/drei/web/ScrollControls.js", "../../r3f-perf/node_modules/@react-three/drei/web/PresentationControls.js", "../../@react-spring/rafz/src/index.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/globals.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/helpers.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/FrameLoop.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/clamp.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/colors.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/colorMatchers.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/normalizeColor.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/colorToRgba.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/createInterpolator.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/easings.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/fluids.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/regexs.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/variableToRgba.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/stringInterpolation.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/deprecations.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/isAnimatedString.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/dom-events/scroll/index.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/dom-events/resize/resizeElement.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/dom-events/resize/resizeWindow.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/dom-events/resize/index.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/progress.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/dom-events/scroll/ScrollHandler.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useConstant.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useForceUpdate.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useIsMounted.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useIsomorphicLayoutEffect.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useMemoOne.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useOnce.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/usePrev.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/hooks/useReducedMotion.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/shared/src/index.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useChain.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/helpers.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useSpring.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useSprings.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/SpringValue.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/AnimationConfig.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/constants.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/Animation.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/scheduleProps.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/runAsync.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/AnimationResult.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/FrameValue.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/SpringPhase.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/Controller.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/SpringContext.tsx", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/SpringRef.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useSpringRef.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useSpringValue.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useTrail.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useTransition.tsx", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useScroll.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useResize.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/hooks/useInView.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/components/Spring.tsx", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/components/Trail.tsx", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/components/Transition.tsx", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/interpolate.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/Interpolation.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/globals.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/core/src/index.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/Animated.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/AnimatedValue.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/AnimatedString.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/AnimatedArray.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/AnimatedObject.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/context.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/getAnimatedType.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/createHost.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/node_modules/@react-spring/animated/src/withAnimated.tsx", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/src/index.ts", "../../r3f-perf/node_modules/@react-three/drei/node_modules/@react-spring/three/src/primitives.ts", "../../r3f-perf/node_modules/@react-three/drei/web/KeyboardControls.js", "../../r3f-perf/node_modules/@react-three/drei/web/Select.js", "../../r3f-perf/node_modules/@react-three/drei/node_modules/zustand/esm/react/shallow.mjs", "../../r3f-perf/node_modules/@react-three/drei/core/Billboard.js", "../../r3f-perf/node_modules/@react-three/drei/core/ScreenSpace.js", "../../r3f-perf/node_modules/@react-three/drei/core/ScreenSizer.js", "../../r3f-perf/node_modules/@react-three/drei/core/calculateScaleFactor.js", "../../r3f-perf/node_modules/@react-three/drei/core/QuadraticBezierLine.js", "../../r3f-perf/node_modules/@react-three/drei/core/Line.js", "../../r3f-perf/node_modules/@react-three/drei/core/CubicBezierLine.js", "../../r3f-perf/node_modules/@react-three/drei/core/CatmullRomLine.js", "../../r3f-perf/node_modules/@react-three/drei/core/PositionalAudio.js", "../../r3f-perf/node_modules/@react-three/drei/core/Text.js", "../../r3f-perf/node_modules/@react-three/drei/core/Text3D.js", "../../r3f-perf/node_modules/@react-three/drei/core/useFont.js", "../../r3f-perf/node_modules/@react-three/drei/core/Effects.js", "../../r3f-perf/node_modules/@react-three/drei/core/GradientTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/Image.js", "../../r3f-perf/node_modules/@react-three/drei/core/shaderMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/Texture.js", "../../r3f-perf/node_modules/@react-three/drei/helpers/constants.js", "../../r3f-perf/node_modules/@react-three/drei/core/Edges.js", "../../r3f-perf/node_modules/@react-three/drei/core/Outlines.js", "../../r3f-perf/node_modules/@react-three/drei/core/Trail.js", "../../r3f-perf/node_modules/@react-three/drei/core/Sampler.js", "../../r3f-perf/node_modules/@react-three/drei/core/ComputedAttribute.js", "../../r3f-perf/node_modules/@react-three/drei/core/Clone.js", "../../r3f-perf/node_modules/@react-three/drei/core/MarchingCubes.js", "../../r3f-perf/node_modules/@react-three/drei/core/Decal.js", "../../r3f-perf/node_modules/@react-three/drei/core/Svg.js", "../../r3f-perf/node_modules/@react-three/drei/core/Gltf.js", "../../r3f-perf/node_modules/@react-three/drei/core/AsciiRenderer.js", "../../r3f-perf/node_modules/@react-three/drei/core/Splat.js", "../../r3f-perf/node_modules/@react-three/drei/core/OrthographicCamera.js", "../../r3f-perf/node_modules/@react-three/drei/core/Fbo.js", "../../r3f-perf/node_modules/@react-three/drei/core/PerspectiveCamera.js", "../../r3f-perf/node_modules/@react-three/drei/core/CubeCamera.js", "../../r3f-perf/node_modules/@react-three/drei/core/DeviceOrientationControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/FlyControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/MapControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/OrbitControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/TrackballControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/ArcballControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/TransformControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/PointerLockControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/FirstPersonControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/CameraControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/MotionPathControls.js", "../../r3f-perf/node_modules/@react-three/drei/core/GizmoHelper.js", "../../r3f-perf/node_modules/@react-three/drei/core/Hud.js", "../../r3f-perf/node_modules/@react-three/drei/core/GizmoViewcube.js", "../../r3f-perf/node_modules/@react-three/drei/core/GizmoViewport.js", "../../r3f-perf/node_modules/@react-three/drei/core/Grid.js", "../../r3f-perf/node_modules/@react-three/drei/core/CubeTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/Fbx.js", "../../r3f-perf/node_modules/@react-three/drei/core/Ktx2.js", "../../r3f-perf/node_modules/@react-three/drei/core/VideoTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/useSpriteLoader.js", "../../r3f-perf/node_modules/@react-three/drei/core/Helper.js", "../../r3f-perf/node_modules/@react-three/drei/core/Stats.js", "../../r3f-perf/node_modules/@react-three/drei/helpers/useEffectfulState.js", "../../r3f-perf/node_modules/@react-three/drei/core/StatsGl.js", "../../r3f-perf/node_modules/@react-three/drei/core/useDepthBuffer.js", "../../r3f-perf/node_modules/@react-three/drei/core/useCamera.js", "../../r3f-perf/node_modules/@react-three/drei/core/DetectGPU.js", "../../r3f-perf/node_modules/@react-three/drei/core/Bvh.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/Constants.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/geometryUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/computeBoundsUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/ArrayBoxUtilities.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/splitUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/MeshBVHNode.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/sortUtils.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/sortUtils_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/utils/nodeBufferUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/buildUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/build/buildTree.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/math/SeparatingAxisBounds.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/math/MathUtilities.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/math/ExtendedTriangle.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/math/OrientedBox.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/PrimitivePool.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/ExtendedTrianglePool.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/utils/BufferStack.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/shapecast.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/closestPointToPoint.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/ThreeRayIntersectUtilities.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/TriangleUtilities.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/utils/iterationUtils.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/refit.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/utils/intersectUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/utils/iterationUtils_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/raycast.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/raycastFirst.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/intersectsGeometry.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/closestPointToGeometry.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/refit_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/raycast_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/raycastFirst_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/intersectsGeometry_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/closestPointToGeometry_indirect.generated.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/BufferUtils.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/cast/bvhcast.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/core/MeshBVH.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/objects/MeshBVHHelper.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/debug/Debug.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/GeometryRayIntersectUtilities.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/ExtensionUtilities.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/VertexAttributeTexture.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/MeshBVHUniformStruct.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/utils/StaticGeometryGenerator.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/BVHShaderGLSL.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/glsl/common_functions.glsl.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_distance_functions.glsl.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_ray_functions.glsl.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/gpu/glsl/bvh_struct_definitions.glsl.js", "../../r3f-perf/node_modules/three-mesh-bvh/src/index.js", "../../r3f-perf/node_modules/@react-three/drei/core/useContextBridge.js", "../../r3f-perf/node_modules/@react-three/drei/core/useAnimations.js", "../../r3f-perf/node_modules/@react-three/drei/core/useIntersect.js", "../../r3f-perf/node_modules/@react-three/drei/core/useBoxProjectedEnv.js", "../../r3f-perf/node_modules/@react-three/drei/core/BBAnchor.js", "../../r3f-perf/node_modules/@react-three/drei/core/TrailTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/Example.js", "../../r3f-perf/node_modules/@react-three/drei/core/Center.js", "../../r3f-perf/node_modules/@react-three/drei/core/SpriteAnimator.js", "../../r3f-perf/node_modules/@react-three/drei/core/Instances.js", "../../r3f-perf/node_modules/@react-three/drei/node_modules/react-composer/es/index.js", "../../r3f-perf/node_modules/@react-three/drei/helpers/deprecated.js", "../../r3f-perf/node_modules/@react-three/drei/core/CurveModifier.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshDistortMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/helpers/glsl/distort.vert.glsl.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshWobbleMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshReflectorMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/materials/ConvolutionMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/materials/BlurPass.js", "../../r3f-perf/node_modules/@react-three/drei/materials/MeshReflectorMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshRefractionMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/materials/MeshRefractionMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshTransmissionMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/materials/DiscardMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshDiscardMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/MultiMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/PointMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/softShadows.js", "../../r3f-perf/node_modules/@react-three/drei/core/shapes.js", "../../r3f-perf/node_modules/@react-three/drei/core/RoundedBox.js", "../../r3f-perf/node_modules/@react-three/drei/core/ScreenQuad.js", "../../r3f-perf/node_modules/@react-three/drei/core/Resize.js", "../../r3f-perf/node_modules/@react-three/drei/core/Bounds.js", "../../r3f-perf/node_modules/@react-three/drei/core/CameraShake.js", "../../r3f-perf/node_modules/@react-three/drei/core/Float.js", "../../r3f-perf/node_modules/@react-three/drei/core/Stage.js", "../../r3f-perf/node_modules/@react-three/drei/core/Environment.js", "../../r3f-perf/node_modules/@react-three/drei/helpers/environment-assets.js", "../../r3f-perf/node_modules/@react-three/drei/core/useEnvironment.js", "../../r3f-perf/node_modules/@react-three/drei/core/ContactShadows.js", "../../r3f-perf/node_modules/@react-three/drei/core/AccumulativeShadows.js", "../../r3f-perf/node_modules/@react-three/drei/core/Backdrop.js", "../../r3f-perf/node_modules/@react-three/drei/core/Shadow.js", "../../r3f-perf/node_modules/@react-three/drei/core/Caustics.js", "../../r3f-perf/node_modules/@react-three/drei/core/Reflector.js", "../../r3f-perf/node_modules/@react-three/drei/core/SpotLight.js", "../../r3f-perf/node_modules/@react-three/drei/materials/SpotLightMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/Lightformer.js", "../../r3f-perf/node_modules/@react-three/drei/core/Sky.js", "../../r3f-perf/node_modules/@react-three/drei/core/Stars.js", "../../r3f-perf/node_modules/@react-three/drei/core/Cloud.js", "../../r3f-perf/node_modules/@react-three/drei/core/Sparkles.js", "../../r3f-perf/node_modules/@react-three/drei/core/MatcapTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/NormalTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/Wireframe.js", "../../r3f-perf/node_modules/@react-three/drei/materials/WireframeMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/core/ShadowAlpha.js", "../../r3f-perf/node_modules/@react-three/drei/core/Points.js", "../../r3f-perf/node_modules/@react-three/drei/core/Segments.js", "../../r3f-perf/node_modules/@react-three/drei/core/Detailed.js", "../../r3f-perf/node_modules/@react-three/drei/core/Preload.js", "../../r3f-perf/node_modules/@react-three/drei/core/BakeShadows.js", "../../r3f-perf/node_modules/@react-three/drei/core/meshBounds.js", "../../r3f-perf/node_modules/@react-three/drei/core/AdaptiveDpr.js", "../../r3f-perf/node_modules/@react-three/drei/core/AdaptiveEvents.js", "../../r3f-perf/node_modules/@react-three/drei/core/PerformanceMonitor.js", "../../r3f-perf/node_modules/@react-three/drei/core/RenderTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/RenderCubeTexture.js", "../../r3f-perf/node_modules/@react-three/drei/core/Mask.js", "../../r3f-perf/node_modules/@react-three/drei/core/Fisheye.js", "../../r3f-perf/node_modules/@react-three/drei/core/MeshPortalMaterial.js", "../../r3f-perf/node_modules/@react-three/drei/web/View.js", "../../r3f-perf/node_modules/@react-three/drei/web/pivotControls/index.js", "../../r3f-perf/node_modules/@react-three/drei/web/pivotControls/AxisArrow.js", "../../r3f-perf/node_modules/@react-three/drei/web/pivotControls/context.js", "../../r3f-perf/node_modules/@react-three/drei/web/pivotControls/AxisRotator.js", "../../r3f-perf/node_modules/@react-three/drei/web/pivotControls/PlaneSlider.js", "../../r3f-perf/node_modules/@react-three/drei/web/pivotControls/ScalingSphere.js", "../../r3f-perf/node_modules/@react-three/drei/web/ScreenVideoTexture.js", "../../r3f-perf/node_modules/@react-three/drei/web/WebcamVideoTexture.js", "../../r3f-perf/node_modules/@react-three/drei/web/FaceControls.js", "../../r3f-perf/node_modules/@react-three/drei/web/Facemesh.js", "../../r3f-perf/node_modules/@react-three/drei/web/FaceLandmarker.js", "../../r3f-perf/src/roboto.woff", "../../r3f-perf/src/components/TextsHighHZ.tsx", "../../r3f-perf/src/components/Graph.tsx", "../../r3f-perf/src/components/HtmlMinimal.tsx", "../../r3f-perf/src/helpers/estimateBytesUsed.ts", "../../r3f-perf/src/components/Program.tsx", "../../r3f-perf/src/components/Perf.tsx"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\nimport { createStore } from 'zustand/vanilla';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nconst identity = (arg) => arg;\nfunction useStoreWithEqualityFn(api, selector = identity, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createWithEqualityFnImpl = (createState, defaultEqualityFn) => {\n  const api = createStore(createState);\n  const useBoundStoreWithEqualityFn = (selector, equalityFn = defaultEqualityFn) => useStoreWithEqualityFn(api, selector, equalityFn);\n  Object.assign(useBoundStoreWithEqualityFn, api);\n  return useBoundStoreWithEqualityFn;\n};\nconst createWithEqualityFn = (createState, defaultEqualityFn) => createState ? createWithEqualityFnImpl(createState, defaultEqualityFn) : createWithEqualityFnImpl;\n\nexport { createWithEqualityFn, useStoreWithEqualityFn };\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n", "function shallow$1(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size) return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size) return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (const keyA of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keyA) || !Object.is(objA[keyA], objB[keyA])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar shallow = (objA, objB) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\n    );\n  }\n  return shallow$1(objA, objB);\n};\n\nexport { shallow as default, shallow$1 as shallow };\n", "import { createWithEqualityFn } from 'zustand/traditional'\nimport { shallow } from 'zustand/shallow'\nimport * as THREE from 'three'\n\ntype drawCount = {\n  type: string\n  drawCount: number\n}\nexport type drawCounts = {\n  total: number\n  type: string\n  data: drawCount[]\n}\n\nexport type ProgramsPerf = {\n  meshes?: {\n    [index: string]: THREE.Mesh[]\n  }\n  material: THREE.Material\n  program?: WebGLProgram\n  visible: boolean\n  drawCounts: drawCounts\n  expand: boolean\n}\n\ntype Logger = {\n  i: number\n  maxMemory: number\n  gpu: number\n  mem: number\n  cpu: number\n  fps: number\n  duration: number\n  frameCount: number\n}\n\ntype GLLogger = {\n  calls: number\n  triangles: number\n  points: number\n  lines: number\n  counts: number\n}\n\nexport type State = {\n  getReport: () => any\n  log: any\n  paused: boolean\n  overclockingFps: boolean\n  fpsLimit: number\n  startTime: number\n  triggerProgramsUpdate: number\n  customData: number\n  accumulated: {\n    totalFrames: number\n    log: Logger\n    gl: GLLogger\n    max: {\n      log: Logger\n      gl: GLLogger\n    }\n  }\n  chart: {\n    data: {\n      [index: string]: number[]\n    }\n    circularId: number\n  }\n  infos: {\n    version: string\n    renderer: string\n    vendor: string\n  }\n  gl: THREE.WebGLRenderer | undefined\n  scene: THREE.Scene | undefined\n  programs: ProgramsPerfs\n  objectWithMaterials: THREE.Mesh[] | null\n  tab: 'infos' | 'programs' | 'data'\n}\n\nexport type ProgramsPerfs = Map<string, ProgramsPerf>\n\nconst setCustomData = (customData: number) => {\n  setPerf({ customData })\n}\nconst getCustomData = () => {\n  return getPerf().customData\n}\n\nexport const usePerfImpl = createWithEqualityFn<State>((set, get): any => {\n  function getReport() {\n    const { accumulated, startTime, infos } = get()\n    const maxMemory = get().log?.maxMemory\n    const { totalFrames, log, gl, max } = accumulated\n\n    const glAverage = {\n      calls: gl.calls / totalFrames,\n      triangles: gl.triangles / totalFrames,\n      points: gl.points / totalFrames,\n      lines: gl.lines / totalFrames,\n    }\n\n    const logAverage = {\n      gpu: log.gpu / totalFrames,\n      cpu: log.cpu / totalFrames,\n      mem: log.mem / totalFrames,\n      fps: log.fps / totalFrames,\n    }\n\n    const sessionTime = (window.performance.now() - startTime) / 1000\n\n    return {\n      sessionTime,\n      infos,\n      log: logAverage,\n      gl: glAverage,\n      max,\n      maxMemory,\n      totalFrames,\n    }\n  }\n\n  return {\n    log: null,\n    paused: false,\n    triggerProgramsUpdate: 0,\n    startTime: 0,\n    customData: 0,\n    fpsLimit: 60,\n    overclockingFps: false,\n    accumulated: {\n      totalFrames: 0,\n      gl: {\n        calls: 0,\n        triangles: 0,\n        points: 0,\n        lines: 0,\n        counts: 0,\n      },\n      log: {\n        gpu: 0,\n        cpu: 0,\n        mem: 0,\n        fps: 0,\n      },\n      max: {\n        gl: {\n          calls: 0,\n          triangles: 0,\n          points: 0,\n          lines: 0,\n          counts: 0,\n        },\n        log: {\n          gpu: 0,\n          cpu: 0,\n          mem: 0,\n          fps: 0,\n        },\n      },\n    },\n    chart: {\n      data: {\n        fps: [],\n        cpu: [],\n        gpu: [],\n        mem: [],\n      },\n      circularId: 0,\n    },\n    gl: undefined,\n    objectWithMaterials: null,\n    scene: undefined,\n    programs: new Map(),\n    sceneLength: undefined,\n    tab: 'infos',\n    getReport,\n  }\n})\n\nconst usePerf = <S>(sel: (state: State) => S) => usePerfImpl(sel, shallow)\nObject.assign(usePerf, usePerfImpl)\nconst { getState: getPerf, setState: setPerf } = usePerfImpl\n\nexport { usePerf, getPerf, setPerf, setCustomData, getCustomData }\n", "import { MathUtils } from 'three'\nimport { getPerf, setPerf } from './store'\n\ndeclare global {\n  interface Window {\n    GLPerf: any\n  }\n  interface Performance {\n    memory: any\n  }\n}\n\nexport const overLimitFps = {\n  value: 0,\n  fpsLimit: 60,\n  isOverLimit: 0,\n}\n\ninterface LogsAccums {\n  mem: number[]\n  gpu: number[]\n  cpu: number[]\n  fps: number[]\n  fpsFixed: number[]\n}\n\nconst average = (arr: number[]) => arr?.reduce((a: number, b: number) => a + b, 0) / arr.length\n\nexport class GLPerf {\n  names: string[] = ['']\n  finished: any[] = []\n  gl: any\n  extension: any\n  query: any\n  paused: boolean = false\n  overClock: boolean = false\n  queryHasResult: boolean = false\n  queryCreated: boolean = false\n  isWebGL2: boolean = true\n  memAccums: number[] = []\n  gpuAccums: number[] = []\n  activeAccums: boolean[] = []\n  logsAccums: LogsAccums = {\n    mem: [],\n    gpu: [],\n    cpu: [],\n    fps: [],\n    fpsFixed: [],\n  }\n  fpsChart: number[] = []\n  gpuChart: number[] = []\n  cpuChart: number[] = []\n  memChart: number[] = []\n  paramLogger: any = () => {}\n  glFinish: any = () => {}\n  chartLogger: any = () => {}\n  chartLen: number = 60\n  logsPerSecond: number = 10\n  maxMemory: number = 1500\n  chartHz: number = 10\n  startCpuProfiling: boolean = false\n  lastCalculateFixed: number = 0\n  chartFrame: number = 0\n  gpuTimeProcess: number = 0\n  chartTime: number = 0\n  activeQueries: number = 0\n  circularId: number = 0\n  detected: number = 0\n  frameId: number = 0\n  rafId: number = 0\n  idleCbId: number = 0\n  checkQueryId: number = 0\n  uuid: string | undefined = undefined\n  currentCpu: number = 0\n  currentMem: number = 0\n  paramFrame: number = 0\n  paramTime: number = 0\n  now: any = () => {}\n  t0: number = 0\n\n  constructor(settings: object = {}) {\n    window.GLPerf = window.GLPerf || {}\n\n    Object.assign(this, settings)\n\n    this.fpsChart = new Array(this.chartLen).fill(0)\n    this.gpuChart = new Array(this.chartLen).fill(0)\n    this.cpuChart = new Array(this.chartLen).fill(0)\n    this.memChart = new Array(this.chartLen).fill(0)\n    this.now = () => (window.performance && window.performance.now ? window.performance.now() : Date.now())\n    this.initGpu()\n    this.is120hz()\n  }\n  initGpu() {\n    this.uuid = MathUtils.generateUUID()\n    if (this.gl) {\n      this.isWebGL2 = true\n      if (!this.extension) {\n        this.extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2')\n      }\n      if (this.extension === null) {\n        this.isWebGL2 = false\n      }\n    }\n  }\n  /**\n   * 120hz device detection\n   */\n  is120hz() {\n    let n = 0\n    const loop = (t: number) => {\n      if (++n < 20) {\n        this.rafId = window.requestAnimationFrame(loop)\n      } else {\n        this.detected = Math.ceil((1e3 * n) / (t - this.t0) / 70)\n        window.cancelAnimationFrame(this.rafId)\n      }\n      if (!this.t0) this.t0 = t\n    }\n    this.rafId = window.requestAnimationFrame(loop)\n  }\n\n  /**\n   * Explicit UI add\n   * @param { string | undefined } name\n   */\n  addUI(name: string) {\n    if (this.names.indexOf(name) === -1) {\n      this.names.push(name)\n      this.gpuAccums.push(0)\n      this.activeAccums.push(false)\n    }\n  }\n\n  nextFps(d: any) {\n    const goal = 1000 / 60\n    const elapsed = goal - d.timeRemaining()\n    const fps = (goal * overLimitFps.fpsLimit) / 10 / elapsed\n    if (fps < 0) return\n\n    overLimitFps.value = fps\n    if (overLimitFps.isOverLimit < 25) {\n      overLimitFps.isOverLimit++\n    } else {\n      setPerf({ overclockingFps: true })\n    }\n  }\n  /**\n   * Increase frameID\n   * @param { any | undefined } now\n   */\n  nextFrame(now: any) {\n    this.frameId++\n    const t = now || this.now()\n    let duration = t - this.paramTime\n    let gpu = 0\n    // params\n    if (this.frameId <= 1) {\n      this.paramFrame = this.frameId\n      this.paramTime = t\n    } else {\n      if (t >= this.paramTime) {\n        this.maxMemory = window.performance.memory ? window.performance.memory.jsHeapSizeLimit / 1048576 : 0\n        const frameCount = this.frameId - this.paramFrame\n        const fpsFixed = (frameCount * 1000) / duration\n        const fps = getPerf().overclockingFps ? overLimitFps.value : fpsFixed\n\n        gpu = this.isWebGL2 ? this.gpuAccums[0] : this.gpuAccums[0] / duration\n\n        if (this.isWebGL2) {\n          this.gpuAccums[0] = 0\n        } else {\n          Promise.all(this.finished).then(() => {\n            this.gpuAccums[0] = 0\n            this.finished = []\n          })\n        }\n\n        this.currentMem = Math.round(\n          window.performance && window.performance.memory ? window.performance.memory.usedJSHeapSize / 1048576 : 0\n        )\n\n        if (window.performance && this.startCpuProfiling) {\n          window.performance.mark('cpu-finished')\n          const cpuMeasure = performance.measure('cpu-duration', 'cpu-started', 'cpu-finished')\n          // fix cpuMeasure return null in ios\n          this.currentCpu = cpuMeasure?.duration || 0;\n\n          this.logsAccums.cpu.push(this.currentCpu)\n          // make sure the measure has started and ended\n          this.startCpuProfiling = false\n        }\n\n        this.logsAccums.mem.push(this.currentMem)\n        this.logsAccums.fpsFixed.push(fpsFixed)\n        this.logsAccums.fps.push(fps)\n        this.logsAccums.gpu.push(gpu)\n\n        if (this.overClock && typeof window.requestIdleCallback !== 'undefined') {\n          if (overLimitFps.isOverLimit > 0 && fps > fpsFixed) {\n            overLimitFps.isOverLimit--\n          } else if (getPerf().overclockingFps) {\n            setPerf({ overclockingFps: false })\n          }\n        }\n        // TODO 200 to settings\n        if (t >= this.paramTime + 1000 / this.logsPerSecond) {\n          this.paramLogger({\n            cpu: average(this.logsAccums.cpu),\n            gpu: average(this.logsAccums.gpu),\n            mem: average(this.logsAccums.mem),\n            fps: average(this.logsAccums.fps),\n            duration: Math.round(duration),\n            maxMemory: this.maxMemory,\n            frameCount,\n          })\n\n          this.logsAccums.mem = []\n          this.logsAccums.fps = []\n          this.logsAccums.gpu = []\n          this.logsAccums.cpu = []\n\n          this.paramFrame = this.frameId\n          this.paramTime = t\n        }\n\n        if (this.overClock) {\n          // calculate the max framerate every two seconds\n          if (t - this.lastCalculateFixed >= 2 * 1000) {\n            this.lastCalculateFixed = now\n            overLimitFps.fpsLimit = Math.round(average(this.logsAccums.fpsFixed) / 10) * 100\n            setPerf({ fpsLimit: overLimitFps.fpsLimit / 10 })\n            this.logsAccums.fpsFixed = []\n\n            this.paramFrame = this.frameId\n            this.paramTime = t\n          }\n        }\n      }\n    }\n\n    // chart\n    if (!this.detected || !this.chartFrame) {\n      this.chartFrame = this.frameId\n      this.chartTime = t\n      this.circularId = 0\n    } else {\n      const timespan = t - this.chartTime\n      let hz = (this.chartHz * timespan) / 1e3\n      while (--hz > 0 && this.detected) {\n        const frameCount = this.frameId - this.chartFrame\n        const fpsFixed = (frameCount / timespan) * 1e3\n        const fps = getPerf().overclockingFps ? overLimitFps.value : fpsFixed\n        this.fpsChart[this.circularId % this.chartLen] = fps\n        // this.fpsChart[this.circularId % this.chartLen] = ((overLimitFps.isOverLimit > 0 ? overLimitFps.value : fps) / overLimitFps.fpsLimit) * 60;\n        const memS = 1000 / this.currentMem\n        const cpuS = this.currentCpu\n        const gpuS = (this.isWebGL2 ? this.gpuAccums[1] * 2 : Math.round((this.gpuAccums[1] / duration) * 100)) + 4\n        if (gpuS > 0) {\n          this.gpuChart[this.circularId % this.chartLen] = gpuS\n        }\n        if (cpuS > 0) {\n          this.cpuChart[this.circularId % this.chartLen] = cpuS\n        }\n        if (memS > 0) {\n          this.memChart[this.circularId % this.chartLen] = memS\n        }\n        for (let i = 0; i < this.names.length; i++) {\n          this.chartLogger({\n            i,\n            data: {\n              fps: this.fpsChart,\n              gpu: this.gpuChart,\n              cpu: this.cpuChart,\n              mem: this.memChart,\n            },\n            circularId: this.circularId,\n          })\n        }\n        this.circularId++\n        this.chartFrame = this.frameId\n        this.chartTime = t\n      }\n    }\n  }\n\n  startGpu() {\n    const gl = this.gl\n    const ext = this.extension\n\n    if (!gl || !ext) return\n    if (this.isWebGL2) {\n      let available = false\n      let disjoint: any, ns: any\n\n      if (this.query) {\n        this.queryHasResult = false\n        let query = this.query\n        // console.log(gl.getParameter(ext.TIMESTAMP_EXT))\n        available = gl.getQueryParameter(query, gl.QUERY_RESULT_AVAILABLE)\n        disjoint = gl.getParameter(ext.GPU_DISJOINT_EXT)\n\n        if (available && !disjoint) {\n          ns = gl.getQueryParameter(this.query, gl.QUERY_RESULT)\n          const ms = ns * 1e-6\n\n          if (available || disjoint) {\n            // Clean up the query object.\n            gl.deleteQuery(this.query)\n            // Don't re-enter this polling loop.\n            query = null\n          }\n\n          if (available && ms > 0) {\n            // update the display if it is valid\n            if (!disjoint) {\n              this.activeAccums.forEach((_active: any, i: any) => {\n                this.gpuAccums[i] = ms\n              })\n            }\n          }\n        }\n      }\n\n      if (available || !this.query) {\n        this.queryCreated = true\n        this.query = gl.createQuery()\n\n        gl.beginQuery(ext.TIME_ELAPSED_EXT, this.query)\n      }\n    }\n  }\n\n  endGpu() {\n    // finish the query measurement\n    const ext = this.extension\n    const gl = this.gl\n\n    if (this.isWebGL2 && this.queryCreated && gl.getQuery(ext.TIME_ELAPSED_EXT, gl.CURRENT_QUERY)) {\n      gl.endQuery(ext.TIME_ELAPSED_EXT)\n    }\n  }\n\n  /**\n   * Begin named measurement\n   * @param { string | undefined } name\n   */\n  begin(name: string) {\n    this.startGpu()\n    this.updateAccums(name)\n  }\n\n  /**\n   * End named measure\n   * @param { string | undefined } name\n   */\n  end(name: string) {\n    this.endGpu()\n    this.updateAccums(name)\n  }\n\n  updateAccums(name: string) {\n    let nameId = this.names.indexOf(name)\n    if (nameId === -1) {\n      nameId = this.names.length\n      this.addUI(name)\n    }\n\n    const t = this.now()\n\n    this.activeAccums[nameId] = !this.activeAccums[nameId]\n    this.t0 = t\n  }\n}\n", "import type { drawCounts, ProgramsPerfs } from '../store'\n\nexport const countGeoDrawCalls = (programs: ProgramsPerfs) => {\n  programs.forEach((program, _pkey) => {\n    const { meshes } = program\n    if (!meshes) {\n      return\n    }\n    let drawCounts: drawCounts = {\n      total: 0,\n      type: 'Triangle',\n      data: [],\n    }\n    Object.keys(meshes).forEach((key) => {\n      const mesh: any = meshes[key]\n      const { geometry, material } = mesh\n\n      let index = geometry.index\n      const position = geometry.attributes.position\n\n      if (!position) return\n\n      let rangeFactor = 1\n\n      if (material.wireframe === true) {\n        rangeFactor = 0\n      }\n\n      const dataCount = index !== null ? index.count : position.count\n      const rangeStart = geometry.drawRange.start * rangeFactor\n      const rangeCount = geometry.drawRange.count * rangeFactor\n      const drawStart = rangeStart\n      const drawEnd = Math.min(dataCount, rangeStart + rangeCount) - 1\n      let countInstanceRatio = 1\n      const instanceCount = mesh.count || 1\n      let type = 'Triangle'\n      let mostDrawCalls = 0\n      if (mesh.isMesh) {\n        if (material.wireframe === true) {\n          type = 'Line'\n          countInstanceRatio = countInstanceRatio / 2\n        } else {\n          type = 'Triangle'\n          countInstanceRatio = countInstanceRatio / 3\n        }\n      } else if (mesh.isLine) {\n        type = 'Line'\n        if (mesh.isLineSegments) {\n          countInstanceRatio = countInstanceRatio / 2\n        } else if (mesh.isLineLoop) {\n          countInstanceRatio = countInstanceRatio\n        } else {\n          countInstanceRatio = countInstanceRatio - 1\n        }\n      } else if (mesh.isPoints) {\n        type = 'Point'\n        countInstanceRatio = countInstanceRatio\n      } else if (mesh.isSprite) {\n        type = 'Triangle'\n        countInstanceRatio = countInstanceRatio / 3\n      }\n\n      const drawCount = Math.round(Math.max(0, drawEnd - drawStart + 1) * (countInstanceRatio * instanceCount))\n\n      if (drawCount > mostDrawCalls) {\n        mostDrawCalls = drawCount\n        drawCounts.type = type\n      }\n      drawCounts.total += drawCount\n      drawCounts.data.push({ drawCount, type })\n      mesh.userData.drawCount = {\n        type,\n        count: drawCount,\n      }\n    })\n    program.drawCounts = drawCounts\n  })\n}\n", "import EventEmitter from 'eventemitter3'\nimport type { EventHandler, EventOptions, EventContext } from './types'\n\nconst eventEmitter = /*#__PURE__*/ new EventEmitter()\n\n/**\n * Add a listener for a given event.\n */\nexport function onEvent(eventName: string, handler: EventHandler, options?: EventOptions): EventContext {\n  return options?.once ? eventEmitter.once(eventName, handler) : eventEmitter.on(eventName, handler)\n}\n\n/**\n * Remove a listener for a given event.\n */\nexport function offEvent(eventName: string, handler: EventHandler, options?: EventOptions): void {\n  eventEmitter.removeListener(eventName, handler, options?.context ?? null, options?.once)\n}\n\n/**\n * Dispatches a payload to listeners for a given event.\n */\nexport function emitEvent(eventName: string, payload: any): void {\n  eventEmitter.emit(eventName, payload)\n}\n", "import { useRef, useEffect } from 'react'\nimport { onEvent, offEvent } from './vanilla'\nimport type { EventHandler, EventOptions } from './types'\n\n/**\n * React hook for creating a listener for a given event.\n */\nexport function useEvent(eventName: string, handler: EventHandler, deps: any[] = [], options?: EventOptions): void {\n  const handlerRef = useRef<EventHandler>(handler)\n  useEffect(() => void (handlerRef.current = handler), [handler])\n\n  useEffect(() => {\n    const handler = (event: any) => handlerRef.current?.(event)\n    const context = onEvent(eventName, handler, options)\n\n    return () => offEvent(eventName, handler, { ...options, context })\n  }, [eventName, options?.once, ...deps])\n}\n", "import { type FC, type HTMLAttributes, useEffect, useMemo } from 'react'\nimport { addEffect, addAfterEffect, useThree, addTail } from '@react-three/fiber'\nimport { overLimitFps, GLPerf } from '../internal'\n\nimport * as THREE from 'three'\nimport { countGeoDrawCalls } from '../helpers/countGeoDrawCalls'\nimport { getPerf, type ProgramsPerfs, setPerf } from '../store'\nimport type { PerfProps } from '../types'\nimport { emitEvent } from '@utsubo/events'\n\n// cameras from r3f-perf scene\n\n// @ts-ignore\nconst updateMatrixWorldTemp = THREE.Object3D.prototype.updateMatrixWorld\nconst updateWorldMatrixTemp = THREE.Object3D.prototype.updateWorldMatrix\nconst updateMatrixTemp = THREE.Object3D.prototype.updateMatrix\n\nconst maxGl = ['calls', 'triangles', 'points', 'lines']\nconst maxLog = ['gpu', 'cpu', 'mem', 'fps']\n\nexport let matriceWorldCount = {\n  value: 0,\n}\nexport let matriceCount = {\n  value: 0,\n}\n\nconst isUUID = (uuid: string) => {\n  let s: any = '' + uuid\n\n  s = s.match('^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$')\n  if (s === null) {\n    return false\n  }\n  return true\n}\n\nconst addMuiPerfID = (material: THREE.Material, currentObjectWithMaterials: any) => {\n  if (!material.defines) {\n    material.defines = {}\n  }\n\n  if (material.defines && !material.defines.muiPerf) {\n    material.defines = Object.assign(material.defines || {}, {\n      muiPerf: material.uuid,\n    })\n  }\n\n  const uuid = material.uuid\n\n  if (!currentObjectWithMaterials[uuid]) {\n    currentObjectWithMaterials[uuid] = {\n      meshes: {},\n      material: material,\n    }\n    material.needsUpdate = true\n  }\n  material.needsUpdate = false\n  return uuid\n}\n\ntype Chart = {\n  data: {\n    [index: string]: number[]\n  }\n  id: number\n  circularId: number\n}\n\nconst getMUIIndex = (muid: string) => muid === 'muiPerf'\n\nexport interface Props extends HTMLAttributes<HTMLDivElement> {}\n\n/**\n * Performance profiler component\n */\nexport const PerfHeadless: FC<PerfProps> = ({ overClock, logsPerSecond, chart, deepAnalyze, matrixUpdate }) => {\n  const { gl, scene } = useThree()\n  setPerf({ gl, scene })\n\n  const PerfLib = useMemo(() => {\n    const PerfLib = new GLPerf({\n      trackGPU: true,\n      overClock: overClock,\n      chartLen: chart ? chart.length : 120,\n      chartHz: chart ? chart.hz : 60,\n      logsPerSecond: logsPerSecond || 10,\n      gl: gl.getContext(),\n      chartLogger: (chart: Chart) => {\n        setPerf({ chart })\n      },\n      paramLogger: (logger: any) => {\n        const log = {\n          maxMemory: logger.maxMemory,\n          gpu: logger.gpu,\n          cpu: logger.cpu,\n          mem: logger.mem,\n          fps: logger.fps,\n          totalTime: logger.duration,\n          frameCount: logger.frameCount,\n        }\n        setPerf({\n          log,\n        })\n        const { accumulated }: any = getPerf()\n        const glRender: any = gl.info.render\n\n        accumulated.totalFrames++\n        accumulated.gl.calls += glRender.calls\n        accumulated.gl.triangles += glRender.triangles\n        accumulated.gl.points += glRender.points\n        accumulated.gl.lines += glRender.lines\n\n        accumulated.log.gpu += logger.gpu\n        accumulated.log.cpu += logger.cpu\n        accumulated.log.mem += logger.mem\n        accumulated.log.fps += logger.fps\n        // calculate max\n        for (let i = 0; i < maxGl.length; i++) {\n          const key = maxGl[i]\n          const value = glRender[key]\n          if (value > accumulated.max.gl[key]) {\n            accumulated.max.gl[key] = value\n          }\n        }\n\n        for (let i = 0; i < maxLog.length; i++) {\n          const key = maxLog[i]\n          const value = logger[key]\n          if (value > accumulated.max.log[key]) {\n            accumulated.max.log[key] = value\n          }\n        }\n\n        // TODO CONVERT TO OBJECT AND VALUE ALWAYS 0 THIS IS NOT CALL\n        setPerf({ accumulated })\n\n        emitEvent('log', [log, gl])\n      },\n    })\n\n    // Infos\n\n    const ctx = gl.getContext()\n    let glRenderer = null\n    let glVendor = null\n\n    const rendererInfo: any = ctx.getExtension('WEBGL_debug_renderer_info')\n    const glVersion = ctx.getParameter(ctx.VERSION)\n\n    if (rendererInfo != null) {\n      glRenderer = ctx.getParameter(rendererInfo.UNMASKED_RENDERER_WEBGL)\n      glVendor = ctx.getParameter(rendererInfo.UNMASKED_VENDOR_WEBGL)\n    }\n\n    if (!glVendor) {\n      glVendor = 'Unknown vendor'\n    }\n\n    if (!glRenderer) {\n      glRenderer = ctx.getParameter(ctx.RENDERER)\n    }\n\n    setPerf({\n      startTime: window.performance.now(),\n      infos: {\n        version: glVersion,\n        renderer: glRenderer,\n        vendor: glVendor,\n      },\n    })\n\n    const callbacks = new Map()\n    const callbacksAfter = new Map()\n    Object.defineProperty(THREE.Scene.prototype, 'onBeforeRender', {\n      get() {\n        return (...args: any) => {\n          if (PerfLib) {\n            PerfLib.begin('profiler')\n          }\n          callbacks.get(this)?.(...args)\n        }\n      },\n      set(callback) {\n        callbacks.set(this, callback)\n      },\n      configurable: true,\n    })\n\n    Object.defineProperty(THREE.Scene.prototype, 'onAfterRender', {\n      get() {\n        return (...args: any) => {\n          if (PerfLib) {\n            PerfLib.end('profiler')\n          }\n          callbacksAfter.get(this)?.(...args)\n        }\n      },\n      set(callback) {\n        callbacksAfter.set(this, callback)\n      },\n      configurable: true,\n    })\n\n    return PerfLib\n  }, [])\n\n  useEffect(() => {\n    if (PerfLib) {\n      PerfLib.overClock = overClock || false\n      if (overClock === false) {\n        setPerf({ overclockingFps: false })\n        overLimitFps.value = 0\n        overLimitFps.isOverLimit = 0\n      }\n      PerfLib.chartHz = chart?.hz || 60\n      PerfLib.chartLen = chart?.length || 120\n    }\n  }, [overClock, PerfLib, chart?.length, chart?.hz])\n\n  useEffect(() => {\n    if (matrixUpdate) {\n      THREE.Object3D.prototype.updateMatrixWorld = function () {\n        if (this.matrixWorldNeedsUpdate || arguments[0] /*force*/) {\n          matriceWorldCount.value++\n        }\n        // @ts-ignore\n        updateMatrixWorldTemp.apply(this, arguments)\n      }\n      THREE.Object3D.prototype.updateWorldMatrix = function () {\n        matriceWorldCount.value++\n        // @ts-ignore\n        updateWorldMatrixTemp.apply(this, arguments)\n      }\n      THREE.Object3D.prototype.updateMatrix = function () {\n        matriceCount.value++\n        // @ts-ignore\n        updateMatrixTemp.apply(this, arguments)\n      }\n    }\n\n    gl.info.autoReset = false\n    let effectSub: any = null\n    let afterEffectSub: any = null\n    if (!gl.info) return\n\n    effectSub = addEffect(function preRafR3FPerf() {\n      if (getPerf().paused) {\n        setPerf({ paused: false })\n      }\n\n      if (window.performance) {\n        window.performance.mark('cpu-started')\n        PerfLib.startCpuProfiling = true\n      }\n\n      matriceCount.value -= 1\n      matriceWorldCount.value = 0\n      matriceCount.value = 0\n\n      if (gl.info) {\n        gl.info.reset()\n      }\n    })\n\n    afterEffectSub = addAfterEffect(function postRafR3FPerf() {\n      if (PerfLib && !PerfLib.paused) {\n        PerfLib.nextFrame(window.performance.now())\n\n        if (overClock && typeof window.requestIdleCallback !== 'undefined') {\n          PerfLib.idleCbId = requestIdleCallback(PerfLib.nextFps)\n        }\n      }\n      if (deepAnalyze) {\n        const currentObjectWithMaterials: any = {}\n        const programs: ProgramsPerfs = new Map()\n\n        scene.traverse(function deepAnalyzeR3FPerf(object) {\n          if (object instanceof THREE.Mesh || object instanceof THREE.Points) {\n            if (object.material) {\n              let uuid = object.material.uuid\n              // troika generate and attach 2 materials\n              const isTroika = Array.isArray(object.material) && object.material.length > 1\n              if (isTroika) {\n                uuid = addMuiPerfID(object.material[1], currentObjectWithMaterials)\n              } else {\n                uuid = addMuiPerfID(object.material, currentObjectWithMaterials)\n              }\n\n              currentObjectWithMaterials[uuid].meshes[object.uuid] = object\n            }\n          }\n        })\n\n        gl?.info?.programs?.forEach((program: any) => {\n          const cacheKeySplited = program.cacheKey.split(',')\n          const muiPerfTracker = cacheKeySplited[cacheKeySplited.findIndex(getMUIIndex) + 1]\n          if (isUUID(muiPerfTracker) && currentObjectWithMaterials[muiPerfTracker]) {\n            const { material, meshes } = currentObjectWithMaterials[muiPerfTracker]\n            programs.set(muiPerfTracker, {\n              program,\n              material,\n              meshes,\n              drawCounts: {\n                total: 0,\n                type: 'triangle',\n                data: [],\n              },\n              expand: false,\n              visible: true,\n            })\n          }\n        })\n\n        if (programs.size !== getPerf().programs.size) {\n          countGeoDrawCalls(programs)\n          setPerf({\n            programs: programs,\n            triggerProgramsUpdate: getPerf().triggerProgramsUpdate++,\n          })\n        }\n      }\n    })\n\n    return () => {\n      if (PerfLib) {\n        if (typeof window.cancelIdleCallback !== 'undefined') {\n          window.cancelIdleCallback(PerfLib.idleCbId)\n        }\n        window.cancelAnimationFrame(PerfLib.rafId)\n        window.cancelAnimationFrame(PerfLib.checkQueryId)\n      }\n\n      if (matrixUpdate) {\n        THREE.Object3D.prototype.updateMatrixWorld = updateMatrixTemp\n      }\n\n      effectSub()\n      afterEffectSub()\n    }\n  }, [PerfLib, gl, chart, matrixUpdate])\n\n  useEffect(() => {\n    const unsub = addTail(function postRafTailR3FPerf() {\n      if (PerfLib) {\n        PerfLib.paused = true\n        matriceCount.value = 0\n        matriceWorldCount.value = 0\n        setPerf({\n          paused: true,\n          log: {\n            maxMemory: 0,\n            gpu: 0,\n            mem: 0,\n            cpu: 0,\n            fps: 0,\n            totalTime: 0,\n            frameCount: 0,\n          },\n        })\n      }\n      return false\n    })\n\n    return () => {\n      unsub()\n    }\n  }, [])\n\n  return null\n}\n", "import { styled } from '@stitches/react';\n\nexport const PerfS = styled('div', {\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  zIndex: 9999,\n  fontFamily: `-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif`,\n  backgroundColor: 'rgba(36, 36, 36, .9)',\n  color: '#fff',\n  margin: 0,\n  minHeight: '100px',\n  padding: '4px 0',\n  '-webkit-font-smoothing': 'antialiased',\n  '-moz-osx-font-smoothing': 'grayscale',\n  userSelect: 'none',\n  '&.top-left': {\n    right: 'initial',\n    left: 0,\n  },\n  '&.bottom-left': {\n    right: 'initial',\n    top: 'initial',\n    bottom: 0,\n    left: 0,\n    '.__perf_toggle': {\n      top: '-20px',\n      bottom: 'initial',\n    },\n  },\n  '&.bottom-right': {\n    top: 'initial',\n    bottom: 0,\n    '.__perf_toggle': {\n      top: '-20px',\n      bottom: 'initial',\n    },\n  },\n  '&.minimal': {\n    backgroundColor: 'rgba(36, 36, 36, .75)',\n  },\n  '*': {\n    margin: '0',\n    padding: '0',\n    border: '0',\n    fontSize: '100%',\n    lineHeight: '1',\n    verticalAlign: 'baseline',\n  },\n});\n\nexport const PerfSmallI = styled('small', {\n  position: 'absolute',\n  right: 0,\n  fontSize: '10px'\n})\n\nexport const PerfI = styled('div', {\n  display: 'inline-flex',\n  fontStyle: 'normal',\n  padding: 0,\n  lineHeight: '13px',\n  fontSize: '14px',\n  width: '62px',\n  position: 'relative',\n  pointerEvents: 'auto',\n  cursor: 'default',\n  fontWeight: 500,\n  letterSpacing: '0px',\n  textAlign: 'left',\n  height: '29px',\n  whiteSpace: 'nowrap',\n  justifyContent: 'space-evenly',\n  fontVariantNumeric: 'tabular-nums',\n  small: {\n    paddingLeft: '12px',\n  },\n  svg: {\n    padding: 0,\n    color: 'rgba(145, 145, 145, 0.3)',\n    fontSize: '40px',\n    position: 'absolute',\n    zIndex: 1,\n    maxHeight: '20px',\n    left: ' 50%',\n    marginLeft: '-23px',\n    top: '4px',\n  },\n});\n\nexport const PerfB = styled('span', {\n  verticalAlign: 'bottom',\n  position: 'absolute',\n  bottom: '5px',\n  color: 'rgba(101, 197, 188, 1)',\n  textAlign: 'right',\n  letterSpacing: '1px',\n  fontSize: '8px',\n  fontWeight: '500',\n  width: '60px',\n});\n\nexport const PerfIContainer = styled('div', {\n  display: 'flex',\n  // justifyContent: 'space-between',\n});\n\nexport const ProgramHeader = styled('div', {\n  backgroundColor: '#404040',\n  padding: '6px',\n  display: 'block',\n  fontSize: '12px',\n  marginBottom: '6px',\n  cursor: 'pointer',\n  '*': {\n    cursor: 'pointer !important',\n  },\n  '> span': {},\n  small: {\n    fontSize: '9px',\n  },\n  '> b': {\n    marginRight: '4px',\n    cursor: 'pointer',\n  },\n});\n\nexport const Graph = styled('div', {\n  height: '66px',\n  overflow: 'hidden',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  top: '0px',\n  justifyContent: 'center',\n  width: '100%',\n  minWidth: '310px',\n  margin: '0 auto',\n  canvas: {\n    background: 'transparent !important',\n    position: 'absolute !important',\n  }\n});\n\nexport const Graphpc = styled('div', {\n  textAlign: 'center',\n  fontWeight: 700,\n  fontSize: '12px',\n  lineHeight: '12px',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  verticalAlign: 'middle',\n  color: '#f1f1f1',\n  padding: '7px',\n  width: '100%',\n  backgroundColor: 'rgba(36, 36, 37, 0.8)',\n  zIndex: 1,\n  position: 'absolute',\n  height: '100%',\n});\n\nexport const Toggle = styled('div', {\n  pointerEvents: 'auto',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  backgroundColor: 'rgb(41, 43, 45)',\n  marginTop: '6px',\n  width: 'auto',\n  margin: '0',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  padding: '4px 6px',\n  '&.__perf_toggle_tab_active': {\n    backgroundColor: 'rgb(31 31 31)',\n  },\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left',\n  },\n});\n\nexport const ToggleVisible = styled('div', {\n  pointerEvents: 'auto',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  float: 'right',\n  backgroundColor: 'rgb(41, 43, 45)',\n  width: 'auto',\n  margin: '0',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  padding: '4px 6px',\n  '&.__perf_toggle_tab_active': {\n    backgroundColor: 'rgb(31 31 31)',\n  },\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left',\n  },\n});\n\nexport const ProgramGeo = styled('div', {\n  padding: '4px 6px',\n  fontSize: '12px',\n  pointerEvents: 'auto',\n});\n\nexport const ProgramTitle = styled('span', {\n  fontWeight: 'bold',\n  letterSpacing: '0.08em',\n  maxWidth: '145px',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  fontSize: '11px',\n  marginRight: '10px',\n});\n\nexport const ContainerScroll = styled('div', {\n  maxHeight: '50vh',\n  overflowY: 'auto',\n  marginTop: '38px'\n});\nexport const ProgramsContainer = styled('div', {\n  marginTop: '0'\n});\n\nexport const ProgramsULHeader = styled('div', {\n  display: 'flex',\n  position: 'relative',\n  fontWeight: 'bold',\n  color: '#fff',\n  lineHeight: '14px',\n  svg: {\n    marginRight: '4px',\n    display: 'inline-block',\n  },\n});\n\nexport const ProgramsUL = styled('ul', {\n  display: 'block',\n  position: 'relative',\n  paddingLeft: '10px',\n  margin: '6px 6px',\n  img: {\n    maxHeight: '60px',\n    maxWidth: '100%',\n    margin: '6px auto',\n    display: 'block',\n  },\n  '&:after': {\n    content: '',\n    position: 'absolute',\n    left: '0px',\n    top: '0px',\n    width: '1px',\n    height: '100%',\n    backgroundColor: 'grey',\n    transform: 'translateX(-50%)',\n    maxHeight: '50vh',\n    overflowY: 'auto',\n  },\n  li: {\n    borderBottom: '1px solid #313131',\n    display: 'block',\n    padding: '4px',\n    margin: 0,\n    lineHeight: 1,\n    verticalAlign: 'middle',\n    height: '24px',\n  },\n  b: {\n    fontWeight: 'bold',\n  },\n  small: {\n    textAlign: 'revert',\n    letterSpacing: '1px',\n    fontSize: '10px',\n    fontWeight: '500',\n    marginLeft: '2px',\n    color: 'rgb(101, 197, 188)',\n  },\n});\n\nexport const ProgramConsole = styled('button', {\n  fontWeight: 'bold',\n  letterSpacing: '0.02em',\n  backgroundColor: 'rgb(41, 43, 45)',\n  color: 'rgb(211, 211, 211)',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  cursor: 'pointer',\n  display: 'block',\n  verticalAlign: 'middle',\n  fontSize: '11px',\n  padding: '5px',\n  margin: '4px auto',\n});\nexport const ToggleContainer = styled('div', {\n  display: 'flex',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  fontSize: '12px',\n  backgroundColor: 'rgb(41, 43, 45)',\n  marginTop: '6px',\n  width: 'auto',\n  margin: '0 auto',\n  color: 'rgba(145, 145, 145, 1)',\n  textAlign: 'center',\n  position: 'absolute',\n  right: 0,\n  bottom: ' -20px',\n  svg: {\n    width: '12px',\n    height: '12px',\n    float: 'left',\n  },\n});\n\nexport const ProgramsGeoLi = styled('li', {\n  display: 'flex !important',\n  height: 'auto !important',\n  span: {\n    height: '40px',\n    display: 'block',\n    position: 'relative',\n  },\n  b: {\n    paddingLeft: '12px',\n  },\n});\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AccessibilityIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877197 7.49984C0.877197 3.84216 3.84234 0.877014 7.50003 0.877014C11.1577 0.877014 14.1229 3.84216 14.1229 7.49984C14.1229 11.1575 11.1577 14.1227 7.50003 14.1227C3.84234 14.1227 0.877197 11.1575 0.877197 7.49984ZM7.50003 1.82701C4.36702 1.82701 1.8272 4.36683 1.8272 7.49984C1.8272 10.6328 4.36702 13.1727 7.50003 13.1727C10.633 13.1727 13.1729 10.6328 13.1729 7.49984C13.1729 4.36683 10.633 1.82701 7.50003 1.82701ZM7.12457 9.00001C7.06994 9.12735 6.33165 11.9592 6.33165 11.9592C6.26018 12.226 5.98601 12.3843 5.71928 12.3128C5.45255 12.2413 5.29425 11.9672 5.36573 11.7004C5.36573 11.7004 6.24661 8.87268 6.24661 8.27007V6.80099L4.28763 6.27608C4.0209 6.20461 3.86261 5.93045 3.93408 5.66371C4.00555 5.39698 4.27972 5.23869 4.54645 5.31016C4.54645 5.31016 6.20042 5.87268 6.84579 5.87268H8.15505C8.80042 5.87268 10.4534 5.31042 10.4534 5.31042C10.7202 5.23895 10.9943 5.39724 11.0658 5.66397C11.1373 5.93071 10.979 6.20487 10.7122 6.27635L8.74661 6.80303V8.27007C8.74661 8.87268 9.62663 11.6971 9.62663 11.6971C9.6981 11.9639 9.5398 12.238 9.27307 12.3095C9.00634 12.381 8.73217 12.2227 8.6607 11.956C8.6607 11.956 7.91994 9.12735 7.86866 9.00001C7.81994 8.87268 7.65006 8.87268 7.65006 8.87268H7.34317C7.34317 8.87268 7.16994 8.87268 7.12457 9.00001ZM7.50043 5.12007C8.12175 5.12007 8.62543 4.61639 8.62543 3.99507C8.62543 3.37375 8.12175 2.87007 7.50043 2.87007C6.87911 2.87007 6.37543 3.37375 6.37543 3.99507C6.37543 4.61639 6.87911 5.12007 7.50043 5.12007Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AccessibilityIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ActivityLogIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0 1.5C0 1.22386 0.223858 1 0.5 1H2.5C2.77614 1 3 1.22386 3 1.5C3 1.77614 2.77614 2 2.5 2H0.5C0.223858 2 0 1.77614 0 1.5ZM4 1.5C4 1.22386 4.22386 1 4.5 1H14.5C14.7761 1 15 1.22386 15 1.5C15 1.77614 14.7761 2 14.5 2H4.5C4.22386 2 4 1.77614 4 1.5ZM4 4.5C4 4.22386 4.22386 4 4.5 4H11.5C11.7761 4 12 4.22386 12 4.5C12 4.77614 11.7761 5 11.5 5H4.5C4.22386 5 4 4.77614 4 4.5ZM0 7.5C0 7.22386 0.223858 7 0.5 7H2.5C2.77614 7 3 7.22386 3 7.5C3 7.77614 2.77614 8 2.5 8H0.5C0.223858 8 0 7.77614 0 7.5ZM4 7.5C4 7.22386 4.22386 7 4.5 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H4.5C4.22386 8 4 7.77614 4 7.5ZM4 10.5C4 10.2239 4.22386 10 4.5 10H11.5C11.7761 10 12 10.2239 12 10.5C12 10.7761 11.7761 11 11.5 11H4.5C4.22386 11 4 10.7761 4 10.5ZM0 13.5C0 13.2239 0.223858 13 0.5 13H2.5C2.77614 13 3 13.2239 3 13.5C3 13.7761 2.77614 14 2.5 14H0.5C0.223858 14 0 13.7761 0 13.5ZM4 13.5C4 13.2239 4.22386 13 4.5 13H14.5C14.7761 13 15 13.2239 15 13.5C15 13.7761 14.7761 14 14.5 14H4.5C4.22386 14 4 13.7761 4 13.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ActivityLogIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignBaselineIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10.5 1.75003C10.7107 1.75003 10.8988 1.88217 10.9703 2.08042L13.9703 10.4C14.064 10.6598 13.9293 10.9463 13.6696 11.04C13.4098 11.1336 13.1233 10.999 13.0296 10.7392L12.0477 8.01606H8.95227L7.97031 10.7392C7.87664 10.999 7.59012 11.1336 7.33035 11.04C7.07058 10.9463 6.93593 10.6598 7.0296 10.4L10.0296 2.08042C10.1011 1.88217 10.2892 1.75003 10.5 1.75003ZM10.5 3.72402L11.7411 7.16606H9.25877L10.5 3.72402ZM2.49949 2.09997C2.7204 2.09997 2.89949 2.27906 2.89949 2.49997L2.89949 9.53428L4.21664 8.21713C4.37285 8.06092 4.62612 8.06092 4.78233 8.21713C4.93854 8.37334 4.93854 8.6266 4.78233 8.78281L2.78233 10.7828C2.70732 10.8578 2.60557 10.9 2.49949 10.9C2.3934 10.9 2.29166 10.8578 2.21664 10.7828L0.216645 8.78281C0.0604349 8.6266 0.0604349 8.37334 0.216645 8.21713C0.372854 8.06092 0.62612 8.06092 0.78233 8.21713L2.09949 9.53428L2.09949 2.49997C2.09949 2.27906 2.27857 2.09997 2.49949 2.09997ZM0.0999695 13.5001C0.0999695 13.2791 0.279056 13.1001 0.499969 13.1001H14.5C14.7209 13.1001 14.9 13.2791 14.9 13.5001C14.9 13.721 14.7209 13.9001 14.5 13.9001H0.499969C0.279056 13.9001 0.0999695 13.721 0.0999695 13.5001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignBaselineIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignBottomIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9 3C9 2.44772 8.55229 2 8 2H7C6.44772 2 6 2.44772 6 3L6 14H1.5C1.22386 14 1 14.2239 1 14.5C1 14.7761 1.22386 15 1.5 15L6 15H9H13.5C13.7761 15 14 14.7761 14 14.5C14 14.2239 13.7761 14 13.5 14H9V3Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignBottomIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignCenterHorizontallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.99988 6C1.44759 6 0.999877 6.44772 0.999877 7L0.999877 8C0.999877 8.55228 1.44759 9 1.99988 9L6.99988 9L6.99988 13.5C6.99988 13.7761 7.22374 14 7.49988 14C7.77602 14 7.99988 13.7761 7.99988 13.5L7.99988 9L12.9999 9C13.5522 9 13.9999 8.55228 13.9999 8L13.9999 7C13.9999 6.44772 13.5522 6 12.9999 6L7.99988 6L7.99988 1.5C7.99988 1.22386 7.77602 1 7.49988 1C7.22373 1 6.99988 1.22386 6.99988 1.5L6.99988 6L1.99988 6Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignCenterHorizontallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignCenterVerticallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.99988 1C6.44759 1 5.99988 1.44772 5.99988 2V7H1.49988C1.22374 7 0.999878 7.22386 0.999878 7.5C0.999878 7.77614 1.22374 8 1.49988 8H5.99988V13C5.99988 13.5523 6.44759 14 6.99988 14H7.99988C8.55216 14 8.99988 13.5523 8.99988 13V8H13.4999C13.776 8 13.9999 7.77614 13.9999 7.5C13.9999 7.22386 13.776 7 13.4999 7H8.99988V2C8.99988 1.44772 8.55216 1 7.99988 1L6.99988 1Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignCenterVerticallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.499995 0.999995C0.223855 0.999995 -5.58458e-07 1.22385 -5.46388e-07 1.49999L-2.18554e-08 13.4999C-9.78492e-09 13.776 0.223855 13.9999 0.499995 13.9999C0.776136 13.9999 0.999991 13.776 0.999991 13.4999L0.999991 8.99993L12 8.99993C12.5523 8.99993 13 8.55222 13 7.99993L13 6.99994C13 6.44766 12.5523 5.99995 12 5.99995L0.999991 5.99995L0.999991 1.49999C0.999991 1.22385 0.776135 0.999995 0.499995 0.999995Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14.4999 1C14.2237 1 13.9999 1.22386 13.9999 1.5L13.9999 6L2.99988 6C2.44759 6 1.99988 6.44772 1.99988 7L1.99988 8C1.99988 8.55228 2.44759 9 2.99988 9L13.9999 9L13.9999 13.5C13.9999 13.7761 14.2237 14 14.4999 14C14.776 14 14.9999 13.7761 14.9999 13.5L14.9999 9L14.9999 6L14.9999 1.5C14.9999 1.22386 14.776 1 14.4999 1Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AlignTopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.5 0C1.22386 0 1 0.223858 1 0.5C1 0.776142 1.22386 1 1.5 1H6V12C6 12.5523 6.44772 13 7 13H8C8.55228 13 9 12.5523 9 12V1H13.5C13.7761 1 14 0.776142 14 0.5C14 0.223858 13.7761 0 13.5 0H9H6H1.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AlignTopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AllSidesIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 0.75L9.75 3H5.25L7.5 0.75ZM7.5 14.25L9.75 12H5.25L7.5 14.25ZM3 5.25L0.75 7.5L3 9.75V5.25ZM14.25 7.5L12 5.25V9.75L14.25 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AllSidesIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AngleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.8914 2.1937C9.1158 2.35464 9.16725 2.66701 9.00631 2.89141L2.47388 12H13.5C13.7761 12 14 12.2239 14 12.5C14 12.7762 13.7761 13 13.5 13H1.5C1.31254 13 1.14082 12.8952 1.0552 12.7284C0.969578 12.5616 0.984438 12.361 1.09369 12.2086L8.19369 2.30862C8.35462 2.08422 8.667 2.03277 8.8914 2.1937ZM11.1 6.50001C11.1 6.22387 11.3238 6.00001 11.6 6.00001C11.8761 6.00001 12.1 6.22387 12.1 6.50001C12.1 6.77615 11.8761 7.00001 11.6 7.00001C11.3238 7.00001 11.1 6.77615 11.1 6.50001ZM10.4 4.00001C10.1239 4.00001 9.90003 4.22387 9.90003 4.50001C9.90003 4.77615 10.1239 5.00001 10.4 5.00001C10.6762 5.00001 10.9 4.77615 10.9 4.50001C10.9 4.22387 10.6762 4.00001 10.4 4.00001ZM12.1 8.50001C12.1 8.22387 12.3238 8.00001 12.6 8.00001C12.8761 8.00001 13.1 8.22387 13.1 8.50001C13.1 8.77615 12.8761 9.00001 12.6 9.00001C12.3238 9.00001 12.1 8.77615 12.1 8.50001ZM13.4 10C13.1239 10 12.9 10.2239 12.9 10.5C12.9 10.7761 13.1239 11 13.4 11C13.6762 11 13.9 10.7761 13.9 10.5C13.9 10.2239 13.6762 10 13.4 10Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AngleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArchiveIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.30902 1C2.93025 1 2.58398 1.214 2.41459 1.55279L1.05279 4.27639C1.01807 4.34582 1 4.42238 1 4.5V13C1 13.5523 1.44772 14 2 14H13C13.5523 14 14 13.5523 14 13V4.5C14 4.42238 13.9819 4.34582 13.9472 4.27639L12.5854 1.55281C12.416 1.21403 12.0698 1.00003 11.691 1.00003L7.5 1.00001L3.30902 1ZM3.30902 2L7 2.00001V4H2.30902L3.30902 2ZM8 4V2.00002L11.691 2.00003L12.691 4H8ZM7.5 5H13V13H2V5H7.5ZM5.5 7C5.22386 7 5 7.22386 5 7.5C5 7.77614 5.22386 8 5.5 8H9.5C9.77614 8 10 7.77614 10 7.5C10 7.22386 9.77614 7 9.5 7H5.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArchiveIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowBottomLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.3536 3.64644C11.5488 3.8417 11.5488 4.15828 11.3536 4.35354L4.70711 11L9 11C9.27614 11 9.5 11.2239 9.5 11.5C9.5 11.7761 9.27614 12 9 12L3.5 12C3.36739 12 3.24021 11.9473 3.14645 11.8536C3.05268 11.7598 3 11.6326 3 11.5L3 5.99999C3 5.72385 3.22386 5.49999 3.5 5.49999C3.77614 5.49999 4 5.72385 4 5.99999V10.2929L10.6464 3.64643C10.8417 3.45117 11.1583 3.45117 11.3536 3.64644Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowBottomLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowBottomRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.64645 3.64644C3.45118 3.8417 3.45118 4.15828 3.64645 4.35354L10.2929 11L6 11C5.72386 11 5.5 11.2239 5.5 11.5C5.5 11.7761 5.72386 12 6 12L11.5 12C11.6326 12 11.7598 11.9473 11.8536 11.8536C11.9473 11.7598 12 11.6326 12 11.5L12 5.99999C12 5.72385 11.7761 5.49999 11.5 5.49999C11.2239 5.49999 11 5.72385 11 5.99999V10.2929L4.35355 3.64643C4.15829 3.45117 3.84171 3.45117 3.64645 3.64644Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowBottomRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowDownIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 2C7.77614 2 8 2.22386 8 2.5L8 11.2929L11.1464 8.14645C11.3417 7.95118 11.6583 7.95118 11.8536 8.14645C12.0488 8.34171 12.0488 8.65829 11.8536 8.85355L7.85355 12.8536C7.75979 12.9473 7.63261 13 7.5 13C7.36739 13 7.24021 12.9473 7.14645 12.8536L3.14645 8.85355C2.95118 8.65829 2.95118 8.34171 3.14645 8.14645C3.34171 7.95118 3.65829 7.95118 3.85355 8.14645L7 11.2929L7 2.5C7 2.22386 7.22386 2 7.5 2Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowDownIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.85355 3.14645C7.04882 3.34171 7.04882 3.65829 6.85355 3.85355L3.70711 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H3.70711L6.85355 11.1464C7.04882 11.3417 7.04882 11.6583 6.85355 11.8536C6.65829 12.0488 6.34171 12.0488 6.14645 11.8536L2.14645 7.85355C1.95118 7.65829 1.95118 7.34171 2.14645 7.14645L6.14645 3.14645C6.34171 2.95118 6.65829 2.95118 6.85355 3.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.14645 3.14645C8.34171 2.95118 8.65829 2.95118 8.85355 3.14645L12.8536 7.14645C13.0488 7.34171 13.0488 7.65829 12.8536 7.85355L8.85355 11.8536C8.65829 12.0488 8.34171 12.0488 8.14645 11.8536C7.95118 11.6583 7.95118 11.3417 8.14645 11.1464L11.2929 8H2.5C2.22386 8 2 7.77614 2 7.5C2 7.22386 2.22386 7 2.5 7H11.2929L8.14645 3.85355C7.95118 3.65829 7.95118 3.34171 8.14645 3.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowTopLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.3536 11.3536C11.5488 11.1583 11.5488 10.8417 11.3536 10.6465L4.70711 4L9 4C9.27614 4 9.5 3.77614 9.5 3.5C9.5 3.22386 9.27614 3 9 3L3.5 3C3.36739 3 3.24021 3.05268 3.14645 3.14645C3.05268 3.24022 3 3.36739 3 3.5L3 9.00001C3 9.27615 3.22386 9.50001 3.5 9.50001C3.77614 9.50001 4 9.27615 4 9.00001V4.70711L10.6464 11.3536C10.8417 11.5488 11.1583 11.5488 11.3536 11.3536Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowTopLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowTopRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.64645 11.3536C3.45118 11.1583 3.45118 10.8417 3.64645 10.6465L10.2929 4L6 4C5.72386 4 5.5 3.77614 5.5 3.5C5.5 3.22386 5.72386 3 6 3L11.5 3C11.6326 3 11.7598 3.05268 11.8536 3.14645C11.9473 3.24022 12 3.36739 12 3.5L12 9.00001C12 9.27615 11.7761 9.50001 11.5 9.50001C11.2239 9.50001 11 9.27615 11 9.00001V4.70711L4.35355 11.3536C4.15829 11.5488 3.84171 11.5488 3.64645 11.3536Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowTopRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ArrowUpIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.14645 2.14645C7.34171 1.95118 7.65829 1.95118 7.85355 2.14645L11.8536 6.14645C12.0488 6.34171 12.0488 6.65829 11.8536 6.85355C11.6583 7.04882 11.3417 7.04882 11.1464 6.85355L8 3.70711L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 3.70711L3.85355 6.85355C3.65829 7.04882 3.34171 7.04882 3.14645 6.85355C2.95118 6.65829 2.95118 6.34171 3.14645 6.14645L7.14645 2.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ArrowUpIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AspectRatioIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.5 2H12.5C12.7761 2 13 2.22386 13 2.5V12.5C13 12.7761 12.7761 13 12.5 13H2.5C2.22386 13 2 12.7761 2 12.5V2.5C2 2.22386 2.22386 2 2.5 2ZM1 2.5C1 1.67157 1.67157 1 2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5ZM7.5 4C7.77614 4 8 3.77614 8 3.5C8 3.22386 7.77614 3 7.5 3C7.22386 3 7 3.22386 7 3.5C7 3.77614 7.22386 4 7.5 4ZM8 5.5C8 5.77614 7.77614 6 7.5 6C7.22386 6 7 5.77614 7 5.5C7 5.22386 7.22386 5 7.5 5C7.77614 5 8 5.22386 8 5.5ZM7.5 8C7.77614 8 8 7.77614 8 7.5C8 7.22386 7.77614 7 7.5 7C7.22386 7 7 7.22386 7 7.5C7 7.77614 7.22386 8 7.5 8ZM10 7.5C10 7.77614 9.77614 8 9.5 8C9.22386 8 9 7.77614 9 7.5C9 7.22386 9.22386 7 9.5 7C9.77614 7 10 7.22386 10 7.5ZM11.5 8C11.7761 8 12 7.77614 12 7.5C12 7.22386 11.7761 7 11.5 7C11.2239 7 11 7.22386 11 7.5C11 7.77614 11.2239 8 11.5 8Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AspectRatioIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const AvatarIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877014 7.49988C0.877014 3.84219 3.84216 0.877045 7.49985 0.877045C11.1575 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1575 14.1227 7.49985 14.1227C3.84216 14.1227 0.877014 11.1575 0.877014 7.49988ZM7.49985 1.82704C4.36683 1.82704 1.82701 4.36686 1.82701 7.49988C1.82701 8.97196 2.38774 10.3131 3.30727 11.3213C4.19074 9.94119 5.73818 9.02499 7.50023 9.02499C9.26206 9.02499 10.8093 9.94097 11.6929 11.3208C12.6121 10.3127 13.1727 8.97172 13.1727 7.49988C13.1727 4.36686 10.6328 1.82704 7.49985 1.82704ZM10.9818 11.9787C10.2839 10.7795 8.9857 9.97499 7.50023 9.97499C6.01458 9.97499 4.71624 10.7797 4.01845 11.9791C4.97952 12.7272 6.18765 13.1727 7.49985 13.1727C8.81227 13.1727 10.0206 12.727 10.9818 11.9787ZM5.14999 6.50487C5.14999 5.207 6.20212 4.15487 7.49999 4.15487C8.79786 4.15487 9.84999 5.207 9.84999 6.50487C9.84999 7.80274 8.79786 8.85487 7.49999 8.85487C6.20212 8.85487 5.14999 7.80274 5.14999 6.50487ZM7.49999 5.10487C6.72679 5.10487 6.09999 5.73167 6.09999 6.50487C6.09999 7.27807 6.72679 7.90487 7.49999 7.90487C8.27319 7.90487 8.89999 7.27807 8.89999 6.50487C8.89999 5.73167 8.27319 5.10487 7.49999 5.10487Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default AvatarIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BackpackIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 1C5 0.447715 5.44772 0 6 0H9C9.55228 0 10 0.447715 10 1V2H14C14.5523 2 15 2.44772 15 3V6C15 6.8888 14.6131 7.68734 14 8.23608V11.5C14 12.3284 13.3284 13 12.5 13H2.5C1.67157 13 1 12.3284 1 11.5V8.2359C0.38697 7.68721 0 6.88883 0 6V3C0 2.44772 0.447716 2 1 2H5V1ZM9 1V2H6V1H9ZM1 3H5H5.5H9.5H10H14V6C14 6.654 13.6866 7.23467 13.1997 7.6004C12.8655 7.85144 12.4508 8 12 8H8V7.5C8 7.22386 7.77614 7 7.5 7C7.22386 7 7 7.22386 7 7.5V8H3C2.5493 8 2.1346 7.85133 1.80029 7.60022C1.31335 7.23446 1 6.65396 1 6V3ZM7 9H3C2.64961 9 2.31292 8.93972 2 8.82905V11.5C2 11.7761 2.22386 12 2.5 12H12.5C12.7761 12 13 11.7761 13 11.5V8.82915C12.6871 8.93978 12.3504 9 12 9H8V9.5C8 9.77614 7.77614 10 7.5 10C7.22386 10 7 9.77614 7 9.5V9Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BackpackIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BadgeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.5 6H11.5C12.3284 6 13 6.67157 13 7.5C13 8.32843 12.3284 9 11.5 9H3.5C2.67157 9 2 8.32843 2 7.5C2 6.67157 2.67157 6 3.5 6ZM1 7.5C1 6.11929 2.11929 5 3.5 5H11.5C12.8807 5 14 6.11929 14 7.5C14 8.88071 12.8807 10 11.5 10H3.5C2.11929 10 1 8.88071 1 7.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H4.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BadgeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BarChartIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.5 1C11.7761 1 12 1.22386 12 1.5V13.5C12 13.7761 11.7761 14 11.5 14C11.2239 14 11 13.7761 11 13.5V1.5C11 1.22386 11.2239 1 11.5 1ZM9.5 3C9.77614 3 10 3.22386 10 3.5V13.5C10 13.7761 9.77614 14 9.5 14C9.22386 14 9 13.7761 9 13.5V3.5C9 3.22386 9.22386 3 9.5 3ZM13.5 3C13.7761 3 14 3.22386 14 3.5V13.5C14 13.7761 13.7761 14 13.5 14C13.2239 14 13 13.7761 13 13.5V3.5C13 3.22386 13.2239 3 13.5 3ZM5.5 4C5.77614 4 6 4.22386 6 4.5V13.5C6 13.7761 5.77614 14 5.5 14C5.22386 14 5 13.7761 5 13.5V4.5C5 4.22386 5.22386 4 5.5 4ZM1.5 5C1.77614 5 2 5.22386 2 5.5V13.5C2 13.7761 1.77614 14 1.5 14C1.22386 14 1 13.7761 1 13.5V5.5C1 5.22386 1.22386 5 1.5 5ZM7.5 5C7.77614 5 8 5.22386 8 5.5V13.5C8 13.7761 7.77614 14 7.5 14C7.22386 14 7 13.7761 7 13.5V5.5C7 5.22386 7.22386 5 7.5 5ZM3.5 7C3.77614 7 4 7.22386 4 7.5V13.5C4 13.7761 3.77614 14 3.5 14C3.22386 14 3 13.7761 3 13.5V7.5C3 7.22386 3.22386 7 3.5 7Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BarChartIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BellIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.60124 1.25086C8.60124 1.75459 8.26278 2.17927 7.80087 2.30989C10.1459 2.4647 12 4.41582 12 6.79999V10.25C12 11.0563 12.0329 11.7074 12.7236 12.0528C12.931 12.1565 13.0399 12.3892 12.9866 12.6149C12.9333 12.8406 12.7319 13 12.5 13H8.16144C8.36904 13.1832 8.49997 13.4513 8.49997 13.75C8.49997 14.3023 8.05226 14.75 7.49997 14.75C6.94769 14.75 6.49997 14.3023 6.49997 13.75C6.49997 13.4513 6.63091 13.1832 6.83851 13H2.49999C2.2681 13 2.06664 12.8406 2.01336 12.6149C1.96009 12.3892 2.06897 12.1565 2.27638 12.0528C2.96708 11.7074 2.99999 11.0563 2.99999 10.25V6.79999C2.99999 4.41537 4.85481 2.46396 7.20042 2.3098C6.73867 2.17908 6.40036 1.75448 6.40036 1.25086C6.40036 0.643104 6.89304 0.150421 7.5008 0.150421C8.10855 0.150421 8.60124 0.643104 8.60124 1.25086ZM7.49999 3.29999C5.56699 3.29999 3.99999 4.86699 3.99999 6.79999V10.25L4.00002 10.3009C4.0005 10.7463 4.00121 11.4084 3.69929 12H11.3007C10.9988 11.4084 10.9995 10.7463 11 10.3009L11 10.25V6.79999C11 4.86699 9.43299 3.29999 7.49999 3.29999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BellIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BlendingModeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 9C3 6.5 4.5 4.25 7.5 1.5C10.5 4.25 12 6.5 12 9C12 11.4853 9.98528 13.5 7.5 13.5C5.01472 13.5 3 11.4853 3 9ZM10.9524 8.30307C9.67347 7.82121 8.2879 8.46208 6.98956 9.06259C5.9327 9.55142 4.93365 10.0135 4.09695 9.82153C4.03357 9.55804 4 9.28294 4 9C4 7.11203 5.02686 5.27195 7.5 2.87357C9.66837 4.97639 10.725 6.65004 10.9524 8.30307Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BlendingModeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BookmarkIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 2.5C3 2.22386 3.22386 2 3.5 2H11.5C11.7761 2 12 2.22386 12 2.5V13.5C12 13.6818 11.9014 13.8492 11.7424 13.9373C11.5834 14.0254 11.3891 14.0203 11.235 13.924L7.5 11.5896L3.765 13.924C3.61087 14.0203 3.41659 14.0254 3.25762 13.9373C3.09864 13.8492 3 13.6818 3 13.5V2.5ZM4 3V12.5979L6.97 10.7416C7.29427 10.539 7.70573 10.539 8.03 10.7416L11 12.5979V3H4Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BookmarkIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BookmarkFilledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.5 2C3.22386 2 3 2.22386 3 2.5V13.5C3 13.6818 3.09864 13.8492 3.25762 13.9373C3.41659 14.0254 3.61087 14.0203 3.765 13.924L7.5 11.5896L11.235 13.924C11.3891 14.0203 11.5834 14.0254 11.7424 13.9373C11.9014 13.8492 12 13.6818 12 13.5V2.5C12 2.22386 11.7761 2 11.5 2H3.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BookmarkFilledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderAllIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.25 1C0.25 0.585786 0.585786 0.25 1 0.25H14C14.4142 0.25 14.75 0.585786 14.75 1V14C14.75 14.4142 14.4142 14.75 14 14.75H1C0.585786 14.75 0.25 14.4142 0.25 14V1ZM1.75 1.75V13.25H13.25V1.75H1.75Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <rect x=\"7\" y=\"5\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"3\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"9\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"11\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default BorderAllIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderBottomIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M1 13.25L14 13.25V14.75L1 14.75V13.25Z\" fill={color} fillRule=\"evenodd\" clipRule=\"evenodd\" />\n        <rect x=\"7\" y=\"5\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"5\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"3\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"3\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"9\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"9\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"11\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"11\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"5\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"3\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"9\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"11\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default BorderBottomIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderDashedIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0 7.5C0 7.22386 0.223858 7 0.5 7H3C3.27614 7 3.5 7.22386 3.5 7.5C3.5 7.77614 3.27614 8 3 8H0.5C0.223858 8 0 7.77614 0 7.5ZM5.75 7.5C5.75 7.22386 5.97386 7 6.25 7H8.75C9.02614 7 9.25 7.22386 9.25 7.5C9.25 7.77614 9.02614 8 8.75 8H6.25C5.97386 8 5.75 7.77614 5.75 7.5ZM12 7C11.7239 7 11.5 7.22386 11.5 7.5C11.5 7.77614 11.7239 8 12 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BorderDashedIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderDottedIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.5 6.625C1.01675 6.625 0.625 7.01675 0.625 7.5C0.625 7.98325 1.01675 8.375 1.5 8.375C1.98325 8.375 2.375 7.98325 2.375 7.5C2.375 7.01675 1.98325 6.625 1.5 6.625ZM5.5 6.625C5.01675 6.625 4.625 7.01675 4.625 7.5C4.625 7.98325 5.01675 8.375 5.5 8.375C5.98325 8.375 6.375 7.98325 6.375 7.5C6.375 7.01675 5.98325 6.625 5.5 6.625ZM9.5 6.625C9.01675 6.625 8.625 7.01675 8.625 7.5C8.625 7.98325 9.01675 8.375 9.5 8.375C9.98325 8.375 10.375 7.98325 10.375 7.5C10.375 7.01675 9.98325 6.625 9.5 6.625ZM12.625 7.5C12.625 7.01675 13.0168 6.625 13.5 6.625C13.9832 6.625 14.375 7.01675 14.375 7.5C14.375 7.98325 13.9832 8.375 13.5 8.375C13.0168 8.375 12.625 7.98325 12.625 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BorderDottedIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M1.75 1L1.75 14L0.249999 14L0.25 1L1.75 1Z\" fill={color} fillRule=\"evenodd\" clipRule=\"evenodd\" />\n        <rect x=\"10\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 10 7)\" fill={color} />\n        <rect x=\"10\" y=\"13\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 10 13)\" fill={color} />\n        <rect x=\"12\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 12 7)\" fill={color} />\n        <rect x=\"12\" y=\"13\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 12 13)\" fill={color} />\n        <rect x=\"8\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 7)\" fill={color} />\n        <rect x=\"14\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 7)\" fill={color} />\n        <rect x=\"8\" y=\"13\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 13)\" fill={color} />\n        <rect x=\"14\" y=\"13\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 13)\" fill={color} />\n        <rect x=\"8\" y=\"5\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 5)\" fill={color} />\n        <rect x=\"14\" y=\"5\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 5)\" fill={color} />\n        <rect x=\"8\" y=\"3\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 3)\" fill={color} />\n        <rect x=\"14\" y=\"3\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 3)\" fill={color} />\n        <rect x=\"8\" y=\"9\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 9)\" fill={color} />\n        <rect x=\"14\" y=\"9\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 9)\" fill={color} />\n        <rect x=\"8\" y=\"11\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 11)\" fill={color} />\n        <rect x=\"14\" y=\"11\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 11)\" fill={color} />\n        <rect x=\"6\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 6 7)\" fill={color} />\n        <rect x=\"6\" y=\"13\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 6 13)\" fill={color} />\n        <rect x=\"4\" y=\"7\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 4 7)\" fill={color} />\n        <rect x=\"4\" y=\"13\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 4 13)\" fill={color} />\n        <rect x=\"10\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 10 1)\" fill={color} />\n        <rect x=\"12\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 12 1)\" fill={color} />\n        <rect x=\"8\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 8 1)\" fill={color} />\n        <rect x=\"14\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 14 1)\" fill={color} />\n        <rect x=\"6\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 6 1)\" fill={color} />\n        <rect x=\"4\" y=\"1\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(90 4 1)\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default BorderLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <rect x=\"7\" y=\"5.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"5.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"3.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"3.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"9.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"9.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"11.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"11.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"5.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"3.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"9.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"11.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default BorderNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M13.25 1L13.25 14L14.75 14L14.75 1L13.25 1Z\" fill={color} fillRule=\"evenodd\" clipRule=\"evenodd\" />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 5 7)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 5 13)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 3 7)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 3 13)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 7)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 7)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 13)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 13)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 5)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 5)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 3)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 3)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 9)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 9)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 11)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 11)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 9 7)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 9 13)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 11 7)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 11 13)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 5 1)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 3 1)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 7 1)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 1 1)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 9 1)\" fill={color} />\n        <rect width=\"1\" height=\"1\" rx=\".5\" transform=\"matrix(0 1 1 0 11 1)\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default BorderRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderSolidIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.25 7.5C1.25 7.22386 1.47386 7 1.75 7H13.25C13.5261 7 13.75 7.22386 13.75 7.5C13.75 7.77614 13.5261 8 13.25 8H1.75C1.47386 8 1.25 7.77614 1.25 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BorderSolidIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderSplitIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <rect x=\"7\" y=\"5.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"3.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"13.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"1.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"13\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"5\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"3\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"9\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"11\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"9.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"7\" y=\"11.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <rect x=\"1\" y=\"7.025\" width=\"1\" height=\"1\" rx=\".5\" fill={color} />\n        <path\n          d=\"M1 1.49994C1 1.2238 1.22386 0.999939 1.5 0.999939H6V1.99994H2V5.99994H1V1.49994ZM13 1.99994H9V0.999939H13.5C13.7761 0.999939 14 1.2238 14 1.49994V5.99994H13V1.99994ZM1 13.4999V8.99994H2V12.9999H6V13.9999H1.5C1.22386 13.9999 1 13.7761 1 13.4999ZM13 12.9999V8.99994H14V13.4999C14 13.7761 13.7761 13.9999 13.5 13.9999H9.5V12.9999H13Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BorderSplitIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderStyleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H3.5C3.77614 7 4 7.22386 4 7.5C4 7.77614 3.77614 8 3.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11C1.77614 11 2 11.2239 2 11.5C2 11.7761 1.77614 12 1.5 12C1.22386 12 1 11.7761 1 11.5ZM3 11.5C3 11.2239 3.22386 11 3.5 11C3.77614 11 4 11.2239 4 11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5ZM5.5 11C5.22386 11 5 11.2239 5 11.5C5 11.7761 5.22386 12 5.5 12C5.77614 12 6 11.7761 6 11.5C6 11.2239 5.77614 11 5.5 11ZM7 11.5C7 11.2239 7.22386 11 7.5 11C7.77614 11 8 11.2239 8 11.5C8 11.7761 7.77614 12 7.5 12C7.22386 12 7 11.7761 7 11.5ZM9.5 11C9.22386 11 9 11.2239 9 11.5C9 11.7761 9.22386 12 9.5 12C9.77614 12 10 11.7761 10 11.5C10 11.2239 9.77614 11 9.5 11ZM11 11.5C11 11.2239 11.2239 11 11.5 11C11.7761 11 12 11.2239 12 11.5C12 11.7761 11.7761 12 11.5 12C11.2239 12 11 11.7761 11 11.5ZM13.5 11C13.2239 11 13 11.2239 13 11.5C13 11.7761 13.2239 12 13.5 12C13.7761 12 14 11.7761 14 11.5C14 11.2239 13.7761 11 13.5 11ZM6.5 7C6.22386 7 6 7.22386 6 7.5C6 7.77614 6.22386 8 6.5 8H8.5C8.77614 8 9 7.77614 9 7.5C9 7.22386 8.77614 7 8.5 7H6.5ZM11 7.5C11 7.22386 11.2239 7 11.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H11.5C11.2239 8 11 7.77614 11 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BorderStyleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderTopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M14 1.75L1 1.75L1 0.249999L14 0.25L14 1.75Z\" fill={color} fillRule=\"evenodd\" clipRule=\"evenodd\" />\n        <rect x=\"8\" y=\"10\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 8 10)\" fill={color} />\n        <rect x=\"2\" y=\"10\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 2 10)\" fill={color} />\n        <rect x=\"8\" y=\"12\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 8 12)\" fill={color} />\n        <rect x=\"2\" y=\"12\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 2 12)\" fill={color} />\n        <rect x=\"8\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 8 8)\" fill={color} />\n        <rect x=\"8\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 8 14)\" fill={color} />\n        <rect x=\"2\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 2 8)\" fill={color} />\n        <rect x=\"2\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 2 14)\" fill={color} />\n        <rect x=\"10\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 10 8)\" fill={color} />\n        <rect x=\"10\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 10 14)\" fill={color} />\n        <rect x=\"12\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 12 8)\" fill={color} />\n        <rect x=\"12\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 12 14)\" fill={color} />\n        <rect x=\"6\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 6 8)\" fill={color} />\n        <rect x=\"6\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 6 14)\" fill={color} />\n        <rect x=\"4\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 4 8)\" fill={color} />\n        <rect x=\"4\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 4 14)\" fill={color} />\n        <rect x=\"8\" y=\"6\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 8 6)\" fill={color} />\n        <rect x=\"2\" y=\"6\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 2 6)\" fill={color} />\n        <rect x=\"8\" y=\"4\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 8 4)\" fill={color} />\n        <rect x=\"2\" y=\"4\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 2 4)\" fill={color} />\n        <rect x=\"14\" y=\"10\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 14 10)\" fill={color} />\n        <rect x=\"14\" y=\"12\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 14 12)\" fill={color} />\n        <rect x=\"14\" y=\"8\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 14 8)\" fill={color} />\n        <rect x=\"14\" y=\"14\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 14 14)\" fill={color} />\n        <rect x=\"14\" y=\"6\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 14 6)\" fill={color} />\n        <rect x=\"14\" y=\"4\" width=\"1\" height=\"1\" rx=\".5\" transform=\"rotate(-180 14 4)\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default BorderTopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BorderWidthIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 3H14V4H1V3ZM1 6H14V8H1V6ZM14 10.25H1V12.75H14V10.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BorderWidthIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BoxIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.5 2H2.5C2.22386 2 2 2.22386 2 2.5V12.5C2 12.7761 2.22386 13 2.5 13H12.5C12.7761 13 13 12.7761 13 12.5V2.5C13 2.22386 12.7761 2 12.5 2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BoxIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const BoxModelIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.99998 0.999976C1.44769 0.999976 0.999976 1.44769 0.999976 1.99998V13C0.999976 13.5523 1.44769 14 1.99998 14H13C13.5523 14 14 13.5523 14 13V1.99998C14 1.44769 13.5523 0.999976 13 0.999976H1.99998ZM1.99998 1.99998L13 1.99998V13H1.99998V1.99998ZM4.49996 3.99996C4.22382 3.99996 3.99996 4.22382 3.99996 4.49996V10.5C3.99996 10.7761 4.22382 11 4.49996 11H10.5C10.7761 11 11 10.7761 11 10.5V4.49996C11 4.22382 10.7761 3.99996 10.5 3.99996H4.49996ZM4.99996 9.99996V4.99996H9.99996V9.99996H4.99996Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default BoxModelIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ButtonIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 5H13C13.5523 5 14 5.44772 14 6V9C14 9.55228 13.5523 10 13 10H2C1.44772 10 1 9.55228 1 9V6C1 5.44772 1.44772 5 2 5ZM0 6C0 4.89543 0.895431 4 2 4H13C14.1046 4 15 4.89543 15 6V9C15 10.1046 14.1046 11 13 11H2C0.89543 11 0 10.1046 0 9V6ZM4.5 6.75C4.08579 6.75 3.75 7.08579 3.75 7.5C3.75 7.91421 4.08579 8.25 4.5 8.25C4.91421 8.25 5.25 7.91421 5.25 7.5C5.25 7.08579 4.91421 6.75 4.5 6.75ZM6.75 7.5C6.75 7.08579 7.08579 6.75 7.5 6.75C7.91421 6.75 8.25 7.08579 8.25 7.5C8.25 7.91421 7.91421 8.25 7.5 8.25C7.08579 8.25 6.75 7.91421 6.75 7.5ZM10.5 6.75C10.0858 6.75 9.75 7.08579 9.75 7.5C9.75 7.91421 10.0858 8.25 10.5 8.25C10.9142 8.25 11.25 7.91421 11.25 7.5C11.25 7.08579 10.9142 6.75 10.5 6.75Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ButtonIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CalendarIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.5 1C4.77614 1 5 1.22386 5 1.5V2H10V1.5C10 1.22386 10.2239 1 10.5 1C10.7761 1 11 1.22386 11 1.5V2H12.5C13.3284 2 14 2.67157 14 3.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V3.5C1 2.67157 1.67157 2 2.5 2H4V1.5C4 1.22386 4.22386 1 4.5 1ZM10 3V3.5C10 3.77614 10.2239 4 10.5 4C10.7761 4 11 3.77614 11 3.5V3H12.5C12.7761 3 13 3.22386 13 3.5V5H2V3.5C2 3.22386 2.22386 3 2.5 3H4V3.5C4 3.77614 4.22386 4 4.5 4C4.77614 4 5 3.77614 5 3.5V3H10ZM2 6V12.5C2 12.7761 2.22386 13 2.5 13H12.5C12.7761 13 13 12.7761 13 12.5V6H2ZM7 7.5C7 7.22386 7.22386 7 7.5 7C7.77614 7 8 7.22386 8 7.5C8 7.77614 7.77614 8 7.5 8C7.22386 8 7 7.77614 7 7.5ZM9.5 7C9.22386 7 9 7.22386 9 7.5C9 7.77614 9.22386 8 9.5 8C9.77614 8 10 7.77614 10 7.5C10 7.22386 9.77614 7 9.5 7ZM11 7.5C11 7.22386 11.2239 7 11.5 7C11.7761 7 12 7.22386 12 7.5C12 7.77614 11.7761 8 11.5 8C11.2239 8 11 7.77614 11 7.5ZM11.5 9C11.2239 9 11 9.22386 11 9.5C11 9.77614 11.2239 10 11.5 10C11.7761 10 12 9.77614 12 9.5C12 9.22386 11.7761 9 11.5 9ZM9 9.5C9 9.22386 9.22386 9 9.5 9C9.77614 9 10 9.22386 10 9.5C10 9.77614 9.77614 10 9.5 10C9.22386 10 9 9.77614 9 9.5ZM7.5 9C7.22386 9 7 9.22386 7 9.5C7 9.77614 7.22386 10 7.5 10C7.77614 10 8 9.77614 8 9.5C8 9.22386 7.77614 9 7.5 9ZM5 9.5C5 9.22386 5.22386 9 5.5 9C5.77614 9 6 9.22386 6 9.5C6 9.77614 5.77614 10 5.5 10C5.22386 10 5 9.77614 5 9.5ZM3.5 9C3.22386 9 3 9.22386 3 9.5C3 9.77614 3.22386 10 3.5 10C3.77614 10 4 9.77614 4 9.5C4 9.22386 3.77614 9 3.5 9ZM3 11.5C3 11.2239 3.22386 11 3.5 11C3.77614 11 4 11.2239 4 11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5ZM5.5 11C5.22386 11 5 11.2239 5 11.5C5 11.7761 5.22386 12 5.5 12C5.77614 12 6 11.7761 6 11.5C6 11.2239 5.77614 11 5.5 11ZM7 11.5C7 11.2239 7.22386 11 7.5 11C7.77614 11 8 11.2239 8 11.5C8 11.7761 7.77614 12 7.5 12C7.22386 12 7 11.7761 7 11.5ZM9.5 11C9.22386 11 9 11.2239 9 11.5C9 11.7761 9.22386 12 9.5 12C9.77614 12 10 11.7761 10 11.5C10 11.2239 9.77614 11 9.5 11Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CalendarIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CameraIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 3C1.44772 3 1 3.44772 1 4V11C1 11.5523 1.44772 12 2 12H13C13.5523 12 14 11.5523 14 11V4C14 3.44772 13.5523 3 13 3H2ZM0 4C0 2.89543 0.895431 2 2 2H13C14.1046 2 15 2.89543 15 4V11C15 12.1046 14.1046 13 13 13H2C0.895431 13 0 12.1046 0 11V4ZM2 4.25C2 4.11193 2.11193 4 2.25 4H4.75C4.88807 4 5 4.11193 5 4.25V5.75454C5 5.89261 4.88807 6.00454 4.75 6.00454H2.25C2.11193 6.00454 2 5.89261 2 5.75454V4.25ZM12.101 7.58421C12.101 9.02073 10.9365 10.1853 9.49998 10.1853C8.06346 10.1853 6.89893 9.02073 6.89893 7.58421C6.89893 6.14769 8.06346 4.98315 9.49998 4.98315C10.9365 4.98315 12.101 6.14769 12.101 7.58421ZM13.101 7.58421C13.101 9.57302 11.4888 11.1853 9.49998 11.1853C7.51117 11.1853 5.89893 9.57302 5.89893 7.58421C5.89893 5.5954 7.51117 3.98315 9.49998 3.98315C11.4888 3.98315 13.101 5.5954 13.101 7.58421Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CameraIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CardStackIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 3.5C2 3.22386 2.22386 3 2.5 3H12.5C12.7761 3 13 3.22386 13 3.5V9.5C13 9.77614 12.7761 10 12.5 10H2.5C2.22386 10 2 9.77614 2 9.5V3.5ZM2 10.9146C1.4174 10.7087 1 10.1531 1 9.5V3.5C1 2.67157 1.67157 2 2.5 2H12.5C13.3284 2 14 2.67157 14 3.5V9.5C14 10.1531 13.5826 10.7087 13 10.9146V11.5C13 12.3284 12.3284 13 11.5 13H3.5C2.67157 13 2 12.3284 2 11.5V10.9146ZM12 11V11.5C12 11.7761 11.7761 12 11.5 12H3.5C3.22386 12 3 11.7761 3 11.5V11H12Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CardStackIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CardStackMinusIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.5 3C2.22386 3 2 3.22386 2 3.5V9.5C2 9.77614 2.22386 10 2.5 10H12.5C12.7761 10 13 9.77614 13 9.5V3.5C13 3.22386 12.7761 3 12.5 3H2.5ZM1 9.5C1 10.1531 1.4174 10.7087 2 10.9146V11.5C2 12.3284 2.67157 13 3.5 13H11.5C12.3284 13 13 12.3284 13 11.5V10.9146C13.5826 10.7087 14 10.1531 14 9.5V3.5C14 2.67157 13.3284 2 12.5 2H2.5C1.67157 2 1 2.67157 1 3.5V9.5ZM12 11.5V11H3V11.5C3 11.7761 3.22386 12 3.5 12H11.5C11.7761 12 12 11.7761 12 11.5ZM5.5 6C5.22386 6 5 6.22386 5 6.5C5 6.77614 5.22386 7 5.5 7H9.5C9.77614 7 10 6.77614 10 6.5C10 6.22386 9.77614 6 9.5 6H5.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CardStackMinusIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CardStackPlusIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 3.5C2 3.22386 2.22386 3 2.5 3H12.5C12.7761 3 13 3.22386 13 3.5V9.5C13 9.77614 12.7761 10 12.5 10H2.5C2.22386 10 2 9.77614 2 9.5V3.5ZM2 10.9146C1.4174 10.7087 1 10.1531 1 9.5V3.5C1 2.67157 1.67157 2 2.5 2H12.5C13.3284 2 14 2.67157 14 3.5V9.5C14 10.1531 13.5826 10.7087 13 10.9146V11.5C13 12.3284 12.3284 13 11.5 13H3.5C2.67157 13 2 12.3284 2 11.5V10.9146ZM12 11V11.5C12 11.7761 11.7761 12 11.5 12H3.5C3.22386 12 3 11.7761 3 11.5V11H12ZM5 6.5C5 6.22386 5.22386 6 5.5 6H7V4.5C7 4.22386 7.22386 4 7.5 4C7.77614 4 8 4.22386 8 4.5V6H9.5C9.77614 6 10 6.22386 10 6.5C10 6.77614 9.77614 7 9.5 7H8V8.5C8 8.77614 7.77614 9 7.5 9C7.22386 9 7 8.77614 7 8.5V7H5.5C5.22386 7 5 6.77614 5 6.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CardStackPlusIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CaretDownIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.18179 6.18181C4.35753 6.00608 4.64245 6.00608 4.81819 6.18181L7.49999 8.86362L10.1818 6.18181C10.3575 6.00608 10.6424 6.00608 10.8182 6.18181C10.9939 6.35755 10.9939 6.64247 10.8182 6.81821L7.81819 9.81821C7.73379 9.9026 7.61934 9.95001 7.49999 9.95001C7.38064 9.95001 7.26618 9.9026 7.18179 9.81821L4.18179 6.81821C4.00605 6.64247 4.00605 6.35755 4.18179 6.18181Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CaretDownIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CaretLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.81809 4.18179C8.99383 4.35753 8.99383 4.64245 8.81809 4.81819L6.13629 7.49999L8.81809 10.1818C8.99383 10.3575 8.99383 10.6424 8.81809 10.8182C8.64236 10.9939 8.35743 10.9939 8.1817 10.8182L5.1817 7.81819C5.09731 7.73379 5.0499 7.61933 5.0499 7.49999C5.0499 7.38064 5.09731 7.26618 5.1817 7.18179L8.1817 4.18179C8.35743 4.00605 8.64236 4.00605 8.81809 4.18179Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CaretLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CaretRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.18194 4.18185C6.35767 4.00611 6.6426 4.00611 6.81833 4.18185L9.81833 7.18185C9.90272 7.26624 9.95013 7.3807 9.95013 7.50005C9.95013 7.6194 9.90272 7.73386 9.81833 7.81825L6.81833 10.8182C6.6426 10.994 6.35767 10.994 6.18194 10.8182C6.0062 10.6425 6.0062 10.3576 6.18194 10.1819L8.86374 7.50005L6.18194 4.81825C6.0062 4.64251 6.0062 4.35759 6.18194 4.18185Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CaretRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CaretSortIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CaretSortIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CaretUpIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.18179 8.81819C4.00605 8.64245 4.00605 8.35753 4.18179 8.18179L7.18179 5.18179C7.26618 5.0974 7.38064 5.04999 7.49999 5.04999C7.61933 5.04999 7.73379 5.0974 7.81819 5.18179L10.8182 8.18179C10.9939 8.35753 10.9939 8.64245 10.8182 8.81819C10.6424 8.99392 10.3575 8.99392 10.1818 8.81819L7.49999 6.13638L4.81819 8.81819C4.64245 8.99392 4.35753 8.99392 4.18179 8.81819Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CaretUpIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ChatBubbleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.5 3L2.5 3.00002C1.67157 3.00002 1 3.6716 1 4.50002V9.50003C1 10.3285 1.67157 11 2.5 11H7.50003C7.63264 11 7.75982 11.0527 7.85358 11.1465L10 13.2929V11.5C10 11.2239 10.2239 11 10.5 11H12.5C13.3284 11 14 10.3285 14 9.50003V4.5C14 3.67157 13.3284 3 12.5 3ZM2.49999 2.00002L12.5 2C13.8807 2 15 3.11929 15 4.5V9.50003C15 10.8807 13.8807 12 12.5 12H11V14.5C11 14.7022 10.8782 14.8845 10.6913 14.9619C10.5045 15.0393 10.2894 14.9965 10.1464 14.8536L7.29292 12H2.5C1.11929 12 0 10.8807 0 9.50003V4.50002C0 3.11931 1.11928 2.00003 2.49999 2.00002Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ChatBubbleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CheckIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CheckIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CheckCircledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.877045C3.84222 0.877045 0.877075 3.84219 0.877075 7.49988C0.877075 11.1575 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 3.84219 11.1576 0.877045 7.49991 0.877045ZM1.82708 7.49988C1.82708 4.36686 4.36689 1.82704 7.49991 1.82704C10.6329 1.82704 13.1727 4.36686 13.1727 7.49988C13.1727 10.6329 10.6329 13.1727 7.49991 13.1727C4.36689 13.1727 1.82708 10.6329 1.82708 7.49988ZM10.1589 5.53774C10.3178 5.31191 10.2636 5.00001 10.0378 4.84109C9.81194 4.68217 9.50004 4.73642 9.34112 4.96225L6.51977 8.97154L5.35681 7.78706C5.16334 7.59002 4.84677 7.58711 4.64973 7.78058C4.45268 7.97404 4.44978 8.29061 4.64325 8.48765L6.22658 10.1003C6.33054 10.2062 6.47617 10.2604 6.62407 10.2483C6.77197 10.2363 6.90686 10.1591 6.99226 10.0377L10.1589 5.53774Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CheckCircledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CheckboxIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 3H12V12H3L3 3ZM2 3C2 2.44771 2.44772 2 3 2H12C12.5523 2 13 2.44772 13 3V12C13 12.5523 12.5523 13 12 13H3C2.44771 13 2 12.5523 2 12V3ZM10.3498 5.51105C10.506 5.28337 10.4481 4.97212 10.2204 4.81587C9.99275 4.65961 9.6815 4.71751 9.52525 4.94519L6.64048 9.14857L5.19733 7.40889C5.02102 7.19635 4.7058 7.16699 4.49327 7.34329C4.28073 7.5196 4.25137 7.83482 4.42767 8.04735L6.2934 10.2964C6.39348 10.4171 6.54437 10.4838 6.70097 10.4767C6.85757 10.4695 7.00177 10.3894 7.09047 10.2601L10.3498 5.51105Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CheckboxIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ChevronDownIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ChevronDownIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ChevronLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.84182 3.13514C9.04327 3.32401 9.05348 3.64042 8.86462 3.84188L5.43521 7.49991L8.86462 11.1579C9.05348 11.3594 9.04327 11.6758 8.84182 11.8647C8.64036 12.0535 8.32394 12.0433 8.13508 11.8419L4.38508 7.84188C4.20477 7.64955 4.20477 7.35027 4.38508 7.15794L8.13508 3.15794C8.32394 2.95648 8.64036 2.94628 8.84182 3.13514Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ChevronLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ChevronRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ChevronRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ChevronUpIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.13523 8.84197C3.3241 9.04343 3.64052 9.05363 3.84197 8.86477L7.5 5.43536L11.158 8.86477C11.3595 9.05363 11.6759 9.04343 11.8648 8.84197C12.0536 8.64051 12.0434 8.32409 11.842 8.13523L7.84197 4.38523C7.64964 4.20492 7.35036 4.20492 7.15803 4.38523L3.15803 8.13523C2.95657 8.32409 2.94637 8.64051 3.13523 8.84197Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ChevronUpIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CircleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877075 7.49991C0.877075 3.84222 3.84222 0.877075 7.49991 0.877075C11.1576 0.877075 14.1227 3.84222 14.1227 7.49991C14.1227 11.1576 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1576 0.877075 7.49991ZM7.49991 1.82708C4.36689 1.82708 1.82708 4.36689 1.82708 7.49991C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49991C13.1727 4.36689 10.6329 1.82708 7.49991 1.82708Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CircleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CircleBackslashIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.877075C3.84222 0.877075 0.877075 3.84222 0.877075 7.49991C0.877075 11.1576 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1576 14.1227 7.49991C14.1227 3.84222 11.1576 0.877075 7.49991 0.877075ZM3.85768 3.15057C4.84311 2.32448 6.11342 1.82708 7.49991 1.82708C10.6329 1.82708 13.1727 4.36689 13.1727 7.49991C13.1727 8.88638 12.6753 10.1567 11.8492 11.1421L3.85768 3.15057ZM3.15057 3.85768C2.32448 4.84311 1.82708 6.11342 1.82708 7.49991C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C8.88638 13.1727 10.1567 12.6753 11.1421 11.8492L3.15057 3.85768Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CircleBackslashIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ClipboardIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 2V1H10V2H5ZM4.75 0C4.33579 0 4 0.335786 4 0.75V1H3.5C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V2.5C13 1.67157 12.3284 1 11.5 1H11V0.75C11 0.335786 10.6642 0 10.25 0H4.75ZM11 2V2.25C11 2.66421 10.6642 3 10.25 3H4.75C4.33579 3 4 2.66421 4 2.25V2H3.5C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V2.5C12 2.22386 11.7761 2 11.5 2H11Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ClipboardIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ClipboardCopyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 2V1H10V2H5ZM4.75 0C4.33579 0 4 0.335786 4 0.75V1H3.5C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H7V13H3.5C3.22386 13 3 12.7761 3 12.5V2.5C3 2.22386 3.22386 2 3.5 2H4V2.25C4 2.66421 4.33579 3 4.75 3H10.25C10.6642 3 11 2.66421 11 2.25V2H11.5C11.7761 2 12 2.22386 12 2.5V7H13V2.5C13 1.67157 12.3284 1 11.5 1H11V0.75C11 0.335786 10.6642 0 10.25 0H4.75ZM9 8.5C9 8.77614 8.77614 9 8.5 9C8.22386 9 8 8.77614 8 8.5C8 8.22386 8.22386 8 8.5 8C8.77614 8 9 8.22386 9 8.5ZM10.5 9C10.7761 9 11 8.77614 11 8.5C11 8.22386 10.7761 8 10.5 8C10.2239 8 10 8.22386 10 8.5C10 8.77614 10.2239 9 10.5 9ZM13 8.5C13 8.77614 12.7761 9 12.5 9C12.2239 9 12 8.77614 12 8.5C12 8.22386 12.2239 8 12.5 8C12.7761 8 13 8.22386 13 8.5ZM14.5 9C14.7761 9 15 8.77614 15 8.5C15 8.22386 14.7761 8 14.5 8C14.2239 8 14 8.22386 14 8.5C14 8.77614 14.2239 9 14.5 9ZM15 10.5C15 10.7761 14.7761 11 14.5 11C14.2239 11 14 10.7761 14 10.5C14 10.2239 14.2239 10 14.5 10C14.7761 10 15 10.2239 15 10.5ZM14.5 13C14.7761 13 15 12.7761 15 12.5C15 12.2239 14.7761 12 14.5 12C14.2239 12 14 12.2239 14 12.5C14 12.7761 14.2239 13 14.5 13ZM14.5 15C14.7761 15 15 14.7761 15 14.5C15 14.2239 14.7761 14 14.5 14C14.2239 14 14 14.2239 14 14.5C14 14.7761 14.2239 15 14.5 15ZM8.5 11C8.77614 11 9 10.7761 9 10.5C9 10.2239 8.77614 10 8.5 10C8.22386 10 8 10.2239 8 10.5C8 10.7761 8.22386 11 8.5 11ZM9 12.5C9 12.7761 8.77614 13 8.5 13C8.22386 13 8 12.7761 8 12.5C8 12.2239 8.22386 12 8.5 12C8.77614 12 9 12.2239 9 12.5ZM8.5 15C8.77614 15 9 14.7761 9 14.5C9 14.2239 8.77614 14 8.5 14C8.22386 14 8 14.2239 8 14.5C8 14.7761 8.22386 15 8.5 15ZM11 14.5C11 14.7761 10.7761 15 10.5 15C10.2239 15 10 14.7761 10 14.5C10 14.2239 10.2239 14 10.5 14C10.7761 14 11 14.2239 11 14.5ZM12.5 15C12.7761 15 13 14.7761 13 14.5C13 14.2239 12.7761 14 12.5 14C12.2239 14 12 14.2239 12 14.5C12 14.7761 12.2239 15 12.5 15Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ClipboardCopyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ClockIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.50009 0.877014C3.84241 0.877014 0.877258 3.84216 0.877258 7.49984C0.877258 11.1575 3.8424 14.1227 7.50009 14.1227C11.1578 14.1227 14.1229 11.1575 14.1229 7.49984C14.1229 3.84216 11.1577 0.877014 7.50009 0.877014ZM1.82726 7.49984C1.82726 4.36683 4.36708 1.82701 7.50009 1.82701C10.6331 1.82701 13.1729 4.36683 13.1729 7.49984C13.1729 10.6328 10.6331 13.1727 7.50009 13.1727C4.36708 13.1727 1.82726 10.6328 1.82726 7.49984ZM8 4.50001C8 4.22387 7.77614 4.00001 7.5 4.00001C7.22386 4.00001 7 4.22387 7 4.50001V7.50001C7 7.63262 7.05268 7.7598 7.14645 7.85357L9.14645 9.85357C9.34171 10.0488 9.65829 10.0488 9.85355 9.85357C10.0488 9.65831 10.0488 9.34172 9.85355 9.14646L8 7.29291V4.50001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ClockIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CodeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.96424 2.68571C10.0668 2.42931 9.94209 2.13833 9.6857 2.03577C9.4293 1.93322 9.13832 2.05792 9.03576 2.31432L5.03576 12.3143C4.9332 12.5707 5.05791 12.8617 5.3143 12.9642C5.5707 13.0668 5.86168 12.9421 5.96424 12.6857L9.96424 2.68571ZM3.85355 5.14646C4.04882 5.34172 4.04882 5.6583 3.85355 5.85356L2.20711 7.50001L3.85355 9.14646C4.04882 9.34172 4.04882 9.6583 3.85355 9.85356C3.65829 10.0488 3.34171 10.0488 3.14645 9.85356L1.14645 7.85356C0.951184 7.6583 0.951184 7.34172 1.14645 7.14646L3.14645 5.14646C3.34171 4.9512 3.65829 4.9512 3.85355 5.14646ZM11.1464 5.14646C11.3417 4.9512 11.6583 4.9512 11.8536 5.14646L13.8536 7.14646C14.0488 7.34172 14.0488 7.6583 13.8536 7.85356L11.8536 9.85356C11.6583 10.0488 11.3417 10.0488 11.1464 9.85356C10.9512 9.6583 10.9512 9.34172 11.1464 9.14646L12.7929 7.50001L11.1464 5.85356C10.9512 5.6583 10.9512 5.34172 11.1464 5.14646Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CodeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CodeSandboxLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.71144 0.796902C7.57741 0.734357 7.42257 0.734357 7.28855 0.796902L1.28855 3.5969C1.11251 3.67905 0.999993 3.85573 0.999993 4.04999V10.95C0.999993 11.1443 1.11251 11.3209 1.28855 11.4031L7.28855 14.2031C7.42257 14.2656 7.57741 14.2656 7.71144 14.2031L13.7114 11.4031C13.8875 11.3209 14 11.1443 14 10.95V4.04999C14 3.85573 13.8875 3.67905 13.7114 3.5969L7.71144 0.796902ZM7.49999 3.15674L5.98039 2.51091L7.49999 1.80176L9.01959 2.51091L7.49999 3.15674ZM7.69556 4.16018L10.2382 3.07958L12.2719 4.02865L7.49999 6.05671L2.72808 4.02865L4.76181 3.07958L7.30442 4.16018C7.42939 4.2133 7.57059 4.2133 7.69556 4.16018ZM7.99999 6.93078L13 4.80578V7.92966L11.0821 8.8119C10.7273 8.97509 10.5 9.32988 10.5 9.72039V11.7982L7.99999 12.9649V6.93078ZM11.5 11.3316L13 10.6316V9.03039L11.5 9.72039V11.3316ZM6.99999 6.93078V12.9649L4.50231 11.7993V9.72036C4.50231 9.32985 4.27499 8.97506 3.92022 8.81187L1.99999 7.92856V4.80578L6.99999 6.93078ZM1.99999 10.6316L3.50231 11.3326L3.50231 9.72036L1.99999 9.02929V10.6316Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CodeSandboxLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ColorWheelIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877075 7.49985C0.877075 3.84216 3.84222 0.877014 7.49991 0.877014C11.1576 0.877014 14.1227 3.84216 14.1227 7.49985C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49985ZM3.78135 3.21565C4.68298 2.43239 5.83429 1.92904 7.09998 1.84089V6.53429L3.78135 3.21565ZM3.21567 3.78134C2.43242 4.68298 1.92909 5.83428 1.84095 7.09997H6.5343L3.21567 3.78134ZM6.5343 7.89997H1.84097C1.92916 9.16562 2.43253 10.3169 3.21579 11.2185L6.5343 7.89997ZM3.78149 11.7842C4.6831 12.5673 5.83435 13.0707 7.09998 13.1588V8.46566L3.78149 11.7842ZM7.89998 8.46566V13.1588C9.16559 13.0706 10.3168 12.5673 11.2184 11.7841L7.89998 8.46566ZM11.7841 11.2184C12.5673 10.3168 13.0707 9.16558 13.1588 7.89997H8.46567L11.7841 11.2184ZM8.46567 7.09997H13.1589C13.0707 5.83432 12.5674 4.68305 11.7842 3.78143L8.46567 7.09997ZM11.2185 3.21573C10.3169 2.43246 9.16565 1.92909 7.89998 1.8409V6.53429L11.2185 3.21573Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ColorWheelIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ColumnSpacingIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.00012 1.5C8.00012 1.22386 7.77626 1 7.50012 1C7.22398 1 7.00012 1.22386 7.00012 1.5V13.5C7.00012 13.7761 7.22398 14 7.50012 14C7.77626 14 8.00012 13.7761 8.00012 13.5V1.5ZM3.31812 5.818C3.49386 5.64227 3.49386 5.35734 3.31812 5.18161C3.14239 5.00587 2.85746 5.00587 2.68173 5.18161L0.681729 7.18161C0.505993 7.35734 0.505993 7.64227 0.681729 7.818L2.68173 9.818C2.85746 9.99374 3.14239 9.99374 3.31812 9.818C3.49386 9.64227 3.49386 9.35734 3.31812 9.18161L2.08632 7.9498H5.50017C5.7487 7.9498 5.95017 7.74833 5.95017 7.4998C5.95017 7.25128 5.7487 7.0498 5.50017 7.0498H2.08632L3.31812 5.818ZM12.3181 5.18161C12.1424 5.00587 11.8575 5.00587 11.6817 5.18161C11.506 5.35734 11.506 5.64227 11.6817 5.818L12.9135 7.0498H9.50017C9.25164 7.0498 9.05017 7.25128 9.05017 7.4998C9.05017 7.74833 9.25164 7.9498 9.50017 7.9498H12.9135L11.6817 9.18161C11.506 9.35734 11.506 9.64227 11.6817 9.818C11.8575 9.99374 12.1424 9.99374 12.3181 9.818L14.3181 7.818C14.4939 7.64227 14.4939 7.35734 14.3181 7.18161L12.3181 5.18161Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ColumnSpacingIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ColumnsIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.14998 14V1H0.849976V14H2.14998ZM6.14998 14V1H4.84998V14H6.14998ZM10.15 1V14H8.84998V1H10.15ZM14.15 14V1H12.85V14H14.15Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ColumnsIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CommitIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.94969 7.49989C9.94969 8.85288 8.85288 9.94969 7.49989 9.94969C6.14691 9.94969 5.0501 8.85288 5.0501 7.49989C5.0501 6.14691 6.14691 5.0501 7.49989 5.0501C8.85288 5.0501 9.94969 6.14691 9.94969 7.49989ZM10.8632 8C10.6213 9.64055 9.20764 10.8997 7.49989 10.8997C5.79214 10.8997 4.37847 9.64055 4.13662 8H0.5C0.223858 8 0 7.77614 0 7.5C0 7.22386 0.223858 7 0.5 7H4.13659C4.37835 5.35935 5.79206 4.1001 7.49989 4.1001C9.20772 4.1001 10.6214 5.35935 10.8632 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H10.8632Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CommitIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Component1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.67129 3.14634C4.47603 3.34161 4.47603 3.65819 4.67129 3.85345L7.14616 6.32833C7.34142 6.52359 7.65801 6.52359 7.85327 6.32833L10.3281 3.85345C10.5234 3.65819 10.5234 3.34161 10.3281 3.14634L7.85327 0.671471C7.65801 0.476209 7.34142 0.476209 7.14616 0.671471L4.67129 3.14634ZM7.49971 5.26766L5.73195 3.4999L7.49971 1.73213L9.26748 3.4999L7.49971 5.26766ZM8.67129 7.14634C8.47603 7.34161 8.47603 7.65819 8.67129 7.85345L11.1462 10.3283C11.3414 10.5236 11.658 10.5236 11.8533 10.3283L14.3281 7.85345C14.5234 7.65819 14.5234 7.34161 14.3281 7.14634L11.8533 4.67147C11.658 4.47621 11.3414 4.47621 11.1462 4.67147L8.67129 7.14634ZM11.4997 9.26766L9.73195 7.4999L11.4997 5.73213L13.2675 7.4999L11.4997 9.26766ZM4.67129 11.8535C4.47603 11.6582 4.47603 11.3416 4.67129 11.1463L7.14616 8.67147C7.34142 8.47621 7.65801 8.47621 7.85327 8.67147L10.3281 11.1463C10.5234 11.3416 10.5234 11.6582 10.3281 11.8535L7.85327 14.3283C7.65801 14.5236 7.34142 14.5236 7.14616 14.3283L4.67129 11.8535ZM5.73195 11.4999L7.49971 13.2677L9.26748 11.4999L7.49971 9.73213L5.73195 11.4999ZM0.671288 7.14649C0.476026 7.34175 0.476026 7.65834 0.671288 7.8536L3.14616 10.3285C3.34142 10.5237 3.65801 10.5237 3.85327 10.3285L6.32814 7.8536C6.5234 7.65834 6.5234 7.34175 6.32814 7.14649L3.85327 4.67162C3.65801 4.47636 3.34142 4.47636 3.14616 4.67162L0.671288 7.14649ZM3.49972 9.26781L1.73195 7.50005L3.49972 5.73228L5.26748 7.50005L3.49972 9.26781Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Component1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Component2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.87935 1H3.9H11.1H11.1207C11.5231 0.999994 11.8553 0.999989 12.1259 1.0221C12.407 1.04506 12.6653 1.09434 12.908 1.21799C13.2843 1.40973 13.5903 1.7157 13.782 2.09202C13.9057 2.33469 13.9549 2.59304 13.9779 2.87409C14 3.14468 14 3.47686 14 3.87934V3.9V11.1V11.1207C14 11.5231 14 11.8553 13.9779 12.1259C13.9549 12.407 13.9057 12.6653 13.782 12.908C13.5903 13.2843 13.2843 13.5903 12.908 13.782C12.6653 13.9057 12.407 13.9549 12.1259 13.9779C11.8553 14 11.5231 14 11.1207 14H11.1H3.9H3.87934C3.47686 14 3.14468 14 2.87409 13.9779C2.59304 13.9549 2.33469 13.9057 2.09202 13.782C1.7157 13.5903 1.40973 13.2843 1.21799 12.908C1.09434 12.6653 1.04506 12.407 1.0221 12.1259C0.999989 11.8553 0.999994 11.5231 1 11.1207V11.1207V11.1V3.9V3.87935V3.87934C0.999994 3.47686 0.999989 3.14468 1.0221 2.87409C1.04506 2.59304 1.09434 2.33469 1.21799 2.09202C1.40973 1.7157 1.7157 1.40973 2.09202 1.21799C2.33469 1.09434 2.59304 1.04506 2.87409 1.0221C3.14469 0.999989 3.47687 0.999994 3.87935 1ZM2.95552 2.01878C2.73631 2.03669 2.62421 2.06915 2.54601 2.10899C2.35785 2.20487 2.20487 2.35785 2.10899 2.54601C2.06915 2.62421 2.03669 2.73631 2.01878 2.95552C2.00039 3.18056 2 3.47171 2 3.9V7H7V2H3.9C3.47171 2 3.18056 2.00039 2.95552 2.01878ZM7 8H2V11.1C2 11.5283 2.00039 11.8194 2.01878 12.0445C2.03669 12.2637 2.06915 12.3758 2.10899 12.454C2.20487 12.6422 2.35785 12.7951 2.54601 12.891C2.62421 12.9309 2.73631 12.9633 2.95552 12.9812C3.18056 12.9996 3.47171 13 3.9 13H7V8ZM8 8H13V11.1C13 11.5283 12.9996 11.8194 12.9812 12.0445C12.9633 12.2637 12.9309 12.3758 12.891 12.454C12.7951 12.6422 12.6422 12.7951 12.454 12.891C12.3758 12.9309 12.2637 12.9633 12.0445 12.9812C11.8194 12.9996 11.5283 13 11.1 13H8V8ZM13 7H8V2H11.1C11.5283 2 11.8194 2.00039 12.0445 2.01878C12.2637 2.03669 12.3758 2.06915 12.454 2.10899C12.6422 2.20487 12.7951 2.35785 12.891 2.54601C12.9309 2.62421 12.9633 2.73631 12.9812 2.95552C12.9996 3.18056 13 3.47171 13 3.9V7Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Component2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ComponentBooleanIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.85367 1.48956C7.65841 1.29429 7.34182 1.29429 7.14656 1.48956L1.48971 7.14641C1.29445 7.34167 1.29445 7.65825 1.48971 7.85352L7.14656 13.5104C7.34182 13.7056 7.65841 13.7056 7.85367 13.5104L13.5105 7.85352C13.7058 7.65825 13.7058 7.34167 13.5105 7.14641L7.85367 1.48956ZM7.5 2.55033L2.55037 7.49996L7.5 12.4496V2.55033Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ComponentBooleanIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ComponentInstanceIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.1465 1.48959C7.34176 1.29432 7.65835 1.29432 7.85361 1.48959L13.5105 7.14644C13.7057 7.3417 13.7057 7.65829 13.5105 7.85355L7.85361 13.5104C7.65835 13.7057 7.34176 13.7057 7.1465 13.5104L1.48965 7.85355C1.29439 7.65829 1.29439 7.3417 1.48965 7.14644L7.1465 1.48959ZM7.50005 2.55025L2.55031 7.49999L7.50005 12.4497L12.4498 7.49999L7.50005 2.55025Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ComponentInstanceIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ComponentNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.85361 1.48959C7.65835 1.29432 7.34176 1.29432 7.1465 1.48959L1.48965 7.14644C1.29439 7.3417 1.29439 7.65829 1.48965 7.85355L3.9645 10.3284L1.64644 12.6464C1.45118 12.8417 1.45118 13.1583 1.64644 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L4.6716 11.0355L7.1465 13.5104C7.34176 13.7057 7.65835 13.7057 7.85361 13.5104L13.5105 7.85355C13.7057 7.65829 13.7057 7.3417 13.5105 7.14644L11.0356 4.67154L13.3535 2.35355C13.5488 2.15829 13.5488 1.84171 13.3535 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L10.3285 3.96443L7.85361 1.48959ZM9.62135 4.67154L7.50005 2.55025L2.55031 7.49999L4.6716 9.62129L9.62135 4.67154ZM5.37871 10.3284L7.50005 12.4497L12.4498 7.49999L10.3285 5.37865L5.37871 10.3284Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ComponentNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ComponentPlaceholderIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.8034 7.14644C12.9986 6.95118 13.3152 6.95118 13.5105 7.14644C13.7057 7.3417 13.7057 7.65829 13.5105 7.85355C13.3152 8.04881 12.9986 8.04881 12.8034 7.85355C12.6081 7.65828 12.6081 7.3417 12.8034 7.14644ZM12.0962 8.56065C12.2915 8.75592 12.2915 9.0725 12.0962 9.26776C11.901 9.46302 11.5844 9.46302 11.3891 9.26776C11.1939 9.0725 11.1939 8.75592 11.3891 8.56065C11.5844 8.36539 11.901 8.36539 12.0962 8.56065ZM10.682 9.97487C10.8773 10.1701 10.8773 10.4867 10.682 10.682C10.4868 10.8772 10.1702 10.8772 9.97493 10.682C9.77967 10.4867 9.77967 10.1701 9.97493 9.97487C10.1702 9.7796 10.4868 9.7796 10.682 9.97487ZM9.26782 11.3891C9.46308 11.5843 9.46308 11.9009 9.26782 12.0962C9.07256 12.2915 8.75598 12.2915 8.56071 12.0962C8.36545 11.9009 8.36545 11.5843 8.56072 11.3891C8.75598 11.1938 9.07256 11.1938 9.26782 11.3891ZM7.1465 13.5104C6.95124 13.3151 6.95124 12.9986 7.1465 12.8033C7.17091 12.7789 7.19721 12.7575 7.22494 12.7392C7.41901 12.6111 7.68275 12.6324 7.85361 12.8033C8.04887 12.9986 8.04887 13.3151 7.85361 13.5104C7.65835 13.7057 7.34176 13.7057 7.1465 13.5104Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M2.90386 8.56065C2.7086 8.75592 2.7086 9.0725 2.90386 9.26776 3.09912 9.46302 3.41571 9.46302 3.61097 9.26776 3.80623 9.0725 3.80623 8.75592 3.61097 8.56065 3.41571 8.36539 3.09912 8.36539 2.90386 8.56065zM4.31807 9.97487C4.12281 10.1701 4.12281 10.4867 4.31807 10.682 4.51334 10.8772 4.82992 10.8772 5.02518 10.682 5.22044 10.4867 5.22044 10.1701 5.02518 9.97487 4.82992 9.7796 4.51334 9.7796 4.31807 9.97487zM5.73229 11.3891C5.53703 11.5843 5.53703 11.9009 5.73229 12.0962 5.92755 12.2914 6.24413 12.2915 6.43939 12.0962 6.63466 11.9009 6.63466 11.5843 6.43939 11.3891 6.24413 11.1938 5.92755 11.1938 5.73229 11.3891zM2.19675 7.85355C2.36761 7.68269 2.38897 7.41895 2.26082 7.22488 2.09046 6.96684 1.71063 6.92546 1.48965 7.14644 1.29439 7.3417 1.29439 7.65829 1.48965 7.85355 1.68491 8.04881 2.00149 8.04881 2.19675 7.85355zM3.61097 5.73223C3.41571 5.53696 3.09912 5.53696 2.90386 5.73223 2.7086 5.92749 2.7086 6.24407 2.90386 6.43933 3.09912 6.6346 3.41571 6.6346 3.61097 6.43933 3.80623 6.24407 3.80623 5.92749 3.61097 5.73223zM5.02518 4.31801C4.82992 4.12275 4.51334 4.12275 4.31807 4.31801 4.12281 4.51328 4.12281 4.82986 4.31807 5.02512 4.51334 5.22038 4.82992 5.22038 5.02518 5.02512 5.22044 4.82986 5.22044 4.51328 5.02518 4.31801zM6.43939 2.9038C6.24413 2.70854 5.92755 2.70854 5.73229 2.9038 5.53703 3.09906 5.53703 3.41564 5.73229 3.61091 5.92755 3.80617 6.24413 3.80617 6.43939 3.61091 6.63466 3.41564 6.63466 3.09906 6.43939 2.9038zM7.85361 1.48959C7.65835 1.29432 7.34176 1.29432 7.1465 1.48959 6.95124 1.68485 6.95124 2.00143 7.1465 2.19669 7.34176 2.39196 7.65835 2.39196 7.85361 2.19669 8.04887 2.00143 8.04887 1.68485 7.85361 1.48959zM9.26782 2.9038C9.07256 2.70854 8.75598 2.70854 8.56071 2.9038 8.36545 3.09906 8.36545 3.41564 8.56071 3.61091 8.75598 3.80617 9.07256 3.80617 9.26782 3.61091 9.46308 3.41564 9.46308 3.09906 9.26782 2.9038zM10.682 4.31801C10.4868 4.12275 10.1702 4.12275 9.97493 4.31801 9.77967 4.51328 9.77967 4.82986 9.97493 5.02512 10.1702 5.22038 10.4868 5.22038 10.682 5.02512 10.8773 4.82986 10.8773 4.51328 10.682 4.31801zM12.0962 5.73223C11.901 5.53696 11.5844 5.53696 11.3891 5.73223 11.1939 5.92749 11.1939 6.24407 11.3891 6.43933 11.5844 6.6346 11.901 6.6346 12.0962 6.43933 12.2915 6.24407 12.2915 5.92749 12.0962 5.73223z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ComponentPlaceholderIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ContainerIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 1.5C2 1.77614 1.77614 2 1.5 2C1.22386 2 1 1.77614 1 1.5C1 1.22386 1.22386 1 1.5 1C1.77614 1 2 1.22386 2 1.5ZM5 13H10V2L5 2L5 13ZM4 13C4 13.5523 4.44772 14 5 14H10C10.5523 14 11 13.5523 11 13V2C11 1.44772 10.5523 1 10 1H5C4.44772 1 4 1.44771 4 2V13ZM13.5 2C13.7761 2 14 1.77614 14 1.5C14 1.22386 13.7761 1 13.5 1C13.2239 1 13 1.22386 13 1.5C13 1.77614 13.2239 2 13.5 2ZM2 3.5C2 3.77614 1.77614 4 1.5 4C1.22386 4 1 3.77614 1 3.5C1 3.22386 1.22386 3 1.5 3C1.77614 3 2 3.22386 2 3.5ZM13.5 4C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3C13.2239 3 13 3.22386 13 3.5C13 3.77614 13.2239 4 13.5 4ZM2 5.5C2 5.77614 1.77614 6 1.5 6C1.22386 6 1 5.77614 1 5.5C1 5.22386 1.22386 5 1.5 5C1.77614 5 2 5.22386 2 5.5ZM13.5 6C13.7761 6 14 5.77614 14 5.5C14 5.22386 13.7761 5 13.5 5C13.2239 5 13 5.22386 13 5.5C13 5.77614 13.2239 6 13.5 6ZM2 7.5C2 7.77614 1.77614 8 1.5 8C1.22386 8 1 7.77614 1 7.5C1 7.22386 1.22386 7 1.5 7C1.77614 7 2 7.22386 2 7.5ZM13.5 8C13.7761 8 14 7.77614 14 7.5C14 7.22386 13.7761 7 13.5 7C13.2239 7 13 7.22386 13 7.5C13 7.77614 13.2239 8 13.5 8ZM2 9.5C2 9.77614 1.77614 10 1.5 10C1.22386 10 1 9.77614 1 9.5C1 9.22386 1.22386 9 1.5 9C1.77614 9 2 9.22386 2 9.5ZM13.5 10C13.7761 10 14 9.77614 14 9.5C14 9.22386 13.7761 9 13.5 9C13.2239 9 13 9.22386 13 9.5C13 9.77614 13.2239 10 13.5 10ZM2 11.5C2 11.7761 1.77614 12 1.5 12C1.22386 12 1 11.7761 1 11.5C1 11.2239 1.22386 11 1.5 11C1.77614 11 2 11.2239 2 11.5ZM13.5 12C13.7761 12 14 11.7761 14 11.5C14 11.2239 13.7761 11 13.5 11C13.2239 11 13 11.2239 13 11.5C13 11.7761 13.2239 12 13.5 12ZM2 13.5C2 13.7761 1.77614 14 1.5 14C1.22386 14 1 13.7761 1 13.5C1 13.2239 1.22386 13 1.5 13C1.77614 13 2 13.2239 2 13.5ZM13.5 14C13.7761 14 14 13.7761 14 13.5C14 13.2239 13.7761 13 13.5 13C13.2239 13 13 13.2239 13 13.5C13 13.7761 13.2239 14 13.5 14Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ContainerIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CookieIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.0697 1.76746C12.4807 1.21947 11.4605 0.454311 11.0495 1.0023C10.6385 1.55028 11.6588 2.31544 12.0697 1.76746ZM8.39263 1.07811C7.15585 0.950602 5.7823 1.16348 4.58433 1.70937C3.38552 2.25563 2.32735 3.15309 1.78844 4.41832C1.37574 5.38724 1.01715 6.28113 1.00088 7.44354C0.984724 8.59844 1.30522 9.96898 2.13174 11.928C2.61142 13.0649 4.03963 13.5446 5.13895 13.8079C6.40836 14.1119 7.80857 14.1914 8.6644 14.0742C9.36515 13.9782 10.1448 13.8284 10.7987 13.297C11.8977 12.4039 12.9009 11.3955 13.4994 10.3393C14.104 9.27221 14.3256 8.09207 13.7216 6.95324C13.5628 6.65373 13.316 6.57734 13.0412 6.4923C12.9374 6.46016 12.8295 6.42678 12.7209 6.37966C11.6211 5.90234 10.9646 5.34963 10.9135 5.02876C10.8656 4.72808 10.9221 4.51463 10.9811 4.29181C11.0129 4.17199 11.0453 4.04947 11.0626 3.90922C11.0838 3.73737 11.0814 3.33319 10.6996 3.12761C10.4048 2.96888 10.2164 2.65843 10.0407 2.36904C9.99742 2.29775 9.95492 2.22773 9.9118 2.16158C9.62634 1.72367 9.20769 1.16213 8.39263 1.07811ZM4.99899 2.61935C3.96483 3.09058 3.12554 3.83097 2.70846 4.81018C2.29808 5.77368 2.01406 6.50873 2.00079 7.45753C1.98741 8.41385 2.25043 9.6368 3.0531 11.5393C3.39181 12.3421 4.62167 12.6557 5.37186 12.8354C6.5493 13.1174 7.822 13.1802 8.52868 13.0834C9.21271 12.9897 9.74568 12.8642 10.1681 12.5209C11.229 11.6587 12.121 10.7435 12.6293 9.84635C12.9349 9.30709 13.5141 7.7028 12.6292 7.3873C10.7539 6.71875 10.262 6.06669 9.99011 5.41268C9.80915 4.97744 9.82868 4.52282 9.95741 4.07885L9.95741 4.07884C9.97662 4.0126 9.99538 3.94791 10.0334 3.88882C9.81857 3.73676 9.6515 3.55195 9.51464 3.3715C9.42876 3.25828 9.3469 3.12099 9.26197 2.97856C9.01866 2.57052 8.75018 2.12027 8.29008 2.07283C7.22889 1.96343 6.03398 2.14772 4.99899 2.61935ZM13.2081 3.77471C13.441 3.22671 12.4547 2.63606 12.0822 3.10163C11.5817 3.72732 12.9029 4.49281 13.2081 3.77471ZM14.3672 2.26031C14.9668 2.27493 15.1551 1.11603 14.5718 0.949371C13.8076 0.731026 13.5918 2.24139 14.3672 2.26031ZM14.2857 5.09098C14.8644 5.10004 15.0462 4.38222 14.4832 4.27899C13.7455 4.14375 13.5373 5.07927 14.2857 5.09098ZM6.9075 4.28672C6.46898 4.66754 6.0522 4.15185 5.97983 3.7365C5.86848 3.09744 6.33696 2.56856 6.94823 2.91156C7.43344 3.18382 7.26678 3.97471 6.9075 4.28672ZM4.94455 5.88184C5.40885 5.41754 4.59567 4.57013 4.11425 5.05154C3.83338 5.33242 4.00936 5.65376 4.23744 5.88184C4.43271 6.0771 4.74929 6.0771 4.94455 5.88184ZM6.97716 6.71984C7.31181 7.38914 8.48804 6.79159 7.99413 6.14788C7.86519 5.97983 7.68657 5.9494 7.62145 5.94207C7.21217 5.89601 6.76349 6.2925 6.97716 6.71984ZM6.98798 8.72461C7.14066 9.1188 7.51122 9.3187 7.91915 9.1633C8.27434 9.02799 8.33186 8.39689 8.17175 8.07427C8.02331 7.77514 7.63956 7.67793 7.33747 7.79417C6.98512 7.92976 6.85672 8.38708 6.98576 8.71889L6.98798 8.72461ZM10.3885 8.84081C10.7575 8.6566 11.4617 8.82771 11.4617 9.31199C11.4617 9.71286 10.9587 10.2165 10.5634 10.2826C10.1813 10.3465 9.70515 9.97581 9.76648 9.57718C9.81445 9.26539 10.1217 8.97401 10.3885 8.84081ZM7.56704 10.8432C7.33461 10.7502 7.14353 10.8601 7.11437 10.8769L7.11279 10.8778C6.90782 10.9949 6.71383 11.2439 6.6747 11.4842C6.59018 12.0034 7.13199 12.1239 7.52661 12.0987C8.2074 12.0553 8.06547 11.0426 7.56704 10.8432ZM4.8805 10.8932C5.0674 10.7723 5.15658 10.5363 5.08293 10.3153C4.93046 9.79687 4.3246 9.71252 3.96561 10.1297C3.79336 10.3299 3.80749 10.6274 3.99214 10.8105L3.99495 10.814L3.9979 10.8176C4.22025 11.0942 4.63624 11.1857 4.8805 10.8932ZM3.04695 7.81318C3.33147 8.0977 3.60077 8.15067 3.98443 8.05859C4.60826 7.90887 4.13814 6.24299 3.047 6.87296C2.70939 7.06788 2.86716 7.63339 3.04695 7.81318Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CookieIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CopyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 9.50006C1 10.3285 1.67157 11.0001 2.5 11.0001H4L4 10.0001H2.5C2.22386 10.0001 2 9.7762 2 9.50006L2 2.50006C2 2.22392 2.22386 2.00006 2.5 2.00006L9.5 2.00006C9.77614 2.00006 10 2.22392 10 2.50006V4.00002H5.5C4.67158 4.00002 4 4.67159 4 5.50002V12.5C4 13.3284 4.67158 14 5.5 14H12.5C13.3284 14 14 13.3284 14 12.5V5.50002C14 4.67159 13.3284 4.00002 12.5 4.00002H11V2.50006C11 1.67163 10.3284 1.00006 9.5 1.00006H2.5C1.67157 1.00006 1 1.67163 1 2.50006V9.50006ZM5 5.50002C5 5.22388 5.22386 5.00002 5.5 5.00002H12.5C12.7761 5.00002 13 5.22388 13 5.50002V12.5C13 12.7762 12.7761 13 12.5 13H5.5C5.22386 13 5 12.7762 5 12.5V5.50002Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CopyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CornerBottomLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.87737 12H9.9H11.5C11.7761 12 12 11.7761 12 11.5C12 11.2239 11.7761 11 11.5 11H9.9C8.77164 11 7.95545 10.9996 7.31352 10.9472C6.67744 10.8952 6.25662 10.7946 5.91103 10.6185C5.25247 10.283 4.71703 9.74753 4.38148 9.08897C4.20539 8.74338 4.10481 8.32256 4.05284 7.68648C4.00039 7.04455 4 6.22836 4 5.1V3.5C4 3.22386 3.77614 3 3.5 3C3.22386 3 3 3.22386 3 3.5V5.1V5.12263C3 6.22359 3 7.08052 3.05616 7.76791C3.11318 8.46584 3.23058 9.0329 3.49047 9.54296C3.9219 10.3897 4.61031 11.0781 5.45704 11.5095C5.9671 11.7694 6.53416 11.8868 7.23209 11.9438C7.91948 12 8.77641 12 9.87737 12Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CornerBottomLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CornerBottomRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.12263 12H5.1H3.5C3.22386 12 3 11.7761 3 11.5C3 11.2239 3.22386 11 3.5 11H5.1C6.22836 11 7.04455 10.9996 7.68648 10.9472C8.32256 10.8952 8.74338 10.7946 9.08897 10.6185C9.74753 10.283 10.283 9.74753 10.6185 9.08897C10.7946 8.74338 10.8952 8.32256 10.9472 7.68648C10.9996 7.04455 11 6.22836 11 5.1V3.5C11 3.22386 11.2239 3 11.5 3C11.7761 3 12 3.22386 12 3.5V5.1V5.12263C12 6.22359 12 7.08052 11.9438 7.76791C11.8868 8.46584 11.7694 9.0329 11.5095 9.54296C11.0781 10.3897 10.3897 11.0781 9.54296 11.5095C9.0329 11.7694 8.46584 11.8868 7.76791 11.9438C7.08052 12 6.22359 12 5.12263 12Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CornerBottomRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CornerTopLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.87737 3H9.9H11.5C11.7761 3 12 3.22386 12 3.5C12 3.77614 11.7761 4 11.5 4H9.9C8.77164 4 7.95545 4.00039 7.31352 4.05284C6.67744 4.10481 6.25662 4.20539 5.91103 4.38148C5.25247 4.71703 4.71703 5.25247 4.38148 5.91103C4.20539 6.25662 4.10481 6.67744 4.05284 7.31352C4.00039 7.95545 4 8.77164 4 9.9V11.5C4 11.7761 3.77614 12 3.5 12C3.22386 12 3 11.7761 3 11.5V9.9V9.87737C3 8.77641 3 7.91948 3.05616 7.23209C3.11318 6.53416 3.23058 5.9671 3.49047 5.45704C3.9219 4.61031 4.61031 3.9219 5.45704 3.49047C5.9671 3.23058 6.53416 3.11318 7.23209 3.05616C7.91948 3 8.77641 3 9.87737 3Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CornerTopLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CornerTopRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.12263 3H5.1H3.5C3.22386 3 3 3.22386 3 3.5C3 3.77614 3.22386 4 3.5 4H5.1C6.22836 4 7.04455 4.00039 7.68648 4.05284C8.32256 4.10481 8.74338 4.20539 9.08897 4.38148C9.74753 4.71703 10.283 5.25247 10.6185 5.91103C10.7946 6.25662 10.8952 6.67744 10.9472 7.31352C10.9996 7.95545 11 8.77164 11 9.9V11.5C11 11.7761 11.2239 12 11.5 12C11.7761 12 12 11.7761 12 11.5V9.9V9.87737C12 8.77641 12 7.91948 11.9438 7.23209C11.8868 6.53416 11.7694 5.9671 11.5095 5.45704C11.0781 4.61031 10.3897 3.9219 9.54296 3.49047C9.0329 3.23058 8.46584 3.11318 7.76791 3.05616C7.08052 3 6.22359 3 5.12263 3Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CornerTopRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CornersIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.5 2L4.87935 2C4.47687 1.99999 4.14469 1.99999 3.87409 2.0221C3.59304 2.04506 3.33469 2.09434 3.09202 2.21799C2.7157 2.40973 2.40973 2.7157 2.21799 3.09202C2.09434 3.33469 2.04506 3.59304 2.0221 3.87409C1.99999 4.14468 1.99999 4.47686 2 4.87933V4.87935V5.5C2 5.77614 2.22386 6 2.5 6C2.77614 6 3 5.77614 3 5.5V4.9C3 4.47171 3.00039 4.18056 3.01878 3.95552C3.03669 3.73631 3.06915 3.62421 3.10899 3.54601C3.20487 3.35785 3.35785 3.20487 3.54601 3.10899C3.62421 3.06915 3.73631 3.03669 3.95552 3.01878C4.18056 3.00039 4.47171 3 4.9 3H5.5C5.77614 3 6 2.77614 6 2.5C6 2.22386 5.77614 2 5.5 2ZM13 9.5C13 9.22386 12.7761 9 12.5 9C12.2239 9 12 9.22386 12 9.5V10.1C12 10.5283 11.9996 10.8194 11.9812 11.0445C11.9633 11.2637 11.9309 11.3758 11.891 11.454C11.7951 11.6422 11.6422 11.7951 11.454 11.891C11.3758 11.9309 11.2637 11.9633 11.0445 11.9812C10.8194 11.9996 10.5283 12 10.1 12H9.5C9.22386 12 9 12.2239 9 12.5C9 12.7761 9.22386 13 9.5 13H10.1206C10.5231 13 10.8553 13 11.1259 12.9779C11.407 12.9549 11.6653 12.9057 11.908 12.782C12.2843 12.5903 12.5903 12.2843 12.782 11.908C12.9057 11.6653 12.9549 11.407 12.9779 11.1259C13 10.8553 13 10.5232 13 10.1207V10.1207V10.1207V10.1206V9.5ZM2.5 9C2.77614 9 3 9.22386 3 9.5V10.1C3 10.5283 3.00039 10.8194 3.01878 11.0445C3.03669 11.2637 3.06915 11.3758 3.10899 11.454C3.20487 11.6422 3.35785 11.7951 3.54601 11.891C3.62421 11.9309 3.73631 11.9633 3.95552 11.9812C4.18056 11.9996 4.47171 12 4.9 12H5.5C5.77614 12 6 12.2239 6 12.5C6 12.7761 5.77614 13 5.5 13H4.87935C4.47687 13 4.14469 13 3.87409 12.9779C3.59304 12.9549 3.33469 12.9057 3.09202 12.782C2.7157 12.5903 2.40973 12.2843 2.21799 11.908C2.09434 11.6653 2.04506 11.407 2.0221 11.1259C1.99999 10.8553 1.99999 10.5231 2 10.1207V10.1206V10.1V9.5C2 9.22386 2.22386 9 2.5 9ZM10.1 3C10.5283 3 10.8194 3.00039 11.0445 3.01878C11.2637 3.03669 11.3758 3.06915 11.454 3.10899C11.6422 3.20487 11.7951 3.35785 11.891 3.54601C11.9309 3.62421 11.9633 3.73631 11.9812 3.95552C11.9996 4.18056 12 4.47171 12 4.9V5.5C12 5.77614 12.2239 6 12.5 6C12.7761 6 13 5.77614 13 5.5V4.87935V4.87934C13 4.47686 13 4.14468 12.9779 3.87409C12.9549 3.59304 12.9057 3.33469 12.782 3.09202C12.5903 2.7157 12.2843 2.40973 11.908 2.21799C11.6653 2.09434 11.407 2.04506 11.1259 2.0221C10.8553 1.99999 10.5231 1.99999 10.1206 2L10.1 2H9.5C9.22386 2 9 2.22386 9 2.5C9 2.77614 9.22386 3 9.5 3H10.1Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CornersIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CountdownTimerIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.15 7.49998C13.15 4.66458 10.9402 1.84998 7.50002 1.84998C4.7217 1.84998 3.34851 3.90636 2.76336 4.99997H4.5C4.77614 4.99997 5 5.22383 5 5.49997C5 5.77611 4.77614 5.99997 4.5 5.99997H1.5C1.22386 5.99997 1 5.77611 1 5.49997V2.49997C1 2.22383 1.22386 1.99997 1.5 1.99997C1.77614 1.99997 2 2.22383 2 2.49997V4.31318C2.70453 3.07126 4.33406 0.849976 7.50002 0.849976C11.5628 0.849976 14.15 4.18537 14.15 7.49998C14.15 10.8146 11.5628 14.15 7.50002 14.15C5.55618 14.15 3.93778 13.3808 2.78548 12.2084C2.16852 11.5806 1.68668 10.839 1.35816 10.0407C1.25306 9.78536 1.37488 9.49315 1.63024 9.38806C1.8856 9.28296 2.17781 9.40478 2.2829 9.66014C2.56374 10.3425 2.97495 10.9745 3.4987 11.5074C4.47052 12.4963 5.83496 13.15 7.50002 13.15C10.9402 13.15 13.15 10.3354 13.15 7.49998ZM7 10V5.00001H8V10H7Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CountdownTimerIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CounterClockwiseClockIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.15 7.49998C13.15 4.66458 10.9402 1.84998 7.50002 1.84998C4.72167 1.84998 3.34849 3.9064 2.76335 5H4.5C4.77614 5 5 5.22386 5 5.5C5 5.77614 4.77614 6 4.5 6H1.5C1.22386 6 1 5.77614 1 5.5V2.5C1 2.22386 1.22386 2 1.5 2C1.77614 2 2 2.22386 2 2.5V4.31318C2.70453 3.07126 4.33406 0.849976 7.50002 0.849976C11.5628 0.849976 14.15 4.18537 14.15 7.49998C14.15 10.8146 11.5628 14.15 7.50002 14.15C5.55618 14.15 3.93778 13.3808 2.78548 12.2084C2.16852 11.5806 1.68668 10.839 1.35816 10.0407C1.25306 9.78536 1.37488 9.49315 1.63024 9.38806C1.8856 9.28296 2.17781 9.40478 2.2829 9.66014C2.56374 10.3425 2.97495 10.9745 3.4987 11.5074C4.47052 12.4963 5.83496 13.15 7.50002 13.15C10.9402 13.15 13.15 10.3354 13.15 7.49998ZM7.5 4.00001C7.77614 4.00001 8 4.22387 8 4.50001V7.29291L9.85355 9.14646C10.0488 9.34172 10.0488 9.65831 9.85355 9.85357C9.65829 10.0488 9.34171 10.0488 9.14645 9.85357L7.14645 7.85357C7.05268 7.7598 7 7.63262 7 7.50001V4.50001C7 4.22387 7.22386 4.00001 7.5 4.00001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CounterClockwiseClockIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CropIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.5 8.00684e-07C3.77614 7.88614e-07 4 0.223859 4 0.500001L4 3.00006L11.5 3.00006C11.7761 3.00006 12 3.22392 12 3.50006L12 11.0001L14.5 11C14.7761 11 15 11.2238 15 11.5C15 11.7761 14.7762 12 14.5 12L12 12.0001L12 14.5C12 14.7761 11.7761 15 11.5 15C11.2239 15 11 14.7761 11 14.5L11 12.0001L3.5 12.0001C3.22386 12.0001 3 11.7762 3 11.5001L3 4.00005L0.499989 4C0.223847 4 -6.10541e-06 3.77613 -5.02576e-07 3.49999C5.13006e-06 3.22385 0.223867 3 0.50001 3L3 3.00005L3 0.500001C3 0.223859 3.22386 8.12755e-07 3.5 8.00684e-07ZM4 4.00006L4 11.0001L11 11.0001L11 4.00006L4 4.00006Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CropIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Cross1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.8536 2.85355C13.0488 2.65829 13.0488 2.34171 12.8536 2.14645C12.6583 1.95118 12.3417 1.95118 12.1464 2.14645L7.5 6.79289L2.85355 2.14645C2.65829 1.95118 2.34171 1.95118 2.14645 2.14645C1.95118 2.34171 1.95118 2.65829 2.14645 2.85355L6.79289 7.5L2.14645 12.1464C1.95118 12.3417 1.95118 12.6583 2.14645 12.8536C2.34171 13.0488 2.65829 13.0488 2.85355 12.8536L7.5 8.20711L12.1464 12.8536C12.3417 13.0488 12.6583 13.0488 12.8536 12.8536C13.0488 12.6583 13.0488 12.3417 12.8536 12.1464L8.20711 7.5L12.8536 2.85355Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Cross1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Cross2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Cross2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CrossCircledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704ZM9.85358 5.14644C10.0488 5.3417 10.0488 5.65829 9.85358 5.85355L8.20713 7.49999L9.85358 9.14644C10.0488 9.3417 10.0488 9.65829 9.85358 9.85355C9.65832 10.0488 9.34173 10.0488 9.14647 9.85355L7.50002 8.2071L5.85358 9.85355C5.65832 10.0488 5.34173 10.0488 5.14647 9.85355C4.95121 9.65829 4.95121 9.3417 5.14647 9.14644L6.79292 7.49999L5.14647 5.85355C4.95121 5.65829 4.95121 5.3417 5.14647 5.14644C5.34173 4.95118 5.65832 4.95118 5.85358 5.14644L7.50002 6.79289L9.14647 5.14644C9.34173 4.95118 9.65832 4.95118 9.85358 5.14644Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CrossCircledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Crosshair1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877075 7.50207C0.877075 3.84319 3.84319 0.877075 7.50208 0.877075C11.1609 0.877075 14.1271 3.84319 14.1271 7.50207C14.1271 11.1609 11.1609 14.1271 7.50208 14.1271C3.84319 14.1271 0.877075 11.1609 0.877075 7.50207ZM1.84898 7.00003C2.0886 4.26639 4.26639 2.0886 7.00003 1.84898V4.50003C7.00003 4.77617 7.22388 5.00003 7.50003 5.00003C7.77617 5.00003 8.00003 4.77617 8.00003 4.50003V1.84862C10.7356 2.08643 12.9154 4.26502 13.1552 7.00003H10.5C10.2239 7.00003 10 7.22388 10 7.50003C10 7.77617 10.2239 8.00003 10.5 8.00003H13.1555C12.9176 10.7369 10.7369 12.9176 8.00003 13.1555V10.5C8.00003 10.2239 7.77617 10 7.50003 10C7.22388 10 7.00003 10.2239 7.00003 10.5V13.1552C4.26502 12.9154 2.08643 10.7356 1.84862 8.00003H4.50003C4.77617 8.00003 5.00003 7.77617 5.00003 7.50003C5.00003 7.22388 4.77617 7.00003 4.50003 7.00003H1.84898Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Crosshair1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Crosshair2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 0C7.77614 0 8 0.223858 8 0.5V1.80687C10.6922 2.0935 12.8167 4.28012 13.0068 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H12.9888C12.7094 10.6244 10.6244 12.7094 8 12.9888V14.5C8 14.7761 7.77614 15 7.5 15C7.22386 15 7 14.7761 7 14.5V13.0068C4.28012 12.8167 2.0935 10.6922 1.80687 8H0.5C0.223858 8 0 7.77614 0 7.5C0 7.22386 0.223858 7 0.5 7H1.78886C1.98376 4.21166 4.21166 1.98376 7 1.78886V0.5C7 0.223858 7.22386 0 7.5 0ZM8 12.0322V9.5C8 9.22386 7.77614 9 7.5 9C7.22386 9 7 9.22386 7 9.5V12.054C4.80517 11.8689 3.04222 10.1668 2.76344 8H5.5C5.77614 8 6 7.77614 6 7.5C6 7.22386 5.77614 7 5.5 7H2.7417C2.93252 4.73662 4.73662 2.93252 7 2.7417V5.5C7 5.77614 7.22386 6 7.5 6C7.77614 6 8 5.77614 8 5.5V2.76344C10.1668 3.04222 11.8689 4.80517 12.054 7H9.5C9.22386 7 9 7.22386 9 7.5C9 7.77614 9.22386 8 9.5 8H12.0322C11.7621 10.0991 10.0991 11.7621 8 12.0322Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Crosshair2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CrumpledPaperIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.60913 0.0634287C4.39082 0.0088505 4.16575 0.12393 4.08218 0.332867L3.1538 2.6538L0.832866 3.58218C0.702884 3.63417 0.604504 3.7437 0.566705 3.87849C0.528906 4.01329 0.555994 4.158 0.639992 4.26999L2.01148 6.09864L1.06343 9.89085C1.00944 10.1068 1.12145 10.3298 1.32691 10.4154L4.20115 11.613L5.62557 13.7496C5.73412 13.9124 5.93545 13.9864 6.12362 13.9327L9.62362 12.9327C9.62988 12.9309 9.63611 12.929 9.64229 12.9269L12.6423 11.9269C12.7923 11.8769 12.905 11.7519 12.9393 11.5976L13.9393 7.09761C13.9776 6.92506 13.9114 6.74605 13.77 6.63999L11.95 5.27499V2.99999C11.95 2.82955 11.8537 2.67373 11.7012 2.5975L8.70124 1.0975C8.67187 1.08282 8.64098 1.07139 8.60913 1.06343L4.60913 0.0634287ZM11.4323 6.01173L12.7748 7.01858L10.2119 9.15429C10.1476 9.20786 10.0995 9.2783 10.0731 9.35769L9.25382 11.8155L7.73849 10.8684C7.52774 10.7367 7.25011 10.8007 7.11839 11.0115C6.98667 11.2222 7.05074 11.4999 7.26149 11.6316L8.40341 12.3453L6.19221 12.9771L4.87441 11.0004C4.82513 10.9265 4.75508 10.8688 4.67307 10.8346L2.03046 9.73352L2.85134 6.44999H4.99999C5.24852 6.44999 5.44999 6.24852 5.44999 5.99999C5.44999 5.75146 5.24852 5.54999 4.99999 5.54999H2.72499L1.7123 4.19974L3.51407 3.47903L6.35769 4.4269C6.53655 4.48652 6.73361 4.42832 6.85138 4.28111L8.62413 2.06518L11.05 3.27811V5.19533L8.83287 6.08218C8.70996 6.13134 8.61494 6.23212 8.57308 6.35769L8.07308 7.85769C7.99449 8.09346 8.12191 8.34831 8.35769 8.4269C8.59346 8.50549 8.84831 8.37807 8.9269 8.14229L9.3609 6.84029L11.4323 6.01173ZM7.71052 1.76648L6.34462 3.47386L4.09505 2.724L4.77192 1.03183L7.71052 1.76648ZM10.2115 11.7885L12.116 11.1537L12.7745 8.19034L10.8864 9.76374L10.2115 11.7885Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CrumpledPaperIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CubeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.28856 0.796908C7.42258 0.734364 7.57742 0.734364 7.71144 0.796908L13.7114 3.59691C13.8875 3.67906 14 3.85574 14 4.05V10.95C14 11.1443 13.8875 11.3209 13.7114 11.4031L7.71144 14.2031C7.57742 14.2656 7.42258 14.2656 7.28856 14.2031L1.28856 11.4031C1.11252 11.3209 1 11.1443 1 10.95V4.05C1 3.85574 1.11252 3.67906 1.28856 3.59691L7.28856 0.796908ZM2 4.80578L7 6.93078V12.9649L2 10.6316V4.80578ZM8 12.9649L13 10.6316V4.80578L8 6.93078V12.9649ZM7.5 6.05672L12.2719 4.02866L7.5 1.80176L2.72809 4.02866L7.5 6.05672Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CubeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CursorArrowIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.29227 0.048984C3.47033 -0.032338 3.67946 -0.00228214 3.8274 0.125891L12.8587 7.95026C13.0134 8.08432 13.0708 8.29916 13.0035 8.49251C12.9362 8.68586 12.7578 8.81866 12.5533 8.82768L9.21887 8.97474L11.1504 13.2187C11.2648 13.47 11.1538 13.7664 10.9026 13.8808L8.75024 14.8613C8.499 14.9758 8.20255 14.8649 8.08802 14.6137L6.15339 10.3703L3.86279 12.7855C3.72196 12.934 3.50487 12.9817 3.31479 12.9059C3.1247 12.8301 3 12.6461 3 12.4414V0.503792C3 0.308048 3.11422 0.130306 3.29227 0.048984ZM4 1.59852V11.1877L5.93799 9.14425C6.05238 9.02363 6.21924 8.96776 6.38319 8.99516C6.54715 9.02256 6.68677 9.12965 6.75573 9.2809L8.79056 13.7441L10.0332 13.178L8.00195 8.71497C7.93313 8.56376 7.94391 8.38824 8.03072 8.24659C8.11753 8.10494 8.26903 8.01566 8.435 8.00834L11.2549 7.88397L4 1.59852Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CursorArrowIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const CursorTextIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.5 1C4.22386 1 4 1.22386 4 1.5C4 1.77614 4.22386 2 4.5 2C5.42215 2 6.0399 2.23054 6.42075 2.56379C6.79286 2.88939 7 3.36626 7 4V7H5.75C5.47386 7 5.25 7.22386 5.25 7.5C5.25 7.77614 5.47386 8 5.75 8H7V11C7 11.6337 6.79286 12.1106 6.42075 12.4362C6.0399 12.7695 5.42215 13 4.5 13C4.22386 13 4 13.2239 4 13.5C4 13.7761 4.22386 14 4.5 14C5.57785 14 6.4601 13.7305 7.07925 13.1888C7.24168 13.0467 7.38169 12.8896 7.5 12.7198C7.61832 12.8896 7.75832 13.0467 7.92075 13.1888C8.5399 13.7305 9.42215 14 10.5 14C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13C9.57785 13 8.9601 12.7695 8.57925 12.4362C8.20714 12.1106 8 11.6337 8 11V8H9.25C9.52614 8 9.75 7.77614 9.75 7.5C9.75 7.22386 9.52614 7 9.25 7H8V4C8 3.36626 8.20714 2.88939 8.57925 2.56379C8.9601 2.23054 9.57785 2 10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1C9.42215 1 8.5399 1.26946 7.92075 1.81121C7.75832 1.95333 7.61832 2.11043 7.5 2.28023C7.38168 2.11043 7.24168 1.95333 7.07925 1.81121C6.4601 1.26946 5.57785 1 4.5 1Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default CursorTextIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DashIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 7.5C5 7.22386 5.22386 7 5.5 7H9.5C9.77614 7 10 7.22386 10 7.5C10 7.77614 9.77614 8 9.5 8H5.5C5.22386 8 5 7.77614 5 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DashIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DashboardIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.8 1L2.74967 0.99997C2.52122 0.999752 2.32429 0.999564 2.14983 1.04145C1.60136 1.17312 1.17312 1.60136 1.04145 2.14983C0.999564 2.32429 0.999752 2.52122 0.99997 2.74967L1 2.8V5.2L0.99997 5.25033C0.999752 5.47878 0.999564 5.67572 1.04145 5.85017C1.17312 6.39864 1.60136 6.82688 2.14983 6.95856C2.32429 7.00044 2.52122 7.00025 2.74967 7.00003L2.8 7H5.2L5.25033 7.00003C5.47878 7.00025 5.67572 7.00044 5.85017 6.95856C6.39864 6.82688 6.82688 6.39864 6.95856 5.85017C7.00044 5.67572 7.00025 5.47878 7.00003 5.25033L7 5.2V2.8L7.00003 2.74967C7.00025 2.52122 7.00044 2.32429 6.95856 2.14983C6.82688 1.60136 6.39864 1.17312 5.85017 1.04145C5.67572 0.999564 5.47878 0.999752 5.25033 0.99997L5.2 1H2.8ZM2.38328 2.01382C2.42632 2.00348 2.49222 2 2.8 2H5.2C5.50779 2 5.57369 2.00348 5.61672 2.01382C5.79955 2.05771 5.94229 2.20045 5.98619 2.38328C5.99652 2.42632 6 2.49222 6 2.8V5.2C6 5.50779 5.99652 5.57369 5.98619 5.61672C5.94229 5.79955 5.79955 5.94229 5.61672 5.98619C5.57369 5.99652 5.50779 6 5.2 6H2.8C2.49222 6 2.42632 5.99652 2.38328 5.98619C2.20045 5.94229 2.05771 5.79955 2.01382 5.61672C2.00348 5.57369 2 5.50779 2 5.2V2.8C2 2.49222 2.00348 2.42632 2.01382 2.38328C2.05771 2.20045 2.20045 2.05771 2.38328 2.01382ZM9.8 1L9.74967 0.99997C9.52122 0.999752 9.32429 0.999564 9.14983 1.04145C8.60136 1.17312 8.17312 1.60136 8.04145 2.14983C7.99956 2.32429 7.99975 2.52122 7.99997 2.74967L8 2.8V5.2L7.99997 5.25033C7.99975 5.47878 7.99956 5.67572 8.04145 5.85017C8.17312 6.39864 8.60136 6.82688 9.14983 6.95856C9.32429 7.00044 9.52122 7.00025 9.74967 7.00003L9.8 7H12.2L12.2503 7.00003C12.4788 7.00025 12.6757 7.00044 12.8502 6.95856C13.3986 6.82688 13.8269 6.39864 13.9586 5.85017C14.0004 5.67572 14.0003 5.47878 14 5.25033L14 5.2V2.8L14 2.74967C14.0003 2.52122 14.0004 2.32429 13.9586 2.14983C13.8269 1.60136 13.3986 1.17312 12.8502 1.04145C12.6757 0.999564 12.4788 0.999752 12.2503 0.99997L12.2 1H9.8ZM9.38328 2.01382C9.42632 2.00348 9.49222 2 9.8 2H12.2C12.5078 2 12.5737 2.00348 12.6167 2.01382C12.7995 2.05771 12.9423 2.20045 12.9862 2.38328C12.9965 2.42632 13 2.49222 13 2.8V5.2C13 5.50779 12.9965 5.57369 12.9862 5.61672C12.9423 5.79955 12.7995 5.94229 12.6167 5.98619C12.5737 5.99652 12.5078 6 12.2 6H9.8C9.49222 6 9.42632 5.99652 9.38328 5.98619C9.20045 5.94229 9.05771 5.79955 9.01382 5.61672C9.00348 5.57369 9 5.50779 9 5.2V2.8C9 2.49222 9.00348 2.42632 9.01382 2.38328C9.05771 2.20045 9.20045 2.05771 9.38328 2.01382ZM2.74967 7.99997L2.8 8H5.2L5.25033 7.99997C5.47878 7.99975 5.67572 7.99956 5.85017 8.04145C6.39864 8.17312 6.82688 8.60136 6.95856 9.14983C7.00044 9.32429 7.00025 9.52122 7.00003 9.74967L7 9.8V12.2L7.00003 12.2503C7.00025 12.4788 7.00044 12.6757 6.95856 12.8502C6.82688 13.3986 6.39864 13.8269 5.85017 13.9586C5.67572 14.0004 5.47878 14.0003 5.25033 14L5.2 14H2.8L2.74967 14C2.52122 14.0003 2.32429 14.0004 2.14983 13.9586C1.60136 13.8269 1.17312 13.3986 1.04145 12.8502C0.999564 12.6757 0.999752 12.4788 0.99997 12.2503L1 12.2V9.8L0.99997 9.74967C0.999752 9.52122 0.999564 9.32429 1.04145 9.14983C1.17312 8.60136 1.60136 8.17312 2.14983 8.04145C2.32429 7.99956 2.52122 7.99975 2.74967 7.99997ZM2.8 9C2.49222 9 2.42632 9.00348 2.38328 9.01382C2.20045 9.05771 2.05771 9.20045 2.01382 9.38328C2.00348 9.42632 2 9.49222 2 9.8V12.2C2 12.5078 2.00348 12.5737 2.01382 12.6167C2.05771 12.7995 2.20045 12.9423 2.38328 12.9862C2.42632 12.9965 2.49222 13 2.8 13H5.2C5.50779 13 5.57369 12.9965 5.61672 12.9862C5.79955 12.9423 5.94229 12.7995 5.98619 12.6167C5.99652 12.5737 6 12.5078 6 12.2V9.8C6 9.49222 5.99652 9.42632 5.98619 9.38328C5.94229 9.20045 5.79955 9.05771 5.61672 9.01382C5.57369 9.00348 5.50779 9 5.2 9H2.8ZM9.8 8L9.74967 7.99997C9.52122 7.99975 9.32429 7.99956 9.14983 8.04145C8.60136 8.17312 8.17312 8.60136 8.04145 9.14983C7.99956 9.32429 7.99975 9.52122 7.99997 9.74967L8 9.8V12.2L7.99997 12.2503C7.99975 12.4788 7.99956 12.6757 8.04145 12.8502C8.17312 13.3986 8.60136 13.8269 9.14983 13.9586C9.32429 14.0004 9.52122 14.0003 9.74967 14L9.8 14H12.2L12.2503 14C12.4788 14.0003 12.6757 14.0004 12.8502 13.9586C13.3986 13.8269 13.8269 13.3986 13.9586 12.8502C14.0004 12.6757 14.0003 12.4788 14 12.2503L14 12.2V9.8L14 9.74967C14.0003 9.52122 14.0004 9.32429 13.9586 9.14983C13.8269 8.60136 13.3986 8.17312 12.8502 8.04145C12.6757 7.99956 12.4788 7.99975 12.2503 7.99997L12.2 8H9.8ZM9.38328 9.01382C9.42632 9.00348 9.49222 9 9.8 9H12.2C12.5078 9 12.5737 9.00348 12.6167 9.01382C12.7995 9.05771 12.9423 9.20045 12.9862 9.38328C12.9965 9.42632 13 9.49222 13 9.8V12.2C13 12.5078 12.9965 12.5737 12.9862 12.6167C12.9423 12.7995 12.7995 12.9423 12.6167 12.9862C12.5737 12.9965 12.5078 13 12.2 13H9.8C9.49222 13 9.42632 12.9965 9.38328 12.9862C9.20045 12.9423 9.05771 12.7995 9.01382 12.6167C9.00348 12.5737 9 12.5078 9 12.2V9.8C9 9.49222 9.00348 9.42632 9.01382 9.38328C9.05771 9.20045 9.20045 9.05771 9.38328 9.01382Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DashboardIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DesktopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 3.25C1 3.11193 1.11193 3 1.25 3H13.75C13.8881 3 14 3.11193 14 3.25V10.75C14 10.8881 13.8881 11 13.75 11H1.25C1.11193 11 1 10.8881 1 10.75V3.25ZM1.25 2C0.559643 2 0 2.55964 0 3.25V10.75C0 11.4404 0.559644 12 1.25 12H5.07341L4.82991 13.2986C4.76645 13.6371 5.02612 13.95 5.37049 13.95H9.62951C9.97389 13.95 10.2336 13.6371 10.1701 13.2986L9.92659 12H13.75C14.4404 12 15 11.4404 15 10.75V3.25C15 2.55964 14.4404 2 13.75 2H1.25ZM9.01091 12H5.98909L5.79222 13.05H9.20778L9.01091 12Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DesktopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DimensionsIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.00014 2.73895C3.00014 2.94698 2.76087 3.06401 2.59666 2.93628L1.00386 1.69744C0.875177 1.59735 0.875177 1.40286 1.00386 1.30277L2.59666 0.063928C2.76087 -0.0637944 3.00014 0.0532293 3.00014 0.261266V1.00012H9.00009V0.261296C9.00009 0.0532591 9.23936 -0.0637646 9.40358 0.0639578L10.9964 1.3028C11.1251 1.40289 11.1251 1.59738 10.9964 1.69747L9.40358 2.93631C9.23936 3.06404 9.00009 2.94701 9.00009 2.73898V2.00012H3.00014V2.73895ZM9.50002 4.99998H2.50002C2.22388 4.99998 2.00002 5.22384 2.00002 5.49998V12.5C2.00002 12.7761 2.22388 13 2.50002 13H9.50002C9.77616 13 10 12.7761 10 12.5V5.49998C10 5.22384 9.77616 4.99998 9.50002 4.99998ZM2.50002 3.99998C1.67159 3.99998 1.00002 4.67156 1.00002 5.49998V12.5C1.00002 13.3284 1.67159 14 2.50002 14H9.50002C10.3284 14 11 13.3284 11 12.5V5.49998C11 4.67156 10.3284 3.99998 9.50002 3.99998H2.50002ZM14.7389 6.00001H14V12H14.7389C14.9469 12 15.064 12.2393 14.9362 12.4035L13.6974 13.9963C13.5973 14.125 13.4028 14.125 13.3027 13.9963L12.0639 12.4035C11.9362 12.2393 12.0532 12 12.2612 12H13V6.00001H12.2612C12.0532 6.00001 11.9361 5.76074 12.0639 5.59653L13.3027 4.00373C13.4028 3.87505 13.5973 3.87505 13.6974 4.00374L14.9362 5.59653C15.0639 5.76074 14.9469 6.00001 14.7389 6.00001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DimensionsIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DiscIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.877075C3.84222 0.877075 0.877075 3.84222 0.877075 7.49991C0.877075 11.1576 3.84222 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1576 14.1227 7.49991C14.1227 3.84222 11.1576 0.877075 7.49991 0.877075ZM1.82708 7.49991C1.82708 4.36689 4.36689 1.82707 7.49991 1.82707C10.6329 1.82707 13.1727 4.36689 13.1727 7.49991C13.1727 10.6329 10.6329 13.1727 7.49991 13.1727C4.36689 13.1727 1.82708 10.6329 1.82708 7.49991ZM8.37287 7.50006C8.37287 7.98196 7.98221 8.37263 7.5003 8.37263C7.01839 8.37263 6.62773 7.98196 6.62773 7.50006C6.62773 7.01815 7.01839 6.62748 7.5003 6.62748C7.98221 6.62748 8.37287 7.01815 8.37287 7.50006ZM9.32287 7.50006C9.32287 8.50664 8.50688 9.32263 7.5003 9.32263C6.49372 9.32263 5.67773 8.50664 5.67773 7.50006C5.67773 6.49348 6.49372 5.67748 7.5003 5.67748C8.50688 5.67748 9.32287 6.49348 9.32287 7.50006Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DiscIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DiscordLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.07451 1.82584C5.03267 1.81926 4.99014 1.81825 4.94803 1.82284C4.10683 1.91446 2.82673 2.36828 2.07115 2.77808C2.02106 2.80525 1.97621 2.84112 1.93869 2.88402C1.62502 3.24266 1.34046 3.82836 1.11706 4.38186C0.887447 4.95076 0.697293 5.55032 0.588937 5.98354C0.236232 7.39369 0.042502 9.08728 0.0174948 10.6925C0.0162429 10.7729 0.0351883 10.8523 0.0725931 10.9234C0.373679 11.496 1.02015 12.027 1.66809 12.4152C2.32332 12.8078 3.08732 13.1182 3.70385 13.1778C3.85335 13.1922 4.00098 13.1358 4.10282 13.0255C4.2572 12.8581 4.5193 12.4676 4.71745 12.1643C4.80739 12.0267 4.89157 11.8953 4.95845 11.7901C5.62023 11.9106 6.45043 11.9801 7.50002 11.9801C8.54844 11.9801 9.37796 11.9107 10.0394 11.7905C10.1062 11.8957 10.1903 12.0269 10.2801 12.1643C10.4783 12.4676 10.7404 12.8581 10.8947 13.0255C10.9966 13.1358 11.1442 13.1922 11.2937 13.1778C11.9102 13.1182 12.6742 12.8078 13.3295 12.4152C13.9774 12.027 14.6239 11.496 14.925 10.9234C14.9624 10.8523 14.9813 10.7729 14.9801 10.6925C14.9551 9.08728 14.7613 7.39369 14.4086 5.98354C14.3003 5.55032 14.1101 4.95076 13.8805 4.38186C13.6571 3.82836 13.3725 3.24266 13.0589 2.88402C13.0214 2.84112 12.9765 2.80525 12.9264 2.77808C12.1708 2.36828 10.8907 1.91446 10.0495 1.82284C10.0074 1.81825 9.96489 1.81926 9.92305 1.82584C9.71676 1.85825 9.5391 1.96458 9.40809 2.06355C9.26977 2.16804 9.1413 2.29668 9.0304 2.42682C8.86968 2.61544 8.71437 2.84488 8.61428 3.06225C8.27237 3.03501 7.90138 3.02 7.5 3.02C7.0977 3.02 6.72593 3.03508 6.38337 3.06244C6.28328 2.84501 6.12792 2.61549 5.96716 2.42682C5.85626 2.29668 5.72778 2.16804 5.58947 2.06355C5.45846 1.96458 5.2808 1.85825 5.07451 1.82584ZM11.0181 11.5382C11.0395 11.5713 11.0615 11.6051 11.0838 11.6392C11.2169 11.843 11.3487 12.0385 11.4508 12.1809C11.8475 12.0916 12.352 11.8818 12.8361 11.5917C13.3795 11.2661 13.8098 10.8918 14.0177 10.5739C13.9852 9.06758 13.7993 7.50369 13.4773 6.21648C13.38 5.82759 13.2038 5.27021 12.9903 4.74117C12.7893 4.24326 12.5753 3.82162 12.388 3.5792C11.7376 3.24219 10.7129 2.88582 10.0454 2.78987C10.0308 2.79839 10.0113 2.81102 9.98675 2.82955C9.91863 2.881 9.84018 2.95666 9.76111 3.04945C9.71959 3.09817 9.68166 3.1471 9.64768 3.19449C9.953 3.25031 10.2253 3.3171 10.4662 3.39123C11.1499 3.6016 11.6428 3.89039 11.884 4.212C12.0431 4.42408 12.0001 4.72494 11.788 4.884C11.5759 5.04306 11.2751 5.00008 11.116 4.788C11.0572 4.70961 10.8001 4.4984 10.1838 4.30877C9.58933 4.12585 8.71356 3.98 7.5 3.98C6.28644 3.98 5.41067 4.12585 4.81616 4.30877C4.19988 4.4984 3.94279 4.70961 3.884 4.788C3.72494 5.00008 3.42408 5.04306 3.212 4.884C2.99992 4.72494 2.95694 4.42408 3.116 4.212C3.35721 3.89039 3.85011 3.6016 4.53383 3.39123C4.77418 3.31727 5.04571 3.25062 5.35016 3.19488C5.31611 3.14738 5.27808 3.09831 5.23645 3.04945C5.15738 2.95666 5.07893 2.881 5.01081 2.82955C4.98628 2.81102 4.96674 2.79839 4.95217 2.78987C4.28464 2.88582 3.25999 3.24219 2.60954 3.5792C2.42226 3.82162 2.20825 4.24326 2.00729 4.74117C1.79376 5.27021 1.61752 5.82759 1.52025 6.21648C1.19829 7.50369 1.01236 9.06758 0.97986 10.5739C1.18772 10.8918 1.61807 11.2661 2.16148 11.5917C2.64557 11.8818 3.15003 12.0916 3.5468 12.1809C3.64885 12.0385 3.78065 11.843 3.9138 11.6392C3.93626 11.6048 3.95838 11.5708 3.97996 11.5375C3.19521 11.2591 2.77361 10.8758 2.50064 10.4664C2.35359 10.2458 2.4132 9.94778 2.63377 9.80074C2.85435 9.65369 3.15236 9.71329 3.29941 9.93387C3.56077 10.3259 4.24355 11.0201 7.50002 11.0201C10.7565 11.0201 11.4392 10.326 11.7006 9.93386C11.8477 9.71329 12.1457 9.65369 12.3663 9.80074C12.5869 9.94779 12.6465 10.2458 12.4994 10.4664C12.2262 10.8762 11.8041 11.2598 11.0181 11.5382ZM4.08049 7.01221C4.32412 6.74984 4.65476 6.60162 5.00007 6.59998C5.34538 6.60162 5.67603 6.74984 5.91966 7.01221C6.16329 7.27459 6.30007 7.62974 6.30007 7.99998C6.30007 8.37021 6.16329 8.72536 5.91966 8.98774C5.67603 9.25011 5.34538 9.39833 5.00007 9.39998C4.65476 9.39833 4.32412 9.25011 4.08049 8.98774C3.83685 8.72536 3.70007 8.37021 3.70007 7.99998C3.70007 7.62974 3.83685 7.27459 4.08049 7.01221ZM9.99885 6.59998C9.65354 6.60162 9.3229 6.74984 9.07926 7.01221C8.83563 7.27459 8.69885 7.62974 8.69885 7.99998C8.69885 8.37021 8.83563 8.72536 9.07926 8.98774C9.3229 9.25011 9.65354 9.39833 9.99885 9.39998C10.3442 9.39833 10.6748 9.25011 10.9184 8.98774C11.1621 8.72536 11.2989 8.37021 11.2989 7.99998C11.2989 7.62974 11.1621 7.27459 10.9184 7.01221C10.6748 6.74984 10.3442 6.60162 9.99885 6.59998Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DiscordLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DividerHorizontalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 7.5C2 7.22386 2.22386 7 2.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H2.5C2.22386 8 2 7.77614 2 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DividerHorizontalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DividerVerticalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 2C7.77614 2 8 2.22386 8 2.5L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 2.5C7 2.22386 7.22386 2 7.5 2Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DividerVerticalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DotIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 9.125C8.39746 9.125 9.125 8.39746 9.125 7.5C9.125 6.60254 8.39746 5.875 7.5 5.875C6.60254 5.875 5.875 6.60254 5.875 7.5C5.875 8.39746 6.60254 9.125 7.5 9.125ZM7.5 10.125C8.94975 10.125 10.125 8.94975 10.125 7.5C10.125 6.05025 8.94975 4.875 7.5 4.875C6.05025 4.875 4.875 6.05025 4.875 7.5C4.875 8.94975 6.05025 10.125 7.5 10.125Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DotIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DotFilledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.875 7.5C9.875 8.81168 8.81168 9.875 7.5 9.875C6.18832 9.875 5.125 8.81168 5.125 7.5C5.125 6.18832 6.18832 5.125 7.5 5.125C8.81168 5.125 9.875 6.18832 9.875 7.5Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DotFilledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DotsHorizontalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.625 7.5C3.625 8.12132 3.12132 8.625 2.5 8.625C1.87868 8.625 1.375 8.12132 1.375 7.5C1.375 6.87868 1.87868 6.375 2.5 6.375C3.12132 6.375 3.625 6.87868 3.625 7.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM12.5 8.625C13.1213 8.625 13.625 8.12132 13.625 7.5C13.625 6.87868 13.1213 6.375 12.5 6.375C11.8787 6.375 11.375 6.87868 11.375 7.5C11.375 8.12132 11.8787 8.625 12.5 8.625Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DotsHorizontalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DotsVerticalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.625 2.5C8.625 3.12132 8.12132 3.625 7.5 3.625C6.87868 3.625 6.375 3.12132 6.375 2.5C6.375 1.87868 6.87868 1.375 7.5 1.375C8.12132 1.375 8.625 1.87868 8.625 2.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM7.5 13.625C8.12132 13.625 8.625 13.1213 8.625 12.5C8.625 11.8787 8.12132 11.375 7.5 11.375C6.87868 11.375 6.375 11.8787 6.375 12.5C6.375 13.1213 6.87868 13.625 7.5 13.625Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DotsVerticalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DoubleArrowDownIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.85355 2.14645C3.65829 1.95118 3.34171 1.95118 3.14645 2.14645C2.95118 2.34171 2.95118 2.65829 3.14645 2.85355L7.14645 6.85355C7.34171 7.04882 7.65829 7.04882 7.85355 6.85355L11.8536 2.85355C12.0488 2.65829 12.0488 2.34171 11.8536 2.14645C11.6583 1.95118 11.3417 1.95118 11.1464 2.14645L7.5 5.79289L3.85355 2.14645ZM3.85355 8.14645C3.65829 7.95118 3.34171 7.95118 3.14645 8.14645C2.95118 8.34171 2.95118 8.65829 3.14645 8.85355L7.14645 12.8536C7.34171 13.0488 7.65829 13.0488 7.85355 12.8536L11.8536 8.85355C12.0488 8.65829 12.0488 8.34171 11.8536 8.14645C11.6583 7.95118 11.3417 7.95118 11.1464 8.14645L7.5 11.7929L3.85355 8.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DoubleArrowDownIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DoubleArrowLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.85355 3.85355C7.04882 3.65829 7.04882 3.34171 6.85355 3.14645C6.65829 2.95118 6.34171 2.95118 6.14645 3.14645L2.14645 7.14645C1.95118 7.34171 1.95118 7.65829 2.14645 7.85355L6.14645 11.8536C6.34171 12.0488 6.65829 12.0488 6.85355 11.8536C7.04882 11.6583 7.04882 11.3417 6.85355 11.1464L3.20711 7.5L6.85355 3.85355ZM12.8536 3.85355C13.0488 3.65829 13.0488 3.34171 12.8536 3.14645C12.6583 2.95118 12.3417 2.95118 12.1464 3.14645L8.14645 7.14645C7.95118 7.34171 7.95118 7.65829 8.14645 7.85355L12.1464 11.8536C12.3417 12.0488 12.6583 12.0488 12.8536 11.8536C13.0488 11.6583 13.0488 11.3417 12.8536 11.1464L9.20711 7.5L12.8536 3.85355Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DoubleArrowLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DoubleArrowRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.14645 11.1464C1.95118 11.3417 1.95118 11.6583 2.14645 11.8536C2.34171 12.0488 2.65829 12.0488 2.85355 11.8536L6.85355 7.85355C7.04882 7.65829 7.04882 7.34171 6.85355 7.14645L2.85355 3.14645C2.65829 2.95118 2.34171 2.95118 2.14645 3.14645C1.95118 3.34171 1.95118 3.65829 2.14645 3.85355L5.79289 7.5L2.14645 11.1464ZM8.14645 11.1464C7.95118 11.3417 7.95118 11.6583 8.14645 11.8536C8.34171 12.0488 8.65829 12.0488 8.85355 11.8536L12.8536 7.85355C13.0488 7.65829 13.0488 7.34171 12.8536 7.14645L8.85355 3.14645C8.65829 2.95118 8.34171 2.95118 8.14645 3.14645C7.95118 3.34171 7.95118 3.65829 8.14645 3.85355L11.7929 7.5L8.14645 11.1464Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DoubleArrowRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DoubleArrowUpIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.1464 6.85355C11.3417 7.04882 11.6583 7.04882 11.8536 6.85355C12.0488 6.65829 12.0488 6.34171 11.8536 6.14645L7.85355 2.14645C7.65829 1.95118 7.34171 1.95118 7.14645 2.14645L3.14645 6.14645C2.95118 6.34171 2.95118 6.65829 3.14645 6.85355C3.34171 7.04882 3.65829 7.04882 3.85355 6.85355L7.5 3.20711L11.1464 6.85355ZM11.1464 12.8536C11.3417 13.0488 11.6583 13.0488 11.8536 12.8536C12.0488 12.6583 12.0488 12.3417 11.8536 12.1464L7.85355 8.14645C7.65829 7.95118 7.34171 7.95118 7.14645 8.14645L3.14645 12.1464C2.95118 12.3417 2.95118 12.6583 3.14645 12.8536C3.34171 13.0488 3.65829 13.0488 3.85355 12.8536L7.5 9.20711L11.1464 12.8536Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DoubleArrowUpIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DownloadIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.50005 1.04999C7.74858 1.04999 7.95005 1.25146 7.95005 1.49999V8.41359L10.1819 6.18179C10.3576 6.00605 10.6425 6.00605 10.8182 6.18179C10.994 6.35753 10.994 6.64245 10.8182 6.81819L7.81825 9.81819C7.64251 9.99392 7.35759 9.99392 7.18185 9.81819L4.18185 6.81819C4.00611 6.64245 4.00611 6.35753 4.18185 6.18179C4.35759 6.00605 4.64251 6.00605 4.81825 6.18179L7.05005 8.41359V1.49999C7.05005 1.25146 7.25152 1.04999 7.50005 1.04999ZM2.5 10C2.77614 10 3 10.2239 3 10.5V12C3 12.5539 3.44565 13 3.99635 13H11.0012C11.5529 13 12 12.5528 12 12V10.5C12 10.2239 12.2239 10 12.5 10C12.7761 10 13 10.2239 13 10.5V12C13 13.1041 12.1062 14 11.0012 14H3.99635C2.89019 14 2 13.103 2 12V10.5C2 10.2239 2.22386 10 2.5 10Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DownloadIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DragHandleDots1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <circle cx=\"4.5\" cy=\"2.5\" r=\".6\" fill={color} />\n        <circle cx=\"4.5\" cy=\"4.5\" r=\".6\" fill={color} />\n        <circle cx=\"4.5\" cy=\"6.499\" r=\".6\" fill={color} />\n        <circle cx=\"4.5\" cy=\"8.499\" r=\".6\" fill={color} />\n        <circle cx=\"4.5\" cy=\"10.498\" r=\".6\" fill={color} />\n        <circle cx=\"4.5\" cy=\"12.498\" r=\".6\" fill={color} />\n        <circle cx=\"6.5\" cy=\"2.5\" r=\".6\" fill={color} />\n        <circle cx=\"6.5\" cy=\"4.5\" r=\".6\" fill={color} />\n        <circle cx=\"6.5\" cy=\"6.499\" r=\".6\" fill={color} />\n        <circle cx=\"6.5\" cy=\"8.499\" r=\".6\" fill={color} />\n        <circle cx=\"6.5\" cy=\"10.498\" r=\".6\" fill={color} />\n        <circle cx=\"6.5\" cy=\"12.498\" r=\".6\" fill={color} />\n        <circle cx=\"8.499\" cy=\"2.5\" r=\".6\" fill={color} />\n        <circle cx=\"8.499\" cy=\"4.5\" r=\".6\" fill={color} />\n        <circle cx=\"8.499\" cy=\"6.499\" r=\".6\" fill={color} />\n        <circle cx=\"8.499\" cy=\"8.499\" r=\".6\" fill={color} />\n        <circle cx=\"8.499\" cy=\"10.498\" r=\".6\" fill={color} />\n        <circle cx=\"8.499\" cy=\"12.498\" r=\".6\" fill={color} />\n        <circle cx=\"10.499\" cy=\"2.5\" r=\".6\" fill={color} />\n        <circle cx=\"10.499\" cy=\"4.5\" r=\".6\" fill={color} />\n        <circle cx=\"10.499\" cy=\"6.499\" r=\".6\" fill={color} />\n        <circle cx=\"10.499\" cy=\"8.499\" r=\".6\" fill={color} />\n        <circle cx=\"10.499\" cy=\"10.498\" r=\".6\" fill={color} />\n        <circle cx=\"10.499\" cy=\"12.498\" r=\".6\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default DragHandleDots1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DragHandleDots2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.5 4.625C6.12132 4.625 6.625 4.12132 6.625 3.5C6.625 2.87868 6.12132 2.375 5.5 2.375C4.87868 2.375 4.375 2.87868 4.375 3.5C4.375 4.12132 4.87868 4.625 5.5 4.625ZM9.5 4.625C10.1213 4.625 10.625 4.12132 10.625 3.5C10.625 2.87868 10.1213 2.375 9.5 2.375C8.87868 2.375 8.375 2.87868 8.375 3.5C8.375 4.12132 8.87868 4.625 9.5 4.625ZM10.625 7.5C10.625 8.12132 10.1213 8.625 9.5 8.625C8.87868 8.625 8.375 8.12132 8.375 7.5C8.375 6.87868 8.87868 6.375 9.5 6.375C10.1213 6.375 10.625 6.87868 10.625 7.5ZM5.5 8.625C6.12132 8.625 6.625 8.12132 6.625 7.5C6.625 6.87868 6.12132 6.375 5.5 6.375C4.87868 6.375 4.375 6.87868 4.375 7.5C4.375 8.12132 4.87868 8.625 5.5 8.625ZM10.625 11.5C10.625 12.1213 10.1213 12.625 9.5 12.625C8.87868 12.625 8.375 12.1213 8.375 11.5C8.375 10.8787 8.87868 10.375 9.5 10.375C10.1213 10.375 10.625 10.8787 10.625 11.5ZM5.5 12.625C6.12132 12.625 6.625 12.1213 6.625 11.5C6.625 10.8787 6.12132 10.375 5.5 10.375C4.87868 10.375 4.375 10.8787 4.375 11.5C4.375 12.1213 4.87868 12.625 5.5 12.625Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DragHandleDots2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DragHandleHorizontalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.49998 4.09998C2.27906 4.09998 2.09998 4.27906 2.09998 4.49998C2.09998 4.72089 2.27906 4.89998 2.49998 4.89998H12.5C12.7209 4.89998 12.9 4.72089 12.9 4.49998C12.9 4.27906 12.7209 4.09998 12.5 4.09998H2.49998ZM2.49998 6.09998C2.27906 6.09998 2.09998 6.27906 2.09998 6.49998C2.09998 6.72089 2.27906 6.89998 2.49998 6.89998H12.5C12.7209 6.89998 12.9 6.72089 12.9 6.49998C12.9 6.27906 12.7209 6.09998 12.5 6.09998H2.49998ZM2.09998 8.49998C2.09998 8.27906 2.27906 8.09998 2.49998 8.09998H12.5C12.7209 8.09998 12.9 8.27906 12.9 8.49998C12.9 8.72089 12.7209 8.89998 12.5 8.89998H2.49998C2.27906 8.89998 2.09998 8.72089 2.09998 8.49998ZM2.49998 10.1C2.27906 10.1 2.09998 10.2791 2.09998 10.5C2.09998 10.7209 2.27906 10.9 2.49998 10.9H12.5C12.7209 10.9 12.9 10.7209 12.9 10.5C12.9 10.2791 12.7209 10.1 12.5 10.1H2.49998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DragHandleHorizontalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DragHandleVerticalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.09998 12.5C4.09998 12.7209 4.27906 12.9 4.49998 12.9C4.72089 12.9 4.89998 12.7209 4.89998 12.5L4.89998 2.50002C4.89998 2.27911 4.72089 2.10003 4.49998 2.10003C4.27906 2.10003 4.09998 2.27911 4.09998 2.50002L4.09998 12.5ZM6.09998 12.5C6.09998 12.7209 6.27906 12.9 6.49998 12.9C6.72089 12.9 6.89998 12.7209 6.89998 12.5L6.89998 2.50002C6.89998 2.27911 6.72089 2.10003 6.49998 2.10003C6.27906 2.10003 6.09998 2.27911 6.09998 2.50002L6.09998 12.5ZM8.49998 12.9C8.27906 12.9 8.09998 12.7209 8.09998 12.5L8.09998 2.50002C8.09998 2.27911 8.27906 2.10002 8.49998 2.10002C8.72089 2.10002 8.89998 2.27911 8.89998 2.50002L8.89998 12.5C8.89998 12.7209 8.72089 12.9 8.49998 12.9ZM10.1 12.5C10.1 12.7209 10.2791 12.9 10.5 12.9C10.7209 12.9 10.9 12.7209 10.9 12.5L10.9 2.50002C10.9 2.27911 10.7209 2.10002 10.5 2.10002C10.2791 2.10002 10.1 2.27911 10.1 2.50002L10.1 12.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DragHandleVerticalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DrawingPinIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10.3285 1.13607C10.1332 0.940809 9.81662 0.940808 9.62136 1.13607C9.42609 1.33133 9.42609 1.64792 9.62136 1.84318L10.2744 2.49619L5.42563 6.13274L4.31805 5.02516C4.12279 4.8299 3.80621 4.8299 3.61095 5.02516C3.41569 5.22042 3.41569 5.537 3.61095 5.73226L5.02516 7.14648L6.08582 8.20714L2.81545 11.4775C2.62019 11.6728 2.62019 11.9894 2.81545 12.1846C3.01072 12.3799 3.3273 12.3799 3.52256 12.1846L6.79293 8.91425L7.85359 9.97491L9.2678 11.3891C9.46306 11.5844 9.77965 11.5844 9.97491 11.3891C10.1702 11.1939 10.1702 10.8773 9.97491 10.682L8.86733 9.57443L12.5039 4.7257L13.1569 5.37871C13.3522 5.57397 13.6687 5.57397 13.864 5.37871C14.0593 5.18345 14.0593 4.86687 13.864 4.6716L12.8033 3.61094L11.3891 2.19673L10.3285 1.13607ZM6.13992 6.84702L10.9887 3.21047L11.7896 4.01142L8.15305 8.86015L6.13992 6.84702Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DrawingPinIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DrawingPinFilledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.62129 1.13607C9.81656 0.940808 10.1331 0.940809 10.3284 1.13607L11.3891 2.19673L12.8033 3.61094L13.8639 4.6716C14.0592 4.86687 14.0592 5.18345 13.8639 5.37871C13.6687 5.57397 13.3521 5.57397 13.1568 5.37871L12.5038 4.7257L8.86727 9.57443L9.97485 10.682C10.1701 10.8773 10.1701 11.1939 9.97485 11.3891C9.77959 11.5844 9.463 11.5844 9.26774 11.3891L7.85353 9.97491L6.79287 8.91425L3.5225 12.1846C3.32724 12.3799 3.01065 12.3799 2.81539 12.1846C2.62013 11.9894 2.62013 11.6728 2.81539 11.4775L6.08576 8.20714L5.0251 7.14648L3.61089 5.73226C3.41563 5.537 3.41562 5.22042 3.61089 5.02516C3.80615 4.8299 4.12273 4.8299 4.31799 5.02516L5.42557 6.13274L10.2743 2.49619L9.62129 1.84318C9.42603 1.64792 9.42603 1.33133 9.62129 1.13607Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M9.62129 1.13607C9.81656 0.940808 10.1331 0.940809 10.3284 1.13607L11.3891 2.19673L12.8033 3.61094L13.8639 4.6716C14.0592 4.86687 14.0592 5.18345 13.8639 5.37871C13.6687 5.57397 13.3521 5.57397 13.1568 5.37871L12.5038 4.7257L8.86727 9.57443L9.97485 10.682C10.1701 10.8773 10.1701 11.1939 9.97485 11.3891C9.77959 11.5844 9.463 11.5844 9.26774 11.3891L7.85353 9.97491L6.79287 8.91425L3.5225 12.1846C3.32724 12.3799 3.01065 12.3799 2.81539 12.1846C2.62013 11.9894 2.62013 11.6728 2.81539 11.4775L6.08576 8.20714L5.0251 7.14648L3.61089 5.73226C3.41563 5.537 3.41562 5.22042 3.61089 5.02516C3.80615 4.8299 4.12273 4.8299 4.31799 5.02516L5.42557 6.13274L10.2743 2.49619L9.62129 1.84318C9.42603 1.64792 9.42603 1.33133 9.62129 1.13607Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DrawingPinFilledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const DropdownMenuIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49999 3.09998C7.27907 3.09998 7.09999 3.27906 7.09999 3.49998C7.09999 3.72089 7.27907 3.89998 7.49999 3.89998H14.5C14.7209 3.89998 14.9 3.72089 14.9 3.49998C14.9 3.27906 14.7209 3.09998 14.5 3.09998H7.49999ZM7.49998 5.1C7.27907 5.1 7.09998 5.27908 7.09998 5.5C7.09998 5.72091 7.27907 5.9 7.49998 5.9H14.5C14.7209 5.9 14.9 5.72091 14.9 5.5C14.9 5.27908 14.7209 5.1 14.5 5.1H7.49998ZM7.1 7.5C7.1 7.27908 7.27909 7.1 7.5 7.1H14.5C14.7209 7.1 14.9 7.27908 14.9 7.5C14.9 7.72091 14.7209 7.9 14.5 7.9H7.5C7.27909 7.9 7.1 7.72091 7.1 7.5ZM7.49998 9.1C7.27907 9.1 7.09998 9.27908 7.09998 9.5C7.09998 9.72091 7.27907 9.9 7.49998 9.9H14.5C14.7209 9.9 14.9 9.72091 14.9 9.5C14.9 9.27908 14.7209 9.1 14.5 9.1H7.49998ZM7.09998 11.5C7.09998 11.2791 7.27907 11.1 7.49998 11.1H14.5C14.7209 11.1 14.9 11.2791 14.9 11.5C14.9 11.7209 14.7209 11.9 14.5 11.9H7.49998C7.27907 11.9 7.09998 11.7209 7.09998 11.5ZM2.5 9.25003L5 6.00003H0L2.5 9.25003Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default DropdownMenuIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EnterIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.5 1C4.22386 1 4 1.22386 4 1.5C4 1.77614 4.22386 2 4.5 2H12V13H4.5C4.22386 13 4 13.2239 4 13.5C4 13.7761 4.22386 14 4.5 14H12C12.5523 14 13 13.5523 13 13V2C13 1.44772 12.5523 1 12 1H4.5ZM6.60355 4.89645C6.40829 4.70118 6.09171 4.70118 5.89645 4.89645C5.70118 5.09171 5.70118 5.40829 5.89645 5.60355L7.29289 7H0.5C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H7.29289L5.89645 9.39645C5.70118 9.59171 5.70118 9.90829 5.89645 10.1036C6.09171 10.2988 6.40829 10.2988 6.60355 10.1036L8.85355 7.85355C9.04882 7.65829 9.04882 7.34171 8.85355 7.14645L6.60355 4.89645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EnterIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EnterFullScreenIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 2.5C2 2.22386 2.22386 2 2.5 2H5.5C5.77614 2 6 2.22386 6 2.5C6 2.77614 5.77614 3 5.5 3H3V5.5C3 5.77614 2.77614 6 2.5 6C2.22386 6 2 5.77614 2 5.5V2.5ZM9 2.5C9 2.22386 9.22386 2 9.5 2H12.5C12.7761 2 13 2.22386 13 2.5V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3H9.5C9.22386 3 9 2.77614 9 2.5ZM2.5 9C2.77614 9 3 9.22386 3 9.5V12H5.5C5.77614 12 6 12.2239 6 12.5C6 12.7761 5.77614 13 5.5 13H2.5C2.22386 13 2 12.7761 2 12.5V9.5C2 9.22386 2.22386 9 2.5 9ZM12.5 9C12.7761 9 13 9.22386 13 9.5V12.5C13 12.7761 12.7761 13 12.5 13H9.5C9.22386 13 9 12.7761 9 12.5C9 12.2239 9.22386 12 9.5 12H12V9.5C12 9.22386 12.2239 9 12.5 9Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EnterFullScreenIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EnvelopeClosedIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 2C0.447715 2 0 2.44772 0 3V12C0 12.5523 0.447715 13 1 13H14C14.5523 13 15 12.5523 15 12V3C15 2.44772 14.5523 2 14 2H1ZM1 3L14 3V3.92494C13.9174 3.92486 13.8338 3.94751 13.7589 3.99505L7.5 7.96703L1.24112 3.99505C1.16621 3.94751 1.0826 3.92486 1 3.92494V3ZM1 4.90797V12H14V4.90797L7.74112 8.87995C7.59394 8.97335 7.40606 8.97335 7.25888 8.87995L1 4.90797Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EnvelopeClosedIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EnvelopeOpenIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.94721 0.164594C7.66569 0.0238299 7.33431 0.0238302 7.05279 0.164594L0.552786 3.41459C0.214002 3.58399 0 3.93025 0 4.30902V12C0 12.5523 0.447715 13 1 13H14C14.5523 13 15 12.5523 15 12V4.30902C15 3.93025 14.786 3.58399 14.4472 3.41459L7.94721 0.164594ZM13.5689 4.09349L7.5 1.05902L1.43105 4.09349L7.5 7.29136L13.5689 4.09349ZM1 4.88366V12H14V4.88366L7.70977 8.19813C7.57848 8.26731 7.42152 8.26731 7.29023 8.19813L1 4.88366Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EnvelopeOpenIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EraserIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.36052 0.72921C8.55578 0.533948 8.87236 0.533948 9.06763 0.72921L14.2708 5.93235C14.466 6.12761 14.466 6.4442 14.2708 6.63946L8.95513 11.9551L7.3466 13.5636C6.76081 14.1494 5.81106 14.1494 5.22528 13.5636L1.43635 9.7747C0.850563 9.18891 0.850563 8.23917 1.43635 7.65338L3.04488 6.04485L8.36052 0.72921ZM8.71407 1.78987L4.10554 6.3984L8.60157 10.8944L13.2101 6.28591L8.71407 1.78987ZM7.89447 11.6015L3.39843 7.10551L2.14346 8.36049C1.94819 8.55575 1.94819 8.87233 2.14346 9.06759L5.93238 12.8565C6.12765 13.0518 6.44423 13.0518 6.63949 12.8565L7.89447 11.6015Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EraserIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ExclamationTriangleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.4449 0.608765C8.0183 -0.107015 6.9817 -0.107015 6.55509 0.608766L0.161178 11.3368C-0.275824 12.07 0.252503 13 1.10608 13H13.8939C14.7475 13 15.2758 12.07 14.8388 11.3368L8.4449 0.608765ZM7.4141 1.12073C7.45288 1.05566 7.54712 1.05566 7.5859 1.12073L13.9798 11.8488C14.0196 11.9154 13.9715 12 13.8939 12H1.10608C1.02849 12 0.980454 11.9154 1.02018 11.8488L7.4141 1.12073ZM6.8269 4.48611C6.81221 4.10423 7.11783 3.78663 7.5 3.78663C7.88217 3.78663 8.18778 4.10423 8.1731 4.48612L8.01921 8.48701C8.00848 8.766 7.7792 8.98664 7.5 8.98664C7.2208 8.98664 6.99151 8.766 6.98078 8.48701L6.8269 4.48611ZM8.24989 10.476C8.24989 10.8902 7.9141 11.226 7.49989 11.226C7.08567 11.226 6.74989 10.8902 6.74989 10.476C6.74989 10.0618 7.08567 9.72599 7.49989 9.72599C7.9141 9.72599 8.24989 10.0618 8.24989 10.476Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ExclamationTriangleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ExitIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 1C2.44771 1 2 1.44772 2 2V13C2 13.5523 2.44772 14 3 14H10.5C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13H3V2L10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1H3ZM12.6036 4.89645C12.4083 4.70118 12.0917 4.70118 11.8964 4.89645C11.7012 5.09171 11.7012 5.40829 11.8964 5.60355L13.2929 7H6.5C6.22386 7 6 7.22386 6 7.5C6 7.77614 6.22386 8 6.5 8H13.2929L11.8964 9.39645C11.7012 9.59171 11.7012 9.90829 11.8964 10.1036C12.0917 10.2988 12.4083 10.2988 12.6036 10.1036L14.8536 7.85355C15.0488 7.65829 15.0488 7.34171 14.8536 7.14645L12.6036 4.89645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ExitIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ExitFullScreenIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.5 2C5.77614 2 6 2.22386 6 2.5V5.5C6 5.77614 5.77614 6 5.5 6H2.5C2.22386 6 2 5.77614 2 5.5C2 5.22386 2.22386 5 2.5 5H5V2.5C5 2.22386 5.22386 2 5.5 2ZM9.5 2C9.77614 2 10 2.22386 10 2.5V5H12.5C12.7761 5 13 5.22386 13 5.5C13 5.77614 12.7761 6 12.5 6H9.5C9.22386 6 9 5.77614 9 5.5V2.5C9 2.22386 9.22386 2 9.5 2ZM2 9.5C2 9.22386 2.22386 9 2.5 9H5.5C5.77614 9 6 9.22386 6 9.5V12.5C6 12.7761 5.77614 13 5.5 13C5.22386 13 5 12.7761 5 12.5V10H2.5C2.22386 10 2 9.77614 2 9.5ZM9 9.5C9 9.22386 9.22386 9 9.5 9H12.5C12.7761 9 13 9.22386 13 9.5C13 9.77614 12.7761 10 12.5 10H10V12.5C10 12.7761 9.77614 13 9.5 13C9.22386 13 9 12.7761 9 12.5V9.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ExitFullScreenIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ExternalLinkIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ExternalLinkIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EyeClosedIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14.7649 6.07596C14.9991 6.22231 15.0703 6.53079 14.9239 6.76495C14.4849 7.46743 13.9632 8.10645 13.3702 8.66305L14.5712 9.86406C14.7664 10.0593 14.7664 10.3759 14.5712 10.5712C14.3759 10.7664 14.0593 10.7664 13.8641 10.5712L12.6011 9.30817C11.805 9.90283 10.9089 10.3621 9.93375 10.651L10.383 12.3277C10.4544 12.5944 10.2961 12.8685 10.0294 12.94C9.76267 13.0115 9.4885 12.8532 9.41704 12.5865L8.95917 10.8775C8.48743 10.958 8.00036 10.9999 7.50001 10.9999C6.99965 10.9999 6.51257 10.958 6.04082 10.8775L5.58299 12.5864C5.51153 12.8532 5.23737 13.0115 4.97064 12.94C4.7039 12.8686 4.5456 12.5944 4.61706 12.3277L5.06625 10.651C4.09111 10.3621 3.19503 9.90282 2.3989 9.30815L1.1359 10.5712C0.940638 10.7664 0.624058 10.7664 0.428798 10.5712C0.233537 10.3759 0.233537 10.0593 0.428798 9.86405L1.62982 8.66303C1.03682 8.10643 0.515113 7.46742 0.0760677 6.76495C-0.0702867 6.53079 0.000898544 6.22231 0.235065 6.07596C0.469231 5.9296 0.777703 6.00079 0.924058 6.23496C1.40354 7.00213 1.989 7.68057 2.66233 8.2427C2.67315 8.25096 2.6837 8.25972 2.69397 8.26898C4.00897 9.35527 5.65537 9.99991 7.50001 9.99991C10.3078 9.99991 12.6564 8.5063 14.076 6.23495C14.2223 6.00079 14.5308 5.9296 14.7649 6.07596Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EyeClosedIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EyeNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.3536 2.35355C13.5488 2.15829 13.5488 1.84171 13.3536 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L10.6828 3.61012C9.70652 3.21671 8.63759 3 7.5 3C4.30786 3 1.65639 4.70638 0.0760002 7.23501C-0.0253338 7.39715 -0.0253334 7.60288 0.0760014 7.76501C0.902945 9.08812 2.02314 10.1861 3.36061 10.9323L1.64645 12.6464C1.45118 12.8417 1.45118 13.1583 1.64645 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L4.31723 11.3899C5.29348 11.7833 6.36241 12 7.5 12C10.6921 12 13.3436 10.2936 14.924 7.76501C15.0253 7.60288 15.0253 7.39715 14.924 7.23501C14.0971 5.9119 12.9769 4.81391 11.6394 4.06771L13.3536 2.35355ZM9.90428 4.38861C9.15332 4.1361 8.34759 4 7.5 4C4.80285 4 2.52952 5.37816 1.09622 7.50001C1.87284 8.6497 2.89609 9.58106 4.09974 10.1931L9.90428 4.38861ZM5.09572 10.6114L10.9003 4.80685C12.1039 5.41894 13.1272 6.35031 13.9038 7.50001C12.4705 9.62183 10.1971 11 7.5 11C6.65241 11 5.84668 10.8639 5.09572 10.6114Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EyeNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const EyeOpenIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 11C4.80285 11 2.52952 9.62184 1.09622 7.50001C2.52952 5.37816 4.80285 4 7.5 4C10.1971 4 12.4705 5.37816 13.9038 7.50001C12.4705 9.62183 10.1971 11 7.5 11ZM7.5 3C4.30786 3 1.65639 4.70638 0.0760002 7.23501C-0.0253338 7.39715 -0.0253334 7.60288 0.0760014 7.76501C1.65639 10.2936 4.30786 12 7.5 12C10.6921 12 13.3436 10.2936 14.924 7.76501C15.0253 7.60288 15.0253 7.39715 14.924 7.23501C13.3436 4.70638 10.6921 3 7.5 3ZM7.5 9.5C8.60457 9.5 9.5 8.60457 9.5 7.5C9.5 6.39543 8.60457 5.5 7.5 5.5C6.39543 5.5 5.5 6.39543 5.5 7.5C5.5 8.60457 6.39543 9.5 7.5 9.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default EyeOpenIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FaceIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82708 7.49972C1.82708 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82708 10.6327 1.82708 7.49972ZM5.03747 9.21395C4.87949 8.98746 4.56782 8.93193 4.34133 9.08991C4.11484 9.24789 4.05931 9.55956 4.21729 9.78605C4.93926 10.8211 6.14033 11.5 7.50004 11.5C8.85974 11.5 10.0608 10.8211 10.7828 9.78605C10.9408 9.55956 10.8852 9.24789 10.6587 9.08991C10.4323 8.93193 10.1206 8.98746 9.9626 9.21395C9.41963 9.99238 8.51907 10.5 7.50004 10.5C6.481 10.5 5.58044 9.99238 5.03747 9.21395ZM5.37503 6.84998C5.85828 6.84998 6.25003 6.45815 6.25003 5.97498C6.25003 5.4918 5.85828 5.09998 5.37503 5.09998C4.89179 5.09998 4.50003 5.4918 4.50003 5.97498C4.50003 6.45815 4.89179 6.84998 5.37503 6.84998ZM10.5 5.97498C10.5 6.45815 10.1083 6.84998 9.62503 6.84998C9.14179 6.84998 8.75003 6.45815 8.75003 5.97498C8.75003 5.4918 9.14179 5.09998 9.62503 5.09998C10.1083 5.09998 10.5 5.4918 10.5 5.97498Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FaceIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FigmaLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.00005 2.04999H5.52505C4.71043 2.04999 4.05005 2.71037 4.05005 3.52499C4.05005 4.33961 4.71043 4.99999 5.52505 4.99999H7.00005V2.04999ZM7.00005 1.04999H8.00005H9.47505C10.842 1.04999 11.95 2.15808 11.95 3.52499C11.95 4.33163 11.5642 5.04815 10.9669 5.49999C11.5642 5.95184 11.95 6.66836 11.95 7.475C11.95 8.8419 10.842 9.95 9.47505 9.95C8.92236 9.95 8.41198 9.76884 8.00005 9.46266V9.95L8.00005 11.425C8.00005 12.7919 6.89195 13.9 5.52505 13.9C4.15814 13.9 3.05005 12.7919 3.05005 11.425C3.05005 10.6183 3.43593 9.90184 4.03317 9.44999C3.43593 8.99814 3.05005 8.28163 3.05005 7.475C3.05005 6.66836 3.43594 5.95184 4.03319 5.5C3.43594 5.04815 3.05005 4.33163 3.05005 3.52499C3.05005 2.15808 4.15814 1.04999 5.52505 1.04999H7.00005ZM8.00005 2.04999V4.99999H9.47505C10.2897 4.99999 10.95 4.33961 10.95 3.52499C10.95 2.71037 10.2897 2.04999 9.47505 2.04999H8.00005ZM5.52505 8.94998H7.00005L7.00005 7.4788L7.00005 7.475L7.00005 7.4712V6H5.52505C4.71043 6 4.05005 6.66038 4.05005 7.475C4.05005 8.28767 4.70727 8.94684 5.5192 8.94999L5.52505 8.94998ZM4.05005 11.425C4.05005 10.6123 4.70727 9.95315 5.5192 9.94999L5.52505 9.95H7.00005L7.00005 11.425C7.00005 12.2396 6.33967 12.9 5.52505 12.9C4.71043 12.9 4.05005 12.2396 4.05005 11.425ZM8.00005 7.47206C8.00164 6.65879 8.66141 6 9.47505 6C10.2897 6 10.95 6.66038 10.95 7.475C10.95 8.28962 10.2897 8.95 9.47505 8.95C8.66141 8.95 8.00164 8.29121 8.00005 7.47794V7.47206Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FigmaLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FileIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.5 2C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V6H8.5C8.22386 6 8 5.77614 8 5.5V2H3.5ZM9 2.70711L11.2929 5H9V2.70711ZM2 2.5C2 1.67157 2.67157 1 3.5 1H8.5C8.63261 1 8.75979 1.05268 8.85355 1.14645L12.8536 5.14645C12.9473 5.24021 13 5.36739 13 5.5V12.5C13 13.3284 12.3284 14 11.5 14H3.5C2.67157 14 2 13.3284 2 12.5V2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FileIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FileMinusIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 2.5C3 2.22386 3.22386 2 3.5 2H9.29289L12 4.70711V12.5C12 12.7761 11.7761 13 11.5 13H3.5C3.22386 13 3 12.7761 3 12.5V2.5ZM3.5 1C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V4.60355C13 4.40464 12.921 4.21388 12.7803 4.07322L9.85355 1.14645C9.75979 1.05268 9.63261 1 9.5 1H3.5ZM5.25 7C4.97386 7 4.75 7.22386 4.75 7.5C4.75 7.77614 4.97386 8 5.25 8H9.75C10.0261 8 10.25 7.77614 10.25 7.5C10.25 7.22386 10.0261 7 9.75 7H5.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FileMinusIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FilePlusIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.5 2C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V4.70711L9.29289 2H3.5ZM2 2.5C2 1.67157 2.67157 1 3.5 1H9.5C9.63261 1 9.75979 1.05268 9.85355 1.14645L12.7803 4.07322C12.921 4.21388 13 4.40464 13 4.60355V12.5C13 13.3284 12.3284 14 11.5 14H3.5C2.67157 14 2 13.3284 2 12.5V2.5ZM4.75 7.5C4.75 7.22386 4.97386 7 5.25 7H7V5.25C7 4.97386 7.22386 4.75 7.5 4.75C7.77614 4.75 8 4.97386 8 5.25V7H9.75C10.0261 7 10.25 7.22386 10.25 7.5C10.25 7.77614 10.0261 8 9.75 8H8V9.75C8 10.0261 7.77614 10.25 7.5 10.25C7.22386 10.25 7 10.0261 7 9.75V8H5.25C4.97386 8 4.75 7.77614 4.75 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FilePlusIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FileTextIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 2.5C3 2.22386 3.22386 2 3.5 2H9.08579C9.21839 2 9.34557 2.05268 9.43934 2.14645L11.8536 4.56066C11.9473 4.65443 12 4.78161 12 4.91421V12.5C12 12.7761 11.7761 13 11.5 13H3.5C3.22386 13 3 12.7761 3 12.5V2.5ZM3.5 1C2.67157 1 2 1.67157 2 2.5V12.5C2 13.3284 2.67157 14 3.5 14H11.5C12.3284 14 13 13.3284 13 12.5V4.91421C13 4.51639 12.842 4.13486 12.5607 3.85355L10.1464 1.43934C9.86514 1.15804 9.48361 1 9.08579 1H3.5ZM4.5 4C4.22386 4 4 4.22386 4 4.5C4 4.77614 4.22386 5 4.5 5H7.5C7.77614 5 8 4.77614 8 4.5C8 4.22386 7.77614 4 7.5 4H4.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H4.5ZM4.5 10C4.22386 10 4 10.2239 4 10.5C4 10.7761 4.22386 11 4.5 11H10.5C10.7761 11 11 10.7761 11 10.5C11 10.2239 10.7761 10 10.5 10H4.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FileTextIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FontBoldIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.10505 12C4.70805 12 4.4236 11.912 4.25171 11.736C4.0839 11.5559 4 11.2715 4 10.8827V4.11733C4 3.72033 4.08595 3.43588 4.25784 3.26398C4.43383 3.08799 4.71623 3 5.10505 3C6.42741 3 8.25591 3 9.02852 3C10.1373 3 11.0539 3.98153 11.0539 5.1846C11.0539 6.08501 10.6037 6.81855 9.70327 7.23602C10.8657 7.44851 11.5176 8.62787 11.5176 9.48128C11.5176 10.5125 10.9902 12 9.27734 12C8.77742 12 6.42626 12 5.10505 12ZM8.37891 8.00341H5.8V10.631H8.37891C8.9 10.631 9.6296 10.1211 9.6296 9.29877C9.6296 8.47643 8.9 8.00341 8.37891 8.00341ZM5.8 4.36903V6.69577H8.17969C8.53906 6.69577 9.27734 6.35939 9.27734 5.50002C9.27734 4.64064 8.48047 4.36903 8.17969 4.36903H5.8Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FontBoldIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FontFamilyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.5 4.5C2.5 3.09886 3.59886 2 5 2H12.499C12.7752 2 13 2.22386 13 2.5C13 2.77614 12.7761 3 12.5 3H8.69244L8.40509 3.85458C8.18869 4.49752 7.89401 5.37197 7.58091 6.29794C7.50259 6.52956 7.42308 6.76453 7.34332 7H8.5C8.77614 7 9 7.22386 9 7.5C9 7.77614 8.77614 8 8.5 8H7.00407C6.56724 9.28543 6.16435 10.4613 5.95799 11.0386C5.63627 11.9386 5.20712 12.4857 4.66741 12.7778C4.16335 13.0507 3.64154 13.0503 3.28378 13.05L3.25 13.05C2.94624 13.05 2.7 12.8037 2.7 12.5C2.7 12.1962 2.94624 11.95 3.25 11.95C3.64182 11.95 3.9035 11.9405 4.14374 11.8105C4.36443 11.691 4.65532 11.4148 4.92217 10.6683C5.10695 10.1514 5.45375 9.14134 5.8422 8H4.5C4.22386 8 4 7.77614 4 7.5C4 7.22386 4.22386 7 4.5 7H6.18187C6.30127 6.64785 6.42132 6.29323 6.53887 5.94559C6.85175 5.02025 7.14627 4.14631 7.36256 3.50368L7.53192 3H5C4.15114 3 3.5 3.65114 3.5 4.5C3.5 4.77614 3.27614 5 3 5C2.72386 5 2.5 4.77614 2.5 4.5Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FontFamilyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FontItalicIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.67494 3.50017C5.67494 3.25164 5.87641 3.05017 6.12494 3.05017H10.6249C10.8735 3.05017 11.0749 3.25164 11.0749 3.50017C11.0749 3.7487 10.8735 3.95017 10.6249 3.95017H9.00587L7.2309 11.05H8.87493C9.12345 11.05 9.32493 11.2515 9.32493 11.5C9.32493 11.7486 9.12345 11.95 8.87493 11.95H4.37493C4.1264 11.95 3.92493 11.7486 3.92493 11.5C3.92493 11.2515 4.1264 11.05 4.37493 11.05H5.99397L7.76894 3.95017H6.12494C5.87641 3.95017 5.67494 3.7487 5.67494 3.50017Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FontItalicIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FontRomanIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.79993 3.50017C4.79993 3.25164 5.0014 3.05017 5.24993 3.05017H9.74993C9.99845 3.05017 10.1999 3.25164 10.1999 3.50017C10.1999 3.7487 9.99845 3.95017 9.74993 3.95017H8.09993V11.05H9.74994C9.99847 11.05 10.1999 11.2515 10.1999 11.5C10.1999 11.7486 9.99847 11.95 9.74994 11.95H5.24994C5.00141 11.95 4.79994 11.7486 4.79994 11.5C4.79994 11.2515 5.00141 11.05 5.24994 11.05H6.89993V3.95017H5.24993C5.0014 3.95017 4.79993 3.7487 4.79993 3.50017Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FontRomanIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FontSizeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.78233 2.21707C2.70732 2.14206 2.60557 2.09991 2.49949 2.09991C2.3934 2.09991 2.29166 2.14206 2.21664 2.21707L0.216645 4.21707C0.0604351 4.37328 0.0604351 4.62655 0.216645 4.78276C0.372855 4.93897 0.626121 4.93897 0.78233 4.78276L2.09949 3.4656L2.09949 11.5342L0.78233 10.2171C0.62612 10.0609 0.372854 10.0609 0.216645 10.2171C0.0604349 10.3733 0.0604349 10.6265 0.216645 10.7828L2.21664 12.7828C2.29166 12.8578 2.3934 12.8999 2.49949 12.8999C2.60557 12.8999 2.70731 12.8578 2.78233 12.7828L4.78233 10.7828C4.93854 10.6265 4.93854 10.3733 4.78233 10.2171C4.62612 10.0609 4.37285 10.0609 4.21664 10.2171L2.89949 11.5342L2.89949 3.4656L4.21664 4.78276C4.37285 4.93897 4.62612 4.93897 4.78233 4.78276C4.93854 4.62655 4.93854 4.37328 4.78233 4.21707L2.78233 2.21707ZM10.5 2.74997C10.7107 2.74997 10.8988 2.88211 10.9703 3.08036L13.9703 11.3999C14.064 11.6597 13.9293 11.9462 13.6696 12.0399C13.4098 12.1336 13.1233 11.9989 13.0296 11.7392L12.0477 9.016H8.95228L7.97033 11.7392C7.87666 11.9989 7.59013 12.1336 7.33036 12.0399C7.07059 11.9462 6.93595 11.6597 7.02962 11.3999L10.0296 3.08036C10.1011 2.88211 10.2892 2.74997 10.5 2.74997ZM10.5 4.72396L11.7412 8.166H9.25879L10.5 4.72396Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FontSizeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FontStyleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.03791 9.98075C0.934777 9.6583 1.11603 9.37719 1.40005 9.24871C1.68408 9.12022 2.09463 9.13412 2.27071 9.45426C2.85393 10.5147 3.64599 10.7282 4.48665 10.7282C5.52721 10.7282 6.29659 10.2615 6.29659 9.45426C6.29659 8.8047 5.9119 8.46416 4.87134 8.14253L4.15872 7.92181C2.64518 7.44883 1.88842 6.69206 1.88842 5.45601C1.88842 3.79743 3.27583 2.6875 5.24342 2.6875C6.91733 2.6875 7.97409 3.33536 8.43833 4.31065C8.57087 4.58909 8.57614 4.91294 8.22794 5.19114C7.87974 5.46934 7.52351 5.34799 7.23327 5.03839C6.47215 4.22653 5.99545 4.04968 5.25604 4.04968C4.1398 4.04968 3.547 4.63618 3.547 5.27943C3.547 5.86592 3.96322 6.23169 4.94702 6.5344L5.67856 6.76143C7.22994 7.23441 7.97409 7.95964 7.97409 9.17047C7.97409 10.7723 6.69389 12.0903 4.46143 12.0903C2.86612 12.0903 1.40005 11.1131 1.03791 9.98075ZM11.8491 8.77985C10.661 8.39543 10.1649 7.86114 10.1649 6.98805C10.1649 5.86736 11.1636 5.04639 12.6128 5.04639C13.8546 5.04639 14.6629 5.63345 14.9778 6.6346C15.0443 6.84599 14.9593 6.98006 14.7475 7.0491C14.5394 7.11697 14.3176 7.09974 14.238 6.89611C13.9356 6.12273 13.352 5.76311 12.5998 5.76311C11.6467 5.76311 11.0135 6.25178 11.0135 6.91638C11.0135 7.45066 11.3464 7.75038 12.2473 8.04358L12.8348 8.23254C14.062 8.62999 14.5516 9.13821 14.5516 10.0178C14.5516 11.1972 13.481 12.0442 11.9927 12.0442C10.6439 12.0442 9.65644 11.2809 9.41979 10.3361C9.36535 10.1188 9.41192 10.0287 9.70039 9.96184C9.98886 9.89499 10.0714 9.89918 10.1715 10.1369C10.4555 10.8114 11.1531 11.3275 12.0318 11.3275C12.9914 11.3275 13.6834 10.7802 13.6834 10.0634C13.6834 9.53567 13.3961 9.28807 12.4366 8.97532L11.8491 8.77985Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FontStyleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FrameIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V4H5V1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5V4H1.5C1.22386 4 1 4.22386 1 4.5C1 4.77614 1.22386 5 1.5 5H4V10H1.5C1.22386 10 1 10.2239 1 10.5C1 10.7761 1.22386 11 1.5 11H4V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V11H10V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V11H13.5C13.7761 11 14 10.7761 14 10.5C14 10.2239 13.7761 10 13.5 10H11V5H13.5C13.7761 5 14 4.77614 14 4.5C14 4.22386 13.7761 4 13.5 4H11V1.5ZM10 10V5H5V10H10Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FrameIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const FramerLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.3825 1.29567C3.46241 1.11432 3.64188 0.997284 3.84005 0.997284H11.5C11.7761 0.997284 12 1.22114 12 1.49728V5.5C12 5.77614 11.7761 6 11.5 6H8.63521L11.5288 9.16247C11.6626 9.3087 11.6974 9.52015 11.6175 9.70154C11.5376 9.88293 11.3582 10 11.16 10H8V13.5C8 13.7022 7.87818 13.8845 7.69134 13.9619C7.5045 14.0393 7.28945 13.9966 7.14645 13.8536L3.14645 9.85355C3.05268 9.75979 3 9.63261 3 9.5V5.5C3 5.22386 3.22386 5 3.5 5H6.36531L3.47105 1.83468C3.33732 1.68844 3.30259 1.47701 3.3825 1.29567ZM7.72032 5L4.97474 1.99728H11V5H7.72032ZM7.27978 6H4V9H7.5H10.0247L7.27978 6ZM4.70711 10L7 12.2929V10H4.70711Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default FramerLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const GearIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.07095 0.650238C6.67391 0.650238 6.32977 0.925096 6.24198 1.31231L6.0039 2.36247C5.6249 2.47269 5.26335 2.62363 4.92436 2.81013L4.01335 2.23585C3.67748 2.02413 3.23978 2.07312 2.95903 2.35386L2.35294 2.95996C2.0722 3.2407 2.0232 3.6784 2.23493 4.01427L2.80942 4.92561C2.62307 5.2645 2.47227 5.62594 2.36216 6.00481L1.31209 6.24287C0.924883 6.33065 0.650024 6.6748 0.650024 7.07183V7.92897C0.650024 8.32601 0.924883 8.67015 1.31209 8.75794L2.36228 8.99603C2.47246 9.375 2.62335 9.73652 2.80979 10.0755L2.2354 10.9867C2.02367 11.3225 2.07267 11.7602 2.35341 12.041L2.95951 12.6471C3.24025 12.9278 3.67795 12.9768 4.01382 12.7651L4.92506 12.1907C5.26384 12.377 5.62516 12.5278 6.0039 12.6379L6.24198 13.6881C6.32977 14.0753 6.67391 14.3502 7.07095 14.3502H7.92809C8.32512 14.3502 8.66927 14.0753 8.75705 13.6881L8.99505 12.6383C9.37411 12.5282 9.73573 12.3773 10.0748 12.1909L10.986 12.7653C11.3218 12.977 11.7595 12.928 12.0403 12.6473L12.6464 12.0412C12.9271 11.7604 12.9761 11.3227 12.7644 10.9869L12.1902 10.076C12.3768 9.73688 12.5278 9.37515 12.638 8.99596L13.6879 8.75794C14.0751 8.67015 14.35 8.32601 14.35 7.92897V7.07183C14.35 6.6748 14.0751 6.33065 13.6879 6.24287L12.6381 6.00488C12.528 5.62578 12.3771 5.26414 12.1906 4.92507L12.7648 4.01407C12.9766 3.6782 12.9276 3.2405 12.6468 2.95975L12.0407 2.35366C11.76 2.07292 11.3223 2.02392 10.9864 2.23565L10.0755 2.80989C9.73622 2.62328 9.37437 2.47229 8.99505 2.36209L8.75705 1.31231C8.66927 0.925096 8.32512 0.650238 7.92809 0.650238H7.07095ZM4.92053 3.81251C5.44724 3.44339 6.05665 3.18424 6.71543 3.06839L7.07095 1.50024H7.92809L8.28355 3.06816C8.94267 3.18387 9.5524 3.44302 10.0794 3.81224L11.4397 2.9547L12.0458 3.56079L11.1882 4.92117C11.5573 5.44798 11.8164 6.0575 11.9321 6.71638L13.5 7.07183V7.92897L11.932 8.28444C11.8162 8.94342 11.557 9.55301 11.1878 10.0798L12.0453 11.4402L11.4392 12.0462L10.0787 11.1886C9.55192 11.5576 8.94241 11.8166 8.28355 11.9323L7.92809 13.5002H7.07095L6.71543 11.932C6.0569 11.8162 5.44772 11.5572 4.92116 11.1883L3.56055 12.046L2.95445 11.4399L3.81213 10.0794C3.4431 9.55266 3.18403 8.94326 3.06825 8.2845L1.50002 7.92897V7.07183L3.06818 6.71632C3.18388 6.05765 3.44283 5.44833 3.81171 4.92165L2.95398 3.561L3.56008 2.95491L4.92053 3.81251ZM9.02496 7.50008C9.02496 8.34226 8.34223 9.02499 7.50005 9.02499C6.65786 9.02499 5.97513 8.34226 5.97513 7.50008C5.97513 6.65789 6.65786 5.97516 7.50005 5.97516C8.34223 5.97516 9.02496 6.65789 9.02496 7.50008ZM9.92496 7.50008C9.92496 8.83932 8.83929 9.92499 7.50005 9.92499C6.1608 9.92499 5.07513 8.83932 5.07513 7.50008C5.07513 6.16084 6.1608 5.07516 7.50005 5.07516C8.83929 5.07516 9.92496 6.16084 9.92496 7.50008Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default GearIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const GitHubLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49933 0.25C3.49635 0.25 0.25 3.49593 0.25 7.50024C0.25 10.703 2.32715 13.4206 5.2081 14.3797C5.57084 14.446 5.70302 14.2222 5.70302 14.0299C5.70302 13.8576 5.69679 13.4019 5.69323 12.797C3.67661 13.235 3.25112 11.825 3.25112 11.825C2.92132 10.9874 2.44599 10.7644 2.44599 10.7644C1.78773 10.3149 2.49584 10.3238 2.49584 10.3238C3.22353 10.375 3.60629 11.0711 3.60629 11.0711C4.25298 12.1788 5.30335 11.8588 5.71638 11.6732C5.78225 11.205 5.96962 10.8854 6.17658 10.7043C4.56675 10.5209 2.87415 9.89918 2.87415 7.12104C2.87415 6.32925 3.15677 5.68257 3.62053 5.17563C3.54576 4.99226 3.29697 4.25521 3.69174 3.25691C3.69174 3.25691 4.30015 3.06196 5.68522 3.99973C6.26337 3.83906 6.8838 3.75895 7.50022 3.75583C8.1162 3.75895 8.73619 3.83906 9.31523 3.99973C10.6994 3.06196 11.3069 3.25691 11.3069 3.25691C11.7026 4.25521 11.4538 4.99226 11.3795 5.17563C11.8441 5.68257 12.1245 6.32925 12.1245 7.12104C12.1245 9.9063 10.4292 10.5192 8.81452 10.6985C9.07444 10.9224 9.30633 11.3648 9.30633 12.0413C9.30633 13.0102 9.29742 13.7922 9.29742 14.0299C9.29742 14.2239 9.42828 14.4496 9.79591 14.3788C12.6746 13.4179 14.75 10.7025 14.75 7.50024C14.75 3.49593 11.5036 0.25 7.49933 0.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default GitHubLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const GlobeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49996 1.80002C4.35194 1.80002 1.79996 4.352 1.79996 7.50002C1.79996 10.648 4.35194 13.2 7.49996 13.2C10.648 13.2 13.2 10.648 13.2 7.50002C13.2 4.352 10.648 1.80002 7.49996 1.80002ZM0.899963 7.50002C0.899963 3.85494 3.85488 0.900024 7.49996 0.900024C11.145 0.900024 14.1 3.85494 14.1 7.50002C14.1 11.1451 11.145 14.1 7.49996 14.1C3.85488 14.1 0.899963 11.1451 0.899963 7.50002Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M13.4999 7.89998H1.49994V7.09998H13.4999V7.89998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M7.09991 13.5V1.5H7.89991V13.5H7.09991zM10.375 7.49998C10.375 5.32724 9.59364 3.17778 8.06183 1.75656L8.53793 1.24341C10.2396 2.82218 11.075 5.17273 11.075 7.49998 11.075 9.82724 10.2396 12.1778 8.53793 13.7566L8.06183 13.2434C9.59364 11.8222 10.375 9.67273 10.375 7.49998zM3.99969 7.5C3.99969 5.17611 4.80786 2.82678 6.45768 1.24719L6.94177 1.75281C5.4582 3.17323 4.69969 5.32389 4.69969 7.5 4.6997 9.67611 5.45822 11.8268 6.94179 13.2472L6.45769 13.7528C4.80788 12.1732 3.9997 9.8239 3.99969 7.5z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M7.49996 3.95801C9.66928 3.95801 11.8753 4.35915 13.3706 5.19448 13.5394 5.28875 13.5998 5.50197 13.5055 5.67073 13.4113 5.83948 13.198 5.89987 13.0293 5.8056 11.6794 5.05155 9.60799 4.65801 7.49996 4.65801 5.39192 4.65801 3.32052 5.05155 1.97064 5.8056 1.80188 5.89987 1.58866 5.83948 1.49439 5.67073 1.40013 5.50197 1.46051 5.28875 1.62927 5.19448 3.12466 4.35915 5.33063 3.95801 7.49996 3.95801zM7.49996 10.85C9.66928 10.85 11.8753 10.4488 13.3706 9.6135 13.5394 9.51924 13.5998 9.30601 13.5055 9.13726 13.4113 8.9685 13.198 8.90812 13.0293 9.00238 11.6794 9.75643 9.60799 10.15 7.49996 10.15 5.39192 10.15 3.32052 9.75643 1.97064 9.00239 1.80188 8.90812 1.58866 8.9685 1.49439 9.13726 1.40013 9.30601 1.46051 9.51924 1.62927 9.6135 3.12466 10.4488 5.33063 10.85 7.49996 10.85z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default GlobeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const GridIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.5 2H8V7H13V2.5C13 2.22386 12.7761 2 12.5 2ZM13 8H8V13H12.5C12.7761 13 13 12.7761 13 12.5V8ZM7 7V2H2.5C2.22386 2 2 2.22386 2 2.5V7H7ZM2 8V12.5C2 12.7761 2.22386 13 2.5 13H7V8H2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default GridIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const GroupIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.44995 0.949951C1.31734 0.949951 1.19016 1.00263 1.0964 1.0964C1.00263 1.19017 0.949951 1.31735 0.949951 1.44995L0.949966 3.44995C0.949969 3.7261 1.17383 3.94995 1.44997 3.94995C1.72611 3.94995 1.94997 3.72609 1.94997 3.44995L1.94995 1.94995H3.44997C3.72611 1.94995 3.94997 1.72609 3.94997 1.44995C3.94997 1.17381 3.72611 0.949951 3.44997 0.949951H1.44995ZM5.94995 0.949951C5.67381 0.949951 5.44995 1.17381 5.44995 1.44995C5.44995 1.72609 5.67381 1.94995 5.94995 1.94995H8.94995C9.22609 1.94995 9.44995 1.72609 9.44995 1.44995C9.44995 1.17381 9.22609 0.949951 8.94995 0.949951H5.94995ZM5.44995 13.45C5.44995 13.1738 5.67381 12.95 5.94995 12.95H8.94995C9.22609 12.95 9.44995 13.1738 9.44995 13.45C9.44995 13.7261 9.22609 13.95 8.94995 13.95H5.94995C5.67381 13.95 5.44995 13.7261 5.44995 13.45ZM1.94995 5.94995C1.94995 5.67381 1.72609 5.44995 1.44995 5.44995C1.17381 5.44995 0.949951 5.67381 0.949951 5.94995V8.94995C0.949951 9.22609 1.17381 9.44995 1.44995 9.44995C1.72609 9.44995 1.94995 9.22609 1.94995 8.94995V5.94995ZM13.45 5.44995C13.7261 5.44995 13.95 5.67381 13.95 5.94995V8.94995C13.95 9.22609 13.7261 9.44995 13.45 9.44995C13.1738 9.44995 12.95 9.22609 12.95 8.94995V5.94995C12.95 5.67381 13.1738 5.44995 13.45 5.44995ZM11.45 0.949951C11.1738 0.949951 10.95 1.17381 10.95 1.44995C10.95 1.72609 11.1738 1.94995 11.45 1.94995H12.9499V3.44995C12.9499 3.72609 13.1738 3.94995 13.4499 3.94995C13.7261 3.94995 13.9499 3.72609 13.9499 3.44995V1.44995C13.9499 1.17381 13.7252 0.949951 13.449 0.949951H11.45ZM1.44995 10.95C1.72609 10.95 1.94995 11.1738 1.94995 11.45V12.95H3.44997C3.72611 12.95 3.94997 13.1738 3.94997 13.45C3.94997 13.7261 3.72611 13.95 3.44997 13.95H1.44995C1.17381 13.95 0.949951 13.7261 0.949951 13.45V11.45C0.949951 11.1738 1.17381 10.95 1.44995 10.95ZM13.95 11.45C13.95 11.1738 13.7261 10.95 13.45 10.95C13.1738 10.9499 12.95 11.1738 12.95 11.4499L12.9491 12.95H11.45C11.1738 12.95 10.95 13.1738 10.95 13.45C10.95 13.7261 11.1738 13.95 11.45 13.95H13.4499C13.7261 13.95 13.9499 13.7261 13.9499 13.45L13.95 11.45Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default GroupIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Half1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM7.00003 1.84861C4.10114 2.1017 1.82707 4.53515 1.82707 7.49972C1.82707 10.4643 4.10114 12.8977 7.00003 13.1508V1.84861ZM8.00003 13.1508C10.8988 12.8976 13.1727 10.4642 13.1727 7.49972C13.1727 4.53524 10.8988 2.10185 8.00003 1.84864V13.1508Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Half1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Half2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM7.49988 1.82689C4.36688 1.8269 1.82707 4.36672 1.82707 7.49972C1.82707 10.6327 4.36688 13.1725 7.49988 13.1726V1.82689Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Half2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HamburgerMenuIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.5 3C1.22386 3 1 3.22386 1 3.5C1 3.77614 1.22386 4 1.5 4H13.5C13.7761 4 14 3.77614 14 3.5C14 3.22386 13.7761 3 13.5 3H1.5ZM1 7.5C1 7.22386 1.22386 7 1.5 7H13.5C13.7761 7 14 7.22386 14 7.5C14 7.77614 13.7761 8 13.5 8H1.5C1.22386 8 1 7.77614 1 7.5ZM1 11.5C1 11.2239 1.22386 11 1.5 11H13.5C13.7761 11 14 11.2239 14 11.5C14 11.7761 13.7761 12 13.5 12H1.5C1.22386 12 1 11.7761 1 11.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HamburgerMenuIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HandIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.8113 1.64706C6.62188 2.87918 6.68268 3.88523 6.76848 5.30499C6.78415 5.56426 6.80065 5.83732 6.81661 6.12808C6.83111 6.39208 6.63758 6.62172 6.37495 6.65217C6.11232 6.68262 5.87138 6.50334 5.82509 6.24304L5.74754 5.80698C5.64402 5.16529 5.48355 4.25481 5.17807 3.44741C4.86241 2.61312 4.4486 2.04121 3.93436 1.86044C3.64994 1.76104 3.41901 1.84279 3.25868 2.01052C3.08746 2.18962 2.9976 2.47065 3.0627 2.75399C3.2146 3.34424 3.44627 3.9167 3.69836 4.51802C3.72082 4.57158 3.74346 4.62543 3.76621 4.67954C3.9954 5.22457 4.23619 5.7972 4.41644 6.39081L4.41691 6.39238C4.562 6.87586 4.65646 7.2595 4.73086 7.56165C4.76034 7.68138 4.78667 7.78831 4.81175 7.88359C4.86768 8.09606 4.77836 8.32014 4.59161 8.43588C4.40486 8.55161 4.16445 8.53188 3.99907 8.38725C3.73749 8.15848 3.515 7.92784 3.31817 7.71802C3.27627 7.67335 3.23602 7.63018 3.19705 7.58838C3.04777 7.42826 2.91712 7.28812 2.78334 7.16029C2.45989 6.85122 2.18398 6.68004 1.80585 6.64369L1.80324 6.64343C1.56117 6.61888 1.41402 6.66441 1.31756 6.72627C1.21899 6.78947 1.11988 6.90414 1.03784 7.1123C0.976576 7.28492 1.01515 7.62987 1.1929 7.96911L1.19728 7.97747C1.40086 8.38452 1.74475 8.81587 2.18141 9.29299C2.39739 9.52898 2.62872 9.76849 2.86934 10.0174L2.87966 10.0281C3.11546 10.2721 3.35962 10.5247 3.59713 10.7827C4.4288 11.6863 5.27706 12.7538 5.4627 14H11.5087C11.5636 12.4353 11.8756 11.268 12.2875 10.1346C12.4454 9.70041 12.6121 9.28412 12.7826 8.85829C13.1097 8.04139 13.4509 7.18937 13.7705 6.10824C14.0989 4.99737 14.0097 4.37033 13.8613 4.03984C13.717 3.71858 13.4914 3.61786 13.3816 3.59606C13.1381 3.54774 13.0384 3.60947 12.9698 3.67901C12.867 3.78316 12.7698 3.98273 12.6921 4.30269C12.6166 4.61345 12.5752 4.96517 12.533 5.32501L12.5298 5.35285C12.4924 5.67242 12.4505 6.03016 12.3665 6.30098C12.3383 6.40699 12.2819 6.50407 12.1979 6.57539C12.1382 6.6261 12.0104 6.70818 11.8309 6.69312C11.5424 6.66891 11.3712 6.42143 11.365 6.14783C11.356 5.75454 11.3883 5.35864 11.4074 4.96608C11.4428 4.23646 11.477 3.5337 11.4245 2.8342L11.4242 2.82934C11.3916 2.32997 11.0493 2.00228 10.7007 1.9228C10.5305 1.88401 10.369 1.90601 10.2347 1.9835C10.103 2.05946 9.95535 2.21318 9.8574 2.51394L9.85631 2.51726C9.81525 2.6404 9.77298 2.87753 9.73606 3.2124C9.70044 3.53542 9.67337 3.91279 9.65156 4.29418C9.6329 4.62033 9.61785 4.9584 9.60434 5.26194C9.58728 5.64529 9.57267 5.97357 9.55633 6.1532C9.54983 6.22459 9.52939 6.29493 9.49501 6.35785C9.47356 6.39711 9.36115 6.60947 9.07106 6.61843C8.77917 6.62744 8.63975 6.40057 8.61698 6.35919C8.55634 6.24899 8.55066 6.11807 8.54754 5.99283C8.54474 5.88064 8.54294 5.71798 8.54174 5.54767C8.53935 5.20582 8.53935 4.81919 8.53935 4.70952C8.53935 3.6657 8.53838 2.65372 8.44714 1.64372C8.39183 1.24127 8.06278 1.00455 7.6436 1.00005C7.22399 0.995552 6.87918 1.22704 6.8113 1.64706ZM9.41219 1.3617C9.21469 0.448484 8.39913 0.00810324 7.65433 0.00011154C6.86452 -0.00836308 5.98761 0.465881 5.82365 1.49037L5.82318 1.49334C5.78239 1.7584 5.75229 2.01481 5.7309 2.26652C5.39423 1.67364 4.92622 1.14894 4.2655 0.916859C3.58661 0.679312 2.9492 0.887087 2.53582 1.31952C2.13415 1.73971 1.94438 2.36742 2.09031 2.98746L2.09269 2.99713C2.26478 3.66808 2.52396 4.30316 2.77613 4.90465C2.79814 4.95717 2.8201 5.00941 2.84194 5.06139C3.02139 5.48842 3.19378 5.89866 3.33871 6.31256C2.96404 5.98142 2.51925 5.70796 1.90276 5.6484C1.48865 5.60663 1.10391 5.67536 0.777805 5.88444C0.454239 6.0919 0.240671 6.40405 0.104187 6.75406L0.100868 6.76281C-0.10184 7.31286 0.0663312 7.97157 0.304895 8.42897C0.573704 8.96474 0.996104 9.47904 1.44372 9.96813C1.67046 10.2159 1.91136 10.4652 2.15033 10.7124L2.15682 10.7191C2.39524 10.9658 2.63217 11.2109 2.86134 11.4599C3.80937 12.49 4.50002 13.4632 4.50002 14.5C4.50002 14.7761 4.72388 15 5.00002 15H12C12.2762 15 12.5 14.7761 12.5 14.5C12.5 12.8212 12.8021 11.6462 13.2274 10.4762C13.3653 10.0968 13.5216 9.70579 13.6868 9.29247C14.0238 8.44922 14.398 7.51298 14.7295 6.39175C15.0956 5.15324 15.0559 4.25904 14.7735 3.63017C14.487 2.99208 13.9798 2.6953 13.5763 2.6152C13.1276 2.52614 12.7367 2.60475 12.4268 2.83081C12.4253 2.80773 12.4236 2.78468 12.4219 2.76167C12.3587 1.8105 11.6907 1.12285 10.923 0.947821C10.5346 0.859287 10.1111 0.900393 9.73509 1.11724C9.61852 1.18446 9.51055 1.26623 9.41219 1.3617Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HandIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HeadingIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.75432 2.0502C8.50579 2.0502 8.30432 2.25167 8.30432 2.5002C8.30432 2.74873 8.50579 2.9502 8.75432 2.9502H9.94997V7.05004H5.04997V2.9502H6.25432C6.50285 2.9502 6.70432 2.74873 6.70432 2.5002C6.70432 2.25167 6.50285 2.0502 6.25432 2.0502H2.75432C2.50579 2.0502 2.30432 2.25167 2.30432 2.5002C2.30432 2.74873 2.50579 2.9502 2.75432 2.9502H3.94997V12.0502H2.75432C2.50579 12.0502 2.30432 12.2517 2.30432 12.5002C2.30432 12.7487 2.50579 12.9502 2.75432 12.9502H6.25432C6.50285 12.9502 6.70432 12.7487 6.70432 12.5002C6.70432 12.2517 6.50285 12.0502 6.25432 12.0502H5.04997V7.95004H9.94997V12.0502H8.75432C8.50579 12.0502 8.30432 12.2517 8.30432 12.5002C8.30432 12.7487 8.50579 12.9502 8.75432 12.9502H12.2543C12.5028 12.9502 12.7043 12.7487 12.7043 12.5002C12.7043 12.2517 12.5028 12.0502 12.2543 12.0502H11.05V2.9502H12.2543C12.5028 2.9502 12.7043 2.74873 12.7043 2.5002C12.7043 2.25167 12.5028 2.0502 12.2543 2.0502H8.75432Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HeadingIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HeartIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.89346 2.35248C3.49195 2.35248 2.35248 3.49359 2.35248 4.90532C2.35248 6.38164 3.20954 7.9168 4.37255 9.33522C5.39396 10.581 6.59464 11.6702 7.50002 12.4778C8.4054 11.6702 9.60608 10.581 10.6275 9.33522C11.7905 7.9168 12.6476 6.38164 12.6476 4.90532C12.6476 3.49359 11.5081 2.35248 10.1066 2.35248C9.27059 2.35248 8.81894 2.64323 8.5397 2.95843C8.27877 3.25295 8.14623 3.58566 8.02501 3.88993C8.00391 3.9429 7.98315 3.99501 7.96211 4.04591C7.88482 4.23294 7.7024 4.35494 7.50002 4.35494C7.29765 4.35494 7.11523 4.23295 7.03793 4.04592C7.01689 3.99501 6.99612 3.94289 6.97502 3.8899C6.8538 3.58564 6.72126 3.25294 6.46034 2.95843C6.18109 2.64323 5.72945 2.35248 4.89346 2.35248ZM1.35248 4.90532C1.35248 2.94498 2.936 1.35248 4.89346 1.35248C6.0084 1.35248 6.73504 1.76049 7.20884 2.2953C7.32062 2.42147 7.41686 2.55382 7.50002 2.68545C7.58318 2.55382 7.67941 2.42147 7.79119 2.2953C8.265 1.76049 8.99164 1.35248 10.1066 1.35248C12.064 1.35248 13.6476 2.94498 13.6476 4.90532C13.6476 6.74041 12.6013 8.50508 11.4008 9.96927C10.2636 11.3562 8.92194 12.5508 8.00601 13.3664C7.94645 13.4194 7.88869 13.4709 7.83291 13.5206C7.64324 13.6899 7.3568 13.6899 7.16713 13.5206C7.11135 13.4709 7.05359 13.4194 6.99403 13.3664C6.0781 12.5508 4.73641 11.3562 3.59926 9.96927C2.39872 8.50508 1.35248 6.74041 1.35248 4.90532Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HeartIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HeartFilledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.35248 4.90532C1.35248 2.94498 2.936 1.35248 4.89346 1.35248C6.25769 1.35248 6.86058 1.92336 7.50002 2.93545C8.13946 1.92336 8.74235 1.35248 10.1066 1.35248C12.064 1.35248 13.6476 2.94498 13.6476 4.90532C13.6476 6.74041 12.6013 8.50508 11.4008 9.96927C10.2636 11.3562 8.92194 12.5508 8.00601 13.3664C7.94645 13.4194 7.88869 13.4709 7.83291 13.5206C7.64324 13.6899 7.3568 13.6899 7.16713 13.5206C7.11135 13.4709 7.05359 13.4194 6.99403 13.3664C6.0781 12.5508 4.73641 11.3562 3.59926 9.96927C2.39872 8.50508 1.35248 6.74041 1.35248 4.90532Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HeartFilledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HeightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.1813 1.68179C7.35704 1.50605 7.64196 1.50605 7.8177 1.68179L10.3177 4.18179C10.4934 4.35753 10.4934 4.64245 10.3177 4.81819C10.142 4.99392 9.85704 4.99392 9.6813 4.81819L7.9495 3.08638L7.9495 11.9136L9.6813 10.1818C9.85704 10.0061 10.142 10.0061 10.3177 10.1818C10.4934 10.3575 10.4934 10.6424 10.3177 10.8182L7.8177 13.3182C7.73331 13.4026 7.61885 13.45 7.4995 13.45C7.38015 13.45 7.26569 13.4026 7.1813 13.3182L4.6813 10.8182C4.50557 10.6424 4.50557 10.3575 4.6813 10.1818C4.85704 10.0061 5.14196 10.0061 5.3177 10.1818L7.0495 11.9136L7.0495 3.08638L5.3177 4.81819C5.14196 4.99392 4.85704 4.99392 4.6813 4.81819C4.50557 4.64245 4.50557 4.35753 4.6813 4.18179L7.1813 1.68179Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HeightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HobbyKnifeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.3536 13.3536C12.1583 13.5488 11.8417 13.5488 11.6465 13.3536L6.39645 8.10355C6.36478 8.07188 6.33824 8.03702 6.31685 8H5.00002C4.78719 8 4.59769 7.86528 4.52777 7.66426L2.12777 0.764277C2.05268 0.548387 2.13355 0.309061 2.3242 0.182972C2.51486 0.0568819 2.76674 0.0761337 2.93602 0.229734L8.336 5.12972C8.44044 5.22449 8.50001 5.35897 8.50001 5.5V5.81684C8.53702 5.83824 8.57189 5.86478 8.60356 5.89645L13.8536 11.1464C14.0488 11.3417 14.0488 11.6583 13.8536 11.8536L12.3536 13.3536ZM8.25 6.95711L7.45711 7.75L12 12.2929L12.7929 11.5L8.25 6.95711ZM3.71669 2.28845L5.35549 7H6.2929L7.50001 5.79289V5.72146L3.71669 2.28845Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HobbyKnifeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const HomeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.07926 0.222253C7.31275 -0.007434 7.6873 -0.007434 7.92079 0.222253L14.6708 6.86227C14.907 7.09465 14.9101 7.47453 14.6778 7.71076C14.4454 7.947 14.0655 7.95012 13.8293 7.71773L13 6.90201V12.5C13 12.7761 12.7762 13 12.5 13H2.50002C2.22388 13 2.00002 12.7761 2.00002 12.5V6.90201L1.17079 7.71773C0.934558 7.95012 0.554672 7.947 0.32229 7.71076C0.0899079 7.47453 0.0930283 7.09465 0.32926 6.86227L7.07926 0.222253ZM7.50002 1.49163L12 5.91831V12H10V8.49999C10 8.22385 9.77617 7.99999 9.50002 7.99999H6.50002C6.22388 7.99999 6.00002 8.22385 6.00002 8.49999V12H3.00002V5.91831L7.50002 1.49163ZM7.00002 12H9.00002V8.99999H7.00002V12Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default HomeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const IconJarLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 0.0032959C6.80473 0.0032959 6.24953 0.281106 6.25 0.749995C6.25 0.997258 6.42446 1.12014 6.57687 1.22749C6.69507 1.31074 6.8 1.38465 6.8 1.5C6.8 1.7071 6.06224 1.74264 5.19789 1.78427C3.97553 1.84314 2.5 1.91421 2.5 2.5C2.5 2.77614 2.72386 3 3 3H12C12.2761 3 12.5 2.77614 12.5 2.5C12.5 1.91421 11.0245 1.84314 9.80211 1.78427C8.93776 1.74264 8.2 1.7071 8.2 1.5C8.2 1.38465 8.30493 1.31074 8.42313 1.22749C8.57554 1.12014 8.75 0.997258 8.75 0.749995C8.75047 0.281106 8.19527 0.0032959 7.5 0.0032959ZM2.89451 6.12266C2.25806 6.52471 1.90417 7.31118 2.02473 8.0556L2.83588 12.4772C3.00993 13.3562 3.7629 14 4.66061 14H10.3373C11.2354 14 11.9884 13.3562 12.1625 12.4772L12.9736 8.05607C13.089 7.32358 12.8284 6.53276 12.1331 6.09373C11.7283 5.83013 11.6412 5.33231 12.1331 5.12796C12.8284 4.86435 12.6948 4 12 4H10.3001H6.80005H2.99996C2.30469 4 2.19878 4.89328 2.89451 5.15689C3.38642 5.33231 3.29939 5.83013 2.89451 6.12266ZM8.20006 6.25C8.20006 5.81769 8.08572 5.37615 7.90635 5L4.11093 5C4.20626 5.21312 4.2419 5.43889 4.22904 5.65521C4.19522 6.22412 3.84587 6.66899 3.48016 6.93322L3.45492 6.95146L3.42858 6.9681C3.13407 7.15414 2.95801 7.53989 3.01058 7.88749L3.81797 12.2886C3.90513 12.7154 4.26148 13 4.66061 13H10.3373C10.737 13 11.0932 12.7153 11.1804 12.2886L11.9874 7.8898C12.048 7.48247 11.8954 7.12631 11.5992 6.93927L11.5875 6.93184L11.5875 6.93176C11.1947 6.67602 10.8331 6.22785 10.7986 5.64798C10.7846 5.412 10.8264 5.19397 10.9112 5H9.05517C9.01987 5.14611 9.00006 5.31201 9.00006 5.5C9.00006 5.9745 9.21679 6.37127 9.44367 6.78662C9.69284 7.24278 9.95425 7.72136 9.95425 8.34993C9.95425 9.2698 9.49868 9.84205 8.62189 9.84205C8.13206 9.84205 7.57818 9.46097 7.57818 8.75781C7.57818 8.35279 7.71558 8.01646 7.86121 7.65998C8.0254 7.25806 8.20006 6.83051 8.20006 6.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default IconJarLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const IdCardIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14 11.0001V4.00006L1 4.00006L1 11.0001H14ZM15 4.00006V11.0001C15 11.5523 14.5523 12.0001 14 12.0001H1C0.447715 12.0001 0 11.5523 0 11.0001V4.00006C0 3.44778 0.447715 3.00006 1 3.00006H14C14.5523 3.00006 15 3.44778 15 4.00006ZM2 5.25C2 5.11193 2.11193 5 2.25 5H5.75C5.88807 5 6 5.11193 6 5.25V9.75C6 9.88807 5.88807 10 5.75 10H2.25C2.11193 10 2 9.88807 2 9.75V5.25ZM7.5 7C7.22386 7 7 7.22386 7 7.5C7 7.77614 7.22386 8 7.5 8H10.5C10.7761 8 11 7.77614 11 7.5C11 7.22386 10.7761 7 10.5 7H7.5ZM7 9.5C7 9.22386 7.22386 9 7.5 9H12.5C12.7761 9 13 9.22386 13 9.5C13 9.77614 12.7761 10 12.5 10H7.5C7.22386 10 7 9.77614 7 9.5ZM7.5 5C7.22386 5 7 5.22386 7 5.5C7 5.77614 7.22386 6 7.5 6H11.5C11.7761 6 12 5.77614 12 5.5C12 5.22386 11.7761 5 11.5 5H7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default IdCardIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ImageIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5C1 1.67157 1.67157 1 2.5 1ZM2.5 2C2.22386 2 2 2.22386 2 2.5V8.3636L3.6818 6.6818C3.76809 6.59551 3.88572 6.54797 4.00774 6.55007C4.12975 6.55216 4.24568 6.60372 4.32895 6.69293L7.87355 10.4901L10.6818 7.6818C10.8575 7.50607 11.1425 7.50607 11.3182 7.6818L13 9.3636V2.5C13 2.22386 12.7761 2 12.5 2H2.5ZM2 12.5V9.6364L3.98887 7.64753L7.5311 11.4421L8.94113 13H2.5C2.22386 13 2 12.7761 2 12.5ZM12.5 13H10.155L8.48336 11.153L11 8.6364L13 10.6364V12.5C13 12.7761 12.7761 13 12.5 13ZM6.64922 5.5C6.64922 5.03013 7.03013 4.64922 7.5 4.64922C7.96987 4.64922 8.35078 5.03013 8.35078 5.5C8.35078 5.96987 7.96987 6.35078 7.5 6.35078C7.03013 6.35078 6.64922 5.96987 6.64922 5.5ZM7.5 3.74922C6.53307 3.74922 5.74922 4.53307 5.74922 5.5C5.74922 6.46693 6.53307 7.25078 7.5 7.25078C8.46693 7.25078 9.25078 6.46693 9.25078 5.5C9.25078 4.53307 8.46693 3.74922 7.5 3.74922Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ImageIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const InfoCircledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM8.24992 4.49999C8.24992 4.9142 7.91413 5.24999 7.49992 5.24999C7.08571 5.24999 6.74992 4.9142 6.74992 4.49999C6.74992 4.08577 7.08571 3.74999 7.49992 3.74999C7.91413 3.74999 8.24992 4.08577 8.24992 4.49999ZM6.00003 5.99999H6.50003H7.50003C7.77618 5.99999 8.00003 6.22384 8.00003 6.49999V9.99999H8.50003H9.00003V11H8.50003H7.50003H6.50003H6.00003V9.99999H6.50003H7.00003V6.99999H6.50003H6.00003V5.99999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default InfoCircledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const InputIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.5 1C6.22386 1 6 1.22386 6 1.5C6 1.77614 6.22386 2 6.5 2C7.12671 2 7.45718 2.20028 7.65563 2.47812C7.8781 2.78957 8 3.28837 8 4V11C8 11.7116 7.8781 12.2104 7.65563 12.5219C7.45718 12.7997 7.12671 13 6.5 13C6.22386 13 6 13.2239 6 13.5C6 13.7761 6.22386 14 6.5 14C7.37329 14 8.04282 13.7003 8.46937 13.1031C8.47976 13.0886 8.48997 13.0739 8.5 13.0591C8.51003 13.0739 8.52024 13.0886 8.53063 13.1031C8.95718 13.7003 9.62671 14 10.5 14C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13C9.87329 13 9.54282 12.7997 9.34437 12.5219C9.1219 12.2104 9 11.7116 9 11V4C9 3.28837 9.1219 2.78957 9.34437 2.47812C9.54282 2.20028 9.87329 2 10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1C9.62671 1 8.95718 1.29972 8.53063 1.89688C8.52024 1.91143 8.51003 1.92611 8.5 1.9409C8.48997 1.92611 8.47976 1.91143 8.46937 1.89688C8.04282 1.29972 7.37329 1 6.5 1ZM14 5H11V4H14C14.5523 4 15 4.44772 15 5V10C15 10.5523 14.5523 11 14 11H11V10H14V5ZM6 4V5H1L1 10H6V11H1C0.447715 11 0 10.5523 0 10V5C0 4.44772 0.447715 4 1 4H6Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default InputIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const InstagramLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12.9091 12.909C13.2365 12.5817 13.4918 12.1895 13.6588 11.7577C13.8195 11.3443 13.9294 10.8718 13.961 10.1799C13.9926 9.48665 14.0001 9.26529 14.0001 7.50001C14.0001 5.73473 13.9926 5.51328 13.961 4.82008C13.9294 4.12821 13.8195 3.65573 13.6588 3.24228C13.4956 2.80857 13.2398 2.41567 12.9091 2.091C12.5844 1.76028 12.1915 1.50437 11.7578 1.34113C11.3443 1.18056 10.8718 1.0707 10.1799 1.03924C9.48675 1.00748 9.26537 1 7.50006 1C5.73476 1 5.51333 1.00748 4.82014 1.03912C4.12826 1.0707 3.65578 1.18056 3.24233 1.34125C2.80862 1.50447 2.41573 1.76032 2.09105 2.09098C1.76032 2.41563 1.5044 2.80852 1.34113 3.24225C1.18056 3.65573 1.0707 4.12821 1.03924 4.82008C1.00748 5.51328 1 5.73471 1 7.50001C1 9.26532 1.00748 9.48675 1.03924 10.1799C1.07083 10.8718 1.18069 11.3443 1.34138 11.7577C1.5046 12.1915 1.76045 12.5843 2.09111 12.909C2.41578 13.2397 2.80867 13.4955 3.24238 13.6587C3.65586 13.8194 4.12834 13.9293 4.82019 13.9609C5.51348 13.9925 5.73483 14 7.50012 14C9.2654 14 9.48685 13.9925 10.18 13.9609C10.8719 13.9293 11.3444 13.8194 11.7578 13.6587C12.1896 13.4917 12.5818 13.2364 12.9091 12.909ZM1.99949 6.73496C1.99974 6.94524 2.00005 7.19543 2.00005 7.50002C2.00005 7.80461 1.99974 8.0548 1.99949 8.26507C1.99849 9.08596 1.99824 9.29856 2.01963 9.7655C2.04625 10.3509 2.07823 10.7811 2.17588 11.1053C2.26976 11.417 2.37505 11.7342 2.7188 12.1171C3.06255 12.4999 3.39411 12.6733 3.81645 12.8007C4.23879 12.928 4.7696 12.9554 5.23052 12.9764C5.75332 13.0003 5.96052 13.0002 7.05714 12.9999L7.50006 12.9999C7.79304 12.9999 8.03569 13.0001 8.2409 13.0004C9.08195 13.0013 9.29425 13.0015 9.76575 12.9799C10.3512 12.9533 10.7814 12.9213 11.1056 12.8237C11.4173 12.7298 11.7345 12.6245 12.1173 12.2807C12.5001 11.937 12.6735 11.6054 12.8009 11.1831C12.9283 10.7607 12.9557 10.2299 12.9767 9.76902C13.0005 9.24689 13.0004 9.04027 13.0002 7.94749V7.94738L13.0001 7.50039L13.0001 7.05747C13.0004 5.96085 13.0005 5.75365 12.9766 5.23085C12.9556 4.76993 12.9282 4.23912 12.8009 3.81678C12.6735 3.39445 12.5001 3.06288 12.1173 2.71913C11.7345 2.37538 11.4172 2.27009 11.1056 2.17621C10.7813 2.07856 10.3511 2.04658 9.76571 2.01996C9.29421 1.99836 9.08194 1.99859 8.24092 1.99951H8.24092C8.0357 1.99974 7.79305 2.00001 7.50006 2.00001L7.05704 1.99993C5.96051 1.99964 5.75331 1.99958 5.23052 2.02343C4.7696 2.04446 4.23879 2.07183 3.81645 2.19921C3.39411 2.32659 3.06255 2.49999 2.7188 2.88281C2.37505 3.26562 2.26976 3.58286 2.17588 3.89453C2.07823 4.21874 2.04625 4.64894 2.01963 5.23437C1.99824 5.70131 1.99849 5.91401 1.99949 6.73496ZM7.49996 5.25015C6.25741 5.25015 5.25012 6.25744 5.25012 7.49999C5.25012 8.74254 6.25741 9.74983 7.49996 9.74983C8.74251 9.74983 9.7498 8.74254 9.7498 7.49999C9.7498 6.25744 8.74251 5.25015 7.49996 5.25015ZM4.25012 7.49999C4.25012 5.70515 5.70512 4.25015 7.49996 4.25015C9.2948 4.25015 10.7498 5.70515 10.7498 7.49999C10.7498 9.29483 9.2948 10.7498 7.49996 10.7498C5.70512 10.7498 4.25012 9.29483 4.25012 7.49999ZM10.9697 4.7803C11.3839 4.7803 11.7197 4.44452 11.7197 4.0303C11.7197 3.61609 11.3839 3.2803 10.9697 3.2803C10.5555 3.2803 10.2197 3.61609 10.2197 4.0303C10.2197 4.44452 10.5555 4.7803 10.9697 4.7803Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default InstagramLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const KeyboardIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M13.5 4H1.5C1.22386 4 1 4.22386 1 4.5V10.5C1 10.7761 1.22386 11 1.5 11H13.5C13.7761 11 14 10.7761 14 10.5V4.5C14 4.22386 13.7761 4 13.5 4ZM1.5 3C0.671573 3 0 3.67157 0 4.5V10.5C0 11.3284 0.671573 12 1.5 12H13.5C14.3284 12 15 11.3284 15 10.5V4.5C15 3.67157 14.3284 3 13.5 3H1.5ZM2 5H3V6H2V5ZM5 5H4V6H5V5ZM6 5H7V6H6V5ZM9 5H8V6H9V5ZM10 5H11V6H10V5ZM13 5H12V6H13V5ZM11 7H12V8H11V7ZM13 9H12V10H13V9ZM9 7H10V8H9V7ZM8 7H7V8H8V7ZM5 7H6V8H5V7ZM4 7H3V8H4V7ZM2 9H3V10H2V9ZM11 9H4V10H11V9Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default KeyboardIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LapTimerIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.49998 0.5C5.49998 0.223858 5.72383 0 5.99998 0H7.49998H8.99998C9.27612 0 9.49998 0.223858 9.49998 0.5C9.49998 0.776142 9.27612 1 8.99998 1H7.99998V2.11922C9.09832 2.20409 10.119 2.56622 10.992 3.13572C11.0116 3.10851 11.0336 3.08252 11.058 3.05806L12.058 2.05806C12.3021 1.81398 12.6978 1.81398 12.9419 2.05806C13.186 2.30214 13.186 2.69786 12.9419 2.94194L11.967 3.91682C13.1595 5.07925 13.9 6.70314 13.9 8.49998C13.9 12.0346 11.0346 14.9 7.49998 14.9C3.96535 14.9 1.09998 12.0346 1.09998 8.49998C1.09998 5.13361 3.69904 2.3743 6.99998 2.11922V1H5.99998C5.72383 1 5.49998 0.776142 5.49998 0.5ZM2.09998 8.49998C2.09998 5.51764 4.51764 3.09998 7.49998 3.09998C10.4823 3.09998 12.9 5.51764 12.9 8.49998C12.9 11.4823 10.4823 13.9 7.49998 13.9C4.51764 13.9 2.09998 11.4823 2.09998 8.49998ZM7.49998 8.49998V4.09998C5.06992 4.09998 3.09998 6.06992 3.09998 8.49998C3.09998 10.93 5.06992 12.9 7.49998 12.9C8.715 12.9 9.815 12.4075 10.6112 11.6112L7.49998 8.49998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LapTimerIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LaptopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 4.25C2 4.11193 2.11193 4 2.25 4H12.75C12.8881 4 13 4.11193 13 4.25V11.5H2V4.25ZM2.25 3C1.55964 3 1 3.55964 1 4.25V12H0V12.5C0 12.7761 0.223858 13 0.5 13H14.5C14.7761 13 15 12.7761 15 12.5V12H14V4.25C14 3.55964 13.4404 3 12.75 3H2.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LaptopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LayersIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.75432 0.819537C7.59742 0.726821 7.4025 0.726821 7.24559 0.819537L1.74559 4.06954C1.59336 4.15949 1.49996 4.32317 1.49996 4.5C1.49996 4.67683 1.59336 4.84051 1.74559 4.93046L7.24559 8.18046C7.4025 8.27318 7.59742 8.27318 7.75432 8.18046L13.2543 4.93046C13.4066 4.84051 13.5 4.67683 13.5 4.5C13.5 4.32317 13.4066 4.15949 13.2543 4.06954L7.75432 0.819537ZM7.49996 7.16923L2.9828 4.5L7.49996 1.83077L12.0171 4.5L7.49996 7.16923ZM1.5695 7.49564C1.70998 7.2579 2.01659 7.17906 2.25432 7.31954L7.49996 10.4192L12.7456 7.31954C12.9833 7.17906 13.2899 7.2579 13.4304 7.49564C13.5709 7.73337 13.4921 8.03998 13.2543 8.18046L7.75432 11.4305C7.59742 11.5232 7.4025 11.5232 7.24559 11.4305L1.74559 8.18046C1.50786 8.03998 1.42901 7.73337 1.5695 7.49564ZM1.56949 10.4956C1.70998 10.2579 2.01658 10.1791 2.25432 10.3195L7.49996 13.4192L12.7456 10.3195C12.9833 10.1791 13.2899 10.2579 13.4304 10.4956C13.5709 10.7334 13.4921 11.04 13.2543 11.1805L7.75432 14.4305C7.59742 14.5232 7.4025 14.5232 7.24559 14.4305L1.74559 11.1805C1.50785 11.04 1.42901 10.7334 1.56949 10.4956Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LayersIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LayoutIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9 2H6V13H9V2ZM10 2V13H12.5C12.7761 13 13 12.7761 13 12.5V2.5C13 2.22386 12.7761 2 12.5 2H10ZM2.5 2H5V13H2.5C2.22386 13 2 12.7761 2 12.5V2.5C2 2.22386 2.22386 2 2.5 2ZM2.5 1C1.67157 1 1 1.67157 1 2.5V12.5C1 13.3284 1.67157 14 2.5 14H12.5C13.3284 14 14 13.3284 14 12.5V2.5C14 1.67157 13.3284 1 12.5 1H2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LayoutIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LetterCaseCapitalizeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.68979 2.75C3.89667 2.74979 4.08232 2.87701 4.15679 3.07003L7.36662 11.39C7.46602 11.6477 7.33774 11.9371 7.0801 12.0365C6.82247 12.1359 6.53304 12.0076 6.43365 11.75L5.3825 9.02537H2.01133L0.966992 11.749C0.868128 12.0068 0.578964 12.1357 0.321126 12.0369C0.0632878 11.938 -0.0655864 11.6488 0.0332774 11.391L3.22344 3.07099C3.29751 2.87782 3.4829 2.75021 3.68979 2.75ZM3.69174 4.64284L5.05458 8.17537H2.33724L3.69174 4.64284ZM10.8989 5.20703C9.25818 5.20703 8.00915 6.68569 8.00915 8.60972C8.00915 10.6337 9.35818 12.0124 10.8989 12.0124C11.7214 12.0124 12.5744 11.6692 13.1543 11.0219V11.53C13.1543 11.7785 13.3557 11.98 13.6043 11.98C13.8528 11.98 14.0543 11.7785 14.0543 11.53V5.72C14.0543 5.47147 13.8528 5.27 13.6043 5.27C13.3557 5.27 13.1543 5.47147 13.1543 5.72V6.22317C12.6054 5.60095 11.7924 5.20703 10.8989 5.20703ZM13.1543 9.79823V7.30195C12.7639 6.58101 11.9414 6.05757 11.0868 6.05757C10.1088 6.05757 9.03503 6.96581 9.03503 8.60955C9.03503 10.1533 10.0088 11.1615 11.0868 11.1615C11.9701 11.1615 12.7719 10.4952 13.1543 9.79823Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LetterCaseCapitalizeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LetterCaseLowercaseIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.69899 5.20703C2.05823 5.20703 0.809204 6.68569 0.809204 8.60972C0.809204 10.6337 2.15823 12.0124 3.69899 12.0124C4.52126 12.0124 5.37402 11.6693 5.9539 11.0223V11.53C5.9539 11.7785 6.15537 11.98 6.4039 11.98C6.65243 11.98 6.8539 11.7785 6.8539 11.53V5.72001C6.8539 5.47149 6.65243 5.27001 6.4039 5.27001C6.15537 5.27001 5.9539 5.47149 5.9539 5.72001V6.22269C5.40506 5.60075 4.59218 5.20703 3.69899 5.20703ZM5.9539 9.799V7.30117C5.56339 6.58064 4.74118 6.05757 3.8868 6.05757C2.9089 6.05757 1.83508 6.96581 1.83508 8.60955C1.83508 10.1533 2.80889 11.1615 3.8868 11.1615C4.76984 11.1615 5.57141 10.4957 5.9539 9.799ZM10.799 5.20703C9.15823 5.20703 7.9092 6.68569 7.9092 8.60972C7.9092 10.6337 9.25823 12.0124 10.799 12.0124C11.6215 12.0124 12.4744 11.6692 13.0543 11.0218V11.53C13.0543 11.7785 13.2558 11.98 13.5043 11.98C13.7529 11.98 13.9543 11.7785 13.9543 11.53V5.72C13.9543 5.47147 13.7529 5.27 13.5043 5.27C13.2558 5.27 13.0543 5.47147 13.0543 5.72V6.22318C12.5055 5.60095 11.6924 5.20703 10.799 5.20703ZM13.0543 9.79822V7.30196C12.664 6.58102 11.8415 6.05757 10.9868 6.05757C10.0089 6.05757 8.93508 6.96581 8.93508 8.60955C8.93508 10.1533 9.90889 11.1615 10.9868 11.1615C11.8702 11.1615 12.672 10.4952 13.0543 9.79822Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LetterCaseLowercaseIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LetterCaseToggleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.2895 2.75C11.4964 2.74979 11.6821 2.87701 11.7565 3.07003L14.9664 11.39C15.0657 11.6477 14.9375 11.9371 14.6798 12.0365C14.4222 12.1359 14.1328 12.0076 14.0334 11.75L12.9822 9.02537H9.61106L8.56672 11.749C8.46786 12.0068 8.1787 12.1357 7.92086 12.0369C7.66302 11.938 7.53415 11.6488 7.63301 11.391L10.8232 3.07099C10.8972 2.87782 11.0826 2.75021 11.2895 2.75ZM11.2915 4.64284L12.6543 8.17537H9.93698L11.2915 4.64284ZM2.89895 5.20703C1.25818 5.20703 0.00915527 6.68569 0.00915527 8.60972C0.00915527 10.6337 1.35818 12.0124 2.89895 12.0124C3.72141 12.0124 4.57438 11.6692 5.15427 11.0219V11.53C5.15427 11.7785 5.35574 11.98 5.60427 11.98C5.8528 11.98 6.05427 11.7785 6.05427 11.53V5.72C6.05427 5.47147 5.8528 5.27 5.60427 5.27C5.35574 5.27 5.15427 5.47147 5.15427 5.72V6.22317C4.60543 5.60095 3.79236 5.20703 2.89895 5.20703ZM5.15427 9.79823V7.30195C4.76393 6.58101 3.94144 6.05757 3.08675 6.05757C2.10885 6.05757 1.03503 6.96581 1.03503 8.60955C1.03503 10.1533 2.00885 11.1615 3.08675 11.1615C3.97011 11.1615 4.77195 10.4952 5.15427 9.79823Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LetterCaseToggleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LetterCaseUppercaseIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.6255 2.75C3.83478 2.75 4.02192 2.88034 4.09448 3.07664L7.16985 11.3962C7.2656 11.6552 7.13324 11.9428 6.87423 12.0386C6.61522 12.1343 6.32763 12.002 6.23188 11.7429L5.22387 9.01603H2.02712L1.01911 11.7429C0.923362 12.002 0.635774 12.1343 0.376762 12.0386C0.117749 11.9428 -0.0146052 11.6552 0.0811401 11.3962L3.15651 3.07664C3.22908 2.88034 3.41621 2.75 3.6255 2.75ZM3.6255 4.69207L4.90966 8.16603H2.34133L3.6255 4.69207ZM11.3719 2.75C11.5811 2.75 11.7683 2.88034 11.8408 3.07664L14.9162 11.3962C15.012 11.6552 14.8796 11.9428 14.6206 12.0386C14.3616 12.1343 14.074 12.002 13.9782 11.7429L12.9702 9.01603H9.77348L8.76547 11.7429C8.66972 12.002 8.38213 12.1343 8.12312 12.0386C7.86411 11.9428 7.73175 11.6552 7.8275 11.3962L10.9029 3.07664C10.9754 2.88034 11.1626 2.75 11.3719 2.75ZM11.3719 4.69207L12.656 8.16603H10.0877L11.3719 4.69207Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LetterCaseUppercaseIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LetterSpacingIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.55293 0.999969C4.75295 0.999969 4.93372 1.11917 5.0125 1.30301L8.01106 8.29982C8.11984 8.55363 8.00226 8.84757 7.74844 8.95635C7.49463 9.06512 7.20069 8.94754 7.09191 8.69373L6.11613 6.41685H2.98973L2.01395 8.69373C1.90517 8.94754 1.61123 9.06512 1.35742 8.95635C1.1036 8.84757 0.986023 8.55363 1.0948 8.29982L4.09336 1.30301C4.17214 1.11917 4.35291 0.999969 4.55293 0.999969ZM4.55293 2.76929L5.75186 5.56685H3.354L4.55293 2.76929ZM11.0562 9.00214C11.2617 9.00214 11.4463 8.87633 11.5215 8.68502L14.2733 1.68299C14.3743 1.42598 14.2478 1.13575 13.9908 1.03475C13.7338 0.933747 13.4436 1.06021 13.3426 1.31722L11.0562 7.13514L8.76973 1.31722C8.66873 1.06021 8.3785 0.933747 8.1215 1.03475C7.86449 1.13575 7.73802 1.42598 7.83902 1.68299L10.5908 8.68502C10.666 8.87633 10.8506 9.00214 11.0562 9.00214ZM14.9537 12.4999C14.9537 12.606 14.9115 12.7077 14.8365 12.7828L12.8365 14.7828C12.6803 14.939 12.4271 14.939 12.2708 14.7828C12.1146 14.6265 12.1146 14.3733 12.2708 14.2171L13.588 12.8999H1.51937L2.83653 14.2171C2.99274 14.3733 2.99274 14.6265 2.83653 14.7828C2.68032 14.939 2.42705 14.939 2.27084 14.7828L0.270843 12.7828C0.195828 12.7077 0.153687 12.606 0.153687 12.4999C0.153687 12.3938 0.195828 12.2921 0.270843 12.2171L2.27084 10.2171C2.42705 10.0609 2.68032 10.0609 2.83653 10.2171C2.99274 10.3733 2.99274 10.6265 2.83653 10.7828L1.51937 12.0999L13.588 12.0999L12.2708 10.7828C12.1146 10.6265 12.1146 10.3733 12.2708 10.2171C12.4271 10.0609 12.6803 10.0609 12.8365 10.2171L14.8365 12.2171C14.9115 12.2921 14.9537 12.3938 14.9537 12.4999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LetterSpacingIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LightningBoltIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.69667 0.0403541C8.90859 0.131038 9.03106 0.354857 8.99316 0.582235L8.0902 6.00001H12.5C12.6893 6.00001 12.8625 6.10701 12.9472 6.27641C13.0319 6.4458 13.0136 6.6485 12.8999 6.80001L6.89997 14.8C6.76167 14.9844 6.51521 15.0503 6.30328 14.9597C6.09135 14.869 5.96888 14.6452 6.00678 14.4178L6.90974 9H2.49999C2.31061 9 2.13748 8.893 2.05278 8.72361C1.96809 8.55422 1.98636 8.35151 2.09999 8.2L8.09997 0.200038C8.23828 0.0156255 8.48474 -0.0503301 8.69667 0.0403541ZM3.49999 8.00001H7.49997C7.64695 8.00001 7.78648 8.06467 7.88148 8.17682C7.97648 8.28896 8.01733 8.43723 7.99317 8.5822L7.33027 12.5596L11.5 7.00001H7.49997C7.353 7.00001 7.21347 6.93534 7.11846 6.8232C7.02346 6.71105 6.98261 6.56279 7.00678 6.41781L7.66968 2.44042L3.49999 8.00001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LightningBoltIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LineHeightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.78233 2.21713C3.70732 2.14212 3.60557 2.09998 3.49949 2.09998C3.3934 2.09998 3.29166 2.14212 3.21664 2.21713L1.21664 4.21713C1.06044 4.37334 1.06044 4.62661 1.21664 4.78282C1.37285 4.93903 1.62612 4.93903 1.78233 4.78282L3.09949 3.46566L3.09949 11.5343L1.78233 10.2171C1.62612 10.0609 1.37285 10.0609 1.21664 10.2171C1.06043 10.3733 1.06043 10.6266 1.21664 10.7828L3.21664 12.7828C3.29166 12.8578 3.3934 12.9 3.49949 12.9C3.60557 12.9 3.70731 12.8578 3.78233 12.7828L5.78233 10.7828C5.93854 10.6266 5.93854 10.3733 5.78233 10.2171C5.62612 10.0609 5.37285 10.0609 5.21664 10.2171L3.89949 11.5343L3.89949 3.46566L5.21664 4.78282C5.37285 4.93903 5.62612 4.93903 5.78233 4.78282C5.93854 4.62661 5.93854 4.37334 5.78233 4.21713L3.78233 2.21713ZM8.49998 3.99997C8.22383 3.99997 7.99998 4.22382 7.99998 4.49997C7.99998 4.77611 8.22383 4.99997 8.49998 4.99997H14.5C14.7761 4.99997 15 4.77611 15 4.49997C15 4.22382 14.7761 3.99997 14.5 3.99997H8.49998ZM7.99998 7.49997C7.99998 7.22382 8.22383 6.99997 8.49998 6.99997H14.5C14.7761 6.99997 15 7.22382 15 7.49997C15 7.77611 14.7761 7.99997 14.5 7.99997H8.49998C8.22383 7.99997 7.99998 7.77611 7.99998 7.49997ZM8.49998 9.99997C8.22383 9.99997 7.99998 10.2238 7.99998 10.5C7.99998 10.7761 8.22383 11 8.49998 11H14.5C14.7761 11 15 10.7761 15 10.5C15 10.2238 14.7761 9.99997 14.5 9.99997H8.49998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LineHeightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Link1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.62471 4.00001L4.56402 4.00001C4.04134 3.99993 3.70687 3.99988 3.4182 4.055C2.2379 4.28039 1.29846 5.17053 1.05815 6.33035C0.999538 6.61321 0.999604 6.93998 0.999703 7.43689L0.999711 7.50001L0.999703 7.56313C0.999604 8.06004 0.999538 8.38681 1.05815 8.66967C1.29846 9.8295 2.2379 10.7196 3.4182 10.945C3.70688 11.0001 4.04135 11.0001 4.56403 11L4.62471 11H5.49971C5.77585 11 5.99971 10.7762 5.99971 10.5C5.99971 10.2239 5.77585 10 5.49971 10H4.62471C4.02084 10 3.78907 9.99777 3.60577 9.96277C2.80262 9.8094 2.19157 9.21108 2.03735 8.46678C2.00233 8.29778 1.99971 8.08251 1.99971 7.50001C1.99971 6.91752 2.00233 6.70225 2.03735 6.53324C2.19157 5.78895 2.80262 5.19062 3.60577 5.03725C3.78907 5.00225 4.02084 5.00001 4.62471 5.00001H5.49971C5.77585 5.00001 5.99971 4.77615 5.99971 4.50001C5.99971 4.22387 5.77585 4.00001 5.49971 4.00001H4.62471ZM10.3747 5.00001C10.9786 5.00001 11.2104 5.00225 11.3937 5.03725C12.1968 5.19062 12.8079 5.78895 12.9621 6.53324C12.9971 6.70225 12.9997 6.91752 12.9997 7.50001C12.9997 8.08251 12.9971 8.29778 12.9621 8.46678C12.8079 9.21108 12.1968 9.8094 11.3937 9.96277C11.2104 9.99777 10.9786 10 10.3747 10H9.49971C9.22357 10 8.99971 10.2239 8.99971 10.5C8.99971 10.7762 9.22357 11 9.49971 11H10.3747L10.4354 11C10.9581 11.0001 11.2925 11.0001 11.5812 10.945C12.7615 10.7196 13.701 9.8295 13.9413 8.66967C13.9999 8.38681 13.9998 8.06005 13.9997 7.56314L13.9997 7.50001L13.9997 7.43688C13.9998 6.93998 13.9999 6.61321 13.9413 6.33035C13.701 5.17053 12.7615 4.28039 11.5812 4.055C11.2925 3.99988 10.9581 3.99993 10.4354 4.00001L10.3747 4.00001H9.49971C9.22357 4.00001 8.99971 4.22387 8.99971 4.50001C8.99971 4.77615 9.22357 5.00001 9.49971 5.00001H10.3747ZM5.00038 7C4.72424 7 4.50038 7.22386 4.50038 7.5C4.50038 7.77614 4.72424 8 5.00038 8H10.0004C10.2765 8 10.5004 7.77614 10.5004 7.5C10.5004 7.22386 10.2765 7 10.0004 7H5.00038Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Link1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Link2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8.51194 3.00541C9.18829 2.54594 10.0435 2.53694 10.6788 2.95419C10.8231 3.04893 10.9771 3.1993 11.389 3.61119C11.8009 4.02307 11.9513 4.17714 12.046 4.32141C12.4633 4.95675 12.4543 5.81192 11.9948 6.48827C11.8899 6.64264 11.7276 6.80811 11.3006 7.23511L10.6819 7.85383C10.4867 8.04909 10.4867 8.36567 10.6819 8.56093C10.8772 8.7562 11.1938 8.7562 11.389 8.56093L12.0077 7.94221L12.0507 7.89929C12.4203 7.52976 12.6568 7.2933 12.822 7.0502C13.4972 6.05623 13.5321 4.76252 12.8819 3.77248C12.7233 3.53102 12.4922 3.30001 12.1408 2.94871L12.0961 2.90408L12.0515 2.85942C11.7002 2.508 11.4692 2.27689 11.2277 2.11832C10.2377 1.46813 8.94398 1.50299 7.95001 2.17822C7.70691 2.34336 7.47044 2.57991 7.1009 2.94955L7.058 2.99247L6.43928 3.61119C6.24401 3.80645 6.24401 4.12303 6.43928 4.31829C6.63454 4.51355 6.95112 4.51355 7.14638 4.31829L7.7651 3.69957C8.1921 3.27257 8.35757 3.11027 8.51194 3.00541ZM4.31796 7.14672C4.51322 6.95146 4.51322 6.63487 4.31796 6.43961C4.12269 6.24435 3.80611 6.24435 3.61085 6.43961L2.99213 7.05833L2.94922 7.10124C2.57957 7.47077 2.34303 7.70724 2.17788 7.95035C1.50265 8.94432 1.4678 10.238 2.11799 11.2281C2.27656 11.4695 2.50766 11.7005 2.8591 12.0518L2.90374 12.0965L2.94837 12.1411C3.29967 12.4925 3.53068 12.7237 3.77214 12.8822C4.76219 13.5324 6.05589 13.4976 7.04986 12.8223C7.29296 12.6572 7.52943 12.4206 7.89896 12.051L7.89897 12.051L7.94188 12.0081L8.5606 11.3894C8.75586 11.1941 8.75586 10.8775 8.5606 10.6823C8.36533 10.487 8.04875 10.487 7.85349 10.6823L7.23477 11.301C6.80777 11.728 6.6423 11.8903 6.48794 11.9951C5.81158 12.4546 4.95642 12.4636 4.32107 12.0464C4.17681 11.9516 4.02274 11.8012 3.61085 11.3894C3.19896 10.9775 3.0486 10.8234 2.95385 10.6791C2.53661 10.0438 2.54561 9.18863 3.00507 8.51227C3.10993 8.35791 3.27224 8.19244 3.69924 7.76544L4.31796 7.14672ZM9.62172 6.08558C9.81698 5.89032 9.81698 5.57373 9.62172 5.37847C9.42646 5.18321 9.10988 5.18321 8.91461 5.37847L5.37908 8.91401C5.18382 9.10927 5.18382 9.42585 5.37908 9.62111C5.57434 9.81637 5.89092 9.81637 6.08619 9.62111L9.62172 6.08558Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Link2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LinkBreak1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.3536 2.35355C13.5488 2.15829 13.5488 1.84171 13.3536 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L1.64645 12.6464C1.45118 12.8417 1.45118 13.1583 1.64645 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L13.3536 2.35355ZM2.03735 8.46678C2.17398 9.12619 2.66918 9.67103 3.33886 9.89338L2.57833 10.6539C1.80843 10.2534 1.23784 9.53693 1.05815 8.66967C0.999538 8.38681 0.999604 8.06004 0.999703 7.56313L0.999711 7.50001L0.999703 7.43689C0.999604 6.93998 0.999538 6.61321 1.05815 6.33035C1.29846 5.17053 2.2379 4.28039 3.4182 4.055C3.70687 3.99988 4.04134 3.99993 4.56402 4.00001L4.62471 4.00001H5.49971C5.77585 4.00001 5.99971 4.22387 5.99971 4.50001C5.99971 4.77615 5.77585 5.00001 5.49971 5.00001H4.62471C4.02084 5.00001 3.78907 5.00225 3.60577 5.03725C2.80262 5.19062 2.19157 5.78895 2.03735 6.53324C2.00233 6.70225 1.99971 6.91752 1.99971 7.50001C1.99971 8.08251 2.00233 8.29778 2.03735 8.46678ZM12.9621 6.53324C12.8255 5.87397 12.3304 5.32922 11.661 5.10679L12.4215 4.34631C13.1912 4.74686 13.7616 5.46323 13.9413 6.33035C13.9999 6.61321 13.9998 6.93998 13.9997 7.43688L13.9997 7.50001L13.9997 7.56314C13.9998 8.06005 13.9999 8.38681 13.9413 8.66967C13.701 9.8295 12.7615 10.7196 11.5812 10.945C11.2925 11.0001 10.9581 11.0001 10.4354 11L10.3747 11H9.49971C9.22357 11 8.99971 10.7762 8.99971 10.5C8.99971 10.2239 9.22357 10 9.49971 10H10.3747C10.9786 10 11.2104 9.99777 11.3937 9.96277C12.1968 9.8094 12.8079 9.21108 12.9621 8.46678C12.9971 8.29778 12.9997 8.08251 12.9997 7.50001C12.9997 6.91752 12.9971 6.70225 12.9621 6.53324Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LinkBreak1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LinkBreak2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.50021 0C4.77635 0 5.0002 0.223853 5.0002 0.49999V2.49995C5.0002 2.77609 4.77635 2.99994 4.50021 2.99994C4.22408 2.99994 4.00022 2.77609 4.00022 2.49995V0.49999C4.00022 0.223853 4.22408 0 4.50021 0ZM0.646451 0.64647C0.84171 0.451212 1.15829 0.451212 1.35354 0.64647L2.85351 2.14644C3.04877 2.3417 3.04877 2.65827 2.85351 2.85353C2.65826 3.04879 2.34168 3.04879 2.14642 2.85353L0.646452 1.35356C0.451193 1.1583 0.451193 0.841728 0.646451 0.64647ZM0.00030517 4.49991C0.00030517 4.22377 0.224158 3.99992 0.500295 3.99992H2.50025C2.77639 3.99992 3.00024 4.22377 3.00024 4.49991C3.00024 4.77605 2.77639 4.9999 2.50025 4.9999H0.500295C0.224158 4.9999 0.00030517 4.77605 0.00030517 4.49991ZM12.0001 10.4998C12.0001 10.2236 12.2239 9.9998 12.5001 9.9998H14.5C14.7761 9.9998 15 10.2236 15 10.4998C15 10.7759 14.7761 10.9998 14.5 10.9998H12.5001C12.2239 10.9998 12.0001 10.7759 12.0001 10.4998ZM10.5001 11.9998C10.7762 11.9998 11.0001 12.2236 11.0001 12.4997V14.4997C11.0001 14.7758 10.7762 14.9997 10.5001 14.9997C10.224 14.9997 10.0001 14.7758 10.0001 14.4997V12.4997C10.0001 12.2236 10.224 11.9998 10.5001 11.9998ZM12.1462 12.1462C12.3415 11.951 12.658 11.951 12.8533 12.1462L14.3533 13.6462C14.5485 13.8415 14.5485 14.158 14.3533 14.3533C14.158 14.5485 13.8414 14.5485 13.6462 14.3533L12.1462 12.8533C11.951 12.6581 11.951 12.3415 12.1462 12.1462ZM7.76478 3.69938C8.19177 3.27238 8.35724 3.11008 8.5116 3.00522C9.18794 2.54577 10.0431 2.53677 10.6784 2.95401C10.8227 3.04875 10.9767 3.19911 11.3886 3.61099C11.8005 4.02287 11.9509 4.17694 12.0456 4.3212C12.4628 4.95653 12.4539 5.81168 11.9944 6.48802C11.8895 6.64238 11.7272 6.80785 11.3002 7.23484L10.6815 7.85354C10.4863 8.0488 10.4863 8.36538 10.6815 8.56064C10.8768 8.75589 11.1934 8.75589 11.3886 8.56064L12.0073 7.94193L12.0502 7.89903C12.4199 7.5295 12.6564 7.29303 12.8216 7.04993C13.4968 6.05598 13.5316 4.7623 12.8815 3.77228C12.7229 3.53083 12.4918 3.29982 12.1404 2.94853L12.0957 2.9039L12.0511 2.85925C11.6998 2.50782 11.4688 2.27672 11.2273 2.11816C10.2373 1.46798 8.94364 1.50284 7.94968 2.17805C7.70659 2.34319 7.47012 2.57973 7.1006 2.94936L7.1006 2.94937L7.05769 2.99228L6.43898 3.61099C6.24372 3.80625 6.24372 4.12282 6.43898 4.31808C6.63424 4.51334 6.95081 4.51334 7.14607 4.31808L7.76478 3.69938ZM2.99191 7.05807L2.94899 7.10097C2.57935 7.4705 2.34282 7.70697 2.17767 7.95006C1.50246 8.94401 1.4676 10.2377 2.11778 11.2277C2.27634 11.4692 2.50744 11.7002 2.85886 12.0515L2.85888 12.0515L2.90352 12.0961L2.94815 12.1407L2.94815 12.1407L2.94817 12.1408C3.29945 12.4922 3.53045 12.7233 3.7719 12.8818C4.76193 13.532 6.0556 13.4972 7.04956 12.8219C7.29265 12.6568 7.52912 12.4203 7.89865 12.0506L7.94155 12.0077L8.56026 11.389C8.75552 11.1937 8.75552 10.8772 8.56026 10.6819C8.365 10.4867 8.04842 10.4867 7.85317 10.6819L7.23446 11.3006C6.80747 11.7276 6.642 11.8899 6.48764 11.9948C5.8113 12.4542 4.95615 12.4632 4.32082 12.046C4.17656 11.9512 4.02249 11.8009 3.61061 11.389C3.19873 10.9771 3.04837 10.8231 2.95363 10.6788C2.53639 10.0435 2.54539 9.18832 3.00484 8.51198C3.10971 8.35761 3.27201 8.19215 3.699 7.76516L4.3177 7.14645C4.51296 6.95119 4.51296 6.63462 4.3177 6.43936C4.12245 6.2441 3.80587 6.2441 3.61061 6.43936L2.99191 7.05807Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LinkBreak2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LinkNone1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.56427 3.99988C4.58422 3.99989 4.60445 3.99989 4.62496 3.99989H5.49996C5.7761 3.99989 5.99996 4.22375 5.99996 4.49989C5.99996 4.77603 5.7761 4.99989 5.49996 4.99989H4.62496C4.02108 4.99989 3.78932 5.00213 3.60601 5.03713C2.80287 5.1905 2.19181 5.78883 2.03759 6.53312C2.00257 6.70212 1.99996 6.91739 1.99996 7.49989C1.99996 8.08239 2.00257 8.29766 2.03759 8.46666C2.19181 9.21095 2.80287 9.80928 3.60601 9.96265C3.78932 9.99765 4.02108 9.99989 4.62496 9.99989H5.49996C5.7761 9.99989 5.99996 10.2237 5.99996 10.4999C5.99996 10.776 5.7761 10.9999 5.49996 10.9999H4.62496C4.60445 10.9999 4.58422 10.9999 4.56427 10.9999C4.04159 11 3.70712 11 3.41845 10.9449C2.23814 10.7195 1.29871 9.82937 1.05839 8.66955C0.999782 8.38669 0.999848 8.05992 0.999947 7.56301C0.999951 7.54227 0.999955 7.52123 0.999955 7.49989C0.999955 7.47855 0.999951 7.45751 0.999947 7.43677C0.999848 6.93986 0.999782 6.61309 1.05839 6.33023C1.29871 5.17041 2.23814 4.28027 3.41845 4.05488C3.70712 3.99976 4.04159 3.99981 4.56427 3.99988ZM11.3939 5.03713C11.2106 5.00213 10.9788 4.99989 10.375 4.99989H9.49996C9.22381 4.99989 8.99996 4.77603 8.99996 4.49989C8.99996 4.22375 9.22381 3.99989 9.49996 3.99989H10.375C10.3955 3.99989 10.4157 3.99989 10.4356 3.99988C10.9583 3.99981 11.2928 3.99976 11.5815 4.05488C12.7618 4.28027 13.7012 5.17041 13.9415 6.33023C14.0001 6.61309 14.0001 6.93985 14 7.43676C14 7.4575 14 7.47854 14 7.49989C14 7.52124 14 7.54228 14 7.56302C14.0001 8.05992 14.0001 8.38669 13.9415 8.66955C13.7012 9.82937 12.7618 10.7195 11.5815 10.9449C11.2928 11 10.9583 11 10.4356 10.9999C10.4157 10.9999 10.3955 10.9999 10.375 10.9999H9.49996C9.22381 10.9999 8.99996 10.776 8.99996 10.4999C8.99996 10.2237 9.22381 9.99989 9.49996 9.99989H10.375C10.9788 9.99989 11.2106 9.99765 11.3939 9.96265C12.197 9.80928 12.8081 9.21095 12.9623 8.46666C12.9973 8.29766 13 8.08239 13 7.49989C13 6.91739 12.9973 6.70212 12.9623 6.53312C12.8081 5.78883 12.197 5.1905 11.3939 5.03713Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LinkNone1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LinkNone2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10.6788 2.95419C10.0435 2.53694 9.18829 2.54594 8.51194 3.00541C8.35757 3.11027 8.1921 3.27257 7.7651 3.69957L7.14638 4.31829C6.95112 4.51355 6.63454 4.51355 6.43928 4.31829C6.24401 4.12303 6.24401 3.80645 6.43928 3.61119L7.058 2.99247C7.0725 2.97797 7.08679 2.96366 7.1009 2.94955C7.47044 2.57991 7.70691 2.34336 7.95001 2.17822C8.94398 1.50299 10.2377 1.46813 11.2277 2.11832C11.4692 2.27689 11.7002 2.508 12.0515 2.85942C12.0662 2.8741 12.081 2.88898 12.0961 2.90408C12.1112 2.91917 12.1261 2.93405 12.1408 2.94871C12.4922 3.30001 12.7233 3.53102 12.8819 3.77248C13.5321 4.76252 13.4972 6.05623 12.822 7.0502C12.6568 7.2933 12.4203 7.52976 12.0507 7.89929C12.0366 7.9134 12.0222 7.92771 12.0077 7.94221L11.389 8.56093C11.1938 8.7562 10.8772 8.7562 10.6819 8.56093C10.4867 8.36567 10.4867 8.04909 10.6819 7.85383L11.3006 7.23511C11.7276 6.80811 11.8899 6.64264 11.9948 6.48827C12.4543 5.81192 12.4633 4.95675 12.046 4.32141C11.9513 4.17714 11.8009 4.02307 11.389 3.61119C10.9771 3.1993 10.8231 3.04893 10.6788 2.95419ZM4.31796 6.43961C4.51322 6.63487 4.51322 6.95146 4.31796 7.14672L3.69924 7.76544C3.27224 8.19244 3.10993 8.35791 3.00507 8.51227C2.54561 9.18863 2.53661 10.0438 2.95385 10.6791C3.0486 10.8234 3.19896 10.9775 3.61085 11.3894C4.02274 11.8012 4.17681 11.9516 4.32107 12.0464C4.95642 12.4636 5.81158 12.4546 6.48794 11.9951C6.6423 11.8903 6.80777 11.728 7.23477 11.301L7.85349 10.6823C8.04875 10.487 8.36533 10.487 8.5606 10.6823C8.75586 10.8775 8.75586 11.1941 8.5606 11.3894L7.94188 12.0081C7.92738 12.0226 7.91307 12.0369 7.89897 12.051C7.52943 12.4206 7.29296 12.6572 7.04986 12.8223C6.05589 13.4976 4.76219 13.5324 3.77214 12.8822C3.53068 12.7237 3.29967 12.4925 2.94837 12.1411C2.93371 12.1264 2.91883 12.1116 2.90374 12.0965C2.88865 12.0814 2.87377 12.0665 2.8591 12.0518C2.50766 11.7005 2.27656 11.4695 2.11799 11.2281C1.4678 10.238 1.50265 8.94432 2.17788 7.95035C2.34303 7.70724 2.57957 7.47077 2.94922 7.10124C2.96333 7.08713 2.97763 7.07283 2.99213 7.05833L3.61085 6.43961C3.80611 6.24435 4.12269 6.24435 4.31796 6.43961Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LinkNone2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LinkedInLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 1C1.44772 1 1 1.44772 1 2V13C1 13.5523 1.44772 14 2 14H13C13.5523 14 14 13.5523 14 13V2C14 1.44772 13.5523 1 13 1H2ZM3.05 6H4.95V12H3.05V6ZM5.075 4.005C5.075 4.59871 4.59371 5.08 4 5.08C3.4063 5.08 2.925 4.59871 2.925 4.005C2.925 3.41129 3.4063 2.93 4 2.93C4.59371 2.93 5.075 3.41129 5.075 4.005ZM12 8.35713C12 6.55208 10.8334 5.85033 9.67449 5.85033C9.29502 5.83163 8.91721 5.91119 8.57874 6.08107C8.32172 6.21007 8.05265 6.50523 7.84516 7.01853H7.79179V6.00044H6V12.0047H7.90616V8.8112C7.8786 8.48413 7.98327 8.06142 8.19741 7.80987C8.41156 7.55832 8.71789 7.49825 8.95015 7.46774H9.02258C9.62874 7.46774 10.0786 7.84301 10.0786 8.78868V12.0047H11.9847L12 8.35713Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LinkedInLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ListBulletIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.5 5.25C1.91421 5.25 2.25 4.91421 2.25 4.5C2.25 4.08579 1.91421 3.75 1.5 3.75C1.08579 3.75 0.75 4.08579 0.75 4.5C0.75 4.91421 1.08579 5.25 1.5 5.25ZM4 4.5C4 4.22386 4.22386 4 4.5 4H13.5C13.7761 4 14 4.22386 14 4.5C14 4.77614 13.7761 5 13.5 5H4.5C4.22386 5 4 4.77614 4 4.5ZM4.5 7C4.22386 7 4 7.22386 4 7.5C4 7.77614 4.22386 8 4.5 8H13.5C13.7761 8 14 7.77614 14 7.5C14 7.22386 13.7761 7 13.5 7H4.5ZM4.5 10C4.22386 10 4 10.2239 4 10.5C4 10.7761 4.22386 11 4.5 11H13.5C13.7761 11 14 10.7761 14 10.5C14 10.2239 13.7761 10 13.5 10H4.5ZM2.25 7.5C2.25 7.91421 1.91421 8.25 1.5 8.25C1.08579 8.25 0.75 7.91421 0.75 7.5C0.75 7.08579 1.08579 6.75 1.5 6.75C1.91421 6.75 2.25 7.08579 2.25 7.5ZM1.5 11.25C1.91421 11.25 2.25 10.9142 2.25 10.5C2.25 10.0858 1.91421 9.75 1.5 9.75C1.08579 9.75 0.75 10.0858 0.75 10.5C0.75 10.9142 1.08579 11.25 1.5 11.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ListBulletIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LockClosedIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 4.63601C5 3.76031 5.24219 3.1054 5.64323 2.67357C6.03934 2.24705 6.64582 1.9783 7.5014 1.9783C8.35745 1.9783 8.96306 2.24652 9.35823 2.67208C9.75838 3.10299 10 3.75708 10 4.63325V5.99999H5V4.63601ZM4 5.99999V4.63601C4 3.58148 4.29339 2.65754 4.91049 1.99307C5.53252 1.32329 6.42675 0.978302 7.5014 0.978302C8.57583 0.978302 9.46952 1.32233 10.091 1.99162C10.7076 2.65557 11 3.57896 11 4.63325V5.99999H12C12.5523 5.99999 13 6.44771 13 6.99999V13C13 13.5523 12.5523 14 12 14H3C2.44772 14 2 13.5523 2 13V6.99999C2 6.44771 2.44772 5.99999 3 5.99999H4ZM3 6.99999H12V13H3V6.99999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LockClosedIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LockOpen1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.4986 0C6.3257 0 5.36107 0.38943 4.73753 1.19361C4.23745 1.83856 4 2.68242 4 3.63325H5C5 2.84313 5.19691 2.23312 5.5278 1.80636C5.91615 1.30552 6.55152 1 7.4986 1C8.35683 1 8.96336 1.26502 9.35846 1.68623C9.75793 2.11211 10 2.76044 10 3.63601V6H3C2.44772 6 2 6.44772 2 7V13C2 13.5523 2.44772 14 3 14H12C12.5523 14 13 13.5523 13 13V7C13 6.44771 12.5523 6 12 6H11V3.63601C11 2.58135 10.7065 1.66167 10.0878 1.0021C9.46477 0.337871 8.57061 0 7.4986 0ZM3 7H12V13H3V7Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LockOpen1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LockOpen2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9 3.63601C9 2.76044 9.24207 2.11211 9.64154 1.68623C10.0366 1.26502 10.6432 1 11.5014 1C12.4485 1 13.0839 1.30552 13.4722 1.80636C13.8031 2.23312 14 2.84313 14 3.63325H15C15 2.68242 14.7626 1.83856 14.2625 1.19361C13.6389 0.38943 12.6743 0 11.5014 0C10.4294 0 9.53523 0.337871 8.91218 1.0021C8.29351 1.66167 8 2.58135 8 3.63601V6H1C0.447715 6 0 6.44772 0 7V13C0 13.5523 0.447715 14 1 14H10C10.5523 14 11 13.5523 11 13V7C11 6.44772 10.5523 6 10 6H9V3.63601ZM1 7H10V13H1V7Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LockOpen2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const LoopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.35355 1.85355C3.54882 1.65829 3.54882 1.34171 3.35355 1.14645C3.15829 0.951184 2.84171 0.951184 2.64645 1.14645L0.646447 3.14645C0.451184 3.34171 0.451184 3.65829 0.646447 3.85355L2.64645 5.85355C2.84171 6.04882 3.15829 6.04882 3.35355 5.85355C3.54882 5.65829 3.54882 5.34171 3.35355 5.14645L2.20711 4H9.5C11.433 4 13 5.567 13 7.5C13 7.77614 13.2239 8 13.5 8C13.7761 8 14 7.77614 14 7.5C14 5.01472 11.9853 3 9.5 3H2.20711L3.35355 1.85355ZM2 7.5C2 7.22386 1.77614 7 1.5 7C1.22386 7 1 7.22386 1 7.5C1 9.98528 3.01472 12 5.5 12H12.7929L11.6464 13.1464C11.4512 13.3417 11.4512 13.6583 11.6464 13.8536C11.8417 14.0488 12.1583 14.0488 12.3536 13.8536L14.3536 11.8536C14.5488 11.6583 14.5488 11.3417 14.3536 11.1464L12.3536 9.14645C12.1583 8.95118 11.8417 8.95118 11.6464 9.14645C11.4512 9.34171 11.4512 9.65829 11.6464 9.85355L12.7929 11H5.5C3.567 11 2 9.433 2 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default LoopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MagicWandIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.9 0.499976C13.9 0.279062 13.7209 0.0999756 13.5 0.0999756C13.2791 0.0999756 13.1 0.279062 13.1 0.499976V1.09998H12.5C12.2791 1.09998 12.1 1.27906 12.1 1.49998C12.1 1.72089 12.2791 1.89998 12.5 1.89998H13.1V2.49998C13.1 2.72089 13.2791 2.89998 13.5 2.89998C13.7209 2.89998 13.9 2.72089 13.9 2.49998V1.89998H14.5C14.7209 1.89998 14.9 1.72089 14.9 1.49998C14.9 1.27906 14.7209 1.09998 14.5 1.09998H13.9V0.499976ZM11.8536 3.14642C12.0488 3.34168 12.0488 3.65826 11.8536 3.85353L10.8536 4.85353C10.6583 5.04879 10.3417 5.04879 10.1465 4.85353C9.9512 4.65827 9.9512 4.34169 10.1465 4.14642L11.1464 3.14643C11.3417 2.95116 11.6583 2.95116 11.8536 3.14642ZM9.85357 5.14642C10.0488 5.34168 10.0488 5.65827 9.85357 5.85353L2.85355 12.8535C2.65829 13.0488 2.34171 13.0488 2.14645 12.8535C1.95118 12.6583 1.95118 12.3417 2.14645 12.1464L9.14646 5.14642C9.34172 4.95116 9.65831 4.95116 9.85357 5.14642ZM13.5 5.09998C13.7209 5.09998 13.9 5.27906 13.9 5.49998V6.09998H14.5C14.7209 6.09998 14.9 6.27906 14.9 6.49998C14.9 6.72089 14.7209 6.89998 14.5 6.89998H13.9V7.49998C13.9 7.72089 13.7209 7.89998 13.5 7.89998C13.2791 7.89998 13.1 7.72089 13.1 7.49998V6.89998H12.5C12.2791 6.89998 12.1 6.72089 12.1 6.49998C12.1 6.27906 12.2791 6.09998 12.5 6.09998H13.1V5.49998C13.1 5.27906 13.2791 5.09998 13.5 5.09998ZM8.90002 0.499976C8.90002 0.279062 8.72093 0.0999756 8.50002 0.0999756C8.2791 0.0999756 8.10002 0.279062 8.10002 0.499976V1.09998H7.50002C7.2791 1.09998 7.10002 1.27906 7.10002 1.49998C7.10002 1.72089 7.2791 1.89998 7.50002 1.89998H8.10002V2.49998C8.10002 2.72089 8.2791 2.89998 8.50002 2.89998C8.72093 2.89998 8.90002 2.72089 8.90002 2.49998V1.89998H9.50002C9.72093 1.89998 9.90002 1.72089 9.90002 1.49998C9.90002 1.27906 9.72093 1.09998 9.50002 1.09998H8.90002V0.499976Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MagicWandIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MagnifyingGlassIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MagnifyingGlassIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MarginIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.49988 2.00012C1.77602 2.00012 1.99988 1.77626 1.99988 1.50012C1.99988 1.22398 1.77602 1.00012 1.49988 1.00012C1.22374 1.00012 0.999878 1.22398 0.999878 1.50012C0.999878 1.77626 1.22374 2.00012 1.49988 2.00012ZM4.49988 2.00012C4.77602 2.00012 4.99988 1.77626 4.99988 1.50012C4.99988 1.22398 4.77602 1.00012 4.49988 1.00012C4.22374 1.00012 3.99988 1.22398 3.99988 1.50012C3.99988 1.77626 4.22374 2.00012 4.49988 2.00012ZM7.99988 1.50012C7.99988 1.77626 7.77602 2.00012 7.49988 2.00012C7.22374 2.00012 6.99988 1.77626 6.99988 1.50012C6.99988 1.22398 7.22374 1.00012 7.49988 1.00012C7.77602 1.00012 7.99988 1.22398 7.99988 1.50012ZM10.4999 2.00012C10.776 2.00012 10.9999 1.77626 10.9999 1.50012C10.9999 1.22398 10.776 1.00012 10.4999 1.00012C10.2237 1.00012 9.99988 1.22398 9.99988 1.50012C9.99988 1.77626 10.2237 2.00012 10.4999 2.00012ZM13.9999 1.50012C13.9999 1.77626 13.776 2.00012 13.4999 2.00012C13.2237 2.00012 12.9999 1.77626 12.9999 1.50012C12.9999 1.22398 13.2237 1.00012 13.4999 1.00012C13.776 1.00012 13.9999 1.22398 13.9999 1.50012ZM1.49988 14.0001C1.77602 14.0001 1.99988 13.7763 1.99988 13.5001C1.99988 13.224 1.77602 13.0001 1.49988 13.0001C1.22374 13.0001 0.999878 13.224 0.999878 13.5001C0.999878 13.7763 1.22374 14.0001 1.49988 14.0001ZM1.99988 10.5001C1.99988 10.7763 1.77602 11.0001 1.49988 11.0001C1.22374 11.0001 0.999878 10.7763 0.999878 10.5001C0.999878 10.224 1.22374 10.0001 1.49988 10.0001C1.77602 10.0001 1.99988 10.224 1.99988 10.5001ZM1.49988 8.00012C1.77602 8.00012 1.99988 7.77626 1.99988 7.50012C1.99988 7.22398 1.77602 7.00012 1.49988 7.00012C1.22374 7.00012 0.999878 7.22398 0.999878 7.50012C0.999878 7.77626 1.22374 8.00012 1.49988 8.00012ZM1.99988 4.50012C1.99988 4.77626 1.77602 5.00012 1.49988 5.00012C1.22374 5.00012 0.999878 4.77626 0.999878 4.50012C0.999878 4.22398 1.22374 4.00012 1.49988 4.00012C1.77602 4.00012 1.99988 4.22398 1.99988 4.50012ZM13.4999 11.0001C13.776 11.0001 13.9999 10.7763 13.9999 10.5001C13.9999 10.224 13.776 10.0001 13.4999 10.0001C13.2237 10.0001 12.9999 10.224 12.9999 10.5001C12.9999 10.7763 13.2237 11.0001 13.4999 11.0001ZM13.9999 7.50012C13.9999 7.77626 13.776 8.00012 13.4999 8.00012C13.2237 8.00012 12.9999 7.77626 12.9999 7.50012C12.9999 7.22398 13.2237 7.00012 13.4999 7.00012C13.776 7.00012 13.9999 7.22398 13.9999 7.50012ZM13.4999 5.00012C13.776 5.00012 13.9999 4.77626 13.9999 4.50012C13.9999 4.22398 13.776 4.00012 13.4999 4.00012C13.2237 4.00012 12.9999 4.22398 12.9999 4.50012C12.9999 4.77626 13.2237 5.00012 13.4999 5.00012ZM4.99988 13.5001C4.99988 13.7763 4.77602 14.0001 4.49988 14.0001C4.22374 14.0001 3.99988 13.7763 3.99988 13.5001C3.99988 13.224 4.22374 13.0001 4.49988 13.0001C4.77602 13.0001 4.99988 13.224 4.99988 13.5001ZM7.49988 14.0001C7.77602 14.0001 7.99988 13.7763 7.99988 13.5001C7.99988 13.224 7.77602 13.0001 7.49988 13.0001C7.22374 13.0001 6.99988 13.224 6.99988 13.5001C6.99988 13.7763 7.22374 14.0001 7.49988 14.0001ZM10.9999 13.5001C10.9999 13.7763 10.776 14.0001 10.4999 14.0001C10.2237 14.0001 9.99988 13.7763 9.99988 13.5001C9.99988 13.224 10.2237 13.0001 10.4999 13.0001C10.776 13.0001 10.9999 13.224 10.9999 13.5001ZM13.4999 14.0001C13.776 14.0001 13.9999 13.7763 13.9999 13.5001C13.9999 13.224 13.776 13.0001 13.4999 13.0001C13.2237 13.0001 12.9999 13.224 12.9999 13.5001C12.9999 13.7763 13.2237 14.0001 13.4999 14.0001ZM3.99988 5.00012C3.99988 4.44784 4.44759 4.00012 4.99988 4.00012H9.99988C10.5522 4.00012 10.9999 4.44784 10.9999 5.00012V10.0001C10.9999 10.5524 10.5522 11.0001 9.99988 11.0001H4.99988C4.44759 11.0001 3.99988 10.5524 3.99988 10.0001V5.00012ZM4.99988 5.00012H9.99988V10.0001H4.99988V5.00012Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MarginIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MaskOffIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 2H14V13H1L1 2ZM0 2C0 1.44772 0.447715 1 1 1H14C14.5523 1 15 1.44772 15 2V13C15 13.5523 14.5523 14 14 14H1C0.447715 14 0 13.5523 0 13V2ZM4.875 7.5C4.875 6.05025 6.05025 4.875 7.5 4.875C8.94975 4.875 10.125 6.05025 10.125 7.5C10.125 8.94975 8.94975 10.125 7.5 10.125C6.05025 10.125 4.875 8.94975 4.875 7.5ZM7.5 3.875C5.49797 3.875 3.875 5.49797 3.875 7.5C3.875 9.50203 5.49797 11.125 7.5 11.125C9.50203 11.125 11.125 9.50203 11.125 7.5C11.125 5.49797 9.50203 3.875 7.5 3.875Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MaskOffIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MaskOnIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 1C0.447715 1 0 1.44772 0 2V13C0 13.5523 0.447715 14 1 14H14C14.5523 14 15 13.5523 15 13V2C15 1.44772 14.5523 1 14 1H1ZM7.5 10.625C9.22589 10.625 10.625 9.22589 10.625 7.5C10.625 5.77411 9.22589 4.375 7.5 4.375C5.77411 4.375 4.375 5.77411 4.375 7.5C4.375 9.22589 5.77411 10.625 7.5 10.625Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MaskOnIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MinusIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.25 7.5C2.25 7.22386 2.47386 7 2.75 7H12.25C12.5261 7 12.75 7.22386 12.75 7.5C12.75 7.77614 12.5261 8 12.25 8H2.75C2.47386 8 2.25 7.77614 2.25 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MinusIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MinusCircledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM4.50003 7C4.22389 7 4.00003 7.22386 4.00003 7.5C4.00003 7.77614 4.22389 8 4.50003 8H10.5C10.7762 8 11 7.77614 11 7.5C11 7.22386 10.7762 7 10.5 7H4.50003Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MinusCircledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MixIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.14921 3.99996C2.14921 2.97778 2.97784 2.14915 4.00002 2.14915C5.02219 2.14915 5.85083 2.97778 5.85083 3.99996C5.85083 5.02213 5.02219 5.85077 4.00002 5.85077C2.97784 5.85077 2.14921 5.02213 2.14921 3.99996ZM4.00002 1.24915C2.48079 1.24915 1.24921 2.48073 1.24921 3.99996C1.24921 5.51919 2.48079 6.75077 4.00002 6.75077C5.51925 6.75077 6.75083 5.51919 6.75083 3.99996C6.75083 2.48073 5.51925 1.24915 4.00002 1.24915ZM5.82034 11.0001L2.49998 12.8369V9.16331L5.82034 11.0001ZM2.63883 8.21159C2.17228 7.9535 1.59998 8.29093 1.59998 8.82411V13.1761C1.59998 13.7093 2.17228 14.0467 2.63883 13.7886L6.57235 11.6126C7.05389 11.3462 7.05389 10.654 6.57235 10.3876L2.63883 8.21159ZM8.30001 9.00003C8.30001 8.61343 8.61341 8.30003 9.00001 8.30003H13C13.3866 8.30003 13.7 8.61343 13.7 9.00003V13C13.7 13.3866 13.3866 13.7 13 13.7H9.00001C8.61341 13.7 8.30001 13.3866 8.30001 13V9.00003ZM9.20001 9.20003V12.8H12.8V9.20003H9.20001ZM13.4432 2.19311C13.6189 2.01737 13.6189 1.73245 13.4432 1.55671C13.2675 1.38098 12.9826 1.38098 12.8068 1.55671L11 3.36353L9.19321 1.55674C9.01748 1.381 8.73255 1.381 8.55682 1.55674C8.38108 1.73247 8.38108 2.0174 8.55682 2.19313L10.3636 3.99992L8.55682 5.80671C8.38108 5.98245 8.38108 6.26737 8.55682 6.44311C8.73255 6.61885 9.01748 6.61885 9.19321 6.44311L11 4.63632L12.8068 6.44314C12.9826 6.61887 13.2675 6.61887 13.4432 6.44314C13.6189 6.2674 13.6189 5.98247 13.4432 5.80674L11.6364 3.99992L13.4432 2.19311Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MixIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MixerHorizontalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.5 3C4.67157 3 4 3.67157 4 4.5C4 5.32843 4.67157 6 5.5 6C6.32843 6 7 5.32843 7 4.5C7 3.67157 6.32843 3 5.5 3ZM3 5C3.01671 5 3.03323 4.99918 3.04952 4.99758C3.28022 6.1399 4.28967 7 5.5 7C6.71033 7 7.71978 6.1399 7.95048 4.99758C7.96677 4.99918 7.98329 5 8 5H13.5C13.7761 5 14 4.77614 14 4.5C14 4.22386 13.7761 4 13.5 4H8C7.98329 4 7.96677 4.00082 7.95048 4.00242C7.71978 2.86009 6.71033 2 5.5 2C4.28967 2 3.28022 2.86009 3.04952 4.00242C3.03323 4.00082 3.01671 4 3 4H1.5C1.22386 4 1 4.22386 1 4.5C1 4.77614 1.22386 5 1.5 5H3ZM11.9505 10.9976C11.7198 12.1399 10.7103 13 9.5 13C8.28967 13 7.28022 12.1399 7.04952 10.9976C7.03323 10.9992 7.01671 11 7 11H1.5C1.22386 11 1 10.7761 1 10.5C1 10.2239 1.22386 10 1.5 10H7C7.01671 10 7.03323 10.0008 7.04952 10.0024C7.28022 8.8601 8.28967 8 9.5 8C10.7103 8 11.7198 8.8601 11.9505 10.0024C11.9668 10.0008 11.9833 10 12 10H13.5C13.7761 10 14 10.2239 14 10.5C14 10.7761 13.7761 11 13.5 11H12C11.9833 11 11.9668 10.9992 11.9505 10.9976ZM8 10.5C8 9.67157 8.67157 9 9.5 9C10.3284 9 11 9.67157 11 10.5C11 11.3284 10.3284 12 9.5 12C8.67157 12 8 11.3284 8 10.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MixerHorizontalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MixerVerticalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 1.5C5 1.22386 4.77614 1 4.5 1C4.22386 1 4 1.22386 4 1.5L4 7C4 7.01671 4.00082 7.03323 4.00242 7.04952C2.86009 7.28022 2 8.28967 2 9.5C2 10.7103 2.86009 11.7198 4.00242 11.9505C4.00082 11.9668 4 11.9833 4 12V13.5C4 13.7761 4.22386 14 4.5 14C4.77614 14 5 13.7761 5 13.5V12C5 11.9833 4.99918 11.9668 4.99758 11.9505C6.1399 11.7198 7 10.7103 7 9.5C7 8.28967 6.1399 7.28022 4.99758 7.04952C4.99918 7.03323 5 7.01671 5 7L5 1.5ZM11 1.5C11 1.22386 10.7761 1 10.5 1C10.2239 1 10 1.22386 10 1.5V3C10 3.01671 10.0008 3.03323 10.0024 3.04952C8.8601 3.28022 8 4.28967 8 5.5C8 6.71033 8.8601 7.71978 10.0024 7.95048C10.0008 7.96677 10 7.98329 10 8V13.5C10 13.7761 10.2239 14 10.5 14C10.7761 14 11 13.7761 11 13.5V8C11 7.98329 10.9992 7.96677 10.9976 7.95048C12.1399 7.71978 13 6.71033 13 5.5C13 4.28967 12.1399 3.28022 10.9976 3.04952C10.9992 3.03323 11 3.01671 11 3V1.5ZM4.5 8C3.67157 8 3 8.67157 3 9.5C3 10.3284 3.67157 11 4.5 11C5.32843 11 6 10.3284 6 9.5C6 8.67157 5.32843 8 4.5 8ZM9 5.5C9 4.67157 9.67157 4 10.5 4C11.3284 4 12 4.67157 12 5.5C12 6.32843 11.3284 7 10.5 7C9.67157 7 9 6.32843 9 5.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MixerVerticalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MobileIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4 2.5C4 2.22386 4.22386 2 4.5 2H10.5C10.7761 2 11 2.22386 11 2.5V12.5C11 12.7761 10.7761 13 10.5 13H4.5C4.22386 13 4 12.7761 4 12.5V2.5ZM4.5 1C3.67157 1 3 1.67157 3 2.5V12.5C3 13.3284 3.67157 14 4.5 14H10.5C11.3284 14 12 13.3284 12 12.5V2.5C12 1.67157 11.3284 1 10.5 1H4.5ZM6 11.65C5.8067 11.65 5.65 11.8067 5.65 12C5.65 12.1933 5.8067 12.35 6 12.35H9C9.1933 12.35 9.35 12.1933 9.35 12C9.35 11.8067 9.1933 11.65 9 11.65H6Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MobileIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ModulzLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.25925 3.16667L4.37036 5.33333V1L7.25925 3.16667ZM1 8.22222L3.88889 6.05555L1 3.88889V8.22222ZM1 14L3.88889 11.8333L1 9.66666V14ZM7.74072 8.22222L10.6296 6.05555L7.74072 3.88889V8.22222ZM14 3.16667L11.1111 5.33333V1L14 3.16667ZM11.1111 11.1111L14 8.94444L11.1111 6.77777V11.1111ZM3.88889 11.1111L1 8.94444L3.88889 6.77777V11.1111ZM4.37036 6.05555L7.25925 8.22222V3.88889L4.37036 6.05555ZM3.88889 5.33333L1 3.16667L3.88889 1V5.33333ZM7.74072 3.16667L10.6296 5.33333V1L7.74072 3.16667ZM14 8.22222L11.1111 6.05555L14 3.88889V8.22222ZM11.1111 11.8333L14 14V9.66666L11.1111 11.8333Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ModulzLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MoonIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MoonIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const MoveIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.81819 0.93179C7.64245 0.756054 7.35753 0.756054 7.18179 0.93179L5.43179 2.68179C5.25605 2.85753 5.25605 3.14245 5.43179 3.31819C5.60753 3.49392 5.89245 3.49392 6.06819 3.31819L6.99999 2.38638V5.49999C6.99999 5.77613 7.22385 5.99999 7.49999 5.99999C7.77613 5.99999 7.99999 5.77613 7.99999 5.49999V2.38638L8.93179 3.31819C9.10753 3.49392 9.39245 3.49392 9.56819 3.31819C9.74392 3.14245 9.74392 2.85753 9.56819 2.68179L7.81819 0.93179ZM7.99999 9.49999C7.99999 9.22385 7.77613 8.99999 7.49999 8.99999C7.22385 8.99999 6.99999 9.22385 6.99999 9.49999V12.6136L6.06819 11.6818C5.89245 11.5061 5.60753 11.5061 5.43179 11.6818C5.25605 11.8575 5.25605 12.1424 5.43179 12.3182L7.18179 14.0682C7.35753 14.2439 7.64245 14.2439 7.81819 14.0682L9.56819 12.3182C9.74392 12.1424 9.74392 11.8575 9.56819 11.6818C9.39245 11.5061 9.10753 11.5061 8.93179 11.6818L7.99999 12.6136V9.49999ZM8.99999 7.49999C8.99999 7.22385 9.22385 6.99999 9.49999 6.99999H12.6136L11.6818 6.06819C11.5061 5.89245 11.5061 5.60753 11.6818 5.43179C11.8575 5.25605 12.1424 5.25605 12.3182 5.43179L14.0682 7.18179C14.2439 7.35753 14.2439 7.64245 14.0682 7.81819L12.3182 9.56819C12.1424 9.74392 11.8575 9.74392 11.6818 9.56819C11.5061 9.39245 11.5061 9.10753 11.6818 8.93179L12.6136 7.99999H9.49999C9.22385 7.99999 8.99999 7.77613 8.99999 7.49999ZM3.31819 6.06819L2.38638 6.99999H5.49999C5.77613 6.99999 5.99999 7.22385 5.99999 7.49999C5.99999 7.77613 5.77613 7.99999 5.49999 7.99999H2.38638L3.31819 8.93179C3.49392 9.10753 3.49392 9.39245 3.31819 9.56819C3.14245 9.74392 2.85753 9.74392 2.68179 9.56819L0.93179 7.81819C0.756054 7.64245 0.756054 7.35753 0.93179 7.18179L2.68179 5.43179C2.85753 5.25605 3.14245 5.25605 3.31819 5.43179C3.49392 5.60753 3.49392 5.89245 3.31819 6.06819Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default MoveIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const NotionLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.25781 3.11684C3.67771 3.45796 3.83523 3.43193 4.62369 3.37933L12.0571 2.93299C12.2147 2.93299 12.0836 2.77571 12.0311 2.74957L10.7965 1.85711C10.56 1.67347 10.2448 1.46315 9.64083 1.51576L2.44308 2.04074C2.18059 2.06677 2.12815 2.19801 2.2327 2.30322L3.25781 3.11684ZM3.7041 4.84917V12.6704C3.7041 13.0907 3.91415 13.248 4.38693 13.222L12.5562 12.7493C13.0292 12.7233 13.0819 12.4341 13.0819 12.0927V4.32397C13.0819 3.98306 12.9508 3.79921 12.6612 3.82545L4.12422 4.32397C3.80918 4.35044 3.7041 4.50803 3.7041 4.84917ZM11.7688 5.26872C11.8212 5.50518 11.7688 5.74142 11.5319 5.76799L11.1383 5.84641V11.6205C10.7965 11.8042 10.4814 11.9092 10.2188 11.9092C9.79835 11.9092 9.69305 11.7779 9.37812 11.3844L6.80345 7.34249V11.2532L7.61816 11.437C7.61816 11.437 7.61816 11.9092 6.96086 11.9092L5.14879 12.0143C5.09615 11.9092 5.14879 11.647 5.33259 11.5944L5.80546 11.4634V6.29276L5.1489 6.24015C5.09625 6.00369 5.22739 5.66278 5.5954 5.63631L7.53935 5.50528L10.2188 9.5998V5.97765L9.53564 5.89924C9.4832 5.61018 9.69305 5.40028 9.95576 5.37425L11.7688 5.26872ZM1.83874 1.33212L9.32557 0.780787C10.245 0.701932 10.4815 0.754753 11.0594 1.17452L13.4492 2.85424C13.8436 3.14309 13.975 3.22173 13.975 3.53661V12.7493C13.975 13.3266 13.7647 13.6681 13.0293 13.7203L4.33492 14.2454C3.78291 14.2717 3.52019 14.193 3.23111 13.8253L1.47116 11.5419C1.1558 11.1216 1.02466 10.8071 1.02466 10.4392V2.25041C1.02466 1.77825 1.23504 1.38441 1.83874 1.33212Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default NotionLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const OpacityIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 1.5C4.5 4.25 3 6.5 3 9C3 11.4853 5.01472 13.5 7.5 13.5C9.98528 13.5 12 11.4853 12 9C12 6.5 10.5 4.25 7.5 1.5ZM11 9C11 7.11203 9.97315 5.27195 7.5 2.87357C5.02686 5.27195 4 7.11203 4 9C4 10.933 5.567 12.5 7.5 12.5C9.433 12.5 11 10.933 11 9Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default OpacityIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const OpenInNewWindowIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M12 13C12.5523 13 13 12.5523 13 12V3C13 2.44771 12.5523 2 12 2H3C2.44771 2 2 2.44771 2 3V6.5C2 6.77614 2.22386 7 2.5 7C2.77614 7 3 6.77614 3 6.5V3H12V12H8.5C8.22386 12 8 12.2239 8 12.5C8 12.7761 8.22386 13 8.5 13H12ZM9 6.5C9 6.5001 9 6.50021 9 6.50031V6.50035V9.5C9 9.77614 8.77614 10 8.5 10C8.22386 10 8 9.77614 8 9.5V7.70711L2.85355 12.8536C2.65829 13.0488 2.34171 13.0488 2.14645 12.8536C1.95118 12.6583 1.95118 12.3417 2.14645 12.1464L7.29289 7H5.5C5.22386 7 5 6.77614 5 6.5C5 6.22386 5.22386 6 5.5 6H8.5C8.56779 6 8.63244 6.01349 8.69139 6.03794C8.74949 6.06198 8.80398 6.09744 8.85143 6.14433C8.94251 6.23434 8.9992 6.35909 8.99999 6.49708L8.99999 6.49738\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default OpenInNewWindowIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const OverlineIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.49985 1.10001C3.27894 1.10001 3.09985 1.27909 3.09985 1.50001C3.09985 1.72092 3.27894 1.90001 3.49985 1.90001H11.4999C11.7208 1.90001 11.8999 1.72092 11.8999 1.50001C11.8999 1.27909 11.7208 1.10001 11.4999 1.10001H3.49985ZM4.99995 4.25001C4.99995 3.97387 4.77609 3.75001 4.49995 3.75001C4.22381 3.75001 3.99995 3.97387 3.99995 4.25001V9.55001C3.99995 11.483 5.56695 13.05 7.49995 13.05C9.43295 13.05 11 11.483 11 9.55001V4.25001C11 3.97387 10.7761 3.75001 10.5 3.75001C10.2238 3.75001 9.99995 3.97387 9.99995 4.25001V9.55001C9.99995 10.9307 8.88066 12.05 7.49995 12.05C6.11924 12.05 4.99995 10.9307 4.99995 9.55001V4.25001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default OverlineIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PaddingIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.85714 2H12.1429C12.6162 2 13 2.38376 13 2.85714V12.1429C13 12.6162 12.6162 13 12.1429 13H2.85714C2.38376 13 2 12.6162 2 12.1429V2.85714C2 2.38376 2.38376 2 2.85714 2ZM1 2.85714C1 1.83147 1.83147 1 2.85714 1H12.1429C13.1685 1 14 1.83147 14 2.85714V12.1429C14 13.1685 13.1685 14 12.1429 14H2.85714C1.83147 14 1 13.1685 1 12.1429V2.85714ZM7.49988 5.00012C7.77602 5.00012 7.99988 4.77626 7.99988 4.50012C7.99988 4.22398 7.77602 4.00012 7.49988 4.00012C7.22374 4.00012 6.99988 4.22398 6.99988 4.50012C6.99988 4.77626 7.22374 5.00012 7.49988 5.00012ZM4.49988 11.0001C4.77602 11.0001 4.99988 10.7763 4.99988 10.5001C4.99988 10.224 4.77602 10.0001 4.49988 10.0001C4.22374 10.0001 3.99988 10.224 3.99988 10.5001C3.99988 10.7763 4.22374 11.0001 4.49988 11.0001ZM4.99988 7.50012C4.99988 7.77626 4.77602 8.00012 4.49988 8.00012C4.22374 8.00012 3.99988 7.77626 3.99988 7.50012C3.99988 7.22398 4.22374 7.00012 4.49988 7.00012C4.77602 7.00012 4.99988 7.22398 4.99988 7.50012ZM4.49988 5.00012C4.77602 5.00012 4.99988 4.77626 4.99988 4.50012C4.99988 4.22398 4.77602 4.00012 4.49988 4.00012C4.22374 4.00012 3.99988 4.22398 3.99988 4.50012C3.99988 4.77626 4.22374 5.00012 4.49988 5.00012ZM10.9999 10.5001C10.9999 10.7763 10.776 11.0001 10.4999 11.0001C10.2237 11.0001 9.99988 10.7763 9.99988 10.5001C9.99988 10.224 10.2237 10.0001 10.4999 10.0001C10.776 10.0001 10.9999 10.224 10.9999 10.5001ZM10.4999 8.00012C10.776 8.00012 10.9999 7.77626 10.9999 7.50012C10.9999 7.22398 10.776 7.00012 10.4999 7.00012C10.2237 7.00012 9.99988 7.22398 9.99988 7.50012C9.99988 7.77626 10.2237 8.00012 10.4999 8.00012ZM10.9999 4.50012C10.9999 4.77626 10.776 5.00012 10.4999 5.00012C10.2237 5.00012 9.99988 4.77626 9.99988 4.50012C9.99988 4.22398 10.2237 4.00012 10.4999 4.00012C10.776 4.00012 10.9999 4.22398 10.9999 4.50012ZM7.49988 11.0001C7.77602 11.0001 7.99988 10.7763 7.99988 10.5001C7.99988 10.224 7.77602 10.0001 7.49988 10.0001C7.22374 10.0001 6.99988 10.224 6.99988 10.5001C6.99988 10.7763 7.22374 11.0001 7.49988 11.0001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PaddingIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PaperPlaneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.20308 1.04312C1.00481 0.954998 0.772341 1.0048 0.627577 1.16641C0.482813 1.32802 0.458794 1.56455 0.568117 1.75196L3.92115 7.50002L0.568117 13.2481C0.458794 13.4355 0.482813 13.672 0.627577 13.8336C0.772341 13.9952 1.00481 14.045 1.20308 13.9569L14.7031 7.95693C14.8836 7.87668 15 7.69762 15 7.50002C15 7.30243 14.8836 7.12337 14.7031 7.04312L1.20308 1.04312ZM4.84553 7.10002L2.21234 2.586L13.2689 7.50002L2.21234 12.414L4.84552 7.90002H9C9.22092 7.90002 9.4 7.72094 9.4 7.50002C9.4 7.27911 9.22092 7.10002 9 7.10002H4.84553Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PaperPlaneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PauseIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.04995 2.74998C6.04995 2.44623 5.80371 2.19998 5.49995 2.19998C5.19619 2.19998 4.94995 2.44623 4.94995 2.74998V12.25C4.94995 12.5537 5.19619 12.8 5.49995 12.8C5.80371 12.8 6.04995 12.5537 6.04995 12.25V2.74998ZM10.05 2.74998C10.05 2.44623 9.80371 2.19998 9.49995 2.19998C9.19619 2.19998 8.94995 2.44623 8.94995 2.74998V12.25C8.94995 12.5537 9.19619 12.8 9.49995 12.8C9.80371 12.8 10.05 12.5537 10.05 12.25V2.74998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PauseIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Pencil1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.8536 1.14645C11.6583 0.951184 11.3417 0.951184 11.1465 1.14645L3.71455 8.57836C3.62459 8.66832 3.55263 8.77461 3.50251 8.89155L2.04044 12.303C1.9599 12.491 2.00189 12.709 2.14646 12.8536C2.29103 12.9981 2.50905 13.0401 2.69697 12.9596L6.10847 11.4975C6.2254 11.4474 6.3317 11.3754 6.42166 11.2855L13.8536 3.85355C14.0488 3.65829 14.0488 3.34171 13.8536 3.14645L11.8536 1.14645ZM4.42166 9.28547L11.5 2.20711L12.7929 3.5L5.71455 10.5784L4.21924 11.2192L3.78081 10.7808L4.42166 9.28547Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Pencil1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Pencil2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.1464 1.14645C12.3417 0.951184 12.6583 0.951184 12.8535 1.14645L14.8535 3.14645C15.0488 3.34171 15.0488 3.65829 14.8535 3.85355L10.9109 7.79618C10.8349 7.87218 10.7471 7.93543 10.651 7.9835L6.72359 9.94721C6.53109 10.0435 6.29861 10.0057 6.14643 9.85355C5.99425 9.70137 5.95652 9.46889 6.05277 9.27639L8.01648 5.34897C8.06455 5.25283 8.1278 5.16507 8.2038 5.08907L12.1464 1.14645ZM12.5 2.20711L8.91091 5.79618L7.87266 7.87267L8.12731 8.12732L10.2038 7.08907L13.7929 3.5L12.5 2.20711ZM9.99998 2L8.99998 3H4.9C4.47171 3 4.18056 3.00039 3.95552 3.01877C3.73631 3.03668 3.62421 3.06915 3.54601 3.10899C3.35785 3.20487 3.20487 3.35785 3.10899 3.54601C3.06915 3.62421 3.03669 3.73631 3.01878 3.95552C3.00039 4.18056 3 4.47171 3 4.9V11.1C3 11.5283 3.00039 11.8194 3.01878 12.0445C3.03669 12.2637 3.06915 12.3758 3.10899 12.454C3.20487 12.6422 3.35785 12.7951 3.54601 12.891C3.62421 12.9309 3.73631 12.9633 3.95552 12.9812C4.18056 12.9996 4.47171 13 4.9 13H11.1C11.5283 13 11.8194 12.9996 12.0445 12.9812C12.2637 12.9633 12.3758 12.9309 12.454 12.891C12.6422 12.7951 12.7951 12.6422 12.891 12.454C12.9309 12.3758 12.9633 12.2637 12.9812 12.0445C12.9996 11.8194 13 11.5283 13 11.1V6.99998L14 5.99998V11.1V11.1207C14 11.5231 14 11.8553 13.9779 12.1259C13.9549 12.407 13.9057 12.6653 13.782 12.908C13.5903 13.2843 13.2843 13.5903 12.908 13.782C12.6653 13.9057 12.407 13.9549 12.1259 13.9779C11.8553 14 11.5231 14 11.1207 14H11.1H4.9H4.87934C4.47686 14 4.14468 14 3.87409 13.9779C3.59304 13.9549 3.33469 13.9057 3.09202 13.782C2.7157 13.5903 2.40973 13.2843 2.21799 12.908C2.09434 12.6653 2.04506 12.407 2.0221 12.1259C1.99999 11.8553 1.99999 11.5231 2 11.1207V11.1206V11.1V4.9V4.87935V4.87932V4.87931C1.99999 4.47685 1.99999 4.14468 2.0221 3.87409C2.04506 3.59304 2.09434 3.33469 2.21799 3.09202C2.40973 2.71569 2.7157 2.40973 3.09202 2.21799C3.33469 2.09434 3.59304 2.04506 3.87409 2.0221C4.14468 1.99999 4.47685 1.99999 4.87932 2H4.87935H4.9H9.99998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Pencil2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PersonIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 0.875C5.49797 0.875 3.875 2.49797 3.875 4.5C3.875 6.15288 4.98124 7.54738 6.49373 7.98351C5.2997 8.12901 4.27557 8.55134 3.50407 9.31167C2.52216 10.2794 2.02502 11.72 2.02502 13.5999C2.02502 13.8623 2.23769 14.0749 2.50002 14.0749C2.76236 14.0749 2.97502 13.8623 2.97502 13.5999C2.97502 11.8799 3.42786 10.7206 4.17091 9.9883C4.91536 9.25463 6.02674 8.87499 7.49995 8.87499C8.97317 8.87499 10.0846 9.25463 10.8291 9.98831C11.5721 10.7206 12.025 11.8799 12.025 13.5999C12.025 13.8623 12.2376 14.0749 12.5 14.0749C12.7623 14.075 12.975 13.8623 12.975 13.6C12.975 11.72 12.4778 10.2794 11.4959 9.31166C10.7244 8.55135 9.70025 8.12903 8.50625 7.98352C10.0187 7.5474 11.125 6.15289 11.125 4.5C11.125 2.49797 9.50203 0.875 7.5 0.875ZM4.825 4.5C4.825 3.02264 6.02264 1.825 7.5 1.825C8.97736 1.825 10.175 3.02264 10.175 4.5C10.175 5.97736 8.97736 7.175 7.5 7.175C6.02264 7.175 4.825 5.97736 4.825 4.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PersonIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PieChartIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.85001 7.50043C1.85001 4.37975 4.37963 1.85001 7.50001 1.85001C10.6204 1.85001 13.15 4.37975 13.15 7.50043C13.15 10.6211 10.6204 13.1509 7.50001 13.1509C4.37963 13.1509 1.85001 10.6211 1.85001 7.50043ZM7.50001 0.850006C3.82728 0.850006 0.850006 3.82753 0.850006 7.50043C0.850006 11.1733 3.82728 14.1509 7.50001 14.1509C11.1727 14.1509 14.15 11.1733 14.15 7.50043C14.15 3.82753 11.1727 0.850006 7.50001 0.850006ZM7.00001 8.00001V3.12811C7.16411 3.10954 7.33094 3.10001 7.50001 3.10001C9.93006 3.10001 11.9 5.07014 11.9 7.50043C11.9 7.66935 11.8905 7.83604 11.872 8.00001H7.00001Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PieChartIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PilcrowIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3 5.5C3 7.983 4.99169 9 7 9V12.5C7 12.7761 7.22386 13 7.5 13C7.77614 13 8 12.7761 8 12.5V9V3.1H9V12.5C9 12.7761 9.22386 13 9.5 13C9.77614 13 10 12.7761 10 12.5V3.1H11.5C11.8038 3.1 12.05 2.85376 12.05 2.55C12.05 2.24624 11.8038 2 11.5 2H9.5H8H7.5H7C4.99169 2 3 3.017 3 5.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PilcrowIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PinBottomIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.5 13.95C13.7485 13.95 13.95 13.7485 13.95 13.5C13.95 13.2514 13.7485 13.05 13.5 13.05L1.49995 13.05C1.25142 13.05 1.04995 13.2514 1.04995 13.5C1.04995 13.7485 1.25142 13.95 1.49995 13.95L13.5 13.95ZM11.0681 7.5683C11.2439 7.39257 11.2439 7.10764 11.0681 6.93191C10.8924 6.75617 10.6075 6.75617 10.4317 6.93191L7.94993 9.41371L7.94993 1.49998C7.94993 1.25146 7.74846 1.04998 7.49993 1.04998C7.2514 1.04998 7.04993 1.25146 7.04993 1.49998L7.04993 9.41371L4.56813 6.93191C4.39239 6.75617 4.10746 6.75617 3.93173 6.93191C3.75599 7.10764 3.75599 7.39257 3.93173 7.5683L7.18173 10.8183C7.35746 10.994 7.64239 10.994 7.81812 10.8183L11.0681 7.5683Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PinBottomIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PinLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.05005 13.5C2.05005 13.7485 2.25152 13.95 2.50005 13.95C2.74858 13.95 2.95005 13.7485 2.95005 13.5L2.95005 1.49995C2.95005 1.25142 2.74858 1.04995 2.50005 1.04995C2.25152 1.04995 2.05005 1.25142 2.05005 1.49995L2.05005 13.5ZM8.4317 11.0681C8.60743 11.2439 8.89236 11.2439 9.06809 11.0681C9.24383 10.8924 9.24383 10.6075 9.06809 10.4317L6.58629 7.94993L14.5 7.94993C14.7485 7.94993 14.95 7.74846 14.95 7.49993C14.95 7.2514 14.7485 7.04993 14.5 7.04993L6.58629 7.04993L9.06809 4.56813C9.24383 4.39239 9.24383 4.10746 9.06809 3.93173C8.89236 3.75599 8.60743 3.75599 8.4317 3.93173L5.1817 7.18173C5.00596 7.35746 5.00596 7.64239 5.1817 7.81812L8.4317 11.0681Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PinLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PinRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.95 1.50005C12.95 1.25152 12.7485 1.05005 12.5 1.05005C12.2514 1.05005 12.05 1.25152 12.05 1.50005L12.05 13.5C12.05 13.7486 12.2514 13.95 12.5 13.95C12.7485 13.95 12.95 13.7486 12.95 13.5L12.95 1.50005ZM6.5683 3.93188C6.39257 3.75614 6.10764 3.75614 5.93191 3.93188C5.75617 4.10761 5.75617 4.39254 5.93191 4.56827L8.41371 7.05007L0.499984 7.05007C0.251456 7.05007 0.0499847 7.25155 0.0499847 7.50007C0.0499846 7.7486 0.251457 7.95007 0.499984 7.95007L8.41371 7.95007L5.93191 10.4319C5.75617 10.6076 5.75617 10.8925 5.93191 11.0683C6.10764 11.244 6.39257 11.244 6.56831 11.0683L9.8183 7.81827C9.99404 7.64254 9.99404 7.35761 9.8183 7.18188L6.5683 3.93188Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PinRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PinTopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.50005 1.05005C1.25152 1.05005 1.05005 1.25152 1.05005 1.50005C1.05005 1.74858 1.25152 1.95005 1.50005 1.95005L13.5 1.95005C13.7486 1.95005 13.95 1.74858 13.95 1.50005C13.95 1.25152 13.7486 1.05005 13.5 1.05005H1.50005ZM3.93188 7.43169C3.75614 7.60743 3.75614 7.89236 3.93188 8.06809C4.10761 8.24383 4.39254 8.24383 4.56827 8.06809L7.05007 5.58629V13.5C7.05007 13.7485 7.25155 13.95 7.50007 13.95C7.7486 13.95 7.95007 13.7485 7.95007 13.5L7.95007 5.58629L10.4319 8.06809C10.6076 8.24383 10.8925 8.24383 11.0683 8.06809C11.244 7.89235 11.244 7.60743 11.0683 7.43169L7.81827 4.18169C7.64254 4.00596 7.35761 4.00596 7.18188 4.18169L3.93188 7.43169Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PinTopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PlayIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.24182 2.32181C3.3919 2.23132 3.5784 2.22601 3.73338 2.30781L12.7334 7.05781C12.8974 7.14436 13 7.31457 13 7.5C13 7.68543 12.8974 7.85564 12.7334 7.94219L3.73338 12.6922C3.5784 12.774 3.3919 12.7687 3.24182 12.6782C3.09175 12.5877 3 12.4252 3 12.25V2.75C3 2.57476 3.09175 2.4123 3.24182 2.32181ZM4 3.57925V11.4207L11.4288 7.5L4 3.57925Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PlayIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PlusIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8 2.75C8 2.47386 7.77614 2.25 7.5 2.25C7.22386 2.25 7 2.47386 7 2.75V7H2.75C2.47386 7 2.25 7.22386 2.25 7.5C2.25 7.77614 2.47386 8 2.75 8H7V12.25C7 12.5261 7.22386 12.75 7.5 12.75C7.77614 12.75 8 12.5261 8 12.25V8H12.25C12.5261 8 12.75 7.77614 12.75 7.5C12.75 7.22386 12.5261 7 12.25 7H8V2.75Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PlusIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const PlusCircledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM7.50003 4C7.77617 4 8.00003 4.22386 8.00003 4.5V7H10.5C10.7762 7 11 7.22386 11 7.5C11 7.77614 10.7762 8 10.5 8H8.00003V10.5C8.00003 10.7761 7.77617 11 7.50003 11C7.22389 11 7.00003 10.7761 7.00003 10.5V8H4.50003C4.22389 8 4.00003 7.77614 4.00003 7.5C4.00003 7.22386 4.22389 7 4.50003 7H7.00003V4.5C7.00003 4.22386 7.22389 4 7.50003 4Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default PlusCircledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const QuestionMarkIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.07505 4.10001C5.07505 2.91103 6.25727 1.92502 7.50005 1.92502C8.74283 1.92502 9.92505 2.91103 9.92505 4.10001C9.92505 5.19861 9.36782 5.71436 8.61854 6.37884L8.58757 6.4063C7.84481 7.06467 6.92505 7.87995 6.92505 9.5C6.92505 9.81757 7.18248 10.075 7.50005 10.075C7.81761 10.075 8.07505 9.81757 8.07505 9.5C8.07505 8.41517 8.62945 7.90623 9.38156 7.23925L9.40238 7.22079C10.1496 6.55829 11.075 5.73775 11.075 4.10001C11.075 2.12757 9.21869 0.775024 7.50005 0.775024C5.7814 0.775024 3.92505 2.12757 3.92505 4.10001C3.92505 4.41758 4.18249 4.67501 4.50005 4.67501C4.81761 4.67501 5.07505 4.41758 5.07505 4.10001ZM7.50005 13.3575C7.9833 13.3575 8.37505 12.9657 8.37505 12.4825C8.37505 11.9992 7.9833 11.6075 7.50005 11.6075C7.0168 11.6075 6.62505 11.9992 6.62505 12.4825C6.62505 12.9657 7.0168 13.3575 7.50005 13.3575Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default QuestionMarkIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const QuestionMarkCircledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877075 7.49972C0.877075 3.84204 3.84222 0.876892 7.49991 0.876892C11.1576 0.876892 14.1227 3.84204 14.1227 7.49972C14.1227 11.1574 11.1576 14.1226 7.49991 14.1226C3.84222 14.1226 0.877075 11.1574 0.877075 7.49972ZM7.49991 1.82689C4.36689 1.82689 1.82708 4.36671 1.82708 7.49972C1.82708 10.6327 4.36689 13.1726 7.49991 13.1726C10.6329 13.1726 13.1727 10.6327 13.1727 7.49972C13.1727 4.36671 10.6329 1.82689 7.49991 1.82689ZM8.24993 10.5C8.24993 10.9142 7.91414 11.25 7.49993 11.25C7.08571 11.25 6.74993 10.9142 6.74993 10.5C6.74993 10.0858 7.08571 9.75 7.49993 9.75C7.91414 9.75 8.24993 10.0858 8.24993 10.5ZM6.05003 6.25C6.05003 5.57211 6.63511 4.925 7.50003 4.925C8.36496 4.925 8.95003 5.57211 8.95003 6.25C8.95003 6.74118 8.68002 6.99212 8.21447 7.27494C8.16251 7.30651 8.10258 7.34131 8.03847 7.37854L8.03841 7.37858C7.85521 7.48497 7.63788 7.61119 7.47449 7.73849C7.23214 7.92732 6.95003 8.23198 6.95003 8.7C6.95004 9.00376 7.19628 9.25 7.50004 9.25C7.8024 9.25 8.04778 9.00601 8.05002 8.70417L8.05056 8.7033C8.05924 8.6896 8.08493 8.65735 8.15058 8.6062C8.25207 8.52712 8.36508 8.46163 8.51567 8.37436L8.51571 8.37433C8.59422 8.32883 8.68296 8.27741 8.78559 8.21506C9.32004 7.89038 10.05 7.35382 10.05 6.25C10.05 4.92789 8.93511 3.825 7.50003 3.825C6.06496 3.825 4.95003 4.92789 4.95003 6.25C4.95003 6.55376 5.19628 6.8 5.50003 6.8C5.80379 6.8 6.05003 6.55376 6.05003 6.25Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default QuestionMarkCircledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const QuoteIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M9.42503 3.44136C10.0561 3.23654 10.7837 3.2402 11.3792 3.54623C12.7532 4.25224 13.3477 6.07191 12.7946 8C12.5465 8.8649 12.1102 9.70472 11.1861 10.5524C10.262 11.4 8.98034 11.9 8.38571 11.9C8.17269 11.9 8 11.7321 8 11.525C8 11.3179 8.17644 11.15 8.38571 11.15C9.06497 11.15 9.67189 10.7804 10.3906 10.236C10.9406 9.8193 11.3701 9.28633 11.608 8.82191C12.0628 7.93367 12.0782 6.68174 11.3433 6.34901C10.9904 6.73455 10.5295 6.95946 9.97725 6.95946C8.7773 6.95946 8.0701 5.99412 8.10051 5.12009C8.12957 4.28474 8.66032 3.68954 9.42503 3.44136ZM3.42503 3.44136C4.05614 3.23654 4.78366 3.2402 5.37923 3.54623C6.7532 4.25224 7.34766 6.07191 6.79462 8C6.54654 8.8649 6.11019 9.70472 5.1861 10.5524C4.26201 11.4 2.98034 11.9 2.38571 11.9C2.17269 11.9 2 11.7321 2 11.525C2 11.3179 2.17644 11.15 2.38571 11.15C3.06497 11.15 3.67189 10.7804 4.39058 10.236C4.94065 9.8193 5.37014 9.28633 5.60797 8.82191C6.06282 7.93367 6.07821 6.68174 5.3433 6.34901C4.99037 6.73455 4.52948 6.95946 3.97725 6.95946C2.7773 6.95946 2.0701 5.99412 2.10051 5.12009C2.12957 4.28474 2.66032 3.68954 3.42503 3.44136Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default QuoteIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RadiobuttonIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49985 0.877045C3.84216 0.877045 0.877014 3.84219 0.877014 7.49988C0.877014 11.1575 3.84216 14.1227 7.49985 14.1227C11.1575 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 3.84219 11.1575 0.877045 7.49985 0.877045ZM1.82701 7.49988C1.82701 4.36686 4.36683 1.82704 7.49985 1.82704C10.6328 1.82704 13.1727 4.36686 13.1727 7.49988C13.1727 10.6329 10.6328 13.1727 7.49985 13.1727C4.36683 13.1727 1.82701 10.6329 1.82701 7.49988ZM7.49999 9.49999C8.60456 9.49999 9.49999 8.60456 9.49999 7.49999C9.49999 6.39542 8.60456 5.49999 7.49999 5.49999C6.39542 5.49999 5.49999 6.39542 5.49999 7.49999C5.49999 8.60456 6.39542 9.49999 7.49999 9.49999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RadiobuttonIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ReaderIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.2 1H4.17741H4.1774C3.86936 0.999988 3.60368 0.999978 3.38609 1.02067C3.15576 1.04257 2.92825 1.09113 2.71625 1.22104C2.51442 1.34472 2.34473 1.51442 2.22104 1.71625C2.09113 1.92825 2.04257 2.15576 2.02067 2.38609C1.99998 2.60367 1.99999 2.86935 2 3.17738V3.1774V3.2V11.8V11.8226V11.8226C1.99999 12.1307 1.99998 12.3963 2.02067 12.6139C2.04257 12.8442 2.09113 13.0717 2.22104 13.2837C2.34473 13.4856 2.51442 13.6553 2.71625 13.779C2.92825 13.9089 3.15576 13.9574 3.38609 13.9793C3.60368 14 3.86937 14 4.17741 14H4.2H10.8H10.8226C11.1306 14 11.3963 14 11.6139 13.9793C11.8442 13.9574 12.0717 13.9089 12.2837 13.779C12.4856 13.6553 12.6553 13.4856 12.779 13.2837C12.9089 13.0717 12.9574 12.8442 12.9793 12.6139C13 12.3963 13 12.1306 13 11.8226V11.8V3.2V3.17741C13 2.86936 13 2.60368 12.9793 2.38609C12.9574 2.15576 12.9089 1.92825 12.779 1.71625C12.6553 1.51442 12.4856 1.34472 12.2837 1.22104C12.0717 1.09113 11.8442 1.04257 11.6139 1.02067C11.3963 0.999978 11.1306 0.999988 10.8226 1H10.8H4.2ZM3.23875 2.07368C3.26722 2.05623 3.32362 2.03112 3.48075 2.01618C3.64532 2.00053 3.86298 2 4.2 2H10.8C11.137 2 11.3547 2.00053 11.5193 2.01618C11.6764 2.03112 11.7328 2.05623 11.7613 2.07368C11.8285 2.11491 11.8851 2.17147 11.9263 2.23875C11.9438 2.26722 11.9689 2.32362 11.9838 2.48075C11.9995 2.64532 12 2.86298 12 3.2V11.8C12 12.137 11.9995 12.3547 11.9838 12.5193C11.9689 12.6764 11.9438 12.7328 11.9263 12.7613C11.8851 12.8285 11.8285 12.8851 11.7613 12.9263C11.7328 12.9438 11.6764 12.9689 11.5193 12.9838C11.3547 12.9995 11.137 13 10.8 13H4.2C3.86298 13 3.64532 12.9995 3.48075 12.9838C3.32362 12.9689 3.26722 12.9438 3.23875 12.9263C3.17147 12.8851 3.11491 12.8285 3.07368 12.7613C3.05624 12.7328 3.03112 12.6764 3.01618 12.5193C3.00053 12.3547 3 12.137 3 11.8V3.2C3 2.86298 3.00053 2.64532 3.01618 2.48075C3.03112 2.32362 3.05624 2.26722 3.07368 2.23875C3.11491 2.17147 3.17147 2.11491 3.23875 2.07368ZM5 10C4.72386 10 4.5 10.2239 4.5 10.5C4.5 10.7761 4.72386 11 5 11H8C8.27614 11 8.5 10.7761 8.5 10.5C8.5 10.2239 8.27614 10 8 10H5ZM4.5 7.5C4.5 7.22386 4.72386 7 5 7H10C10.2761 7 10.5 7.22386 10.5 7.5C10.5 7.77614 10.2761 8 10 8H5C4.72386 8 4.5 7.77614 4.5 7.5ZM5 4C4.72386 4 4.5 4.22386 4.5 4.5C4.5 4.77614 4.72386 5 5 5H10C10.2761 5 10.5 4.77614 10.5 4.5C10.5 4.22386 10.2761 4 10 4H5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ReaderIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ReloadIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.84998 7.49998C1.84998 4.66458 4.05979 1.84998 7.49998 1.84998C10.2783 1.84998 11.6515 3.9064 12.2367 5H10.5C10.2239 5 10 5.22386 10 5.5C10 5.77614 10.2239 6 10.5 6H13.5C13.7761 6 14 5.77614 14 5.5V2.5C14 2.22386 13.7761 2 13.5 2C13.2239 2 13 2.22386 13 2.5V4.31318C12.2955 3.07126 10.6659 0.849976 7.49998 0.849976C3.43716 0.849976 0.849976 4.18537 0.849976 7.49998C0.849976 10.8146 3.43716 14.15 7.49998 14.15C9.44382 14.15 11.0622 13.3808 12.2145 12.2084C12.8315 11.5806 13.3133 10.839 13.6418 10.0407C13.7469 9.78536 13.6251 9.49315 13.3698 9.38806C13.1144 9.28296 12.8222 9.40478 12.7171 9.66014C12.4363 10.3425 12.0251 10.9745 11.5013 11.5074C10.5295 12.4963 9.16504 13.15 7.49998 13.15C4.05979 13.15 1.84998 10.3354 1.84998 7.49998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ReloadIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ResetIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.85355 2.14645C5.04882 2.34171 5.04882 2.65829 4.85355 2.85355L3.70711 4H9C11.4853 4 13.5 6.01472 13.5 8.5C13.5 10.9853 11.4853 13 9 13H5C4.72386 13 4.5 12.7761 4.5 12.5C4.5 12.2239 4.72386 12 5 12H9C10.933 12 12.5 10.433 12.5 8.5C12.5 6.567 10.933 5 9 5H3.70711L4.85355 6.14645C5.04882 6.34171 5.04882 6.65829 4.85355 6.85355C4.65829 7.04882 4.34171 7.04882 4.14645 6.85355L2.14645 4.85355C1.95118 4.65829 1.95118 4.34171 2.14645 4.14645L4.14645 2.14645C4.34171 1.95118 4.65829 1.95118 4.85355 2.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ResetIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ResumeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.04995 2.74995C3.04995 2.44619 2.80371 2.19995 2.49995 2.19995C2.19619 2.19995 1.94995 2.44619 1.94995 2.74995V12.25C1.94995 12.5537 2.19619 12.8 2.49995 12.8C2.80371 12.8 3.04995 12.5537 3.04995 12.25V2.74995ZM5.73333 2.30776C5.57835 2.22596 5.39185 2.23127 5.24177 2.32176C5.0917 2.41225 4.99995 2.57471 4.99995 2.74995V12.25C4.99995 12.4252 5.0917 12.5877 5.24177 12.6781C5.39185 12.7686 5.57835 12.7739 5.73333 12.6921L14.7333 7.94214C14.8973 7.85559 15 7.68539 15 7.49995C15 7.31452 14.8973 7.14431 14.7333 7.05776L5.73333 2.30776ZM5.99995 11.4207V3.5792L13.4287 7.49995L5.99995 11.4207Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ResumeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RocketIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.85357 3.85355L7.65355 3.05353C8.2981 2.40901 9.42858 1.96172 10.552 1.80125C11.1056 1.72217 11.6291 1.71725 12.0564 1.78124C12.4987 1.84748 12.7698 1.97696 12.8965 2.10357C13.0231 2.23018 13.1526 2.50125 13.2188 2.94357C13.2828 3.37086 13.2779 3.89439 13.1988 4.44801C13.0383 5.57139 12.591 6.70188 11.9464 7.34645L7.49999 11.7929L6.35354 10.6465C6.15827 10.4512 5.84169 10.4512 5.64643 10.6465C5.45117 10.8417 5.45117 11.1583 5.64643 11.3536L7.14644 12.8536C7.34171 13.0488 7.65829 13.0488 7.85355 12.8536L8.40073 12.3064L9.57124 14.2572C9.65046 14.3893 9.78608 14.4774 9.9389 14.4963C10.0917 14.5151 10.2447 14.4624 10.3535 14.3536L12.3535 12.3536C12.4648 12.2423 12.5172 12.0851 12.495 11.9293L12.0303 8.67679L12.6536 8.05355C13.509 7.19808 14.0117 5.82855 14.1887 4.58943C14.2784 3.9618 14.2891 3.33847 14.2078 2.79546C14.1287 2.26748 13.9519 1.74482 13.6035 1.39645C13.2552 1.04809 12.7325 0.871332 12.2045 0.792264C11.6615 0.710945 11.0382 0.721644 10.4105 0.8113C9.17143 0.988306 7.80189 1.491 6.94644 2.34642L6.32322 2.96968L3.07071 2.50504C2.91492 2.48278 2.75773 2.53517 2.64645 2.64646L0.646451 4.64645C0.537579 4.75533 0.484938 4.90829 0.50375 5.0611C0.522563 5.21391 0.61073 5.34954 0.742757 5.42876L2.69364 6.59928L2.14646 7.14645C2.0527 7.24022 2.00002 7.3674 2.00002 7.50001C2.00002 7.63261 2.0527 7.75979 2.14646 7.85356L3.64647 9.35356C3.84173 9.54883 4.15831 9.54883 4.35357 9.35356C4.54884 9.1583 4.54884 8.84172 4.35357 8.64646L3.20712 7.50001L3.85357 6.85356L6.85357 3.85355ZM10.0993 13.1936L9.12959 11.5775L11.1464 9.56067L11.4697 11.8232L10.0993 13.1936ZM3.42251 5.87041L5.43935 3.85356L3.17678 3.53034L1.80638 4.90074L3.42251 5.87041ZM2.35356 10.3535C2.54882 10.1583 2.54882 9.8417 2.35356 9.64644C2.1583 9.45118 1.84171 9.45118 1.64645 9.64644L0.646451 10.6464C0.451188 10.8417 0.451188 11.1583 0.646451 11.3535C0.841713 11.5488 1.1583 11.5488 1.35356 11.3535L2.35356 10.3535ZM3.85358 11.8536C4.04884 11.6583 4.04885 11.3417 3.85359 11.1465C3.65833 10.9512 3.34175 10.9512 3.14648 11.1465L1.14645 13.1464C0.95119 13.3417 0.951187 13.6583 1.14645 13.8535C1.34171 14.0488 1.65829 14.0488 1.85355 13.8536L3.85358 11.8536ZM5.35356 13.3535C5.54882 13.1583 5.54882 12.8417 5.35356 12.6464C5.1583 12.4512 4.84171 12.4512 4.64645 12.6464L3.64645 13.6464C3.45119 13.8417 3.45119 14.1583 3.64645 14.3535C3.84171 14.5488 4.1583 14.5488 4.35356 14.3535L5.35356 13.3535ZM9.49997 6.74881C10.1897 6.74881 10.7488 6.1897 10.7488 5.5C10.7488 4.8103 10.1897 4.25118 9.49997 4.25118C8.81026 4.25118 8.25115 4.8103 8.25115 5.5C8.25115 6.1897 8.81026 6.74881 9.49997 6.74881Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RocketIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RotateCounterClockwiseIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.59664 2.93628C7.76085 3.06401 8.00012 2.94698 8.00012 2.73895V1.99998C9.98143 2 11.1848 2.3637 11.9105 3.08945C12.6363 3.81522 13 5.0186 13 6.99998C13 7.27613 13.2239 7.49998 13.5 7.49998C13.7761 7.49998 14 7.27613 14 6.99998C14 4.9438 13.6325 3.39719 12.6176 2.38234C11.6028 1.36752 10.0562 0.999999 8.00012 0.999984V0.261266C8.00012 0.0532293 7.76085 -0.0637944 7.59664 0.063928L6.00384 1.30277C5.87516 1.40286 5.87516 1.59735 6.00384 1.69744L7.59664 2.93628ZM9.5 5H2.5C2.22386 5 2 5.22386 2 5.5V12.5C2 12.7761 2.22386 13 2.5 13H9.5C9.77614 13 10 12.7761 10 12.5V5.5C10 5.22386 9.77614 5 9.5 5ZM2.5 4C1.67157 4 1 4.67157 1 5.5V12.5C1 13.3284 1.67157 14 2.5 14H9.5C10.3284 14 11 13.3284 11 12.5V5.5C11 4.67157 10.3284 4 9.5 4H2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RotateCounterClockwiseIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RowSpacingIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.81832 0.68179C7.64258 0.506054 7.35766 0.506054 7.18192 0.68179L5.18192 2.68179C5.00619 2.85753 5.00619 3.14245 5.18192 3.31819C5.35766 3.49392 5.64258 3.49392 5.81832 3.31819L7.05012 2.08638L7.05012 5.50023C7.05012 5.74876 7.25159 5.95023 7.50012 5.95023C7.74865 5.95023 7.95012 5.74876 7.95012 5.50023L7.95012 2.08638L9.18192 3.31819C9.35766 3.49392 9.64258 3.49392 9.81832 3.31819C9.99406 3.14245 9.99406 2.85753 9.81832 2.68179L7.81832 0.68179ZM7.95012 12.9136V9.50023C7.95012 9.2517 7.74865 9.05023 7.50012 9.05023C7.25159 9.05023 7.05012 9.2517 7.05012 9.50023V12.9136L5.81832 11.6818C5.64258 11.5061 5.35766 11.5061 5.18192 11.6818C5.00619 11.8575 5.00619 12.1424 5.18192 12.3182L7.18192 14.3182C7.26632 14.4026 7.38077 14.45 7.50012 14.45C7.61947 14.45 7.73393 14.4026 7.81832 14.3182L9.81832 12.3182C9.99406 12.1424 9.99406 11.8575 9.81832 11.6818C9.64258 11.5061 9.35766 11.5061 9.18192 11.6818L7.95012 12.9136ZM1.49994 7.00017C1.2238 7.00017 0.999939 7.22403 0.999939 7.50017C0.999939 7.77631 1.2238 8.00017 1.49994 8.00017L13.4999 8.00017C13.7761 8.00017 13.9999 7.77631 13.9999 7.50017C13.9999 7.22403 13.7761 7.00017 13.4999 7.00017L1.49994 7.00017Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RowSpacingIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RowsIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14 12.85L1 12.85L1 14.15L14 14.15L14 12.85ZM14 8.85002L1 8.85002L1 10.15L14 10.15L14 8.85002ZM1 4.85003L14 4.85003L14 6.15003L1 6.15002L1 4.85003ZM14 0.850025L1 0.850025L1 2.15002L14 2.15002L14 0.850025Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RowsIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RulerHorizontalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.5 4C0.223858 4 0 4.22386 0 4.5V10.5C0 10.7761 0.223858 11 0.5 11H14.5C14.7761 11 15 10.7761 15 10.5V4.5C15 4.22386 14.7761 4 14.5 4H0.5ZM1 10V5H2.075V7.5C2.075 7.73472 2.26528 7.925 2.5 7.925C2.73472 7.925 2.925 7.73472 2.925 7.5V5H4.075V6.5C4.075 6.73472 4.26528 6.925 4.5 6.925C4.73472 6.925 4.925 6.73472 4.925 6.5V5H6.075V6.5C6.075 6.73472 6.26528 6.925 6.5 6.925C6.73472 6.925 6.925 6.73472 6.925 6.5V5H8.075V7.5C8.075 7.73472 8.26528 7.925 8.5 7.925C8.73472 7.925 8.925 7.73472 8.925 7.5V5H10.075V6.5C10.075 6.73472 10.2653 6.925 10.5 6.925C10.7347 6.925 10.925 6.73472 10.925 6.5V5H12.075V6.5C12.075 6.73472 12.2653 6.925 12.5 6.925C12.7347 6.925 12.925 6.73472 12.925 6.5V5H14V10H1Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RulerHorizontalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const RulerSquareIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.5 0C0.223858 0 0 0.223858 0 0.5V14.5C0 14.7761 0.223858 15 0.5 15H4.5C4.77614 15 5 14.7761 5 14.5V5H14.5C14.7761 5 15 4.77614 15 4.5V0.5C15 0.223858 14.7761 0 14.5 0H0.5ZM1 4.07505L1 1H4.07502C4.07502 1 4.07502 1 4.07502 1L4.07505 4.07507L1 4.07505ZM0.999997 4.92505L1 14H4V12.925H2.75002C2.5153 12.925 2.32502 12.7348 2.32502 12.5C2.32502 12.2653 2.5153 12.075 2.75002 12.075H4V10.925H2.25002C2.0153 10.925 1.82502 10.7347 1.82502 10.5C1.82502 10.2653 2.0153 10.075 2.25002 10.075H4V8.92504L2.75002 8.92502C2.5153 8.92502 2.32502 8.73474 2.32502 8.50002C2.32503 8.26529 2.51531 8.07502 2.75003 8.07502L4 8.07504V6.92502L2.74999 6.925C2.51527 6.925 2.325 6.73472 2.325 6.5C2.325 6.26528 2.51529 6.075 2.75001 6.075L4 6.07502V4.92507L0.999997 4.92505ZM4.92505 4H6.075V2.75006C6.075 2.51534 6.26528 2.32506 6.5 2.32506C6.73472 2.32506 6.925 2.51534 6.925 2.75006V4H8.07502V2.75005C8.07502 2.51533 8.2653 2.32505 8.50002 2.32505C8.73474 2.32505 8.92502 2.51533 8.92502 2.75005V4H10.0751V2.25005C10.0751 2.01533 10.2653 1.82505 10.5001 1.82505C10.7348 1.82505 10.9251 2.01533 10.9251 2.25005V4H12.0751V2.75005C12.0751 2.51533 12.2654 2.32505 12.5001 2.32505C12.7348 2.32505 12.9251 2.51533 12.9251 2.75005V4H14V1H4.92502L4.92505 4Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default RulerSquareIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ScissorsIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.949988 4.48455C0.949988 5.34059 1.64395 6.03455 2.49999 6.03455C3.35603 6.03455 4.04999 5.34059 4.04999 4.48455C4.04999 3.6285 3.35603 2.93455 2.49999 2.93455C1.64395 2.93455 0.949988 3.6285 0.949988 4.48455ZM2.49999 6.93455C1.14689 6.93455 0.0499878 5.83764 0.0499878 4.48455C0.0499878 3.13145 1.14689 2.03455 2.49999 2.03455C3.85309 2.03455 4.94999 3.13145 4.94999 4.48455C4.94999 4.80813 4.88726 5.11707 4.77329 5.39985L5.73655 6.04413C5.72943 6.06656 5.72269 6.08914 5.71635 6.11188L5.56288 6.66186L5.21005 6.89773L4.21554 6.23366C3.77357 6.6672 3.168 6.93455 2.49999 6.93455ZM0.949991 10.5C0.949991 9.64394 1.64395 8.94998 2.49999 8.94998C3.35603 8.94998 4.04999 9.64394 4.04999 10.5C4.04999 11.356 3.35603 12.05 2.49999 12.05C1.64395 12.05 0.949991 11.356 0.949991 10.5ZM2.49999 8.04998C1.14689 8.04998 0.0499908 9.14688 0.0499908 10.5C0.0499908 11.8531 1.14689 12.95 2.49999 12.95C3.85309 12.95 4.94999 11.8531 4.94999 10.5C4.94999 10.1803 4.88877 9.87497 4.77743 9.595L15 2.75737L14.0486 2.85737C12.7077 2.9983 11.4091 3.40895 10.231 4.06461L7.15646 5.77564C6.92307 5.90553 6.75134 6.12339 6.67955 6.38066L6.42653 7.28737L4.22437 8.75957C3.78166 8.32091 3.17246 8.04998 2.49999 8.04998ZM7.14435 9.2149L7.15646 9.22176L10.231 10.9328C11.4091 11.5884 12.7077 11.9991 14.0486 12.14L15 12.24L8.81072 8.1003L7.14435 9.2149Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ScissorsIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SectionIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 1.5C2 1.77614 1.77614 2 1.5 2C1.22386 2 1 1.77614 1 1.5C1 1.22386 1.22386 1 1.5 1C1.77614 1 2 1.22386 2 1.5ZM2 5L2 10H13V5H2ZM2 4C1.44772 4 1 4.44772 1 5V10C1 10.5523 1.44772 11 2 11H13C13.5523 11 14 10.5523 14 10V5C14 4.44772 13.5523 4 13 4H2ZM1.5 14C1.77614 14 2 13.7761 2 13.5C2 13.2239 1.77614 13 1.5 13C1.22386 13 1 13.2239 1 13.5C1 13.7761 1.22386 14 1.5 14ZM4 1.5C4 1.77614 3.77614 2 3.5 2C3.22386 2 3 1.77614 3 1.5C3 1.22386 3.22386 1 3.5 1C3.77614 1 4 1.22386 4 1.5ZM3.5 14C3.77614 14 4 13.7761 4 13.5C4 13.2239 3.77614 13 3.5 13C3.22386 13 3 13.2239 3 13.5C3 13.7761 3.22386 14 3.5 14ZM6 1.5C6 1.77614 5.77614 2 5.5 2C5.22386 2 5 1.77614 5 1.5C5 1.22386 5.22386 1 5.5 1C5.77614 1 6 1.22386 6 1.5ZM5.5 14C5.77614 14 6 13.7761 6 13.5C6 13.2239 5.77614 13 5.5 13C5.22386 13 5 13.2239 5 13.5C5 13.7761 5.22386 14 5.5 14ZM8 1.5C8 1.77614 7.77614 2 7.5 2C7.22386 2 7 1.77614 7 1.5C7 1.22386 7.22386 1 7.5 1C7.77614 1 8 1.22386 8 1.5ZM7.5 14C7.77614 14 8 13.7761 8 13.5C8 13.2239 7.77614 13 7.5 13C7.22386 13 7 13.2239 7 13.5C7 13.7761 7.22386 14 7.5 14ZM10 1.5C10 1.77614 9.77614 2 9.5 2C9.22386 2 9 1.77614 9 1.5C9 1.22386 9.22386 1 9.5 1C9.77614 1 10 1.22386 10 1.5ZM9.5 14C9.77614 14 10 13.7761 10 13.5C10 13.2239 9.77614 13 9.5 13C9.22386 13 9 13.2239 9 13.5C9 13.7761 9.22386 14 9.5 14ZM12 1.5C12 1.77614 11.7761 2 11.5 2C11.2239 2 11 1.77614 11 1.5C11 1.22386 11.2239 1 11.5 1C11.7761 1 12 1.22386 12 1.5ZM11.5 14C11.7761 14 12 13.7761 12 13.5C12 13.2239 11.7761 13 11.5 13C11.2239 13 11 13.2239 11 13.5C11 13.7761 11.2239 14 11.5 14ZM14 1.5C14 1.77614 13.7761 2 13.5 2C13.2239 2 13 1.77614 13 1.5C13 1.22386 13.2239 1 13.5 1C13.7761 1 14 1.22386 14 1.5ZM13.5 14C13.7761 14 14 13.7761 14 13.5C14 13.2239 13.7761 13 13.5 13C13.2239 13 13 13.2239 13 13.5C13 13.7761 13.2239 14 13.5 14Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SectionIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SewingPinIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6 3.5C6 2.67157 6.67157 2 7.5 2C8.32843 2 9 2.67157 9 3.5C9 4.32843 8.32843 5 7.5 5C6.67157 5 6 4.32843 6 3.5ZM8 5.94999C9.14112 5.71836 10 4.70948 10 3.5C10 2.11929 8.88071 1 7.5 1C6.11929 1 5 2.11929 5 3.5C5 4.70948 5.85888 5.71836 7 5.94999V13.5C7 13.7761 7.22386 14 7.5 14C7.77614 14 8 13.7761 8 13.5V5.94999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SewingPinIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SewingPinFilledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10 3.5C10 4.70948 9.14112 5.71836 8 5.94999V13.5C8 13.7761 7.77614 14 7.5 14C7.22386 14 7 13.7761 7 13.5V5.94999C5.85888 5.71836 5 4.70948 5 3.5C5 2.11929 6.11929 1 7.5 1C8.88071 1 10 2.11929 10 3.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SewingPinFilledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ShadowIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          opacity=\".05\"\n          d=\"M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".1\"\n          d=\"M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".15\"\n          d=\"M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".2\"\n          d=\"M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".25\"\n          d=\"M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".3\"\n          d=\"M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".35\"\n          d=\"M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".4\"\n          d=\"M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".45\"\n          d=\"M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".5\"\n          d=\"M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ShadowIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ShadowInnerIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          opacity=\".05\"\n          d=\"M12.1619 3.85182C8.35817 4.88918 4.88936 8.358 3.85199 12.1617L3.3696 12.0301C4.45356 8.05564 8.05581 4.45339 12.0303 3.36943L12.1619 3.85182Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".1\"\n          d=\"M11.8807 3.42707C8.03441 4.50542 4.50561 8.03422 3.42726 11.8805L2.94582 11.7456C4.07129 7.73121 7.7314 4.0711 11.7458 2.94563L11.8807 3.42707Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".15\"\n          d=\"M11.5201 3.02556C7.69092 4.16199 4.16779 7.68323 3.02805 11.512L2.54883 11.3694C3.73676 7.37869 7.38659 3.73076 11.3778 2.54623L11.5201 3.02556Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".2\"\n          d=\"M11.0468 2.66169C7.31117 3.87664 3.87918 7.3079 2.66298 11.0434L2.18754 10.8886C3.45324 7.00109 7.00445 3.45062 10.8921 2.18621L11.0468 2.66169Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".25\"\n          d=\"M10.5201 2.32365C6.92091 3.61447 3.62391 6.90876 2.32845 10.5073L1.858 10.338C3.20398 6.59909 6.61155 3.19424 10.3513 1.85301L10.5201 2.32365Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".3\"\n          d=\"M9.90222 2.03122C6.50003 3.39465 3.39968 6.49367 2.03399 9.89551L1.56998 9.70924C2.98651 6.18076 6.18728 2.98133 9.71622 1.5671L9.90222 2.03122Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".35\"\n          d=\"M9.20727 1.78873C6.06136 3.20349 3.21103 6.05203 1.79331 9.19738L1.33747 8.99192C2.80536 5.73528 5.74485 2.7976 9.0022 1.33272L9.20727 1.78873Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".4\"\n          d=\"M8.40713 1.62085C5.59323 3.05117 3.05794 5.58509 1.62544 8.39847L1.17987 8.1716C2.66036 5.26397 5.27232 2.6534 8.18057 1.17513L8.40713 1.62085Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".45\"\n          d=\"M7.46207 1.56747C5.08689 2.94695 2.95362 5.07912 1.57249 7.45379L1.14028 7.20241C2.56503 4.75273 4.7607 2.55818 7.21096 1.1351L7.46207 1.56747Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".5\"\n          d=\"M6.30407 1.70487C4.51964 2.91063 2.90983 4.52061 1.7043 6.30513L1.28998 6.02524C2.5313 4.18773 4.18673 2.53214 6.02413 1.29059L6.30407 1.70487Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ShadowInnerIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ShadowNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          opacity=\".05\"\n          d=\"M6.78296 13.376C8.73904 9.95284 8.73904 5.04719 6.78296 1.62405L7.21708 1.37598C9.261 4.95283 9.261 10.0472 7.21708 13.624L6.78296 13.376Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".1\"\n          d=\"M7.28204 13.4775C9.23929 9.99523 9.23929 5.00475 7.28204 1.52248L7.71791 1.2775C9.76067 4.9119 9.76067 10.0881 7.71791 13.7225L7.28204 13.4775Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".15\"\n          d=\"M7.82098 13.5064C9.72502 9.99523 9.72636 5.01411 7.82492 1.50084L8.26465 1.26285C10.2465 4.92466 10.2451 10.085 8.26052 13.7448L7.82098 13.5064Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".2\"\n          d=\"M8.41284 13.429C10.1952 9.92842 10.1957 5.07537 8.41435 1.57402L8.85999 1.34729C10.7139 4.99113 10.7133 10.0128 8.85841 13.6559L8.41284 13.429Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".25\"\n          d=\"M9.02441 13.2956C10.6567 9.8379 10.6586 5.17715 9.03005 1.71656L9.48245 1.50366C11.1745 5.09919 11.1726 9.91629 9.47657 13.5091L9.02441 13.2956Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".3\"\n          d=\"M9.66809 13.0655C11.1097 9.69572 11.1107 5.3121 9.67088 1.94095L10.1307 1.74457C11.6241 5.24121 11.6231 9.76683 10.1278 13.2622L9.66809 13.0655Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".35\"\n          d=\"M10.331 12.7456C11.5551 9.52073 11.5564 5.49103 10.3347 2.26444L10.8024 2.0874C12.0672 5.42815 12.0659 9.58394 10.7985 12.9231L10.331 12.7456Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".4\"\n          d=\"M11.0155 12.2986C11.9938 9.29744 11.9948 5.71296 11.0184 2.71067L11.4939 2.55603C12.503 5.6589 12.502 9.35178 11.4909 12.4535L11.0155 12.2986Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".45\"\n          d=\"M11.7214 11.668C12.4254 9.01303 12.4262 5.99691 11.7237 3.34116L12.2071 3.21329C12.9318 5.95292 12.931 9.05728 12.2047 11.7961L11.7214 11.668Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".5\"\n          d=\"M12.4432 10.752C12.8524 8.63762 12.8523 6.36089 12.4429 4.2466L12.9338 4.15155C13.3553 6.32861 13.3554 8.66985 12.9341 10.847L12.4432 10.752Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M7.49991 0.877045C3.84222 0.877045 0.877075 3.84219 0.877075 7.49988C0.877075 9.1488 1.47969 10.657 2.4767 11.8162L1.64647 12.6464C1.45121 12.8417 1.45121 13.1583 1.64647 13.3535C1.84173 13.5488 2.15832 13.5488 2.35358 13.3535L3.18383 12.5233C4.34302 13.5202 5.8511 14.1227 7.49991 14.1227C11.1576 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 5.85107 13.5202 4.34298 12.5233 3.1838L13.3536 2.35355C13.5488 2.15829 13.5488 1.8417 13.3536 1.64644C13.1583 1.45118 12.8417 1.45118 12.6465 1.64644L11.8162 2.47667C10.657 1.47966 9.14883 0.877045 7.49991 0.877045ZM11.1423 3.15065C10.1568 2.32449 8.88644 1.82704 7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 8.88641 2.32452 10.1568 3.15069 11.1422L11.1423 3.15065ZM3.85781 11.8493C4.84322 12.6753 6.11348 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 6.11345 12.6754 4.84319 11.8493 3.85778L3.85781 11.8493Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ShadowNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ShadowOuterIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          opacity=\".05\"\n          d=\"M12.1398 3.88617C13.8553 4.94159 15 6.83701 15 9.00001C15 12.3137 12.3137 15 9.00002 15C6.84351 15 4.95296 13.8621 3.89569 12.1552L4.32076 11.8919C5.29069 13.4578 7.02376 14.5 9.00002 14.5C12.0376 14.5 14.5 12.0375 14.5 9.00001C14.5 7.01781 13.4516 5.28027 11.8778 4.31203L12.1398 3.88617Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".2\"\n          d=\"M12.851 5.07321C13.8684 6.07106 14.5 7.46199 14.5 9C14.5 12.0375 12.0376 14.5 9.00004 14.5C7.46215 14.5 6.07132 13.8685 5.07349 12.8513L5.43043 12.5011C6.3381 13.4264 7.60186 14 9.00004 14C11.7614 14 14 11.7614 14 9C14 7.60171 13.4264 6.33786 12.5009 5.43017L12.851 5.07321Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".35\"\n          d=\"M13.3022 6.45071C13.7455 7.19737 14 8.06935 14 9.00001C14 11.7614 11.7614 14 9.00002 14C8.04868 14 7.15868 13.7341 6.40118 13.2724L6.66142 12.8454C7.34275 13.2607 8.14306 13.5 9.00002 13.5C11.4853 13.5 13.5 11.4853 13.5 9.00001C13.5 8.16165 13.271 7.37754 12.8722 6.70599L13.3022 6.45071Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".5\"\n          d=\"M13.3745 7.94022C13.4566 8.28031 13.5 8.63525 13.5 9.00001C13.5 11.4853 11.4853 13.5 9.00003 13.5C8.61104 13.5 8.23323 13.4506 7.87268 13.3576L7.99759 12.8734C8.31768 12.956 8.65353 13 9.00003 13C11.2091 13 13 11.2091 13 9.00001C13 8.67509 12.9613 8.35953 12.8884 8.05757L13.3745 7.94022Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          opacity=\".65\"\n          d=\"M12.9155 9.82133C12.5898 11.3813 11.3562 12.6072 9.79205 12.9215L9.69354 12.4313C11.0613 12.1565 12.1413 11.0834 12.4261 9.71915L12.9155 9.82133Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n        <path\n          d=\"M1.2771 7.50253C1.2771 4.06456 4.06413 1.27753 7.5021 1.27753C10.94 1.27753 13.7271 4.06456 13.7271 7.50253C13.7271 10.9405 10.94 13.7275 7.5021 13.7275C4.06413 13.7275 1.2771 10.9405 1.2771 7.50253ZM7.5021 2.22753C4.5888 2.22753 2.2271 4.58923 2.2271 7.50253C2.2271 10.4158 4.5888 12.7775 7.5021 12.7775C10.4154 12.7775 12.7771 10.4158 12.7771 7.50253C12.7771 4.58923 10.4154 2.22753 7.5021 2.22753Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ShadowOuterIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Share1Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 7.50003C5 8.32845 4.32843 9.00003 3.5 9.00003C2.67157 9.00003 2 8.32845 2 7.50003C2 6.6716 2.67157 6.00003 3.5 6.00003C4.32843 6.00003 5 6.6716 5 7.50003ZM5.71313 8.66388C5.29445 9.45838 4.46048 10 3.5 10C2.11929 10 1 8.88074 1 7.50003C1 6.11931 2.11929 5.00003 3.5 5.00003C4.46048 5.00003 5.29445 5.54167 5.71313 6.33616L9.10424 4.21671C9.03643 3.98968 9 3.74911 9 3.50003C9 2.11932 10.1193 1.00003 11.5 1.00003C12.8807 1.00003 14 2.11932 14 3.50003C14 4.88074 12.8807 6.00003 11.5 6.00003C10.6915 6.00003 9.97264 5.61624 9.51566 5.0209L5.9853 7.22738C5.99502 7.31692 6 7.40789 6 7.50003C6 7.59216 5.99502 7.68312 5.9853 7.77267L9.51567 9.97915C9.97265 9.38382 10.6915 9.00003 11.5 9.00003C12.8807 9.00003 14 10.1193 14 11.5C14 12.8807 12.8807 14 11.5 14C10.1193 14 9 12.8807 9 11.5C9 11.2509 9.03643 11.0104 9.10425 10.7833L5.71313 8.66388ZM11.5 5.00003C12.3284 5.00003 13 4.32846 13 3.50003C13 2.6716 12.3284 2.00003 11.5 2.00003C10.6716 2.00003 10 2.6716 10 3.50003C10 4.32846 10.6716 5.00003 11.5 5.00003ZM13 11.5C13 12.3285 12.3284 13 11.5 13C10.6716 13 10 12.3285 10 11.5C10 10.6716 10.6716 10 11.5 10C12.3284 10 13 10.6716 13 11.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Share1Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const Share2Icon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.5 5.00006C3.22386 5.00006 3 5.22392 3 5.50006L3 11.5001C3 11.7762 3.22386 12.0001 3.5 12.0001L11.5 12.0001C11.7761 12.0001 12 11.7762 12 11.5001L12 5.50006C12 5.22392 11.7761 5.00006 11.5 5.00006L10.25 5.00006C9.97386 5.00006 9.75 4.7762 9.75 4.50006C9.75 4.22392 9.97386 4.00006 10.25 4.00006L11.5 4.00006C12.3284 4.00006 13 4.67163 13 5.50006L13 11.5001C13 12.3285 12.3284 13.0001 11.5 13.0001L3.5 13.0001C2.67157 13.0001 2 12.3285 2 11.5001L2 5.50006C2 4.67163 2.67157 4.00006 3.5 4.00006L4.75 4.00006C5.02614 4.00006 5.25 4.22392 5.25 4.50006C5.25 4.7762 5.02614 5.00006 4.75 5.00006L3.5 5.00006ZM7 1.6364L5.5682 3.0682C5.39246 3.24393 5.10754 3.24393 4.9318 3.0682C4.75607 2.89246 4.75607 2.60754 4.9318 2.4318L7.1818 0.181802C7.26619 0.09741 7.38065 0.049999 7.5 0.049999C7.61935 0.049999 7.73381 0.09741 7.8182 0.181802L10.0682 2.4318C10.2439 2.60754 10.2439 2.89246 10.0682 3.0682C9.89246 3.24393 9.60754 3.24393 9.4318 3.0682L8 1.6364L8 8.5C8 8.77614 7.77614 9 7.5 9C7.22386 9 7 8.77614 7 8.5L7 1.6364Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default Share2Icon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ShuffleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M12.3536 1.14645C12.1583 0.951184 11.8417 0.951184 11.6464 1.14645C11.4512 1.34171 11.4512 1.65829 11.6464 1.85355L12.7929 3H12C10.7037 3 9.71111 3.58423 8.87248 4.38931C8.20065 5.03427 7.59349 5.85684 6.99461 6.6682C6.86287 6.84668 6.73154 7.02462 6.6 7.2C5.10874 9.18835 3.49037 11 0.5 11C0.223858 11 0 11.2239 0 11.5C0 11.7761 0.223858 12 0.5 12C4.00963 12 5.89126 9.81165 7.4 7.8C7.54367 7.60845 7.6832 7.41962 7.81996 7.23454L7.82005 7.23443L7.82006 7.23441C8.41674 6.42695 8.96069 5.69085 9.56502 5.11069C10.2889 4.41577 11.0463 4 12 4H12.7929L11.6464 5.14645C11.4512 5.34171 11.4512 5.65829 11.6464 5.85355C11.8417 6.04882 12.1583 6.04882 12.3536 5.85355L14.3536 3.85355C14.5488 3.65829 14.5488 3.34171 14.3536 3.14645L12.3536 1.14645ZM0.5 3C3.35278 3 5.12992 4.44588 6.50548 6.06746L6.3762 6.24266C6.2483 6.4161 6.12293 6.58609 6 6.75C5.96397 6.79804 5.92798 6.84581 5.892 6.89331C4.57348 5.29306 3.02637 4 0.5 4C0.223858 4 0 3.77614 0 3.5C0 3.22386 0.223858 3 0.5 3ZM8.87248 10.6107C8.37284 10.131 7.90897 9.55314 7.45767 8.95468C7.64688 8.71693 7.82704 8.48061 8 8.25L8.08987 8.12987C8.58412 8.79402 9.05288 9.39766 9.56502 9.88931C10.2889 10.5842 11.0463 11 12 11H12.7929L11.6464 9.85355C11.4512 9.65829 11.4512 9.34171 11.6464 9.14645C11.8417 8.95118 12.1583 8.95118 12.3536 9.14645L14.3536 11.1464C14.5488 11.3417 14.5488 11.6583 14.3536 11.8536L12.3536 13.8536C12.1583 14.0488 11.8417 14.0488 11.6464 13.8536C11.4512 13.6583 11.4512 13.3417 11.6464 13.1464L12.7929 12H12C10.7037 12 9.71111 11.4158 8.87248 10.6107Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ShuffleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SizeIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M11.5 3.04999C11.7485 3.04999 11.95 3.25146 11.95 3.49999V7.49999C11.95 7.74852 11.7485 7.94999 11.5 7.94999C11.2515 7.94999 11.05 7.74852 11.05 7.49999V4.58639L4.58638 11.05H7.49999C7.74852 11.05 7.94999 11.2515 7.94999 11.5C7.94999 11.7485 7.74852 11.95 7.49999 11.95L3.49999 11.95C3.38064 11.95 3.26618 11.9026 3.18179 11.8182C3.0974 11.7338 3.04999 11.6193 3.04999 11.5L3.04999 7.49999C3.04999 7.25146 3.25146 7.04999 3.49999 7.04999C3.74852 7.04999 3.94999 7.25146 3.94999 7.49999L3.94999 10.4136L10.4136 3.94999L7.49999 3.94999C7.25146 3.94999 7.04999 3.74852 7.04999 3.49999C7.04999 3.25146 7.25146 3.04999 7.49999 3.04999L11.5 3.04999Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SizeIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SketchLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.53731 0.826873C7.5125 0.824392 7.4875 0.824392 7.46269 0.826873L3.96269 1.17687C3.85672 1.18747 3.76025 1.24262 3.69736 1.32857L0.699771 5.42528C0.654046 5.48627 0.62647 5.56165 0.625057 5.6434C0.625019 5.6456 0.625 5.64781 0.625 5.65001C0.625 5.65052 0.625001 5.65103 0.625003 5.65153C0.625363 5.74237 0.658021 5.82559 0.712087 5.8903L7.21042 13.7883C7.28165 13.8749 7.38789 13.925 7.5 13.925C7.61211 13.925 7.71835 13.8749 7.78958 13.7883L14.2879 5.89031C14.342 5.8256 14.3746 5.74237 14.375 5.65153C14.375 5.65103 14.375 5.65052 14.375 5.65001C14.375 5.64849 14.375 5.64697 14.375 5.64545C14.3749 5.63963 14.3747 5.63382 14.3744 5.62801C14.37 5.55219 14.3431 5.48242 14.3002 5.42527L11.3026 1.32857C11.2397 1.24262 11.1433 1.18747 11.0373 1.17687L7.53731 0.826873ZM10.925 5.27501V5.25236L10.9223 5.27501H10.925ZM10.9342 5.17498H13.1877L11.2495 2.5261L10.9342 5.17498ZM10.5707 1.88395L8.04432 1.63131L10.1747 5.21034L10.5707 1.88395ZM6.95568 1.63131L4.42931 1.88395L4.82531 5.21034L6.95568 1.63131ZM3.75046 2.5261L1.81226 5.17498H4.0658L3.75046 2.5261ZM1.79416 6.02501L6.75861 12.0587L4.22371 6.0669C4.21787 6.0531 4.21314 6.0391 4.20949 6.02501H1.79416ZM5.15055 6.02501L7.49999 12.1085L9.84943 6.02501H9.78681H5.21319H5.15055ZM10.7905 6.02501C10.7869 6.0391 10.7821 6.0531 10.7763 6.0669L8.24139 12.0587L13.2058 6.02501H10.7905ZM7.5 2.18317L9.34038 5.27501H5.65962L7.5 2.18317Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SketchLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SlashIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.10876 14L9.46582 1H10.8178L5.46074 14H4.10876Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SlashIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SliderIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10.3004 7.49991C10.3004 8.4943 9.49426 9.30041 8.49988 9.30041C7.50549 9.30041 6.69938 8.4943 6.69938 7.49991C6.69938 6.50553 7.50549 5.69942 8.49988 5.69942C9.49426 5.69942 10.3004 6.50553 10.3004 7.49991ZM11.205 8C10.9699 9.28029 9.84816 10.2504 8.49988 10.2504C7.1516 10.2504 6.0299 9.28029 5.79473 8H0.5C0.223858 8 0 7.77614 0 7.5C0 7.22386 0.223858 7 0.5 7H5.7947C6.0298 5.71962 7.15154 4.74942 8.49988 4.74942C9.84822 4.74942 10.97 5.71962 11.2051 7H14.5C14.7761 7 15 7.22386 15 7.5C15 7.77614 14.7761 8 14.5 8H11.205Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SliderIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpaceBetweenHorizontallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14.4999 0.999994C14.2237 0.999994 13.9999 1.22385 13.9999 1.49999L13.9999 5.99995L9.99992 5.99995C9.44764 5.99995 8.99993 6.44766 8.99993 6.99994L8.99993 7.99994C8.99993 8.55222 9.44764 8.99993 9.99992 8.99993L13.9999 8.99993L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999994 14.4999 0.999994ZM4.99996 5.99995L0.999992 5.99995L0.999992 1.49999C0.999992 1.22385 0.776136 0.999994 0.499996 0.999994C0.223856 0.999994 -9.7852e-09 1.22385 -2.18557e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 8.99993L4.99996 8.99993C5.55224 8.99993 5.99995 8.55222 5.99995 7.99993L5.99995 6.99994C5.99995 6.44766 5.55224 5.99995 4.99996 5.99995Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpaceBetweenHorizontallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpaceBetweenVerticallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1L9 1V5C9 5.55228 8.55228 6 8 6H7C6.44772 6 6 5.55228 6 5V1H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM7 9C6.44772 9 6 9.44771 6 10V14H1.49988C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H9V10C9 9.44772 8.55228 9 8 9H7Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpaceBetweenVerticallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpaceEvenlyHorizontallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14.4999 0.999992C14.2237 0.999992 13.9999 1.22385 13.9999 1.49999L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999992 14.4999 0.999992ZM0.499996 0.999992C0.223856 0.999992 -9.78509e-09 1.22385 -2.18556e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 1.49999C0.999992 1.22385 0.776136 0.999992 0.499996 0.999992ZM1.99998 6.99994C1.99998 6.44766 2.44769 5.99995 2.99998 5.99995L5.99995 5.99995C6.55223 5.99995 6.99994 6.44766 6.99994 6.99994L6.99994 7.99993C6.99994 8.55221 6.55223 8.99992 5.99995 8.99992L2.99998 8.99992C2.4477 8.99992 1.99998 8.55221 1.99998 7.99993L1.99998 6.99994ZM8.99993 5.99995C8.44765 5.99995 7.99993 6.44766 7.99993 6.99994L7.99993 7.99993C7.99993 8.55221 8.44765 8.99992 8.99993 8.99992L11.9999 8.99992C12.5522 8.99992 12.9999 8.55221 12.9999 7.99993L12.9999 6.99994C12.9999 6.44766 12.5522 5.99995 11.9999 5.99995L8.99993 5.99995Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpaceEvenlyHorizontallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpaceEvenlyVerticallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM7 2C6.44772 2 6 2.44772 6 3V6C6 6.55228 6.44772 7 7 7H8C8.55228 7 9 6.55228 9 6V3C9 2.44772 8.55228 2 8 2H7ZM7 8C6.44772 8 6 8.44771 6 9V12C6 12.5523 6.44772 13 7 13H8C8.55228 13 9 12.5523 9 12V9C9 8.44772 8.55228 8 8 8H7ZM1.49988 14C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H1.49988Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpaceEvenlyVerticallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpeakerLoudIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.46968 1.05085C7.64122 1.13475 7.75 1.30904 7.75 1.5V13.5C7.75 13.691 7.64122 13.8653 7.46968 13.9492C7.29813 14.0331 7.09377 14.0119 6.94303 13.8947L3.2213 11H1.5C0.671571 11 0 10.3284 0 9.5V5.5C0 4.67158 0.671573 4 1.5 4H3.2213L6.94303 1.10533C7.09377 0.988085 7.29813 0.966945 7.46968 1.05085ZM6.75 2.52232L3.69983 4.89468C3.61206 4.96294 3.50405 5 3.39286 5H1.5C1.22386 5 1 5.22386 1 5.5V9.5C1 9.77615 1.22386 10 1.5 10H3.39286C3.50405 10 3.61206 10.0371 3.69983 10.1053L6.75 12.4777V2.52232ZM10.2784 3.84804C10.4623 3.72567 10.7106 3.77557 10.833 3.95949C12.2558 6.09798 12.2558 8.90199 10.833 11.0405C10.7106 11.2244 10.4623 11.2743 10.2784 11.1519C10.0944 11.0296 10.0445 10.7813 10.1669 10.5973C11.4111 8.72728 11.4111 6.27269 10.1669 4.40264C10.0445 4.21871 10.0944 3.97041 10.2784 3.84804ZM12.6785 1.43044C12.5356 1.2619 12.2832 1.24104 12.1147 1.38386C11.9462 1.52667 11.9253 1.77908 12.0681 1.94762C14.7773 5.14488 14.7773 9.85513 12.0681 13.0524C11.9253 13.2209 11.9462 13.4733 12.1147 13.6161C12.2832 13.759 12.5356 13.7381 12.6785 13.5696C15.6406 10.0739 15.6406 4.92612 12.6785 1.43044Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpeakerLoudIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpeakerModerateIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8 1.5C8 1.31062 7.893 1.13749 7.72361 1.05279C7.55421 0.968093 7.35151 0.986371 7.2 1.1L3.33333 4H1.5C0.671573 4 0 4.67158 0 5.5V9.5C0 10.3284 0.671573 11 1.5 11H3.33333L7.2 13.9C7.35151 14.0136 7.55421 14.0319 7.72361 13.9472C7.893 13.8625 8 13.6894 8 13.5V1.5ZM3.8 4.9L7 2.5V12.5L3.8 10.1C3.71345 10.0351 3.60819 10 3.5 10H1.5C1.22386 10 1 9.77614 1 9.5V5.5C1 5.22386 1.22386 5 1.5 5H3.5C3.60819 5 3.71345 4.96491 3.8 4.9ZM10.833 3.95949C10.7106 3.77557 10.4623 3.72567 10.2784 3.84804C10.0944 3.97041 10.0445 4.21871 10.1669 4.40264C11.4111 6.27268 11.4111 8.72728 10.1669 10.5973C10.0445 10.7813 10.0944 11.0296 10.2784 11.1519C10.4623 11.2743 10.7106 11.2244 10.833 11.0405C12.2558 8.90199 12.2558 6.09798 10.833 3.95949Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpeakerModerateIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpeakerOffIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.72361 1.05279C7.893 1.13749 8 1.31062 8 1.5V13.5C8 13.6894 7.893 13.8625 7.72361 13.9472C7.55421 14.0319 7.35151 14.0136 7.2 13.9L3.33333 11H1.5C0.671573 11 0 10.3284 0 9.5V5.5C0 4.67158 0.671573 4 1.5 4H3.33333L7.2 1.1C7.35151 0.986371 7.55421 0.968093 7.72361 1.05279ZM7 2.5L3.8 4.9C3.71345 4.96491 3.60819 5 3.5 5H1.5C1.22386 5 1 5.22386 1 5.5V9.5C1 9.77614 1.22386 10 1.5 10H3.5C3.60819 10 3.71345 10.0351 3.8 10.1L7 12.5V2.5ZM14.8536 5.14645C15.0488 5.34171 15.0488 5.65829 14.8536 5.85355L13.2071 7.5L14.8536 9.14645C15.0488 9.34171 15.0488 9.65829 14.8536 9.85355C14.6583 10.0488 14.3417 10.0488 14.1464 9.85355L12.5 8.20711L10.8536 9.85355C10.6583 10.0488 10.3417 10.0488 10.1464 9.85355C9.95118 9.65829 9.95118 9.34171 10.1464 9.14645L11.7929 7.5L10.1464 5.85355C9.95118 5.65829 9.95118 5.34171 10.1464 5.14645C10.3417 4.95118 10.6583 4.95118 10.8536 5.14645L12.5 6.79289L14.1464 5.14645C14.3417 4.95118 14.6583 4.95118 14.8536 5.14645Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpeakerOffIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SpeakerQuietIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8 1.5C8 1.31062 7.893 1.13749 7.72361 1.05279C7.55421 0.968093 7.35151 0.986371 7.2 1.1L3.33333 4H1.5C0.671573 4 0 4.67158 0 5.5V9.5C0 10.3284 0.671573 11 1.5 11H3.33333L7.2 13.9C7.35151 14.0136 7.55421 14.0319 7.72361 13.9472C7.893 13.8625 8 13.6894 8 13.5V1.5ZM3.8 4.9L7 2.5V12.5L3.8 10.1C3.71345 10.0351 3.60819 10 3.5 10H1.5C1.22386 10 1 9.77614 1 9.5V5.5C1 5.22386 1.22386 5 1.5 5H3.5C3.60819 5 3.71345 4.96491 3.8 4.9ZM10.083 5.05577C9.96066 4.87185 9.71235 4.82195 9.52843 4.94432C9.3445 5.06669 9.2946 5.31499 9.41697 5.49892C10.2207 6.70693 10.2207 8.29303 9.41697 9.50104C9.2946 9.68496 9.3445 9.93326 9.52843 10.0556C9.71235 10.178 9.96066 10.1281 10.083 9.94418C11.0653 8.46773 11.0653 6.53222 10.083 5.05577Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SpeakerQuietIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SquareIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 1H1.5H13.5H14V1.5V13.5V14H13.5H1.5H1V13.5V1.5V1ZM2 2V13H13V2H2Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SquareIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StackIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.75432 1.81954C7.59742 1.72682 7.4025 1.72682 7.24559 1.81954L1.74559 5.06954C1.59336 5.15949 1.49996 5.32317 1.49996 5.5C1.49996 5.67683 1.59336 5.84051 1.74559 5.93046L7.24559 9.18046C7.4025 9.27318 7.59742 9.27318 7.75432 9.18046L13.2543 5.93046C13.4066 5.84051 13.5 5.67683 13.5 5.5C13.5 5.32317 13.4066 5.15949 13.2543 5.06954L7.75432 1.81954ZM7.49996 8.16923L2.9828 5.5L7.49996 2.83077L12.0171 5.5L7.49996 8.16923ZM2.25432 8.31954C2.01658 8.17906 1.70998 8.2579 1.56949 8.49564C1.42901 8.73337 1.50785 9.03998 1.74559 9.18046L7.24559 12.4305C7.4025 12.5232 7.59742 12.5232 7.75432 12.4305L13.2543 9.18046C13.4921 9.03998 13.5709 8.73337 13.4304 8.49564C13.2899 8.2579 12.9833 8.17906 12.7456 8.31954L7.49996 11.4192L2.25432 8.31954Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StackIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StarIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.97942 1.25171L6.9585 1.30199L5.58662 4.60039C5.54342 4.70426 5.44573 4.77523 5.3336 4.78422L1.7727 5.0697L1.71841 5.07405L1.38687 5.10063L1.08608 5.12475C0.820085 5.14607 0.712228 5.47802 0.914889 5.65162L1.14406 5.84793L1.39666 6.06431L1.43802 6.09974L4.15105 8.42374C4.23648 8.49692 4.2738 8.61176 4.24769 8.72118L3.41882 12.196L3.40618 12.249L3.32901 12.5725L3.25899 12.866C3.19708 13.1256 3.47945 13.3308 3.70718 13.1917L3.9647 13.0344L4.24854 12.861L4.29502 12.8326L7.34365 10.9705C7.43965 10.9119 7.5604 10.9119 7.6564 10.9705L10.705 12.8326L10.7515 12.861L11.0354 13.0344L11.2929 13.1917C11.5206 13.3308 11.803 13.1256 11.7411 12.866L11.671 12.5725L11.5939 12.249L11.5812 12.196L10.7524 8.72118C10.7263 8.61176 10.7636 8.49692 10.849 8.42374L13.562 6.09974L13.6034 6.06431L13.856 5.84793L14.0852 5.65162C14.2878 5.47802 14.18 5.14607 13.914 5.12475L13.6132 5.10063L13.2816 5.07405L13.2274 5.0697L9.66645 4.78422C9.55432 4.77523 9.45663 4.70426 9.41343 4.60039L8.04155 1.30199L8.02064 1.25171L7.89291 0.944609L7.77702 0.665992C7.67454 0.419604 7.32551 0.419604 7.22303 0.665992L7.10715 0.944609L6.97942 1.25171ZM7.50003 2.60397L6.50994 4.98442C6.32273 5.43453 5.89944 5.74207 5.41351 5.78103L2.84361 5.98705L4.8016 7.66428C5.17183 7.98142 5.33351 8.47903 5.2204 8.95321L4.62221 11.461L6.8224 10.1171C7.23842 9.86302 7.76164 9.86302 8.17766 10.1171L10.3778 11.461L9.77965 8.95321C9.66654 8.47903 9.82822 7.98142 10.1984 7.66428L12.1564 5.98705L9.58654 5.78103C9.10061 5.74207 8.67732 5.43453 8.49011 4.98442L7.50003 2.60397Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StarIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StarFilledIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.22303 0.665992C7.32551 0.419604 7.67454 0.419604 7.77702 0.665992L9.41343 4.60039C9.45663 4.70426 9.55432 4.77523 9.66645 4.78422L13.914 5.12475C14.18 5.14607 14.2878 5.47802 14.0852 5.65162L10.849 8.42374C10.7636 8.49692 10.7263 8.61176 10.7524 8.72118L11.7411 12.866C11.803 13.1256 11.5206 13.3308 11.2929 13.1917L7.6564 10.9705C7.5604 10.9119 7.43965 10.9119 7.34365 10.9705L3.70718 13.1917C3.47945 13.3308 3.19708 13.1256 3.25899 12.866L4.24769 8.72118C4.2738 8.61176 4.23648 8.49692 4.15105 8.42374L0.914889 5.65162C0.712228 5.47802 0.820086 5.14607 1.08608 5.12475L5.3336 4.78422C5.44573 4.77523 5.54342 4.70426 5.58662 4.60039L7.22303 0.665992Z\"\n          fill={color}\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StarFilledIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StitchesLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.84998 7.49998C1.84998 7.21321 1.87134 6.93143 1.91256 6.65615L9.56374 2.23875C9.86311 2.35627 10.15 2.49861 10.4219 2.66322L3.77065 6.50332C3.73669 6.52183 3.70482 6.5449 3.67602 6.57238C3.5911 6.65308 3.54245 6.76286 3.53682 6.87658C3.53359 6.9418 3.54451 7.00831 3.57086 7.07137C3.58927 7.1157 3.6149 7.15742 3.64744 7.19458C3.67306 7.22396 3.702 7.24941 3.73337 7.27069L7.32533 9.83813L3.87232 11.8317C2.63604 10.7953 1.84998 9.23944 1.84998 7.49998ZM8.36843 10.2751C8.37682 10.2706 8.38509 10.2659 8.39322 10.2608L9.84091 9.42499C9.84706 9.42163 9.85314 9.41812 9.85915 9.41446L11.3101 8.57677C11.3655 8.54649 11.4154 8.504 11.4554 8.44995C11.6034 8.25031 11.5616 7.96848 11.362 7.82046L7.82779 5.20017L11.2161 3.24393C12.4013 4.27963 13.15 5.80237 13.15 7.49998C13.15 7.83546 13.1207 8.16411 13.0647 8.48353L5.56875 12.8113C5.26138 12.6995 4.96646 12.5618 4.68662 12.4008L8.36843 10.2751ZM8.18149 9.34383L4.81659 6.93868L5.50918 6.53881L8.80604 8.98324L8.18149 9.34383ZM6.35875 6.04832L6.97822 5.69067L10.2751 8.13506L9.6556 8.49275L6.35875 6.04832ZM8.3318 1.91078L2.24263 5.42636C3.06941 3.33188 5.11164 1.84998 7.49998 1.84998C7.78258 1.84998 8.06033 1.87072 8.3318 1.91078ZM6.84684 13.1126C7.06114 13.1373 7.27908 13.15 7.49998 13.15C9.8246 13.15 11.8213 11.7461 12.6886 9.7399L6.84684 13.1126ZM7.49998 0.849976C3.82728 0.849976 0.849976 3.82728 0.849976 7.49998C0.849976 11.1727 3.82728 14.15 7.49998 14.15C11.1727 14.15 14.15 11.1727 14.15 7.49998C14.15 3.82728 11.1727 0.849976 7.49998 0.849976Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StitchesLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 3C2 2.44772 2.44772 2 3 2H12C12.5523 2 13 2.44772 13 3V12C13 12.5523 12.5523 13 12 13H3C2.44772 13 2 12.5523 2 12V3ZM12 3H3V12H12V3Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StopwatchIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.49998 0.5C5.49998 0.223858 5.72383 0 5.99998 0H7.49998H8.99998C9.27612 0 9.49998 0.223858 9.49998 0.5C9.49998 0.776142 9.27612 1 8.99998 1H7.99998V2.11922C9.09832 2.20409 10.119 2.56622 10.992 3.13572C11.0116 3.10851 11.0336 3.08252 11.058 3.05806L11.858 2.25806C12.1021 2.01398 12.4978 2.01398 12.7419 2.25806C12.986 2.50214 12.986 2.89786 12.7419 3.14194L11.967 3.91682C13.1595 5.07925 13.9 6.70314 13.9 8.49998C13.9 12.0346 11.0346 14.9 7.49998 14.9C3.96535 14.9 1.09998 12.0346 1.09998 8.49998C1.09998 5.13362 3.69904 2.3743 6.99998 2.11922V1H5.99998C5.72383 1 5.49998 0.776142 5.49998 0.5ZM2.09998 8.49998C2.09998 5.51764 4.51764 3.09998 7.49998 3.09998C10.4823 3.09998 12.9 5.51764 12.9 8.49998C12.9 11.4823 10.4823 13.9 7.49998 13.9C4.51764 13.9 2.09998 11.4823 2.09998 8.49998ZM7.99998 4.5C7.99998 4.22386 7.77612 4 7.49998 4C7.22383 4 6.99998 4.22386 6.99998 4.5V9.5C6.99998 9.77614 7.22383 10 7.49998 10C7.77612 10 7.99998 9.77614 7.99998 9.5V4.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StopwatchIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StretchHorizontallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14.4999 0.999992C14.2237 0.999992 13.9999 1.22385 13.9999 1.49999L13.9999 5.99995L0.999992 5.99995L0.999992 1.49999C0.999992 1.22385 0.776136 0.999992 0.499996 0.999992C0.223856 0.999992 -9.78509e-09 1.22385 -2.18556e-08 1.49999L4.07279e-07 13.4999C3.95208e-07 13.776 0.223855 13.9999 0.499996 13.9999C0.776136 13.9999 0.999992 13.776 0.999992 13.4999L0.999992 8.99992L13.9999 8.99992L13.9999 13.4999C13.9999 13.776 14.2237 13.9999 14.4999 13.9999C14.776 13.9999 14.9999 13.776 14.9999 13.4999L14.9999 1.49999C14.9999 1.22385 14.776 0.999992 14.4999 0.999992Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StretchHorizontallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StretchVerticallyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.999878 0.5C0.999878 0.223858 1.22374 0 1.49988 0H13.4999C13.776 0 13.9999 0.223858 13.9999 0.5C13.9999 0.776142 13.776 1 13.4999 1H6H1.49988C1.22374 1 0.999878 0.776142 0.999878 0.5ZM9 14V1L6 1V14H1.49988C1.22374 14 0.999878 14.2239 0.999878 14.5C0.999878 14.7761 1.22374 15 1.49988 15H13.4999C13.776 15 13.9999 14.7761 13.9999 14.5C13.9999 14.2239 13.776 14 13.4999 14H9Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StretchVerticallyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const StrikethroughIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.00003 3.25C5.00003 2.97386 4.77617 2.75 4.50003 2.75C4.22389 2.75 4.00003 2.97386 4.00003 3.25V7.10003H2.49998C2.27906 7.10003 2.09998 7.27912 2.09998 7.50003C2.09998 7.72094 2.27906 7.90003 2.49998 7.90003H4.00003V8.55C4.00003 10.483 5.56703 12.05 7.50003 12.05C9.43303 12.05 11 10.483 11 8.55V7.90003H12.5C12.7209 7.90003 12.9 7.72094 12.9 7.50003C12.9 7.27912 12.7209 7.10003 12.5 7.10003H11V3.25C11 2.97386 10.7762 2.75 10.5 2.75C10.2239 2.75 10 2.97386 10 3.25V7.10003H5.00003V3.25ZM5.00003 7.90003V8.55C5.00003 9.93071 6.11932 11.05 7.50003 11.05C8.88074 11.05 10 9.93071 10 8.55V7.90003H5.00003Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default StrikethroughIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SunIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SunIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SwitchIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10.5 4C8.567 4 7 5.567 7 7.5C7 9.433 8.567 11 10.5 11C12.433 11 14 9.433 14 7.5C14 5.567 12.433 4 10.5 4ZM7.67133 11C6.65183 10.175 6 8.91363 6 7.5C6 6.08637 6.65183 4.82498 7.67133 4H4.5C2.567 4 1 5.567 1 7.5C1 9.433 2.567 11 4.5 11H7.67133ZM0 7.5C0 5.01472 2.01472 3 4.5 3H10.5C12.9853 3 15 5.01472 15 7.5C15 9.98528 12.9853 12 10.5 12H4.5C2.01472 12 0 9.98528 0 7.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SwitchIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const SymbolIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.90321 7.29677C1.90321 10.341 4.11041 12.4147 6.58893 12.8439C6.87255 12.893 7.06266 13.1627 7.01355 13.4464C6.96444 13.73 6.69471 13.9201 6.41109 13.871C3.49942 13.3668 0.86084 10.9127 0.86084 7.29677C0.860839 5.76009 1.55996 4.55245 2.37639 3.63377C2.96124 2.97568 3.63034 2.44135 4.16846 2.03202L2.53205 2.03202C2.25591 2.03202 2.03205 1.80816 2.03205 1.53202C2.03205 1.25588 2.25591 1.03202 2.53205 1.03202L5.53205 1.03202C5.80819 1.03202 6.03205 1.25588 6.03205 1.53202L6.03205 4.53202C6.03205 4.80816 5.80819 5.03202 5.53205 5.03202C5.25591 5.03202 5.03205 4.80816 5.03205 4.53202L5.03205 2.68645L5.03054 2.68759L5.03045 2.68766L5.03044 2.68767L5.03043 2.68767C4.45896 3.11868 3.76059 3.64538 3.15554 4.3262C2.44102 5.13021 1.90321 6.10154 1.90321 7.29677ZM13.0109 7.70321C13.0109 4.69115 10.8505 2.6296 8.40384 2.17029C8.12093 2.11718 7.93465 1.84479 7.98776 1.56188C8.04087 1.27898 8.31326 1.0927 8.59616 1.14581C11.4704 1.68541 14.0532 4.12605 14.0532 7.70321C14.0532 9.23988 13.3541 10.4475 12.5377 11.3662C11.9528 12.0243 11.2837 12.5586 10.7456 12.968L12.3821 12.968C12.6582 12.968 12.8821 13.1918 12.8821 13.468C12.8821 13.7441 12.6582 13.968 12.3821 13.968L9.38205 13.968C9.10591 13.968 8.88205 13.7441 8.88205 13.468L8.88205 10.468C8.88205 10.1918 9.10591 9.96796 9.38205 9.96796C9.65819 9.96796 9.88205 10.1918 9.88205 10.468L9.88205 12.3135L9.88362 12.3123C10.4551 11.8813 11.1535 11.3546 11.7585 10.6738C12.4731 9.86976 13.0109 8.89844 13.0109 7.70321Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default SymbolIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TableIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8 2H12.5C12.7761 2 13 2.22386 13 2.5V5H8V2ZM7 5V2H2.5C2.22386 2 2 2.22386 2 2.5V5H7ZM2 6V9H7V6H2ZM8 6H13V9H8V6ZM8 10H13V12.5C13 12.7761 12.7761 13 12.5 13H8V10ZM2 12.5V10H7V13H2.5C2.22386 13 2 12.7761 2 12.5ZM1 2.5C1 1.67157 1.67157 1 2.5 1H12.5C13.3284 1 14 1.67157 14 2.5V12.5C14 13.3284 13.3284 14 12.5 14H2.5C1.67157 14 1 13.3284 1 12.5V2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TableIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TargetIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.900024 7.50002C0.900024 3.85495 3.85495 0.900024 7.50002 0.900024C11.1451 0.900024 14.1 3.85495 14.1 7.50002C14.1 11.1451 11.1451 14.1 7.50002 14.1C3.85495 14.1 0.900024 11.1451 0.900024 7.50002ZM7.50002 1.80002C4.35201 1.80002 1.80002 4.35201 1.80002 7.50002C1.80002 10.648 4.35201 13.2 7.50002 13.2C10.648 13.2 13.2 10.648 13.2 7.50002C13.2 4.35201 10.648 1.80002 7.50002 1.80002ZM3.07504 7.50002C3.07504 5.05617 5.05618 3.07502 7.50004 3.07502C9.94388 3.07502 11.925 5.05617 11.925 7.50002C11.925 9.94386 9.94388 11.925 7.50004 11.925C5.05618 11.925 3.07504 9.94386 3.07504 7.50002ZM7.50004 3.92502C5.52562 3.92502 3.92504 5.52561 3.92504 7.50002C3.92504 9.47442 5.52563 11.075 7.50004 11.075C9.47444 11.075 11.075 9.47442 11.075 7.50002C11.075 5.52561 9.47444 3.92502 7.50004 3.92502ZM7.50004 5.25002C6.2574 5.25002 5.25004 6.25739 5.25004 7.50002C5.25004 8.74266 6.2574 9.75002 7.50004 9.75002C8.74267 9.75002 9.75004 8.74266 9.75004 7.50002C9.75004 6.25738 8.74267 5.25002 7.50004 5.25002ZM6.05004 7.50002C6.05004 6.69921 6.69923 6.05002 7.50004 6.05002C8.30084 6.05002 8.95004 6.69921 8.95004 7.50002C8.95004 8.30083 8.30084 8.95002 7.50004 8.95002C6.69923 8.95002 6.05004 8.30083 6.05004 7.50002Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TargetIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.94993 2.95002L3.94993 4.49998C3.94993 4.74851 3.74845 4.94998 3.49993 4.94998C3.2514 4.94998 3.04993 4.74851 3.04993 4.49998V2.50004C3.04993 2.45246 3.05731 2.40661 3.07099 2.36357C3.12878 2.18175 3.29897 2.05002 3.49993 2.05002H11.4999C11.6553 2.05002 11.7922 2.12872 11.8731 2.24842C11.9216 2.32024 11.9499 2.40682 11.9499 2.50002L11.9499 2.50004V4.49998C11.9499 4.74851 11.7485 4.94998 11.4999 4.94998C11.2514 4.94998 11.0499 4.74851 11.0499 4.49998V2.95002H8.04993V12.05H9.25428C9.50281 12.05 9.70428 12.2515 9.70428 12.5C9.70428 12.7486 9.50281 12.95 9.25428 12.95H5.75428C5.50575 12.95 5.30428 12.7486 5.30428 12.5C5.30428 12.2515 5.50575 12.05 5.75428 12.05H6.94993V2.95002H3.94993Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignBottomIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.89949 5.50002C3.89949 5.27911 3.7204 5.10003 3.49949 5.10003C3.27857 5.10003 3.09949 5.27911 3.09949 5.50002L3.09949 12.5343L1.78233 11.2172C1.62612 11.061 1.37285 11.061 1.21664 11.2172C1.06043 11.3734 1.06043 11.6267 1.21664 11.7829L3.21664 13.7829C3.29166 13.8579 3.3934 13.9 3.49949 13.9C3.60557 13.9 3.70732 13.8579 3.78233 13.7829L5.78233 11.7829C5.93854 11.6267 5.93854 11.3734 5.78233 11.2172C5.62612 11.061 5.37285 11.061 5.21664 11.2172L3.89949 12.5343L3.89949 5.50002ZM8.49998 13C8.22383 13 7.99998 12.7762 7.99998 12.5C7.99998 12.2239 8.22383 12 8.49998 12H14.5C14.7761 12 15 12.2239 15 12.5C15 12.7762 14.7761 13 14.5 13H8.49998ZM8.49998 10C8.22383 10 7.99998 9.77617 7.99998 9.50002C7.99998 9.22388 8.22383 9.00002 8.49998 9.00002H14.5C14.7761 9.00002 15 9.22388 15 9.50002C15 9.77617 14.7761 10 14.5 10H8.49998ZM7.99998 6.50002C7.99998 6.77617 8.22383 7.00002 8.49998 7.00002H14.5C14.7761 7.00002 15 6.77617 15 6.50002C15 6.22388 14.7761 6.00002 14.5 6.00002H8.49998C8.22383 6.00002 7.99998 6.22388 7.99998 6.50002Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignBottomIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignCenterIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM4 7.5C4 7.22386 4.22386 7 4.5 7H10.5C10.7761 7 11 7.22386 11 7.5C11 7.77614 10.7761 8 10.5 8H4.5C4.22386 8 4 7.77614 4 7.5ZM3 10.5C3 10.2239 3.22386 10 3.5 10H11.5C11.7761 10 12 10.2239 12 10.5C12 10.7761 11.7761 11 11.5 11H3.5C3.22386 11 3 10.7761 3 10.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignCenterIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignJustifyIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2.5 4C2.22386 4 2 4.22386 2 4.5C2 4.77614 2.22386 5 2.5 5H12.5C12.7761 5 13 4.77614 13 4.5C13 4.22386 12.7761 4 12.5 4H2.5ZM2 7.5C2 7.22386 2.22386 7 2.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H2.5C2.22386 8 2 7.77614 2 7.5ZM2 10.5C2 10.2239 2.22386 10 2.5 10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H2.5C2.22386 11 2 10.7761 2 10.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignJustifyIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM2 7.5C2 7.22386 2.22386 7 2.5 7H7.5C7.77614 7 8 7.22386 8 7.5C8 7.77614 7.77614 8 7.5 8H2.5C2.22386 8 2 7.77614 2 7.5ZM2 10.5C2 10.2239 2.22386 10 2.5 10H10.5C10.7761 10 11 10.2239 11 10.5C11 10.7761 10.7761 11 10.5 11H2.5C2.22386 11 2 10.7761 2 10.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignMiddleIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.49949 14.9C3.7204 14.9 3.89949 14.7209 3.89949 14.5L3.89949 10.4657L5.21664 11.7829C5.37285 11.9391 5.62612 11.9391 5.78233 11.7829C5.93854 11.6267 5.93854 11.3734 5.78233 11.2172L3.78233 9.21718C3.70732 9.14217 3.60557 9.10002 3.49949 9.10002C3.3934 9.10002 3.29166 9.14217 3.21664 9.21718L1.21664 11.2172C1.06043 11.3734 1.06043 11.6267 1.21664 11.7829C1.37285 11.9391 1.62612 11.9391 1.78233 11.7829L3.09949 10.4657L3.09949 14.5C3.09949 14.7209 3.27857 14.9 3.49949 14.9ZM7.99998 10.5C7.99998 10.7762 8.22383 11 8.49998 11H14.5C14.7761 11 15 10.7762 15 10.5C15 10.2239 14.7761 10 14.5 10H8.49998C8.22383 10 7.99998 10.2239 7.99998 10.5ZM7.99998 7.50002C7.99998 7.77617 8.22383 8.00002 8.49998 8.00002H14.5C14.7761 8.00002 15 7.77617 15 7.50002C15 7.22388 14.7761 7.00002 14.5 7.00002H8.49998C8.22383 7.00002 7.99998 7.22388 7.99998 7.50002ZM8.49998 5.00002C8.22383 5.00002 7.99998 4.77617 7.99998 4.50002C7.99998 4.22388 8.22383 4.00002 8.49998 4.00002H14.5C14.7761 4.00002 15 4.22388 15 4.50002C15 4.77617 14.7761 5.00002 14.5 5.00002H8.49998ZM3.89949 0.500025C3.89949 0.279111 3.7204 0.100025 3.49949 0.100025C3.27857 0.100025 3.09949 0.279111 3.09949 0.500025L3.09949 4.53434L1.78233 3.21718C1.62612 3.06097 1.37285 3.06097 1.21664 3.21718C1.06043 3.37339 1.06043 3.62666 1.21664 3.78287L3.21664 5.78287C3.29166 5.85788 3.3934 5.90002 3.49949 5.90002C3.60557 5.90002 3.70732 5.85788 3.78233 5.78287L5.78233 3.78287C5.93854 3.62666 5.93854 3.37339 5.78233 3.21718C5.62612 3.06097 5.37285 3.06097 5.21664 3.21718L3.89949 4.53434L3.89949 0.500025Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignMiddleIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M2 4.5C2 4.22386 2.22386 4 2.5 4H12.5C12.7761 4 13 4.22386 13 4.5C13 4.77614 12.7761 5 12.5 5H2.5C2.22386 5 2 4.77614 2 4.5ZM7 7.5C7 7.22386 7.22386 7 7.5 7H12.5C12.7761 7 13 7.22386 13 7.5C13 7.77614 12.7761 8 12.5 8H7.5C7.22386 8 7 7.77614 7 7.5ZM4 10.5C4 10.2239 4.22386 10 4.5 10H12.5C12.7761 10 13 10.2239 13 10.5C13 10.7761 12.7761 11 12.5 11H4.5C4.22386 11 4 10.7761 4 10.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextAlignTopIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M3.89949 9.49998C3.89949 9.72089 3.7204 9.89997 3.49949 9.89997C3.27857 9.89997 3.09949 9.72089 3.09949 9.49998L3.09949 2.46566L1.78233 3.78282C1.62612 3.93903 1.37285 3.93903 1.21664 3.78282C1.06043 3.62661 1.06043 3.37334 1.21664 3.21713L3.21664 1.21713C3.29166 1.14212 3.3934 1.09998 3.49949 1.09998C3.60557 1.09998 3.70732 1.14212 3.78233 1.21713L5.78233 3.21713C5.93854 3.37334 5.93854 3.62661 5.78233 3.78282C5.62612 3.93903 5.37285 3.93903 5.21664 3.78282L3.89949 2.46566L3.89949 9.49998ZM8.49998 1.99998C8.22383 1.99998 7.99998 2.22383 7.99998 2.49998C7.99998 2.77612 8.22383 2.99998 8.49998 2.99998H14.5C14.7761 2.99998 15 2.77612 15 2.49998C15 2.22383 14.7761 1.99998 14.5 1.99998H8.49998ZM8.49998 4.99998C8.22383 4.99998 7.99998 5.22383 7.99998 5.49998C7.99998 5.77612 8.22383 5.99998 8.49998 5.99998H14.5C14.7761 5.99998 15 5.77612 15 5.49998C15 5.22383 14.7761 4.99998 14.5 4.99998H8.49998ZM7.99998 8.49998C7.99998 8.22383 8.22383 7.99998 8.49998 7.99998H14.5C14.7761 7.99998 15 8.22383 15 8.49998C15 8.77612 14.7761 8.99998 14.5 8.99998H8.49998C8.22383 8.99998 7.99998 8.77612 7.99998 8.49998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextAlignTopIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TextNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.3536 2.35355C13.5488 2.15829 13.5488 1.84171 13.3536 1.64645C13.1583 1.45118 12.8417 1.45118 12.6464 1.64645L11.9291 2.36383C11.9159 2.32246 11.897 2.28368 11.8732 2.24845C11.7923 2.12875 11.6554 2.05005 11.5001 2.05005H3.50005C3.29909 2.05005 3.1289 2.18178 3.07111 2.3636C3.05743 2.40665 3.05005 2.45249 3.05005 2.50007V4.50001C3.05005 4.74854 3.25152 4.95001 3.50005 4.95001C3.74858 4.95001 3.95005 4.74854 3.95005 4.50001V2.95005H6.95006V7.34284L1.64645 12.6464C1.45118 12.8417 1.45118 13.1583 1.64645 13.3536C1.84171 13.5488 2.15829 13.5488 2.35355 13.3536L6.95006 8.75705V12.0501H5.7544C5.50587 12.0501 5.3044 12.2515 5.3044 12.5001C5.3044 12.7486 5.50587 12.9501 5.7544 12.9501H9.2544C9.50293 12.9501 9.7044 12.7486 9.7044 12.5001C9.7044 12.2515 9.50293 12.0501 9.2544 12.0501H8.05006V7.65705L13.3536 2.35355ZM8.05006 6.24284L11.0501 3.24283V2.95005H8.05006V6.24284Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TextNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ThickArrowDownIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5 3.5C5 3.22386 5.22386 3 5.5 3H9.5C9.77614 3 10 3.22386 10 3.5V6H12.5C12.6873 6 12.8589 6.10467 12.9446 6.27121C13.0303 6.43774 13.0157 6.63821 12.9069 6.79062L7.90687 13.7906C7.81301 13.922 7.66148 14 7.5 14C7.33853 14 7.18699 13.922 7.09314 13.7906L2.09314 6.79062C1.98427 6.63821 1.96972 6.43774 2.05542 6.27121C2.14112 6.10467 2.31271 6 2.5 6H5V3.5ZM6 4V6.5C6 6.77614 5.77614 7 5.5 7H3.4716L7.5 12.6398L11.5284 7H9.5C9.22386 7 9 6.77614 9 6.5V4H6Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ThickArrowDownIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ThickArrowLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1 7.5C1 7.66148 1.07798 7.81301 1.20938 7.90687L8.20938 12.9069C8.36179 13.0157 8.56226 13.0303 8.72879 12.9446C8.89533 12.8589 9 12.6873 9 12.5L9 10L11.5 10C11.7761 10 12 9.77614 12 9.5L12 5.5C12 5.22386 11.7761 5 11.5 5L9 5L9 2.5C9 2.31271 8.89533 2.14112 8.72879 2.05542C8.56226 1.96972 8.36179 1.98427 8.20938 2.09313L1.20938 7.09314C1.07798 7.18699 1 7.33853 1 7.5ZM8 3.4716L8 5.5C8 5.77614 8.22386 6 8.5 6L11 6L11 9L8.5 9C8.22386 9 8 9.22386 8 9.5L8 11.5284L2.36023 7.5L8 3.4716Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ThickArrowLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ThickArrowRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14 7.5C14 7.66148 13.922 7.81301 13.7906 7.90687L6.79062 12.9069C6.63821 13.0157 6.43774 13.0303 6.27121 12.9446C6.10467 12.8589 6 12.6873 6 12.5L6 10L3.5 10C3.22386 10 3 9.77614 3 9.5L3 5.5C3 5.22386 3.22386 5 3.5 5L6 5L6 2.5C6 2.31271 6.10467 2.14112 6.27121 2.05542C6.43774 1.96972 6.63821 1.98427 6.79062 2.09313L13.7906 7.09314C13.922 7.18699 14 7.33853 14 7.5ZM7 3.4716L7 5.5C7 5.77614 6.77614 6 6.5 6L4 6L4 9L6.5 9C6.77614 9 7 9.22386 7 9.5L7 11.5284L12.6398 7.5L7 3.4716Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ThickArrowRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ThickArrowUpIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.5 1C7.66148 1 7.81301 1.07798 7.90687 1.20938L12.9069 8.20938C13.0157 8.36179 13.0303 8.56226 12.9446 8.72879C12.8589 8.89533 12.6873 9 12.5 9H10V11.5C10 11.7761 9.77614 12 9.5 12H5.5C5.22386 12 5 11.7761 5 11.5V9H2.5C2.31271 9 2.14112 8.89533 2.05542 8.72879C1.96972 8.56226 1.98427 8.36179 2.09314 8.20938L7.09314 1.20938C7.18699 1.07798 7.33853 1 7.5 1ZM3.4716 8H5.5C5.77614 8 6 8.22386 6 8.5V11H9V8.5C9 8.22386 9.22386 8 9.5 8H11.5284L7.5 2.36023L3.4716 8Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ThickArrowUpIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TimerIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49998 0.849976C7.22383 0.849976 6.99998 1.07383 6.99998 1.34998V3.52234C6.99998 3.79848 7.22383 4.02234 7.49998 4.02234C7.77612 4.02234 7.99998 3.79848 7.99998 3.52234V1.8718C10.8862 2.12488 13.15 4.54806 13.15 7.49998C13.15 10.6204 10.6204 13.15 7.49998 13.15C4.37957 13.15 1.84998 10.6204 1.84998 7.49998C1.84998 6.10612 2.35407 4.83128 3.19049 3.8459C3.36919 3.63538 3.34339 3.31985 3.13286 3.14115C2.92234 2.96245 2.60681 2.98825 2.42811 3.19877C1.44405 4.35808 0.849976 5.86029 0.849976 7.49998C0.849976 11.1727 3.82728 14.15 7.49998 14.15C11.1727 14.15 14.15 11.1727 14.15 7.49998C14.15 3.82728 11.1727 0.849976 7.49998 0.849976ZM6.74049 8.08072L4.22363 4.57237C4.15231 4.47295 4.16346 4.33652 4.24998 4.25C4.33649 4.16348 4.47293 4.15233 4.57234 4.22365L8.08069 6.74051C8.56227 7.08599 8.61906 7.78091 8.19998 8.2C7.78089 8.61909 7.08597 8.56229 6.74049 8.08072Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TimerIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TokensIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.5 2C3.11929 2 2 3.11929 2 4.5C2 5.88072 3.11929 7 4.5 7C5.88072 7 7 5.88072 7 4.5C7 3.11929 5.88072 2 4.5 2ZM3 4.5C3 3.67157 3.67157 3 4.5 3C5.32843 3 6 3.67157 6 4.5C6 5.32843 5.32843 6 4.5 6C3.67157 6 3 5.32843 3 4.5ZM10.5 2C9.11929 2 8 3.11929 8 4.5C8 5.88072 9.11929 7 10.5 7C11.8807 7 13 5.88072 13 4.5C13 3.11929 11.8807 2 10.5 2ZM9 4.5C9 3.67157 9.67157 3 10.5 3C11.3284 3 12 3.67157 12 4.5C12 5.32843 11.3284 6 10.5 6C9.67157 6 9 5.32843 9 4.5ZM2 10.5C2 9.11929 3.11929 8 4.5 8C5.88072 8 7 9.11929 7 10.5C7 11.8807 5.88072 13 4.5 13C3.11929 13 2 11.8807 2 10.5ZM4.5 9C3.67157 9 3 9.67157 3 10.5C3 11.3284 3.67157 12 4.5 12C5.32843 12 6 11.3284 6 10.5C6 9.67157 5.32843 9 4.5 9ZM10.5 8C9.11929 8 8 9.11929 8 10.5C8 11.8807 9.11929 13 10.5 13C11.8807 13 13 11.8807 13 10.5C13 9.11929 11.8807 8 10.5 8ZM9 10.5C9 9.67157 9.67157 9 10.5 9C11.3284 9 12 9.67157 12 10.5C12 11.3284 11.3284 12 10.5 12C9.67157 12 9 11.3284 9 10.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TokensIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TrackNextIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M13.0502 2.74989C13.0502 2.44613 12.804 2.19989 12.5002 2.19989C12.1965 2.19989 11.9502 2.44613 11.9502 2.74989V7.2825C11.9046 7.18802 11.8295 7.10851 11.7334 7.05776L2.73338 2.30776C2.5784 2.22596 2.3919 2.23127 2.24182 2.32176C2.09175 2.41225 2 2.57471 2 2.74995V12.25C2 12.4252 2.09175 12.5877 2.24182 12.6781C2.3919 12.7686 2.5784 12.7739 2.73338 12.6921L11.7334 7.94214C11.8295 7.89139 11.9046 7.81188 11.9502 7.7174V12.2499C11.9502 12.5536 12.1965 12.7999 12.5002 12.7999C12.804 12.7999 13.0502 12.5536 13.0502 12.2499V2.74989ZM3 11.4207V3.5792L10.4288 7.49995L3 11.4207Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TrackNextIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TrackPreviousIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.94976 2.74989C1.94976 2.44613 2.196 2.19989 2.49976 2.19989C2.80351 2.19989 3.04976 2.44613 3.04976 2.74989V7.2825C3.0954 7.18802 3.17046 7.10851 3.26662 7.05776L12.2666 2.30776C12.4216 2.22596 12.6081 2.23127 12.7582 2.32176C12.9083 2.41225 13 2.57471 13 2.74995V12.25C13 12.4252 12.9083 12.5877 12.7582 12.6781C12.6081 12.7686 12.4216 12.7739 12.2666 12.6921L3.26662 7.94214C3.17046 7.89139 3.0954 7.81188 3.04976 7.7174V12.2499C3.04976 12.5536 2.80351 12.7999 2.49976 12.7999C2.196 12.7999 1.94976 12.5536 1.94976 12.2499V2.74989ZM4.57122 7.49995L12 11.4207V3.5792L4.57122 7.49995Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TrackPreviousIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TransformIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.849976 1.74998C0.849976 1.25292 1.25292 0.849976 1.74998 0.849976H3.24998C3.74703 0.849976 4.14998 1.25292 4.14998 1.74998V2.04998H10.85V1.74998C10.85 1.25292 11.2529 0.849976 11.75 0.849976H13.25C13.747 0.849976 14.15 1.25292 14.15 1.74998V3.24998C14.15 3.74703 13.747 4.14998 13.25 4.14998H12.95V10.85H13.25C13.747 10.85 14.15 11.2529 14.15 11.75V13.25C14.15 13.747 13.747 14.15 13.25 14.15H11.75C11.2529 14.15 10.85 13.747 10.85 13.25V12.95H4.14998V13.25C4.14998 13.747 3.74703 14.15 3.24998 14.15H1.74998C1.25292 14.15 0.849976 13.747 0.849976 13.25V11.75C0.849976 11.2529 1.25292 10.85 1.74998 10.85H2.04998V4.14998H1.74998C1.25292 4.14998 0.849976 3.74703 0.849976 3.24998V1.74998ZM2.94998 4.14998V10.85H3.24998C3.74703 10.85 4.14998 11.2529 4.14998 11.75V12.05H10.85V11.75C10.85 11.2529 11.2529 10.85 11.75 10.85H12.05V4.14998H11.75C11.2529 4.14998 10.85 3.74703 10.85 3.24998V2.94998H4.14998V3.24998C4.14998 3.74703 3.74703 4.14998 3.24998 4.14998H2.94998ZM2.34998 1.74998H1.74998V2.34998V2.64998V3.24998H2.34998H2.64998H3.24998V2.64998V2.34998V1.74998H2.64998H2.34998ZM5.09998 5.99998C5.09998 5.50292 5.50292 5.09998 5.99998 5.09998H6.99998C7.49703 5.09998 7.89998 5.50292 7.89998 5.99998V6.99998C7.89998 7.03591 7.89787 7.07134 7.89378 7.10618C7.92861 7.10208 7.96405 7.09998 7.99998 7.09998H8.99998C9.49703 7.09998 9.89998 7.50292 9.89998 7.99998V8.99998C9.89998 9.49703 9.49703 9.89998 8.99998 9.89998H7.99998C7.50292 9.89998 7.09998 9.49703 7.09998 8.99998V7.99998C7.09998 7.96405 7.10208 7.92861 7.10618 7.89378C7.07134 7.89787 7.03591 7.89998 6.99998 7.89998H5.99998C5.50292 7.89998 5.09998 7.49703 5.09998 6.99998V5.99998ZM6.09998 5.99998H5.99998V6.09998V6.89998V6.99998H6.09998H6.89998H6.99998V6.89998V6.09998V5.99998H6.89998H6.09998ZM7.99998 7.99998H8.09998H8.89998H8.99998V8.09998V8.89998V8.99998H8.89998H8.09998H7.99998V8.89998V8.09998V7.99998ZM2.64998 11.75H2.34998H1.74998V12.35V12.65V13.25H2.34998H2.64998H3.24998V12.65V12.35V11.75H2.64998ZM11.75 1.74998H12.35H12.65H13.25V2.34998V2.64998V3.24998H12.65H12.35H11.75V2.64998V2.34998V1.74998ZM12.65 11.75H12.35H11.75V12.35V12.65V13.25H12.35H12.65H13.25V12.65V12.35V11.75H12.65Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TransformIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TransparencyGridIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          opacity=\".25\"\n          d=\"M0 0H3V3H0V0ZM6 3H3V6H0V9H3V12H0V15H3V12H6V15H9V12H12V15H15V12H12V9H15V6H12V3H15V0H12V3H9V0H6V3ZM6 6V3H9V6H6ZM6 9H3V6H6V9ZM9 9V6H12V9H9ZM9 9H6V12H9V9Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TransparencyGridIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TrashIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.5 1C5.22386 1 5 1.22386 5 1.5C5 1.77614 5.22386 2 5.5 2H9.5C9.77614 2 10 1.77614 10 1.5C10 1.22386 9.77614 1 9.5 1H5.5ZM3 3.5C3 3.22386 3.22386 3 3.5 3H5H10H11.5C11.7761 3 12 3.22386 12 3.5C12 3.77614 11.7761 4 11.5 4H11V12C11 12.5523 10.5523 13 10 13H5C4.44772 13 4 12.5523 4 12V4L3.5 4C3.22386 4 3 3.77614 3 3.5ZM5 4H10V12H5V4Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TrashIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TriangleDownIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M4 6H11L7.5 10.5L4 6Z\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default TriangleDownIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TriangleLeftIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M9 4L9 11L4.5 7.5L9 4Z\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default TriangleLeftIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TriangleRightIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M6 11L6 4L10.5 7.5L6 11Z\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default TriangleRightIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TriangleUpIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path d=\"M4 9H11L7.5 4.5L4 9Z\" fill={color} />\n      </svg>\n    );\n  }\n);\n\nexport default TriangleUpIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const TwitterLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.23336 4.69629C7.23336 2.96884 8.63335 1.56857 10.36 1.56857C11.3736 1.56857 12.183 2.04804 12.7254 2.74385C13.3079 2.62467 13.8557 2.40913 14.3513 2.11508C14.1559 2.72598 13.7424 3.2396 13.2033 3.56463C13.2038 3.56568 13.2042 3.56674 13.2047 3.56779C13.7334 3.50361 14.2364 3.36302 14.7048 3.15546L14.7037 3.15715C14.3667 3.66183 13.9431 4.10736 13.4561 4.47034C13.4823 4.64672 13.4956 4.82427 13.4956 5.00079C13.4956 8.6871 10.6873 12.9746 5.52122 12.9746C3.93906 12.9746 2.46544 12.511 1.22505 11.7152C0.992632 11.5661 0.925108 11.2568 1.07423 11.0244C1.0874 11.0038 1.10183 10.9846 1.11734 10.9666C1.20582 10.8202 1.37438 10.7309 1.5554 10.7522C2.47066 10.8601 3.38568 10.7485 4.19219 10.3962C3.39226 10.0434 2.77129 9.35975 2.50204 8.51974C2.45359 8.3686 2.48835 8.20311 2.59351 8.08422C2.59716 8.0801 2.60087 8.07606 2.60464 8.0721C1.96391 7.50819 1.55973 6.68208 1.55973 5.76143V5.72759C1.55973 5.56814 1.64411 5.42059 1.78155 5.33974C1.82671 5.31317 1.87537 5.29511 1.92532 5.28558C1.70549 4.86154 1.58116 4.37984 1.58116 3.86958C1.58116 3.40165 1.58384 2.81192 1.91332 2.28081C1.98718 2.16175 2.10758 2.08915 2.2364 2.07195C2.42588 2.01237 2.64087 2.06969 2.77406 2.23302C3.86536 3.57126 5.44066 4.49583 7.23366 4.73961L7.23336 4.69629ZM5.52122 11.9746C4.73387 11.9746 3.97781 11.8435 3.27248 11.6023C4.13012 11.4538 4.95307 11.1159 5.66218 10.5602C5.81211 10.4427 5.87182 10.2435 5.81126 10.0629C5.7507 9.88234 5.583 9.75943 5.39255 9.75607C4.68968 9.74366 4.06712 9.39716 3.67793 8.86845C3.86828 8.85306 4.05428 8.82039 4.23445 8.77167C4.43603 8.71716 4.57363 8.53114 4.56674 8.32243C4.55985 8.11372 4.41029 7.93718 4.20555 7.89607C3.42694 7.73977 2.79883 7.16764 2.56169 6.42174C2.76255 6.47025 2.97102 6.4991 3.18482 6.5061C3.38563 6.51267 3.56646 6.38533 3.62795 6.19405C3.68943 6.00277 3.61666 5.79391 3.44963 5.68224C2.86523 5.29155 2.48116 4.62464 2.48116 3.86958C2.48116 3.70213 2.48352 3.55268 2.49355 3.41719C3.85115 4.79913 5.70873 5.68931 7.77588 5.79338C7.93225 5.80126 8.08328 5.73543 8.18395 5.61553C8.28463 5.49562 8.32332 5.33548 8.28851 5.18284C8.25255 5.02517 8.23336 4.86284 8.23336 4.69629C8.23336 3.52085 9.18591 2.56857 10.36 2.56857C11.5943 2.56857 12.4956 3.71208 12.4956 5.00079C12.4956 8.25709 10.0202 11.9746 5.52122 11.9746Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default TwitterLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const UnderlineIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M5.00001 2.75C5.00001 2.47386 4.77615 2.25 4.50001 2.25C4.22387 2.25 4.00001 2.47386 4.00001 2.75V8.05C4.00001 9.983 5.56702 11.55 7.50001 11.55C9.43301 11.55 11 9.983 11 8.05V2.75C11 2.47386 10.7762 2.25 10.5 2.25C10.2239 2.25 10 2.47386 10 2.75V8.05C10 9.43071 8.88072 10.55 7.50001 10.55C6.1193 10.55 5.00001 9.43071 5.00001 8.05V2.75ZM3.49998 13.1001C3.27906 13.1001 3.09998 13.2791 3.09998 13.5001C3.09998 13.721 3.27906 13.9001 3.49998 13.9001H11.5C11.7209 13.9001 11.9 13.721 11.9 13.5001C11.9 13.2791 11.7209 13.1001 11.5 13.1001H3.49998Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default UnderlineIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const UpdateIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.90321 7.29677C1.90321 10.341 4.11041 12.4147 6.58893 12.8439C6.87255 12.893 7.06266 13.1627 7.01355 13.4464C6.96444 13.73 6.69471 13.9201 6.41109 13.871C3.49942 13.3668 0.86084 10.9127 0.86084 7.29677C0.860839 5.76009 1.55996 4.55245 2.37639 3.63377C2.96124 2.97568 3.63034 2.44135 4.16846 2.03202L2.53205 2.03202C2.25591 2.03202 2.03205 1.80816 2.03205 1.53202C2.03205 1.25588 2.25591 1.03202 2.53205 1.03202L5.53205 1.03202C5.80819 1.03202 6.03205 1.25588 6.03205 1.53202L6.03205 4.53202C6.03205 4.80816 5.80819 5.03202 5.53205 5.03202C5.25591 5.03202 5.03205 4.80816 5.03205 4.53202L5.03205 2.68645L5.03054 2.68759L5.03045 2.68766L5.03044 2.68767L5.03043 2.68767C4.45896 3.11868 3.76059 3.64538 3.15554 4.3262C2.44102 5.13021 1.90321 6.10154 1.90321 7.29677ZM13.0109 7.70321C13.0109 4.69115 10.8505 2.6296 8.40384 2.17029C8.12093 2.11718 7.93465 1.84479 7.98776 1.56188C8.04087 1.27898 8.31326 1.0927 8.59616 1.14581C11.4704 1.68541 14.0532 4.12605 14.0532 7.70321C14.0532 9.23988 13.3541 10.4475 12.5377 11.3662C11.9528 12.0243 11.2837 12.5586 10.7456 12.968L12.3821 12.968C12.6582 12.968 12.8821 13.1918 12.8821 13.468C12.8821 13.7441 12.6582 13.968 12.3821 13.968L9.38205 13.968C9.10591 13.968 8.88205 13.7441 8.88205 13.468L8.88205 10.468C8.88205 10.1918 9.10591 9.96796 9.38205 9.96796C9.65819 9.96796 9.88205 10.1918 9.88205 10.468L9.88205 12.3135L9.88362 12.3123C10.4551 11.8813 11.1535 11.3546 11.7585 10.6738C12.4731 9.86976 13.0109 8.89844 13.0109 7.70321Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default UpdateIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const UploadIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.81825 1.18188C7.64251 1.00615 7.35759 1.00615 7.18185 1.18188L4.18185 4.18188C4.00611 4.35762 4.00611 4.64254 4.18185 4.81828C4.35759 4.99401 4.64251 4.99401 4.81825 4.81828L7.05005 2.58648V9.49996C7.05005 9.74849 7.25152 9.94996 7.50005 9.94996C7.74858 9.94996 7.95005 9.74849 7.95005 9.49996V2.58648L10.1819 4.81828C10.3576 4.99401 10.6425 4.99401 10.8182 4.81828C10.994 4.64254 10.994 4.35762 10.8182 4.18188L7.81825 1.18188ZM2.5 9.99997C2.77614 9.99997 3 10.2238 3 10.5V12C3 12.5538 3.44565 13 3.99635 13H11.0012C11.5529 13 12 12.5528 12 12V10.5C12 10.2238 12.2239 9.99997 12.5 9.99997C12.7761 9.99997 13 10.2238 13 10.5V12C13 13.104 12.1062 14 11.0012 14H3.99635C2.89019 14 2 13.103 2 12V10.5C2 10.2238 2.22386 9.99997 2.5 9.99997Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default UploadIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ValueIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ValueIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ValueNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49985 0.877045C3.84216 0.877045 0.877014 3.84219 0.877014 7.49988C0.877014 9.1488 1.47963 10.657 2.47665 11.8162L1.64643 12.6464C1.45117 12.8417 1.45117 13.1583 1.64643 13.3535C1.8417 13.5488 2.15828 13.5488 2.35354 13.3535L3.18377 12.5233C4.34296 13.5202 5.85104 14.1227 7.49985 14.1227C11.1575 14.1227 14.1227 11.1575 14.1227 7.49988C14.1227 5.85107 13.5202 4.34299 12.5233 3.1838L13.3535 2.35354C13.5488 2.15827 13.5488 1.84169 13.3535 1.64643C13.1583 1.45117 12.8417 1.45117 12.6464 1.64643L11.8162 2.47668C10.657 1.47966 9.14877 0.877045 7.49985 0.877045ZM11.1422 3.15066C10.1567 2.32449 8.88639 1.82704 7.49985 1.82704C4.36683 1.82704 1.82701 4.36686 1.82701 7.49988C1.82701 8.88642 2.32446 10.1568 3.15063 11.1422L11.1422 3.15066ZM3.85776 11.8493C4.84317 12.6753 6.11343 13.1727 7.49985 13.1727C10.6328 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 6.11346 12.6753 4.8432 11.8493 3.85779L3.85776 11.8493Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ValueNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const VercelLogoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7.49998 1L6.92321 2.00307L1.17498 12L0.599976 13H1.7535H13.2464H14.4L13.825 12L8.07674 2.00307L7.49998 1ZM7.49998 3.00613L2.3285 12H12.6714L7.49998 3.00613Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default VercelLogoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const VideoIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.76447 3.12199C5.63151 3.04859 6.56082 3 7.5 3C8.43918 3 9.36849 3.04859 10.2355 3.12199C11.2796 3.21037 11.9553 3.27008 12.472 3.39203C12.9425 3.50304 13.2048 3.64976 13.4306 3.88086C13.4553 3.90618 13.4902 3.94414 13.5133 3.97092C13.7126 4.20149 13.8435 4.4887 13.918 5.03283C13.9978 5.6156 14 6.37644 14 7.52493C14 8.66026 13.9978 9.41019 13.9181 9.98538C13.8439 10.5206 13.7137 10.8061 13.5125 11.0387C13.4896 11.0651 13.4541 11.1038 13.4296 11.1287C13.2009 11.3625 12.9406 11.5076 12.4818 11.6164C11.9752 11.7365 11.3143 11.7942 10.2878 11.8797C9.41948 11.9521 8.47566 12 7.5 12C6.52434 12 5.58052 11.9521 4.7122 11.8797C3.68572 11.7942 3.02477 11.7365 2.51816 11.6164C2.05936 11.5076 1.7991 11.3625 1.57037 11.1287C1.54593 11.1038 1.51035 11.0651 1.48748 11.0387C1.28628 10.8061 1.15612 10.5206 1.08193 9.98538C1.00221 9.41019 1 8.66026 1 7.52493C1 6.37644 1.00216 5.6156 1.082 5.03283C1.15654 4.4887 1.28744 4.20149 1.48666 3.97092C1.5098 3.94414 1.54468 3.90618 1.56942 3.88086C1.7952 3.64976 2.05752 3.50304 2.52796 3.39203C3.04473 3.27008 3.7204 3.21037 4.76447 3.12199ZM0 7.52493C0 5.28296 0 4.16198 0.729985 3.31713C0.766457 3.27491 0.815139 3.22194 0.854123 3.18204C1.63439 2.38339 2.64963 2.29744 4.68012 2.12555C5.56923 2.05028 6.52724 2 7.5 2C8.47276 2 9.43077 2.05028 10.3199 2.12555C12.3504 2.29744 13.3656 2.38339 14.1459 3.18204C14.1849 3.22194 14.2335 3.27491 14.27 3.31713C15 4.16198 15 5.28296 15 7.52493C15 9.74012 15 10.8477 14.2688 11.6929C14.2326 11.7348 14.1832 11.7885 14.1444 11.8281C13.3629 12.6269 12.3655 12.71 10.3709 12.8763C9.47971 12.9505 8.50782 13 7.5 13C6.49218 13 5.52028 12.9505 4.62915 12.8763C2.63446 12.71 1.63712 12.6269 0.855558 11.8281C0.816844 11.7885 0.767442 11.7348 0.731221 11.6929C0 10.8477 0 9.74012 0 7.52493ZM5.25 5.38264C5.25 5.20225 5.43522 5.08124 5.60041 5.15369L10.428 7.27105C10.6274 7.35853 10.6274 7.64147 10.428 7.72895L5.60041 9.84631C5.43522 9.91876 5.25 9.79775 5.25 9.61736V5.38264Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default VideoIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ViewGridIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M7 2H1.5C1.22386 2 1 2.22386 1 2.5V7H7V2ZM8 2V7H14V2.5C14 2.22386 13.7761 2 13.5 2H8ZM7 8H1V12.5C1 12.7761 1.22386 13 1.5 13H7V8ZM8 13V8H14V12.5C14 12.7761 13.7761 13 13.5 13H8ZM1.5 1C0.671573 1 0 1.67157 0 2.5V12.5C0 13.3284 0.671573 14 1.5 14H13.5C14.3284 14 15 13.3284 15 12.5V2.5C15 1.67157 14.3284 1 13.5 1H1.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ViewGridIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ViewHorizontalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M1.5 2H13.5C13.7761 2 14 2.22386 14 2.5V7H1V2.5C1 2.22386 1.22386 2 1.5 2ZM1 8V12.5C1 12.7761 1.22386 13 1.5 13H13.5C13.7761 13 14 12.7761 14 12.5V8H1ZM0 2.5C0 1.67157 0.671573 1 1.5 1H13.5C14.3284 1 15 1.67157 15 2.5V12.5C15 13.3284 14.3284 14 13.5 14H1.5C0.671573 14 0 13.3284 0 12.5V2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ViewHorizontalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ViewNoneIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M14 2.58711L1.85163 13H13.5C13.7761 13 14 12.7761 14 12.5V2.58711ZM0.762879 13.8067L0.825396 13.8796L0.854717 13.8545C1.05017 13.9478 1.26899 14 1.5 14H13.5C14.3284 14 15 13.3284 15 12.5V2.5C15 1.93949 14.6926 1.45078 14.2371 1.19331L14.1746 1.12037L14.1453 1.1455C13.9498 1.05222 13.731 1 13.5 1H1.5C0.671573 1 0 1.67157 0 2.5V12.5C0 13.0605 0.307435 13.5492 0.762879 13.8067ZM1 12.4129L13.1484 2H1.5C1.22386 2 1 2.22386 1 2.5V12.4129Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ViewNoneIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ViewVerticalIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M8 2H13.5C13.7761 2 14 2.22386 14 2.5V12.5C14 12.7761 13.7761 13 13.5 13H8V2ZM7 2H1.5C1.22386 2 1 2.22386 1 2.5V12.5C1 12.7761 1.22386 13 1.5 13H7V2ZM0 2.5C0 1.67157 0.671573 1 1.5 1H13.5C14.3284 1 15 1.67157 15 2.5V12.5C15 13.3284 14.3284 14 13.5 14H1.5C0.671573 14 0 13.3284 0 12.5V2.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ViewVerticalIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const WidthIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M4.81812 4.68161C4.99386 4.85734 4.99386 5.14227 4.81812 5.318L3.08632 7.0498H11.9135L10.1817 5.318C10.006 5.14227 10.006 4.85734 10.1817 4.68161C10.3575 4.50587 10.6424 4.50587 10.8181 4.68161L13.3181 7.18161C13.4939 7.35734 13.4939 7.64227 13.3181 7.818L10.8181 10.318C10.6424 10.4937 10.3575 10.4937 10.1817 10.318C10.006 10.1423 10.006 9.85734 10.1817 9.68161L11.9135 7.9498H3.08632L4.81812 9.68161C4.99386 9.85734 4.99386 10.1423 4.81812 10.318C4.64239 10.4937 4.35746 10.4937 4.18173 10.318L1.68173 7.818C1.50599 7.64227 1.50599 7.35734 1.68173 7.18161L4.18173 4.68161C4.35746 4.50587 4.64239 4.50587 4.81812 4.68161Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default WidthIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ZoomInIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159ZM4.25 6.5C4.25 6.22386 4.47386 6 4.75 6H6V4.75C6 4.47386 6.22386 4.25 6.5 4.25C6.77614 4.25 7 4.47386 7 4.75V6H8.25C8.52614 6 8.75 6.22386 8.75 6.5C8.75 6.77614 8.52614 7 8.25 7H7V8.25C7 8.52614 6.77614 8.75 6.5 8.75C6.22386 8.75 6 8.52614 6 8.25V7H4.75C4.47386 7 4.25 6.77614 4.25 6.5Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ZoomInIcon;\n", "import * as React from 'react';\nimport { IconProps } from './types';\n\nexport const ZoomOutIcon = React.forwardRef<SVGSVGElement, IconProps>(\n  ({ color = 'currentColor', ...props }, forwardedRef) => {\n    return (\n      <svg\n        width=\"15\"\n        height=\"15\"\n        viewBox=\"0 0 15 15\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        {...props}\n        ref={forwardedRef}\n      >\n        <path\n          d=\"M6.5 10C8.433 10 10 8.433 10 6.5C10 4.567 8.433 3 6.5 3C4.567 3 3 4.567 3 6.5C3 8.433 4.567 10 6.5 10ZM6.5 11C7.56251 11 8.53901 10.6318 9.30884 10.0159L12.1464 12.8536C12.3417 13.0488 12.6583 13.0488 12.8536 12.8536C13.0488 12.6583 13.0488 12.3417 12.8536 12.1464L10.0159 9.30884C10.6318 8.53901 11 7.56251 11 6.5C11 4.01472 8.98528 2 6.5 2C4.01472 2 2 4.01472 2 6.5C2 8.98528 4.01472 11 6.5 11ZM4.75 6C4.47386 6 4.25 6.22386 4.25 6.5C4.25 6.77614 4.47386 7 4.75 7H8.25C8.52614 7 8.75 6.77614 8.75 6.5C8.75 6.22386 8.52614 6 8.25 6H4.75Z\"\n          fill={color}\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n        />\n      </svg>\n    );\n  }\n);\n\nexport default ZoomOutIcon;\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { Vector3, DoubleSide, OrthographicCamera, PerspectiveCamera, Vector2 } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst v1 = /* @__PURE__ */new Vector3();\nconst v2 = /* @__PURE__ */new Vector3();\nconst v3 = /* @__PURE__ */new Vector3();\nconst v4 = /* @__PURE__ */new Vector2();\nfunction defaultCalculatePosition(el, camera, size) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  objectPos.project(camera);\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  return [objectPos.x * widthHalf + widthHalf, -(objectPos.y * heightHalf) + heightHalf];\n}\nfunction isObjectBehindCamera(el, camera) {\n  const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n  const deltaCamObj = objectPos.sub(cameraPos);\n  const camDir = camera.getWorldDirection(v3);\n  return deltaCamObj.angleTo(camDir) > Math.PI / 2;\n}\nfunction isObjectVisible(el, camera, raycaster, occlude) {\n  const elPos = v1.setFromMatrixPosition(el.matrixWorld);\n  const screenPos = elPos.clone();\n  screenPos.project(camera);\n  v4.set(screenPos.x, screenPos.y);\n  raycaster.setFromCamera(v4, camera);\n  const intersects = raycaster.intersectObjects(occlude, true);\n  if (intersects.length) {\n    const intersectionDistance = intersects[0].distance;\n    const pointDistance = elPos.distanceTo(raycaster.ray.origin);\n    return pointDistance < intersectionDistance;\n  }\n  return true;\n}\nfunction objectScale(el, camera) {\n  if (camera instanceof OrthographicCamera) {\n    return camera.zoom;\n  } else if (camera instanceof PerspectiveCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const vFOV = camera.fov * Math.PI / 180;\n    const dist = objectPos.distanceTo(cameraPos);\n    const scaleFOV = 2 * Math.tan(vFOV / 2) * dist;\n    return 1 / scaleFOV;\n  } else {\n    return 1;\n  }\n}\nfunction objectZIndex(el, camera, zIndexRange) {\n  if (camera instanceof PerspectiveCamera || camera instanceof OrthographicCamera) {\n    const objectPos = v1.setFromMatrixPosition(el.matrixWorld);\n    const cameraPos = v2.setFromMatrixPosition(camera.matrixWorld);\n    const dist = objectPos.distanceTo(cameraPos);\n    const A = (zIndexRange[1] - zIndexRange[0]) / (camera.far - camera.near);\n    const B = zIndexRange[1] - A * camera.far;\n    return Math.round(A * dist + B);\n  }\n  return undefined;\n}\nconst epsilon = value => Math.abs(value) < 1e-10 ? 0 : value;\nfunction getCSSMatrix(matrix, multipliers, prepend = '') {\n  let matrix3d = 'matrix3d(';\n  for (let i = 0; i !== 16; i++) {\n    matrix3d += epsilon(multipliers[i] * matrix.elements[i]) + (i !== 15 ? ',' : ')');\n  }\n  return prepend + matrix3d;\n}\nconst getCameraCSSMatrix = (multipliers => {\n  return matrix => getCSSMatrix(matrix, multipliers);\n})([1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1, 1, -1, 1, 1]);\nconst getObjectCSSMatrix = (scaleMultipliers => {\n  return (matrix, factor) => getCSSMatrix(matrix, scaleMultipliers(factor), 'translate(-50%,-50%)');\n})(f => [1 / f, 1 / f, 1 / f, 1, -1 / f, -1 / f, -1 / f, -1, 1 / f, 1 / f, 1 / f, 1, 1, 1, 1, 1]);\nfunction isRefObject(ref) {\n  return ref && typeof ref === 'object' && 'current' in ref;\n}\nconst Html = /* @__PURE__ */React.forwardRef(({\n  children,\n  eps = 0.001,\n  style,\n  className,\n  prepend,\n  center,\n  fullscreen,\n  portal,\n  distanceFactor,\n  sprite = false,\n  transform = false,\n  occlude,\n  onOcclude,\n  castShadow,\n  receiveShadow,\n  material,\n  geometry,\n  zIndexRange = [16777271, 0],\n  calculatePosition = defaultCalculatePosition,\n  as = 'div',\n  wrapperClass,\n  pointerEvents = 'auto',\n  ...props\n}, ref) => {\n  const {\n    gl,\n    camera,\n    scene,\n    size,\n    raycaster,\n    events,\n    viewport\n  } = useThree();\n  const [el] = React.useState(() => document.createElement(as));\n  const root = React.useRef();\n  const group = React.useRef(null);\n  const oldZoom = React.useRef(0);\n  const oldPosition = React.useRef([0, 0]);\n  const transformOuterRef = React.useRef(null);\n  const transformInnerRef = React.useRef(null);\n  // Append to the connected element, which makes HTML work with views\n  const target = (portal == null ? void 0 : portal.current) || events.connected || gl.domElement.parentNode;\n  const occlusionMeshRef = React.useRef(null);\n  const isMeshSizeSet = React.useRef(false);\n  const isRayCastOcclusion = React.useMemo(() => {\n    return occlude && occlude !== 'blending' || Array.isArray(occlude) && occlude.length && isRefObject(occlude[0]);\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    const el = gl.domElement;\n    if (occlude && occlude === 'blending') {\n      el.style.zIndex = `${Math.floor(zIndexRange[0] / 2)}`;\n      el.style.position = 'absolute';\n      el.style.pointerEvents = 'none';\n    } else {\n      el.style.zIndex = null;\n      el.style.position = null;\n      el.style.pointerEvents = null;\n    }\n  }, [occlude]);\n  React.useLayoutEffect(() => {\n    if (group.current) {\n      const currentRoot = root.current = ReactDOM.createRoot(el);\n      scene.updateMatrixWorld();\n      if (transform) {\n        el.style.cssText = `position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;`;\n      } else {\n        const vec = calculatePosition(group.current, camera, size);\n        el.style.cssText = `position:absolute;top:0;left:0;transform:translate3d(${vec[0]}px,${vec[1]}px,0);transform-origin:0 0;`;\n      }\n      if (target) {\n        if (prepend) target.prepend(el);else target.appendChild(el);\n      }\n      return () => {\n        if (target) target.removeChild(el);\n        currentRoot.unmount();\n      };\n    }\n  }, [target, transform]);\n  React.useLayoutEffect(() => {\n    if (wrapperClass) el.className = wrapperClass;\n  }, [wrapperClass]);\n  const styles = React.useMemo(() => {\n    if (transform) {\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: size.width,\n        height: size.height,\n        transformStyle: 'preserve-3d',\n        pointerEvents: 'none'\n      };\n    } else {\n      return {\n        position: 'absolute',\n        transform: center ? 'translate3d(-50%,-50%,0)' : 'none',\n        ...(fullscreen && {\n          top: -size.height / 2,\n          left: -size.width / 2,\n          width: size.width,\n          height: size.height\n        }),\n        ...style\n      };\n    }\n  }, [style, center, fullscreen, size, transform]);\n  const transformInnerStyles = React.useMemo(() => ({\n    position: 'absolute',\n    pointerEvents\n  }), [pointerEvents]);\n  React.useLayoutEffect(() => {\n    isMeshSizeSet.current = false;\n    if (transform) {\n      var _root$current;\n      (_root$current = root.current) == null || _root$current.render(/*#__PURE__*/React.createElement(\"div\", {\n        ref: transformOuterRef,\n        style: styles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: transformInnerRef,\n        style: transformInnerStyles\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        className: className,\n        style: style,\n        children: children\n      }))));\n    } else {\n      var _root$current2;\n      (_root$current2 = root.current) == null || _root$current2.render(/*#__PURE__*/React.createElement(\"div\", {\n        ref: ref,\n        style: styles,\n        className: className,\n        children: children\n      }));\n    }\n  });\n  const visible = React.useRef(true);\n  useFrame(gl => {\n    if (group.current) {\n      camera.updateMatrixWorld();\n      group.current.updateWorldMatrix(true, false);\n      const vec = transform ? oldPosition.current : calculatePosition(group.current, camera, size);\n      if (transform || Math.abs(oldZoom.current - camera.zoom) > eps || Math.abs(oldPosition.current[0] - vec[0]) > eps || Math.abs(oldPosition.current[1] - vec[1]) > eps) {\n        const isBehindCamera = isObjectBehindCamera(group.current, camera);\n        let raytraceTarget = false;\n        if (isRayCastOcclusion) {\n          if (Array.isArray(occlude)) {\n            raytraceTarget = occlude.map(item => item.current);\n          } else if (occlude !== 'blending') {\n            raytraceTarget = [scene];\n          }\n        }\n        const previouslyVisible = visible.current;\n        if (raytraceTarget) {\n          const isvisible = isObjectVisible(group.current, camera, raycaster, raytraceTarget);\n          visible.current = isvisible && !isBehindCamera;\n        } else {\n          visible.current = !isBehindCamera;\n        }\n        if (previouslyVisible !== visible.current) {\n          if (onOcclude) onOcclude(!visible.current);else el.style.display = visible.current ? 'block' : 'none';\n        }\n        const halfRange = Math.floor(zIndexRange[0] / 2);\n        const zRange = occlude ? isRayCastOcclusion //\n        ? [zIndexRange[0], halfRange] : [halfRange - 1, 0] : zIndexRange;\n        el.style.zIndex = `${objectZIndex(group.current, camera, zRange)}`;\n        if (transform) {\n          const [widthHalf, heightHalf] = [size.width / 2, size.height / 2];\n          const fov = camera.projectionMatrix.elements[5] * heightHalf;\n          const {\n            isOrthographicCamera,\n            top,\n            left,\n            bottom,\n            right\n          } = camera;\n          const cameraMatrix = getCameraCSSMatrix(camera.matrixWorldInverse);\n          const cameraTransform = isOrthographicCamera ? `scale(${fov})translate(${epsilon(-(right + left) / 2)}px,${epsilon((top + bottom) / 2)}px)` : `translateZ(${fov}px)`;\n          let matrix = group.current.matrixWorld;\n          if (sprite) {\n            matrix = camera.matrixWorldInverse.clone().transpose().copyPosition(matrix).scale(group.current.scale);\n            matrix.elements[3] = matrix.elements[7] = matrix.elements[11] = 0;\n            matrix.elements[15] = 1;\n          }\n          el.style.width = size.width + 'px';\n          el.style.height = size.height + 'px';\n          el.style.perspective = isOrthographicCamera ? '' : `${fov}px`;\n          if (transformOuterRef.current && transformInnerRef.current) {\n            transformOuterRef.current.style.transform = `${cameraTransform}${cameraMatrix}translate(${widthHalf}px,${heightHalf}px)`;\n            transformInnerRef.current.style.transform = getObjectCSSMatrix(matrix, 1 / ((distanceFactor || 10) / 400));\n          }\n        } else {\n          const scale = distanceFactor === undefined ? 1 : objectScale(group.current, camera) * distanceFactor;\n          el.style.transform = `translate3d(${vec[0]}px,${vec[1]}px,0) scale(${scale})`;\n        }\n        oldPosition.current = vec;\n        oldZoom.current = camera.zoom;\n      }\n    }\n    if (!isRayCastOcclusion && occlusionMeshRef.current && !isMeshSizeSet.current) {\n      if (transform) {\n        if (transformOuterRef.current) {\n          const el = transformOuterRef.current.children[0];\n          if (el != null && el.clientWidth && el != null && el.clientHeight) {\n            const {\n              isOrthographicCamera\n            } = camera;\n            if (isOrthographicCamera || geometry) {\n              if (props.scale) {\n                if (!Array.isArray(props.scale)) {\n                  occlusionMeshRef.current.scale.setScalar(1 / props.scale);\n                } else if (props.scale instanceof Vector3) {\n                  occlusionMeshRef.current.scale.copy(props.scale.clone().divideScalar(1));\n                } else {\n                  occlusionMeshRef.current.scale.set(1 / props.scale[0], 1 / props.scale[1], 1 / props.scale[2]);\n                }\n              }\n            } else {\n              const ratio = (distanceFactor || 10) / 400;\n              const w = el.clientWidth * ratio;\n              const h = el.clientHeight * ratio;\n              occlusionMeshRef.current.scale.set(w, h, 1);\n            }\n            isMeshSizeSet.current = true;\n          }\n        }\n      } else {\n        const ele = el.children[0];\n        if (ele != null && ele.clientWidth && ele != null && ele.clientHeight) {\n          const ratio = 1 / viewport.factor;\n          const w = ele.clientWidth * ratio;\n          const h = ele.clientHeight * ratio;\n          occlusionMeshRef.current.scale.set(w, h, 1);\n          isMeshSizeSet.current = true;\n        }\n        occlusionMeshRef.current.lookAt(gl.camera.position);\n      }\n    }\n  });\n  const shaders = React.useMemo(() => ({\n    vertexShader: !transform ? /* glsl */`\n          /*\n            This shader is from the THREE's SpriteMaterial.\n            We need to turn the backing plane into a Sprite\n            (make it always face the camera) if \"transfrom\"\n            is false.\n          */\n          #include <common>\n\n          void main() {\n            vec2 center = vec2(0., 1.);\n            float rotation = 0.0;\n\n            // This is somewhat arbitrary, but it seems to work well\n            // Need to figure out how to derive this dynamically if it even matters\n            float size = 0.03;\n\n            vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n            vec2 scale;\n            scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n            scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n            bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n            if ( isPerspective ) scale *= - mvPosition.z;\n\n            vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n            vec2 rotatedPosition;\n            rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n            rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n            mvPosition.xy += rotatedPosition;\n\n            gl_Position = projectionMatrix * mvPosition;\n          }\n      ` : undefined,\n    fragmentShader: /* glsl */`\n        void main() {\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n        }\n      `\n  }), [transform]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: group\n  }), occlude && !isRayCastOcclusion && /*#__PURE__*/React.createElement(\"mesh\", {\n    castShadow: castShadow,\n    receiveShadow: receiveShadow,\n    ref: occlusionMeshRef\n  }, geometry || /*#__PURE__*/React.createElement(\"planeGeometry\", null), material || /*#__PURE__*/React.createElement(\"shaderMaterial\", {\n    side: DoubleSide,\n    vertexShader: shaders.vertexShader,\n    fragmentShader: shaders.fragmentShader\n  })));\n});\n\nexport { Html };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction CycleRaycast({\n  onChanged,\n  portal,\n  preventDefault = true,\n  scroll = true,\n  keyCode = 9\n}) {\n  const cycle = React.useRef(0);\n  const setEvents = useThree(state => state.setEvents);\n  const get = useThree(state => state.get);\n  const gl = useThree(state => state.gl);\n  React.useEffect(() => {\n    var _portal$current;\n    let hits = [];\n    let lastEvent = undefined;\n    const prev = get().events.filter;\n    const target = (_portal$current = portal == null ? void 0 : portal.current) !== null && _portal$current !== void 0 ? _portal$current : gl.domElement.parentNode;\n\n    // Render custom status\n    const renderStatus = () => target && onChanged && onChanged(hits, Math.round(cycle.current) % hits.length);\n\n    // Overwrite the raycasters custom filter (this only exists in r3f)\n    setEvents({\n      filter: (intersections, state) => {\n        // Reset cycle when the intersections change\n        let clone = [...intersections];\n        if (clone.length !== hits.length || !hits.every(hit => clone.map(e => e.object.uuid).includes(hit.object.uuid))) {\n          cycle.current = 0;\n          hits = clone;\n          renderStatus();\n        }\n        // Run custom filter if there is one\n        if (prev) clone = prev(clone, state);\n        // Cycle through the actual raycast intersects\n        for (let i = 0; i < Math.round(cycle.current) % clone.length; i++) {\n          const first = clone.shift();\n          clone = [...clone, first];\n        }\n        return clone;\n      }\n    });\n\n    // Cycle, refresh events and render status\n    const refresh = fn => {\n      var _get$events$handlers, _get$events$handlers2;\n      cycle.current = fn(cycle.current);\n      // Cancel hovered elements and fake a pointer-move\n      (_get$events$handlers = get().events.handlers) == null || _get$events$handlers.onPointerCancel(undefined);\n      (_get$events$handlers2 = get().events.handlers) == null || _get$events$handlers2.onPointerMove(lastEvent);\n      renderStatus();\n    };\n\n    // Key events\n    const tabEvent = event => {\n      if ((event.keyCode || event.which) === keyCode) {\n        if (preventDefault) event.preventDefault();\n        if (hits.length > 1) refresh(current => current + 1);\n      }\n    };\n\n    // Wheel events\n    const wheelEvent = event => {\n      if (preventDefault) event.preventDefault();\n      let delta = 0;\n      if (!event) event = window.event;\n      if (event.wheelDelta) delta = event.wheelDelta / 120;else if (event.detail) delta = -event.detail / 3;\n      if (hits.length > 1) refresh(current => Math.abs(current - delta));\n    };\n\n    // Catch last move event and position custom status\n    const moveEvent = event => lastEvent = event;\n    document.addEventListener('pointermove', moveEvent, {\n      passive: true\n    });\n    if (scroll) document.addEventListener('wheel', wheelEvent);\n    if (keyCode !== undefined) document.addEventListener('keydown', tabEvent);\n    return () => {\n      // Clean up\n      setEvents({\n        filter: prev\n      });\n      if (keyCode !== undefined) document.removeEventListener('keydown', tabEvent);\n      if (scroll) document.removeEventListener('wheel', wheelEvent);\n      document.removeEventListener('pointermove', moveEvent);\n    };\n  }, [gl, get, setEvents, preventDefault, scroll, keyCode]);\n  return null;\n}\n\nexport { CycleRaycast };\n", "import * as React from 'react';\n\nfunction useCursor(hovered, onPointerOver = 'pointer', onPointerOut = 'auto', container = document.body) {\n  React.useEffect(() => {\n    if (hovered) {\n      container.style.cursor = onPointerOver;\n      return () => void (container.style.cursor = onPointerOut);\n    }\n  }, [hovered]);\n}\n\nexport { useCursor };\n", "import * as React from 'react';\nimport { useProgress } from '../core/Progress.js';\n\nconst defaultDataInterpolation = p => `Loading ${p.toFixed(2)}%`;\nfunction Loader({\n  containerStyles,\n  innerStyles,\n  barStyles,\n  dataStyles,\n  dataInterpolation = defaultDataInterpolation,\n  initialState = active => active\n}) {\n  const {\n    active,\n    progress\n  } = useProgress();\n  const progressRef = React.useRef(0);\n  const rafRef = React.useRef(0);\n  const progressSpanRef = React.useRef(null);\n  const [shown, setShown] = React.useState(initialState(active));\n  React.useEffect(() => {\n    let t;\n    if (active !== shown) t = setTimeout(() => setShown(active), 300);\n    return () => clearTimeout(t);\n  }, [shown, active]);\n  const updateProgress = React.useCallback(() => {\n    if (!progressSpanRef.current) return;\n    progressRef.current += (progress - progressRef.current) / 2;\n    if (progressRef.current > 0.95 * progress || progress === 100) progressRef.current = progress;\n    progressSpanRef.current.innerText = dataInterpolation(progressRef.current);\n    if (progressRef.current < progress) rafRef.current = requestAnimationFrame(updateProgress);\n  }, [dataInterpolation, progress]);\n  React.useEffect(() => {\n    updateProgress();\n    return () => cancelAnimationFrame(rafRef.current);\n  }, [updateProgress]);\n  return shown ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...styles.container,\n      opacity: active ? 1 : 0,\n      ...containerStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...styles.inner,\n      ...innerStyles\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      ...styles.bar,\n      transform: `scaleX(${progress / 100})`,\n      ...barStyles\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    ref: progressSpanRef,\n    style: {\n      ...styles.data,\n      ...dataStyles\n    }\n  })))) : null;\n}\nconst styles = {\n  container: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background: '#171717',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'opacity 300ms ease',\n    zIndex: 1000\n  },\n  inner: {\n    width: 100,\n    height: 3,\n    background: '#272727',\n    textAlign: 'center'\n  },\n  bar: {\n    height: 3,\n    width: '100%',\n    background: 'white',\n    transition: 'transform 200ms',\n    transformOrigin: 'left center'\n  },\n  data: {\n    display: 'inline-block',\n    position: 'relative',\n    fontVariantNumeric: 'tabular-nums',\n    marginTop: '0.8em',\n    color: '#f0f0f0',\n    fontSize: '0.6em',\n    fontFamily: `-apple-system, BlinkMacSystemFont, \"Inter\", \"Segoe UI\", \"Helvetica Neue\", Helvetica, Arial, Roboto, Ubuntu, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    whiteSpace: 'nowrap'\n  }\n};\n\nexport { Loader };\n", "import * as React from 'react';\nimport { DefaultLoadingManager } from 'three';\nimport { create } from 'zustand';\n\nlet saveLastTotalLoaded = 0;\nconst useProgress = /* @__PURE__ */create(set => {\n  DefaultLoadingManager.onStart = (item, loaded, total) => {\n    set({\n      active: true,\n      item,\n      loaded,\n      total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100\n    });\n  };\n  DefaultLoadingManager.onLoad = () => {\n    set({\n      active: false\n    });\n  };\n  DefaultLoadingManager.onError = item => set(state => ({\n    errors: [...state.errors, item]\n  }));\n  DefaultLoadingManager.onProgress = (item, loaded, total) => {\n    if (loaded === total) {\n      saveLastTotalLoaded = total;\n    }\n    set({\n      active: true,\n      item,\n      loaded,\n      total,\n      progress: (loaded - saveLastTotalLoaded) / (total - saveLastTotalLoaded) * 100 || 100\n    });\n  };\n  return {\n    errors: [],\n    active: false,\n    progress: 0,\n    item: '',\n    loaded: 0,\n    total: 0\n  };\n});\n\n//\n\nfunction Progress({\n  children\n}) {\n  const result = useProgress();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(result));\n}\n\nexport { Progress, useProgress };\n", "const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n", "import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { useGesture } from '@use-gesture/react';\n\nconst initialModelPosition = /* @__PURE__ */new THREE.Vector3();\nconst mousePosition2D = /* @__PURE__ */new THREE.Vector2();\nconst mousePosition3D = /* @__PURE__ */new THREE.Vector3();\nconst dragOffset = /* @__PURE__ */new THREE.Vector3();\nconst dragPlaneNormal = /* @__PURE__ */new THREE.Vector3();\nconst dragPlane = /* @__PURE__ */new THREE.Plane();\nconst DragControls = /*#__PURE__*/React.forwardRef(({\n  autoTransform = true,\n  matrix,\n  axisLock,\n  dragLimits,\n  onHover,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  children,\n  dragConfig,\n  ...props\n}, fRef) => {\n  const defaultControls = useThree(state => state.controls);\n  const {\n    camera,\n    size,\n    raycaster,\n    invalidate\n  } = useThree();\n  const ref = React.useRef(null);\n  const bind = useGesture({\n    onHover: ({\n      hovering\n    }) => onHover && onHover(hovering !== null && hovering !== void 0 ? hovering : false),\n    onDragStart: ({\n      event\n    }) => {\n      if (defaultControls) defaultControls.enabled = false;\n      const {\n        point\n      } = event;\n      ref.current.matrix.decompose(initialModelPosition, new THREE.Quaternion(), new THREE.Vector3());\n      mousePosition3D.copy(point);\n      dragOffset.copy(mousePosition3D).sub(initialModelPosition);\n      onDragStart && onDragStart(initialModelPosition);\n      invalidate();\n    },\n    onDrag: ({\n      xy: [dragX, dragY],\n      intentional\n    }) => {\n      if (!intentional) return;\n      const normalizedMouseX = (dragX - size.left) / size.width * 2 - 1;\n      const normalizedMouseY = -((dragY - size.top) / size.height) * 2 + 1;\n      mousePosition2D.set(normalizedMouseX, normalizedMouseY);\n      raycaster.setFromCamera(mousePosition2D, camera);\n      if (!axisLock) {\n        camera.getWorldDirection(dragPlaneNormal).negate();\n      } else {\n        switch (axisLock) {\n          case 'x':\n            dragPlaneNormal.set(1, 0, 0);\n            break;\n          case 'y':\n            dragPlaneNormal.set(0, 1, 0);\n            break;\n          case 'z':\n            dragPlaneNormal.set(0, 0, 1);\n            break;\n        }\n      }\n      dragPlane.setFromNormalAndCoplanarPoint(dragPlaneNormal, mousePosition3D);\n      raycaster.ray.intersectPlane(dragPlane, mousePosition3D);\n      const previousLocalMatrix = ref.current.matrix.clone();\n      const previousWorldMatrix = ref.current.matrixWorld.clone();\n      const intendedNewPosition = new THREE.Vector3(mousePosition3D.x - dragOffset.x, mousePosition3D.y - dragOffset.y, mousePosition3D.z - dragOffset.z);\n      if (dragLimits) {\n        intendedNewPosition.x = dragLimits[0] ? Math.max(Math.min(intendedNewPosition.x, dragLimits[0][1]), dragLimits[0][0]) : intendedNewPosition.x;\n        intendedNewPosition.y = dragLimits[1] ? Math.max(Math.min(intendedNewPosition.y, dragLimits[1][1]), dragLimits[1][0]) : intendedNewPosition.y;\n        intendedNewPosition.z = dragLimits[2] ? Math.max(Math.min(intendedNewPosition.z, dragLimits[2][1]), dragLimits[2][0]) : intendedNewPosition.z;\n      }\n      if (autoTransform) {\n        ref.current.matrix.setPosition(intendedNewPosition);\n        const deltaLocalMatrix = ref.current.matrix.clone().multiply(previousLocalMatrix.invert());\n        const deltaWorldMatrix = ref.current.matrix.clone().multiply(previousWorldMatrix.invert());\n        onDrag && onDrag(ref.current.matrix, deltaLocalMatrix, ref.current.matrixWorld, deltaWorldMatrix);\n      } else {\n        const tempMatrix = new THREE.Matrix4().copy(ref.current.matrix);\n        tempMatrix.setPosition(intendedNewPosition);\n        const deltaLocalMatrix = tempMatrix.clone().multiply(previousLocalMatrix.invert());\n        const deltaWorldMatrix = tempMatrix.clone().multiply(previousWorldMatrix.invert());\n        onDrag && onDrag(tempMatrix, deltaLocalMatrix, ref.current.matrixWorld, deltaWorldMatrix);\n      }\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (defaultControls) defaultControls.enabled = true;\n      onDragEnd && onDragEnd();\n      invalidate();\n    }\n  }, {\n    drag: {\n      filterTaps: true,\n      threshold: 1,\n      ...(typeof dragConfig === 'object' ? dragConfig : {})\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    if (!matrix) return;\n\n    // If the matrix is a real matrix4 it means that the user wants to control the gizmo\n    // In that case it should just be set, as a bare prop update would merely copy it\n    ref.current.matrix = matrix;\n  }, [matrix]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, bind(), {\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, props), children);\n});\n\nexport { DragControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport { useThree, useFrame, context as context$1 } from '@react-three/fiber';\nimport { easing } from 'maath';\n\nconst context = /* @__PURE__ */React.createContext(null);\nfunction useScroll() {\n  return React.useContext(context);\n}\nfunction ScrollControls({\n  eps = 0.00001,\n  enabled = true,\n  infinite,\n  horizontal,\n  pages = 1,\n  distance = 1,\n  damping = 0.25,\n  maxSpeed = Infinity,\n  prepend = false,\n  style = {},\n  children\n}) {\n  const {\n    get,\n    setEvents,\n    gl,\n    size,\n    invalidate,\n    events\n  } = useThree();\n  const [el] = React.useState(() => document.createElement('div'));\n  const [fill] = React.useState(() => document.createElement('div'));\n  const [fixed] = React.useState(() => document.createElement('div'));\n  const target = gl.domElement.parentNode;\n  const scroll = React.useRef(0);\n  const state = React.useMemo(() => {\n    const state = {\n      el,\n      eps,\n      fill,\n      fixed,\n      horizontal,\n      damping,\n      offset: 0,\n      delta: 0,\n      scroll,\n      pages,\n      // 0-1 for a range between from -> from + distance\n      range(from, distance, margin = 0) {\n        const start = from - margin;\n        const end = start + distance + margin * 2;\n        return this.offset < start ? 0 : this.offset > end ? 1 : (this.offset - start) / (end - start);\n      },\n      // 0-1-0 for a range between from -> from + distance\n      curve(from, distance, margin = 0) {\n        return Math.sin(this.range(from, distance, margin) * Math.PI);\n      },\n      // true/false for a range between from -> from + distance\n      visible(from, distance, margin = 0) {\n        const start = from - margin;\n        const end = start + distance + margin * 2;\n        return this.offset >= start && this.offset <= end;\n      }\n    };\n    return state;\n  }, [eps, damping, horizontal, pages]);\n  React.useEffect(() => {\n    el.style.position = 'absolute';\n    el.style.width = '100%';\n    el.style.height = '100%';\n    el.style[horizontal ? 'overflowX' : 'overflowY'] = 'auto';\n    el.style[horizontal ? 'overflowY' : 'overflowX'] = 'hidden';\n    el.style.top = '0px';\n    el.style.left = '0px';\n    for (const key in style) {\n      el.style[key] = style[key];\n    }\n    fixed.style.position = 'sticky';\n    fixed.style.top = '0px';\n    fixed.style.left = '0px';\n    fixed.style.width = '100%';\n    fixed.style.height = '100%';\n    fixed.style.overflow = 'hidden';\n    el.appendChild(fixed);\n    fill.style.height = horizontal ? '100%' : `${pages * distance * 100}%`;\n    fill.style.width = horizontal ? `${pages * distance * 100}%` : '100%';\n    fill.style.pointerEvents = 'none';\n    el.appendChild(fill);\n    if (prepend) target.prepend(el);else target.appendChild(el);\n\n    // Init scroll one pixel in to allow upward/leftward scroll\n    el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n    const oldTarget = events.connected || gl.domElement;\n    requestAnimationFrame(() => events.connect == null ? void 0 : events.connect(el));\n    const oldCompute = get().events.compute;\n    setEvents({\n      compute(event, state) {\n        // we are using boundingClientRect because we could not rely on target.offsetTop as canvas could be positioned anywhere in dom\n        const {\n          left,\n          top\n        } = target.getBoundingClientRect();\n        const offsetX = event.clientX - left;\n        const offsetY = event.clientY - top;\n        state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n        state.raycaster.setFromCamera(state.pointer, state.camera);\n      }\n    });\n    return () => {\n      target.removeChild(el);\n      setEvents({\n        compute: oldCompute\n      });\n      events.connect == null || events.connect(oldTarget);\n    };\n  }, [pages, distance, horizontal, el, fill, fixed, target]);\n  React.useEffect(() => {\n    if (events.connected === el) {\n      const containerLength = size[horizontal ? 'width' : 'height'];\n      const scrollLength = el[horizontal ? 'scrollWidth' : 'scrollHeight'];\n      const scrollThreshold = scrollLength - containerLength;\n      let current = 0;\n      let disableScroll = true;\n      let firstRun = true;\n      const onScroll = () => {\n        // Prevent first scroll because it is indirectly caused by the one pixel offset\n        if (!enabled || firstRun) return;\n        invalidate();\n        current = el[horizontal ? 'scrollLeft' : 'scrollTop'];\n        scroll.current = current / scrollThreshold;\n        if (infinite) {\n          if (!disableScroll) {\n            if (current >= scrollThreshold) {\n              const damp = 1 - state.offset;\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = 1;\n              scroll.current = state.offset = -damp;\n              disableScroll = true;\n            } else if (current <= 0) {\n              const damp = 1 + state.offset;\n              el[horizontal ? 'scrollLeft' : 'scrollTop'] = scrollLength;\n              scroll.current = state.offset = damp;\n              disableScroll = true;\n            }\n          }\n          if (disableScroll) setTimeout(() => disableScroll = false, 40);\n        }\n      };\n      el.addEventListener('scroll', onScroll, {\n        passive: true\n      });\n      requestAnimationFrame(() => firstRun = false);\n      const onWheel = e => el.scrollLeft += e.deltaY / 2;\n      if (horizontal) el.addEventListener('wheel', onWheel, {\n        passive: true\n      });\n      return () => {\n        el.removeEventListener('scroll', onScroll);\n        if (horizontal) el.removeEventListener('wheel', onWheel);\n      };\n    }\n  }, [el, events, size, infinite, state, invalidate, horizontal, enabled]);\n  let last = 0;\n  useFrame((_, delta) => {\n    last = state.offset;\n    easing.damp(state, 'offset', scroll.current, damping, delta, maxSpeed, undefined, eps);\n    easing.damp(state, 'delta', Math.abs(last - state.offset), damping, delta, maxSpeed, undefined, eps);\n    if (state.delta > eps) invalidate();\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, children);\n}\nconst ScrollCanvas = /* @__PURE__ */React.forwardRef(({\n  children\n}, ref) => {\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const state = useScroll();\n  const {\n    width,\n    height\n  } = useThree(state => state.viewport);\n  useFrame(() => {\n    group.current.position.x = state.horizontal ? -width * (state.pages - 1) * state.offset : 0;\n    group.current.position.y = state.horizontal ? 0 : height * (state.pages - 1) * state.offset;\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: group\n  }, children);\n});\nconst ScrollHtml = /*#__PURE__*/React.forwardRef(({\n  children,\n  style,\n  ...props\n}, ref) => {\n  const state = useScroll();\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const fiberState = React.useContext(context$1);\n  const root = React.useMemo(() => ReactDOM.createRoot(state.fixed), [state.fixed]);\n  useFrame(() => {\n    if (state.delta > state.eps) {\n      group.current.style.transform = `translate3d(${state.horizontal ? -width * (state.pages - 1) * state.offset : 0}px,${state.horizontal ? 0 : height * (state.pages - 1) * -state.offset}px,0)`;\n    }\n  });\n  root.render(/*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: group,\n    style: {\n      ...style,\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      willChange: 'transform'\n    }\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(context$1.Provider, {\n    value: fiberState\n  }, children))));\n  return null;\n});\nconst Scroll = /* @__PURE__ */React.forwardRef(({\n  html,\n  ...props\n}, ref) => {\n  const El = html ? ScrollHtml : ScrollCanvas;\n  return /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref\n  }, props));\n});\n\nexport { Scroll, ScrollControls, useScroll };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MathUtils } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { useSpring, a } from '@react-spring/three';\nimport { useGesture } from '@use-gesture/react';\n\nfunction PresentationControls({\n  enabled = true,\n  snap,\n  global,\n  domElement,\n  cursor = true,\n  children,\n  speed = 1,\n  rotation = [0, 0, 0],\n  zoom = 1,\n  polar = [0, Math.PI / 2],\n  azimuth = [-Infinity, Infinity],\n  config = {\n    mass: 1,\n    tension: 170,\n    friction: 26\n  }\n}) {\n  const events = useThree(state => state.events);\n  const gl = useThree(state => state.gl);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const {\n    size\n  } = useThree();\n  const rPolar = React.useMemo(() => [rotation[0] + polar[0], rotation[0] + polar[1]], [rotation[0], polar[0], polar[1]]);\n  const rAzimuth = React.useMemo(() => [rotation[1] + azimuth[0], rotation[1] + azimuth[1]], [rotation[1], azimuth[0], azimuth[1]]);\n  const rInitial = React.useMemo(() => [MathUtils.clamp(rotation[0], ...rPolar), MathUtils.clamp(rotation[1], ...rAzimuth), rotation[2]], [rotation[0], rotation[1], rotation[2], rPolar, rAzimuth]);\n  const [spring, api] = useSpring(() => ({\n    scale: 1,\n    rotation: rInitial,\n    config\n  }));\n  React.useEffect(() => void api.start({\n    scale: 1,\n    rotation: rInitial,\n    config\n  }), [rInitial]);\n  React.useEffect(() => {\n    if (global && cursor && enabled) {\n      explDomElement.style.cursor = 'grab';\n      gl.domElement.style.cursor = '';\n      return () => {\n        explDomElement.style.cursor = 'default';\n        gl.domElement.style.cursor = 'default';\n      };\n    }\n  }, [global, cursor, explDomElement, enabled]);\n  const bind = useGesture({\n    onHover: ({\n      last\n    }) => {\n      if (cursor && !global && enabled) explDomElement.style.cursor = last ? 'auto' : 'grab';\n    },\n    onDrag: ({\n      down,\n      delta: [x, y],\n      memo: [oldY, oldX] = spring.rotation.animation.to || rInitial\n    }) => {\n      if (!enabled) return [y, x];\n      if (cursor) explDomElement.style.cursor = down ? 'grabbing' : 'grab';\n      x = MathUtils.clamp(oldX + x / size.width * Math.PI * speed, ...rAzimuth);\n      y = MathUtils.clamp(oldY + y / size.height * Math.PI * speed, ...rPolar);\n      const sConfig = snap && !down && typeof snap !== 'boolean' ? snap : config;\n      api.start({\n        scale: down && y > rPolar[1] / 2 ? zoom : 1,\n        rotation: snap && !down ? rInitial : [y, x, 0],\n        config: n => n === 'scale' ? {\n          ...sConfig,\n          friction: sConfig.friction * 3\n        } : sConfig\n      });\n      return [y, x];\n    }\n  }, {\n    target: global ? explDomElement : undefined\n  });\n  return /*#__PURE__*/React.createElement(a.group, _extends({}, bind == null ? void 0 : bind(), spring), children);\n}\n\nexport { PresentationControls };\n", "import type {\n  FrameFn,\n  FrameUpdateFn,\n  NativeRaf,\n  Rafz,\n  Timeout,\n  Throttled,\n} from './types'\n\nexport type { FrameFn, FrameUpdateFn, Timeout, Throttled, Rafz }\n\nlet updateQueue = makeQueue<FrameUpdateFn>()\n\n/**\n * Schedule an update for next frame.\n * Your function can return `true` to repeat next frame.\n */\nexport const raf: Rafz = fn => schedule(fn, updateQueue)\n\nlet writeQueue = makeQueue<FrameFn>()\nraf.write = fn => schedule(fn, writeQueue)\n\nlet onStartQueue = makeQueue<FrameFn>()\nraf.onStart = fn => schedule(fn, onStartQueue)\n\nlet onFrameQueue = makeQueue<FrameFn>()\nraf.onFrame = fn => schedule(fn, onFrameQueue)\n\nlet onFinishQueue = makeQueue<FrameFn>()\nraf.onFinish = fn => schedule(fn, onFinishQueue)\n\nlet timeouts: Timeout[] = []\nraf.setTimeout = (handler, ms) => {\n  const time = raf.now() + ms\n  const cancel = () => {\n    const i = timeouts.findIndex(t => t.cancel == cancel)\n    if (~i) timeouts.splice(i, 1)\n    pendingCount -= ~i ? 1 : 0\n  }\n\n  const timeout: Timeout = { time, handler, cancel }\n  timeouts.splice(findTimeout(time), 0, timeout)\n  pendingCount += 1\n\n  start()\n  return timeout\n}\n\n/** Find the index where the given time is not greater. */\nconst findTimeout = (time: number) =>\n  ~(~timeouts.findIndex(t => t.time > time) || ~timeouts.length)\n\nraf.cancel = fn => {\n  onStartQueue.delete(fn)\n  onFrameQueue.delete(fn)\n  onFinishQueue.delete(fn)\n  updateQueue.delete(fn)\n  writeQueue.delete(fn)\n}\n\nraf.sync = fn => {\n  sync = true\n  raf.batchedUpdates(fn)\n  sync = false\n}\n\nraf.throttle = fn => {\n  let lastArgs: any\n  function queuedFn() {\n    try {\n      fn(...lastArgs)\n    } finally {\n      lastArgs = null\n    }\n  }\n  function throttled(...args: any) {\n    lastArgs = args\n    raf.onStart(queuedFn)\n  }\n  throttled.handler = fn\n  throttled.cancel = () => {\n    onStartQueue.delete(queuedFn)\n    lastArgs = null\n  }\n  return throttled as any\n}\n\nlet nativeRaf =\n  typeof window != 'undefined'\n    ? (window.requestAnimationFrame as NativeRaf)\n    : // eslint-disable-next-line @typescript-eslint/no-empty-function\n      () => {}\n\nraf.use = impl => (nativeRaf = impl)\nraf.now = typeof performance != 'undefined' ? () => performance.now() : Date.now\nraf.batchedUpdates = fn => fn()\nraf.catch = console.error\n\nraf.frameLoop = 'always'\n\nraf.advance = () => {\n  if (raf.frameLoop !== 'demand') {\n    console.warn(\n      'Cannot call the manual advancement of rafz whilst frameLoop is not set as demand'\n    )\n  } else {\n    update()\n  }\n}\n\n/** The most recent timestamp. */\nlet ts = -1\n\n/** The number of pending tasks  */\nlet pendingCount = 0\n\n/** When true, scheduling is disabled. */\nlet sync = false\n\nfunction schedule<T extends Function>(fn: T, queue: Queue<T>) {\n  if (sync) {\n    queue.delete(fn)\n    fn(0)\n  } else {\n    queue.add(fn)\n    start()\n  }\n}\n\nfunction start() {\n  if (ts < 0) {\n    ts = 0\n    if (raf.frameLoop !== 'demand') {\n      nativeRaf(loop)\n    }\n  }\n}\n\nfunction stop() {\n  ts = -1\n}\n\nfunction loop() {\n  if (~ts) {\n    nativeRaf(loop)\n    raf.batchedUpdates(update)\n  }\n}\n\nfunction update() {\n  const prevTs = ts\n  ts = raf.now()\n\n  // Flush timeouts whose time is up.\n  const count = findTimeout(ts)\n  if (count) {\n    eachSafely(timeouts.splice(0, count), t => t.handler())\n    pendingCount -= count\n  }\n\n  if (!pendingCount) {\n    stop()\n\n    return\n  }\n\n  onStartQueue.flush()\n  updateQueue.flush(prevTs ? Math.min(64, ts - prevTs) : 16.667)\n  onFrameQueue.flush()\n  writeQueue.flush()\n  onFinishQueue.flush()\n}\n\ninterface Queue<T extends Function = any> {\n  add: (fn: T) => void\n  delete: (fn: T) => boolean\n  flush: (arg?: any) => void\n}\n\nfunction makeQueue<T extends Function>(): Queue<T> {\n  let next = new Set<T>()\n  let current = next\n  return {\n    add(fn) {\n      pendingCount += current == next && !next.has(fn) ? 1 : 0\n      next.add(fn)\n    },\n    delete(fn) {\n      pendingCount -= current == next && next.has(fn) ? 1 : 0\n      return next.delete(fn)\n    },\n    flush(arg) {\n      if (current.size) {\n        next = new Set()\n        pendingCount -= current.size\n        eachSafely(current, fn => fn(arg) && next.add(fn))\n        pendingCount += next.size\n        current = next\n      }\n    },\n  }\n}\n\ninterface Eachable<T> {\n  forEach(cb: (value: T) => void): void\n}\n\nfunction eachSafely<T>(values: Eachable<T>, each: (value: T) => void) {\n  values.forEach(value => {\n    try {\n      each(value)\n    } catch (e) {\n      raf.catch(e as Error)\n    }\n  })\n}\n\n/** Tree-shakable state for testing purposes */\nexport const __raf = {\n  /** The number of pending tasks */\n  count(): number {\n    return pendingCount\n  },\n  /** Whether there's a raf update loop running */\n  isRunning(): boolean {\n    return ts >= 0\n  },\n  /** Clear internal state. Never call from update loop! */\n  clear() {\n    ts = -1\n    timeouts = []\n    onStartQueue = makeQueue()\n    updateQueue = makeQueue()\n    onFrameQueue = makeQueue()\n    writeQueue = makeQueue()\n    onFinishQueue = makeQueue()\n    pendingCount = 0\n  },\n}\n", "import { raf, Rafz } from '@react-spring/rafz'\nimport {\n  OneOrMore,\n  InterpolatorConfig,\n  InterpolatorArgs,\n} from '@react-spring/types'\n\nimport { FluidValue } from './fluids'\nimport type { OpaqueAnimation } from './FrameLoop'\nimport { noop } from './helpers'\n\n//\n// Required\n//\n\nexport let createStringInterpolator: (\n  config: InterpolatorConfig<string>\n) => (input: number) => string\n\n//\n// Optional\n//\n\nexport let to: <Input, Output>(\n  source: OneOrMore<FluidValue>,\n  args: InterpolatorArgs<Input, Output>\n) => FluidValue<Output>\n\nexport let colors = null as { [key: string]: number } | null\n\nexport let skipAnimation = false as boolean\n\nexport let willAdvance: (animation: OpaqueAnimation) => void = noop\n\n//\n// Configuration\n//\n\nexport interface AnimatedGlobals {\n  /** Returns a new `Interpolation` object */\n  to?: typeof to\n  /** Used to measure frame length. Read more [here](https://developer.mozilla.org/en-US/docs/Web/API/Performance/now) */\n  now?: typeof raf.now\n  /** Provide custom color names for interpolation */\n  colors?: typeof colors\n  /** Make all animations instant and skip the frameloop entirely */\n  skipAnimation?: typeof skipAnimation\n  /** Provide custom logic for string interpolation */\n  createStringInterpolator?: typeof createStringInterpolator\n  /** Schedule a function to run on the next frame */\n  requestAnimationFrame?: (cb: () => void) => void\n  /** Event props are called with `batchedUpdates` to reduce extraneous renders */\n  batchedUpdates?: typeof raf.batchedUpdates\n  /** @internal Exposed for testing purposes */\n  willAdvance?: typeof willAdvance\n  /** sets the global frameLoop setting for the global raf instance */\n  frameLoop?: Rafz['frameLoop']\n}\n\nexport const assign = (globals: AnimatedGlobals) => {\n  if (globals.to) to = globals.to\n  if (globals.now) raf.now = globals.now\n  if (globals.colors !== undefined) colors = globals.colors\n  if (globals.skipAnimation != null) skipAnimation = globals.skipAnimation\n  if (globals.createStringInterpolator)\n    createStringInterpolator = globals.createStringInterpolator\n  if (globals.requestAnimationFrame) raf.use(globals.requestAnimationFrame)\n  if (globals.batchedUpdates) raf.batchedUpdates = globals.batchedUpdates\n  if (globals.willAdvance) willAdvance = globals.willAdvance\n  if (globals.frameLoop) raf.frameLoop = globals.frameLoop\n}\n", "import { Lookup, Arrify, AnyFn, Any } from '@react-spring/types'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const defineHidden = (obj: any, key: any, value: any) =>\n  Object.defineProperty(obj, key, { value, writable: true, configurable: true })\n\ntype IsType<U> = <T>(arg: T & any) => arg is Narrow<T, U>\ntype Narrow<T, U> = [T] extends [Any] ? U : [T] extends [U] ? Extract<T, U> : U\n\ntype PlainObject<T> = Exclude<T & Lookup, Function | readonly any[]>\n\nexport const is = {\n  arr: Array.isArray as IsType<readonly any[]>,\n  obj: <T>(a: T & any): a is PlainObject<T> =>\n    !!a && a.constructor.name === 'Object',\n  fun: ((a: unknown) => typeof a === 'function') as IsType<Function>,\n  str: (a: unknown): a is string => typeof a === 'string',\n  num: (a: unknown): a is number => typeof a === 'number',\n  und: (a: unknown): a is undefined => a === undefined,\n}\n\n/** Compare animatable values */\nexport function isEqual(a: any, b: any) {\n  if (is.arr(a)) {\n    if (!is.arr(b) || a.length !== b.length) return false\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false\n    }\n    return true\n  }\n  return a === b\n}\n\ntype EachFn<Value, Key, This> = (this: This, value: Value, key: Key) => void\ntype Eachable<Value = any, Key = any, This = any> = {\n  forEach(cb: EachFn<Value, Key, This>, ctx?: This): void\n}\n\n/** Minifiable `.forEach` call */\nexport const each = <Value, Key, This>(\n  obj: Eachable<Value, Key, This>,\n  fn: EachFn<Value, Key, This>\n) => obj.forEach(fn)\n\n/** Iterate the properties of an object */\nexport function eachProp<T extends object, This>(\n  obj: T,\n  fn: (\n    this: This,\n    value: T extends any[] ? T[number] : T[keyof T],\n    key: string\n  ) => void,\n  ctx?: This\n) {\n  if (is.arr(obj)) {\n    for (let i = 0; i < obj.length; i++) {\n      fn.call(ctx as any, obj[i] as any, `${i}`)\n    }\n    return\n  }\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn.call(ctx as any, obj[key] as any, key)\n    }\n  }\n}\n\nexport const toArray = <T>(a: T): Arrify<Exclude<T, void>> =>\n  is.und(a) ? [] : is.arr(a) ? (a as any) : [a]\n\n/** Copy the `queue`, then iterate it after the `queue` is cleared */\nexport function flush<P, T>(\n  queue: Map<P, T>,\n  iterator: (entry: [P, T]) => void\n): void\nexport function flush<T>(queue: Set<T>, iterator: (value: T) => void): void\nexport function flush(queue: any, iterator: any) {\n  if (queue.size) {\n    const items = Array.from(queue)\n    queue.clear()\n    each(items, iterator)\n  }\n}\n\n/** Call every function in the queue with the same arguments. */\nexport const flushCalls = <T extends AnyFn>(\n  queue: Set<T>,\n  ...args: Parameters<T>\n) => flush(queue, fn => fn(...args))\n\n// For server-side rendering: https://github.com/react-spring/zustand/pull/34\n// Deno support: https://github.com/pmndrs/zustand/issues/347\n\nexport const isSSR = () =>\n  typeof window === 'undefined' ||\n  !window.navigator ||\n  /ServerSideRendering|^Deno\\//.test(window.navigator.userAgent)\n", "import { raf } from '@react-spring/rafz'\nimport * as G from './globals'\n\nexport interface OpaqueAnimation {\n  idle: boolean\n  priority: number\n  advance(dt: number): void\n}\n\n// Animations starting on the next frame\nconst startQueue = new Set<OpaqueAnimation>()\n\n// The animations being updated in the current frame, sorted by lowest\n// priority first. These two arrays are swapped at the end of each frame.\nlet currentFrame: OpaqueAnimation[] = []\nlet prevFrame: OpaqueAnimation[] = []\n\n// The priority of the currently advancing animation.\n// To protect against a race condition whenever a frame is being processed,\n// where the filtering of `animations` is corrupted with a shifting index,\n// causing animations to potentially advance 2x faster than intended.\nlet priority = 0\n\n/**\n * The frameloop executes its animations in order of lowest priority first.\n * Animations are retained until idle.\n */\nexport const frameLoop = {\n  get idle() {\n    return !startQueue.size && !currentFrame.length\n  },\n\n  /** Advance the given animation on every frame until idle. */\n  start(animation: OpaqueAnimation) {\n    // An animation can be added while a frame is being processed,\n    // unless its priority is lower than the animation last updated.\n    if (priority > animation.priority) {\n      startQueue.add(animation)\n      raf.onStart(flushStartQueue)\n    } else {\n      startSafely(animation)\n      raf(advance)\n    }\n  },\n\n  /** Advance all animations by the given time. */\n  advance,\n\n  /** Call this when an animation's priority changes. */\n  sort(animation: OpaqueAnimation) {\n    if (priority) {\n      raf.onFrame(() => frameLoop.sort(animation))\n    } else {\n      const prevIndex = currentFrame.indexOf(animation)\n      if (~prevIndex) {\n        currentFrame.splice(prevIndex, 1)\n        startUnsafely(animation)\n      }\n    }\n  },\n\n  /**\n   * Clear all animations. For testing purposes.\n   *\n   * ☠️ Never call this from within the frameloop.\n   */\n  clear() {\n    currentFrame = []\n    startQueue.clear()\n  },\n}\n\nfunction flushStartQueue() {\n  startQueue.forEach(startSafely)\n  startQueue.clear()\n  raf(advance)\n}\n\nfunction startSafely(animation: OpaqueAnimation) {\n  if (!currentFrame.includes(animation)) startUnsafely(animation)\n}\n\nfunction startUnsafely(animation: OpaqueAnimation) {\n  currentFrame.splice(\n    findIndex(currentFrame, other => other.priority > animation.priority),\n    0,\n    animation\n  )\n}\n\nfunction advance(dt: number) {\n  const nextFrame = prevFrame\n\n  for (let i = 0; i < currentFrame.length; i++) {\n    const animation = currentFrame[i]\n    priority = animation.priority\n\n    // Animations may go idle before advancing.\n    if (!animation.idle) {\n      G.willAdvance(animation)\n      animation.advance(dt)\n      if (!animation.idle) {\n        nextFrame.push(animation)\n      }\n    }\n  }\n  priority = 0\n\n  // Reuse the `currentFrame` array to avoid garbage collection.\n  prevFrame = currentFrame\n  prevFrame.length = 0\n\n  // Set `currentFrame` for next frame, so the `start` function\n  // adds new animations to the proper array.\n  currentFrame = nextFrame\n\n  return currentFrame.length > 0\n}\n\n/** Like `Array.prototype.findIndex` but returns `arr.length` instead of `-1` */\nfunction findIndex<T>(arr: T[], test: (value: T) => boolean) {\n  const index = arr.findIndex(test)\n  return index < 0 ? arr.length : index\n}\n", "export const clamp = (min: number, max: number, v: number) =>\n  Math.min(Math.max(v, min), max)\n", "export type ColorName = keyof typeof colors\n\n// http://www.w3.org/TR/css3-color/#svg-color\nexport const colors = {\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n}\n", "// const INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+'\nconst PERCENTAGE = NUMBER + '%'\n\nfunction call(...parts: string[]) {\n  return '\\\\(\\\\s*(' + parts.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)'\n}\n\nexport const rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER))\nexport const rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER))\nexport const hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE))\nexport const hsla = new RegExp(\n  'hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)\n)\nexport const hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const hex4 =\n  /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/\nexport const hex6 = /^#([0-9a-fA-F]{6})$/\nexport const hex8 = /^#([0-9a-fA-F]{8})$/\n", "/*\nhttps://github.com/react-community/normalize-css-color\n\nBSD 3-Clause License\n\nCopyright (c) 2016, React Community\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nimport * as matchers from './colorMatchers'\nimport * as G from './globals'\n\nexport function normalizeColor(color: number | string) {\n  let match\n\n  if (typeof color === 'number') {\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff\n      ? color\n      : null\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color)))\n    return parseInt(match[1] + 'ff', 16) >>> 0\n\n  if (G.colors && G.colors[color] !== undefined) {\n    return G.colors[color]\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) | // b\n        0x000000ff) >>> // a\n      0\n    )\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) | // b\n        parse1(match[4])) >>> // a\n      0\n    )\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    )\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) return parseInt(match[1], 16) >>> 0\n\n  if ((match = matchers.hex4.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    )\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    )\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        parse1(match[4])) >>> // a\n      0\n    )\n  }\n  return null\n}\n\nfunction hue2rgb(p: number, q: number, t: number) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nfunction hslToRgb(h: number, s: number, l: number) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n  const p = 2 * l - q\n  const r = hue2rgb(p, q, h + 1 / 3)\n  const g = hue2rgb(p, q, h)\n  const b = hue2rgb(p, q, h - 1 / 3)\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  )\n}\n\nfunction parse255(str: string) {\n  const int = parseInt(str, 10)\n  if (int < 0) return 0\n  if (int > 255) return 255\n  return int\n}\n\nfunction parse360(str: string) {\n  const int = parseFloat(str)\n  return (((int % 360) + 360) % 360) / 360\n}\n\nfunction parse1(str: string) {\n  const num = parseFloat(str)\n  if (num < 0) return 0\n  if (num > 1) return 255\n  return Math.round(num * 255)\n}\n\nfunction parsePercentage(str: string) {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str)\n  if (int < 0) return 0\n  if (int > 100) return 1\n  return int / 100\n}\n", "import { normalizeColor } from './normalizeColor'\n\nexport function colorToRgba(input: string) {\n  let int32Color = normalizeColor(input)\n  if (int32Color === null) return input\n  int32Color = int32Color || 0\n  const r = (int32Color & 0xff000000) >>> 24\n  const g = (int32Color & 0x00ff0000) >>> 16\n  const b = (int32Color & 0x0000ff00) >>> 8\n  const a = (int32Color & 0x000000ff) / 255\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n", "import * as G from './globals'\nimport { is } from './helpers'\nimport {\n  Animatable,\n  InterpolatorFn,\n  EasingFunction,\n  ExtrapolateType,\n  InterpolatorConfig,\n  InterpolatorFactory,\n} from '@react-spring/types'\n\nexport const createInterpolator: InterpolatorFactory = (\n  range: readonly number[] | InterpolatorFn<any, any> | InterpolatorConfig<any>,\n  output?: readonly Animatable[],\n  extrapolate?: ExtrapolateType\n) => {\n  if (is.fun(range)) {\n    return range\n  }\n\n  if (is.arr(range)) {\n    return createInterpolator({\n      range,\n      output: output!,\n      extrapolate,\n    })\n  }\n\n  if (is.str(range.output[0])) {\n    return G.createStringInterpolator(range as any) as any\n  }\n\n  const config = range as InterpolatorConfig<number>\n  const outputRange = config.output\n  const inputRange = config.range || [0, 1]\n\n  const extrapolateLeft =\n    config.extrapolateLeft || config.extrapolate || 'extend'\n  const extrapolateRight =\n    config.extrapolateRight || config.extrapolate || 'extend'\n  const easing = config.easing || (t => t)\n\n  return (input: number) => {\n    const range = findRange(input, inputRange)\n    return interpolate(\n      input,\n      inputRange[range],\n      inputRange[range + 1],\n      outputRange[range],\n      outputRange[range + 1],\n      easing,\n      extrapolateLeft,\n      extrapolateRight,\n      config.map\n    )\n  }\n}\n\nfunction interpolate(\n  input: number,\n  inputMin: number,\n  inputMax: number,\n  outputMin: number,\n  outputMax: number,\n  easing: EasingFunction,\n  extrapolateLeft: ExtrapolateType,\n  extrapolateRight: ExtrapolateType,\n  map?: (x: number) => number\n) {\n  let result = map ? map(input) : input\n  // Extrapolate\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result\n    else if (extrapolateLeft === 'clamp') result = inputMin\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result\n    else if (extrapolateRight === 'clamp') result = inputMax\n  }\n  if (outputMin === outputMax) return outputMin\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax\n  // Input Range\n  if (inputMin === -Infinity) result = -result\n  else if (inputMax === Infinity) result = result - inputMin\n  else result = (result - inputMin) / (inputMax - inputMin)\n  // Easing\n  result = easing(result)\n  // Output Range\n  if (outputMin === -Infinity) result = -result\n  else if (outputMax === Infinity) result = result + outputMin\n  else result = result * (outputMax - outputMin) + outputMin\n  return result\n}\n\nfunction findRange(input: number, inputRange: readonly number[]) {\n  // eslint-disable-next-line no-var\n  for (var i = 1; i < inputRange.length - 1; ++i)\n    if (inputRange[i] >= input) break\n  return i - 1\n}\n", "import { EasingFunction } from '@react-spring/types'\n\nimport { clamp } from './clamp'\n\nexport type Direction = 'start' | 'end'\n\ntype StepsEasing = (steps: number, direction?: Direction) => EasingFunction\n\nconst steps: StepsEasing =\n  (steps: number, direction: Direction = 'end') =>\n  (progress: number) => {\n    progress =\n      direction === 'end'\n        ? Math.min(progress, 0.999)\n        : Math.max(progress, 0.001)\n    const expanded = progress * steps\n    const rounded =\n      direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded)\n\n    return clamp(0, 1, rounded / steps)\n  }\n\n/**\n * With thanks to ai easings.net\n * https://github.com/ai/easings.net/blob/master/src/easings/easingsFunctions.ts\n */\ninterface EasingDictionary {\n  linear: (t: number) => number\n  easeInQuad: (t: number) => number\n  easeOutQuad: (t: number) => number\n  easeInOutQuad: (t: number) => number\n  easeInCubic: (t: number) => number\n  easeOutCubic: (t: number) => number\n  easeInOutCubic: (t: number) => number\n  easeInQuart: (t: number) => number\n  easeOutQuart: (t: number) => number\n  easeInOutQuart: (t: number) => number\n  easeInQuint: (t: number) => number\n  easeOutQuint: (t: number) => number\n  easeInOutQuint: (t: number) => number\n  easeInSine: (t: number) => number\n  easeOutSine: (t: number) => number\n  easeInOutSine: (t: number) => number\n  easeInExpo: (t: number) => number\n  easeOutExpo: (t: number) => number\n  easeInOutExpo: (t: number) => number\n  easeInCirc: (t: number) => number\n  easeOutCirc: (t: number) => number\n  easeInOutCirc: (t: number) => number\n  easeInBack: (t: number) => number\n  easeOutBack: (t: number) => number\n  easeInOutBack: (t: number) => number\n  easeInElastic: (t: number) => number\n  easeOutElastic: (t: number) => number\n  easeInOutElastic: (t: number) => number\n  easeInBounce: (t: number) => number\n  easeOutBounce: (t: number) => number\n  easeInOutBounce: (t: number) => number\n  steps: StepsEasing\n}\n\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst bounceOut: EasingFunction = x => {\n  const n1 = 7.5625\n  const d1 = 2.75\n\n  if (x < 1 / d1) {\n    return n1 * x * x\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984375\n  }\n}\n\nexport const easings: EasingDictionary = {\n  linear: x => x,\n  easeInQuad: x => x * x,\n  easeOutQuad: x => 1 - (1 - x) * (1 - x),\n  easeInOutQuad: x => (x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2),\n  easeInCubic: x => x * x * x,\n  easeOutCubic: x => 1 - Math.pow(1 - x, 3),\n  easeInOutCubic: x =>\n    x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n  easeInQuart: x => x * x * x * x,\n  easeOutQuart: x => 1 - Math.pow(1 - x, 4),\n  easeInOutQuart: x =>\n    x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n  easeInQuint: x => x * x * x * x * x,\n  easeOutQuint: x => 1 - Math.pow(1 - x, 5),\n  easeInOutQuint: x =>\n    x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n  easeInSine: x => 1 - Math.cos((x * Math.PI) / 2),\n  easeOutSine: x => Math.sin((x * Math.PI) / 2),\n  easeInOutSine: x => -(Math.cos(Math.PI * x) - 1) / 2,\n  easeInExpo: x => (x === 0 ? 0 : Math.pow(2, 10 * x - 10)),\n  easeOutExpo: x => (x === 1 ? 1 : 1 - Math.pow(2, -10 * x)),\n  easeInOutExpo: x =>\n    x === 0\n      ? 0\n      : x === 1\n        ? 1\n        : x < 0.5\n          ? Math.pow(2, 20 * x - 10) / 2\n          : (2 - Math.pow(2, -20 * x + 10)) / 2,\n  easeInCirc: x => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n  easeOutCirc: x => Math.sqrt(1 - Math.pow(x - 1, 2)),\n  easeInOutCirc: x =>\n    x < 0.5\n      ? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n      : (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2,\n  easeInBack: x => c3 * x * x * x - c1 * x * x,\n  easeOutBack: x => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n  easeInOutBack: x =>\n    x < 0.5\n      ? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n      : (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2,\n  easeInElastic: x =>\n    x === 0\n      ? 0\n      : x === 1\n        ? 1\n        : -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4),\n  easeOutElastic: x =>\n    x === 0\n      ? 0\n      : x === 1\n        ? 1\n        : Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1,\n  easeInOutElastic: x =>\n    x === 0\n      ? 0\n      : x === 1\n        ? 1\n        : x < 0.5\n          ? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n          : (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 +\n            1,\n  easeInBounce: x => 1 - bounceOut(1 - x),\n  easeOutBounce: bounceOut,\n  easeInOutBounce: x =>\n    x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2,\n  steps,\n} as const\n", "/**\n * MIT License\n * Copyright (c) Alec Larson\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst $get = Symbol.for('FluidValue.get')\nconst $observers = Symbol.for('FluidValue.observers')\n\nexport {\n  FluidValue,\n  hasFluidValue,\n  getFluidValue,\n  getFluidObservers,\n  callFluidObserver,\n  callFluidObservers,\n  // Mutations\n  setFluidGetter,\n  addFluidObserver,\n  removeFluidObserver,\n}\n\n/** Returns true if `arg` can be observed. */\nconst hasFluidValue = (arg: any): arg is FluidValue => Boolean(arg && arg[$get])\n\n/**\n * Get the current value.\n * If `arg` is not observable, `arg` is returned.\n */\nconst getFluidValue: GetFluidValue = (arg: any) =>\n  arg && arg[$get] ? arg[$get]() : arg\n\n/** Get the current observer set. Never mutate it directly! */\nconst getFluidObservers: GetFluidObservers = (target: any) =>\n  target[$observers] || null\n\n/** Send an event to an observer. */\nfunction callFluidObserver<E extends FluidEvent>(\n  observer: FluidObserver<E>,\n  event: E\n): void\n\nfunction callFluidObserver(observer: any, event: FluidEvent) {\n  if (observer.eventObserved) {\n    observer.eventObserved(event)\n  } else {\n    observer(event)\n  }\n}\n\n/** Send an event to all observers. */\nfunction callFluidObservers<E extends FluidEvent>(\n  target: FluidValue<any, E>,\n  event: E\n): void\n\nfunction callFluidObservers(target: object, event: FluidEvent): void\n\nfunction callFluidObservers(target: any, event: FluidEvent) {\n  const observers: Set<FluidObserver> = target[$observers]\n  if (observers) {\n    observers.forEach(observer => {\n      callFluidObserver(observer, event)\n    })\n  }\n}\n\ntype GetFluidValue = {\n  <T, U = never>(target: T | FluidValue<U>): Exclude<T, FluidValue> | U\n}\n\ntype GetFluidObservers = {\n  <E extends FluidEvent>(\n    target: FluidValue<any, E>\n  ): ReadonlySet<FluidObserver<E>> | null\n  (target: object): ReadonlySet<FluidObserver> | null\n}\n\n/** An event sent to `FluidObserver` objects. */\nexport interface FluidEvent<T = any> {\n  type: string\n  parent: FluidValue<T>\n}\n\n/**\n * Extend this class for automatic TypeScript support when passing this\n * value to `fluids`-compatible libraries.\n */\nabstract class FluidValue<T = any, E extends FluidEvent<T> = any> {\n  // @ts-expect-error (TS 4.4)\n  private [$get]: () => T\n  // @ts-expect-error (TS 4.4)\n  private [$observers]?: Set<FluidObserver<E>>\n\n  constructor(get?: () => T) {\n    if (!get && !(get = this.get)) {\n      throw Error('Unknown getter')\n    }\n    setFluidGetter(this, get)\n  }\n\n  /** Get the current value. */\n  protected get?(): T\n  /** Called after an observer is added. */\n  protected observerAdded?(count: number, observer: FluidObserver<E>): void\n  /** Called after an observer is removed. */\n  protected observerRemoved?(count: number, observer: FluidObserver<E>): void\n}\n\n/** An observer of `FluidValue` objects. */\nexport type FluidObserver<E extends FluidEvent = any> =\n  | { eventObserved(event: E): void }\n  | { (event: E): void }\n\n/** Add the `FluidValue` type to every property. */\nexport type FluidProps<T> = T extends object\n  ? { [P in keyof T]: T[P] | FluidValue<Exclude<T[P], void>> }\n  : unknown\n\n/** Remove the `FluidValue` type from every property. */\nexport type StaticProps<T extends object> = {\n  [P in keyof T]: T[P] extends FluidValue<infer U> ? U : T[P]\n}\n\n/** Define the getter called by `getFluidValue`. */\nconst setFluidGetter = (target: object, get: () => any) =>\n  setHidden(target, $get, get)\n\n/** Observe a `fluids`-compatible object. */\nfunction addFluidObserver<T, E extends FluidEvent>(\n  target: FluidValue<T, E>,\n  observer: FluidObserver<E>\n): typeof observer\n\nfunction addFluidObserver<E extends FluidEvent>(\n  target: object,\n  observer: FluidObserver<E>\n): typeof observer\n\nfunction addFluidObserver(target: any, observer: FluidObserver) {\n  if (target[$get]) {\n    let observers: Set<FluidObserver> = target[$observers]\n    if (!observers) {\n      setHidden(target, $observers, (observers = new Set()))\n    }\n    if (!observers.has(observer)) {\n      observers.add(observer)\n      if (target.observerAdded) {\n        target.observerAdded(observers.size, observer)\n      }\n    }\n  }\n  return observer\n}\n\n/** Stop observing a `fluids`-compatible object. */\nfunction removeFluidObserver<E extends FluidEvent>(\n  target: FluidValue<any, E>,\n  observer: FluidObserver<E>\n): void\n\nfunction removeFluidObserver<E extends FluidEvent>(\n  target: object,\n  observer: FluidObserver<E>\n): void\n\nfunction removeFluidObserver(target: any, observer: FluidObserver) {\n  const observers: Set<FluidObserver> = target[$observers]\n  if (observers && observers.has(observer)) {\n    const count = observers.size - 1\n    if (count) {\n      observers.delete(observer)\n    } else {\n      target[$observers] = null\n    }\n    if (target.observerRemoved) {\n      target.observerRemoved(count, observer)\n    }\n  }\n}\n\nconst setHidden = (target: any, key: any, value: any) =>\n  Object.defineProperty(target, key, {\n    value,\n    writable: true,\n    configurable: true,\n  })\n", "// Problem: https://github.com/animatedjs/animated/pull/102\n// Solution: https://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly/658662\nexport const numberRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g\n\n// Covers rgb, rgba, hsl, hsla\n// Taken from https://gist.github.com/olmokramer/82ccce673f86db7cda5e\nexport const colorRegex =\n  /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi\n\n// Gets numbers with units when specified\nexport const unitRegex = new RegExp(`(${numberRegex.source})(%|[a-z]+)`, 'i')\n\n// get values of rgba string\nexport const rgbaRegex =\n  /rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi\n\n/**\n * Parse special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n */\nexport const cssVariableRegex =\n  /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/\n", "import { isSSR } from './helpers'\nimport { cssVariableRegex } from './regexs'\n\n/**\n * takes a CSS variable and attempts\n * to turn it into a RGBA value\n *\n * ```\n * 'var(--white)' => 'rgba(255,255,255,1)'\n * ```\n *\n * @param input string\n * @returns string\n */\nexport const variableToRgba = (input: string): string => {\n  const [token, fallback] = parseCSSVariable(input)\n\n  if (!token || isSSR()) {\n    return input\n  }\n\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(token)\n\n  if (value) {\n    /**\n     * We have a valid variable returned\n     * trim and return\n     */\n    return value.trim()\n  } else if (fallback && fallback.startsWith('--')) {\n    /**\n     * fallback is something like --my-variable\n     * so we try get property value\n     */\n    const value = window\n      .getComputedStyle(document.documentElement)\n      .getPropertyValue(fallback)\n\n    /**\n     * if it exists, return else nothing was found so just return the input\n     */\n    if (value) {\n      return value\n    } else {\n      return input\n    }\n  } else if (fallback && cssVariableRegex.test(fallback)) {\n    /**\n     * We have a fallback and it's another CSS variable\n     */\n    return variableToRgba(fallback)\n  } else if (fallback) {\n    /**\n     * We have a fallback and it's not a CSS variable\n     */\n    return fallback\n  }\n\n  /**\n   * Nothing worked so just return the input\n   * like our other FluidValue replace functions do\n   */\n  return input\n}\n\nconst parseCSSVariable = (current: string) => {\n  const match = cssVariableRegex.exec(current)\n  if (!match) return [,]\n\n  const [, token, fallback] = match\n  return [token, fallback]\n}\n", "import { InterpolatorConfig } from '@react-spring/types'\n\nimport { getFluidValue } from './fluids'\nimport { createInterpolator } from './createInterpolator'\nimport { colorToRgba } from './colorToRgba'\nimport * as G from './globals'\nimport {\n  cssVariableRegex,\n  colorRegex,\n  unitRegex,\n  numberRegex,\n  rgbaRegex,\n} from './regexs'\nimport { variableToRgba } from './variableToRgba'\n\n// Covers color names (transparent, blue, etc.)\nlet namedColorRegex: RegExp\n\n// rgba requires that the r,g,b are integers.... so we want to round them,\n// but we *dont* want to round the opacity (4th column).\nconst rgbaRound = (_: any, p1: number, p2: number, p3: number, p4: number) =>\n  `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`\n\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *     \"rgba(123, 42, 99, 0.36)\"           // colors\n *     \"-45deg\"                            // values with units\n *     \"0 2px 2px 0px rgba(0, 0, 0, 0.12)\" // CSS box-shadows\n *     \"rotate(0deg) translate(2px, 3px)\"  // CSS transforms\n */\nexport const createStringInterpolator = (\n  config: InterpolatorConfig<string>\n) => {\n  if (!namedColorRegex)\n    namedColorRegex = G.colors\n      ? // match color names, ignore partial matches\n        new RegExp(`(${Object.keys(G.colors).join('|')})(?!\\\\w)`, 'g')\n      : // never match\n        /^\\b$/\n\n  // Convert colors to rgba(...)\n  const output = config.output.map(value => {\n    return getFluidValue(value)\n      .replace(cssVariableRegex, variableToRgba)\n      .replace(colorRegex, colorToRgba)\n      .replace(namedColorRegex, colorToRgba)\n  })\n\n  // Convert [\"1px 2px\", \"0px 0px\"] into [[1, 2], [0, 0]]\n  const keyframes = output.map(value => value.match(numberRegex)!.map(Number))\n\n  // Convert [\"1px 2px\", \"0px 0px\"] into [[1, 0], [2, 0]]\n  const outputRanges = keyframes[0].map((_, i) =>\n    keyframes.map(values => {\n      if (!(i in values)) {\n        throw Error('The arity of each \"output\" value must be equal')\n      }\n      return values[i]\n    })\n  )\n\n  // Create an interpolator for each animated number\n  const interpolators = outputRanges.map(output =>\n    createInterpolator({ ...config, output })\n  )\n\n  // Use the first `output` as a template for each call\n  return (input: number) => {\n    // Convert numbers to units if available (allows for [\"0\", \"100%\"])\n    const missingUnit =\n      !unitRegex.test(output[0]) &&\n      output.find(value => unitRegex.test(value))?.replace(numberRegex, '')\n\n    let i = 0\n    return output[0]\n      .replace(\n        numberRegex,\n        () => `${interpolators[i++](input)}${missingUnit || ''}`\n      )\n      .replace(rgbaRegex, rgbaRound)\n  }\n}\n", "declare const console: any\n\nexport const prefix = 'react-spring: '\n\nexport const once = <TFunc extends (...args: any) => any>(fn: TFunc) => {\n  const func = fn\n  let called = false\n\n  if (typeof func != 'function') {\n    throw new TypeError(`${prefix}once requires a function parameter`)\n  }\n\n  return (...args: any) => {\n    if (!called) {\n      func(...args)\n      called = true\n    }\n  }\n}\n\nconst warnInterpolate = once(console.warn)\nexport function deprecateInterpolate() {\n  warnInterpolate(\n    `${prefix}The \"interpolate\" function is deprecated in v9 (use \"to\" instead)`\n  )\n}\n\nconst warnDirectCall = once(console.warn)\nexport function deprecateDirectCall() {\n  warnDirectCall(\n    `${prefix}Directly calling start instead of using the api object is deprecated in v9 (use \".start\" instead), this will be removed in later 0.X.0 versions`\n  )\n}\n", "import * as G from './globals'\nimport { is, isSSR } from './helpers'\nimport { cssVariableRegex } from './regexs'\n\n// Not all strings can be animated (eg: {display: \"none\"})\nexport function isAnimatedString(value: unknown): value is string {\n  return (\n    is.str(value) &&\n    (value[0] == '#' ||\n      /\\d/.test(value) ||\n      // Do not identify a CSS variable as an AnimatedString if its SSR\n      (!isSSR() && cssVariableRegex.test(value)) ||\n      value in (G.colors || {}))\n  )\n}\n", "import { raf } from '@react-spring/rafz'\nimport { onResize } from '../resize'\n\nimport { ScrollInfo, ScrollHandler } from './ScrollHandler'\n\nexport type OnScrollCallback = (info: ScrollInfo) => void\n\nexport type OnScrollOptions = {\n  /**\n   * The root container to measure against\n   */\n  container?: HTMLElement\n}\n\nconst scrollListeners = new WeakMap<Element, () => boolean>()\nconst resizeListeners = new WeakMap<Element, VoidFunction>()\nconst onScrollHandlers = new WeakMap<Element, Set<ScrollHandler>>()\n\nconst getTarget = (container: HTMLElement) =>\n  container === document.documentElement ? window : container\n\nexport const onScroll = (\n  callback: OnScrollCallback,\n  { container = document.documentElement }: OnScrollOptions = {}\n) => {\n  /**\n   * get the current handlers for the target\n   */\n  let containerHandlers = onScrollHandlers.get(container)\n\n  /**\n   * If there aren't any handlers then create a new set.\n   */\n  if (!containerHandlers) {\n    containerHandlers = new Set()\n    onScrollHandlers.set(container, containerHandlers)\n  }\n\n  /**\n   * Create a new ScrollHandler class and add it to the set.\n   */\n  const containerHandler = new ScrollHandler(callback, container)\n  containerHandlers.add(containerHandler)\n\n  /**\n   * If there are no scrollListeners then we need to make them\n   */\n  if (!scrollListeners.has(container)) {\n    /**\n     * Return true so RAFZ continues to run it\n     */\n    const listener = () => {\n      containerHandlers?.forEach(handler => handler.advance())\n      return true\n    }\n\n    scrollListeners.set(container, listener)\n\n    const target = getTarget(container)\n\n    /**\n     * Add resize handlers so we can correctly calculate the\n     * scroll position on changes\n     */\n    window.addEventListener('resize', listener, { passive: true })\n\n    if (container !== document.documentElement) {\n      resizeListeners.set(container, onResize(listener, { container }))\n    }\n\n    /**\n     * Add the actual scroll listener\n     */\n    target.addEventListener('scroll', listener, { passive: true })\n  }\n\n  /**\n   * Start animation loop\n   */\n  const animateScroll = scrollListeners.get(container)!\n  raf(animateScroll)\n\n  return () => {\n    /**\n     * Clear it on cleanup\n     */\n    raf.cancel(animateScroll)\n\n    /**\n     * Check if we even have any handlers for this container.\n     */\n    const containerHandlers = onScrollHandlers.get(container)\n    if (!containerHandlers) return\n\n    containerHandlers.delete(containerHandler)\n\n    if (containerHandlers.size) return\n\n    /**\n     * If no more handlers, remove the scroll listener too.\n     */\n    const listener = scrollListeners.get(container)\n    scrollListeners.delete(container)\n\n    if (listener) {\n      getTarget(container).removeEventListener('scroll', listener)\n      window.removeEventListener('resize', listener)\n\n      resizeListeners.get(container)?.()\n    }\n  }\n}\n", "import type { OnResizeCallback } from '.'\n\nlet observer: ResizeObserver | undefined\n\nconst resizeHandlers = new WeakMap<Element, Set<OnResizeCallback>>()\n\nconst handleObservation = (entries: ResizeObserverEntry[]) =>\n  entries.forEach(({ target, contentRect }) => {\n    return resizeHandlers.get(target)?.forEach(handler => handler(contentRect))\n  })\n\nexport function resizeElement(handler: OnResizeCallback, target: HTMLElement) {\n  /**\n   * If there's a resize observer in the ENV then use that too.\n   */\n  if (!observer) {\n    if (typeof ResizeObserver !== 'undefined') {\n      observer = new ResizeObserver(handleObservation)\n    }\n  }\n\n  /**\n   * Fetch the handlers for the target\n   */\n  let elementHandlers = resizeHandlers.get(target)\n\n  /**\n   * If there are no handlers create a new set for the target\n   * and then add to the map\n   */\n  if (!elementHandlers) {\n    elementHandlers = new Set()\n    resizeHandlers.set(target, elementHandlers)\n  }\n\n  /**\n   * Add the handler to the target's set\n   * and observe the target if possible.\n   */\n  elementHandlers.add(handler)\n\n  if (observer) {\n    observer.observe(target)\n  }\n\n  /**\n   * Cleanup the event handlers and potential observers.\n   */\n  return () => {\n    const elementHandlers = resizeHandlers.get(target)\n\n    if (!elementHandlers) return\n\n    elementHandlers.delete(handler)\n\n    if (!elementHandlers.size && observer) {\n      observer.unobserve(target)\n    }\n  }\n}\n", "import type { OnResizeCallback } from '.'\n\nconst listeners = new Set<OnResizeCallback>()\n\nlet cleanupWindowResizeHandler: VoidFunction | undefined\n\nconst createResizeHandler = () => {\n  const handleResize = () => {\n    listeners.forEach(callback =>\n      callback({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    )\n  }\n\n  window.addEventListener('resize', handleResize)\n\n  return () => {\n    window.removeEventListener('resize', handleResize)\n  }\n}\n\nexport const resizeWindow = (callback: OnResizeCallback) => {\n  listeners.add(callback)\n\n  if (!cleanupWindowResizeHandler) {\n    cleanupWindowResizeHandler = createResizeHandler()\n  }\n\n  return () => {\n    listeners.delete(callback)\n\n    if (!listeners.size && cleanupWindowResizeHandler) {\n      cleanupWindowResizeHandler()\n      cleanupWindowResizeHandler = undefined\n    }\n  }\n}\n", "import { resizeElement } from './resizeElement'\nimport { resizeWindow } from './resizeWindow'\n\nexport interface OnResizeOptions {\n  container?: HTMLElement\n}\n\nexport type OnResizeCallback = (\n  rect: Pick<DOMRectReadOnly, 'width' | 'height'> &\n    Partial<Omit<DOMRectReadOnly, 'width' | 'height'>>\n) => void\n\nexport const onResize = (\n  callback: OnResizeCallback,\n  { container = document.documentElement }: OnResizeOptions = {}\n): (() => void) => {\n  if (container === document.documentElement) {\n    return resizeWindow(callback)\n  } else {\n    return resizeElement(callback, container)\n  }\n}\n", "export const progress = (min: number, max: number, value: number) =>\n  max - min === 0 ? 1 : (value - min) / (max - min)\n", "import { progress } from '../../progress'\n\nimport type { OnScrollCallback } from './index'\n\nconst SCROLL_KEYS = {\n  x: {\n    length: 'Width',\n    position: 'Left',\n  },\n  y: {\n    length: 'Height',\n    position: 'Top',\n  },\n} as const\n\n/**\n * Whilst user's may not need the scrollLength, it's easier to return\n * the whole state we're storing and let them pick what they want.\n */\nexport interface ScrollAxis {\n  current: number\n  progress: number\n  scrollLength: number\n}\n\nexport interface ScrollInfo {\n  time: number\n  x: ScrollAxis\n  y: ScrollAxis\n}\n\n/**\n * Why use a class? More extensible in the future.\n */\nexport class ScrollHandler {\n  protected callback: OnScrollCallback\n  protected container: HTMLElement\n  protected info: ScrollInfo\n\n  constructor(callback: OnScrollCallback, container: HTMLElement) {\n    this.callback = callback\n    this.container = container\n\n    this.info = {\n      time: 0,\n      x: this.createAxis(),\n      y: this.createAxis(),\n    }\n  }\n\n  private createAxis = (): ScrollAxis => ({\n    current: 0,\n    progress: 0,\n    scrollLength: 0,\n  })\n\n  private updateAxis = (axisName: keyof Pick<ScrollInfo, 'x' | 'y'>) => {\n    const axis = this.info[axisName]\n    const { length, position } = SCROLL_KEYS[axisName]\n\n    axis.current = this.container[`scroll${position}`]\n    axis.scrollLength =\n      this.container[`scroll${length}`] - this.container[`client${length}`]\n\n    axis.progress = progress(0, axis.scrollLength, axis.current)\n  }\n\n  private update = () => {\n    this.updateAxis('x')\n    this.updateAxis('y')\n  }\n\n  private sendEvent = () => {\n    this.callback(this.info)\n  }\n\n  advance = () => {\n    this.update()\n    this.sendEvent()\n  }\n}\n", "import { useRef } from 'react'\n\ntype Init<T> = () => T\n\n/**\n * Creates a constant value over the lifecycle of a component.\n */\nexport function useConstant<T>(init: Init<T>) {\n  const ref = useRef<T | null>(null)\n\n  if (ref.current === null) {\n    ref.current = init()\n  }\n\n  return ref.current\n}\n", "import { useState } from 'react'\nimport { useIsMounted } from './useIsMounted'\n\n/** Return a function that re-renders this component, if still mounted */\nexport function useForceUpdate() {\n  const update = useState<any>()[1]\n  const isMounted = useIsMounted()\n  return () => {\n    if (isMounted.current) {\n      update(Math.random())\n    }\n  }\n}\n", "import { useRef } from 'react'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\nexport const useIsMounted = () => {\n  const isMounted = useRef(false)\n  useIsomorphicLayoutEffect(() => {\n    isMounted.current = true\n\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n", "import { useEffect, useLayoutEffect } from 'react'\n\nimport { isSSR } from '../helpers'\n\n/**\n * Use this to read layout from the DOM and synchronously\n * re-render if the isSSR returns true. Updates scheduled\n * inside `useIsomorphicLayoutEffect` will be flushed\n * synchronously in the browser, before the browser has\n * a chance to paint.\n */\nexport const useIsomorphicLayoutEffect = isSSR() ? useEffect : useLayoutEffect\n", "import { useEffect, useRef, useState } from 'react'\n\ntype Cache<T> = {\n  inputs?: any[]\n  result?: T\n}\n\n// TODO: remove once merged (https://github.com/alexreardon/use-memo-one/pull/10)\nexport function useMemoOne<T>(getResult: () => T, inputs?: any[]): T {\n  const [initial] = useState(\n    (): Cache<T> => ({\n      inputs,\n      result: getResult(),\n    })\n  )\n\n  const committed = useRef<Cache<T>>()\n  const prevCache = committed.current\n\n  let cache = prevCache\n  if (cache) {\n    const useCache = Boolean(\n      inputs && cache.inputs && areInputsEqual(inputs, cache.inputs)\n    )\n    if (!useCache) {\n      cache = {\n        inputs,\n        result: getResult(),\n      }\n    }\n  } else {\n    cache = initial\n  }\n\n  useEffect(() => {\n    committed.current = cache\n    if (prevCache == initial) {\n      initial.inputs = initial.result = undefined\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cache])\n\n  return cache.result!\n}\n\nfunction areInputsEqual(next: any[], prev: any[]) {\n  if (next.length !== prev.length) {\n    return false\n  }\n  for (let i = 0; i < next.length; i++) {\n    if (next[i] !== prev[i]) {\n      return false\n    }\n  }\n  return true\n}\n", "/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, EffectCallback } from 'react'\n\nexport const useOnce = (effect: EffectCallback) => useEffect(effect, emptyDeps)\n\nconst emptyDeps: any[] = []\n", "import { useEffect, useRef } from 'react'\n\n/** Use a value from the previous render */\nexport function usePrev<T>(value: T): T | undefined {\n  const prevRef = useRef<any>()\n  useEffect(() => {\n    prevRef.current = value\n  })\n  return prevRef.current\n}\n", "import { useState } from 'react'\n\nimport { assign } from '../globals'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\n/**\n * Returns `boolean` or `null`, used to automatically\n * set skipAnimations to the value of the user's\n * `prefers-reduced-motion` query.\n *\n * The return value, post-effect, is the value of their prefered setting\n */\nexport const useReducedMotion = () => {\n  const [reducedMotion, setReducedMotion] = useState<boolean | null>(null)\n\n  useIsomorphicLayoutEffect(() => {\n    const mql = window.matchMedia('(prefers-reduced-motion)')\n\n    const handleMediaChange = (e: MediaQueryListEvent | MediaQueryList) => {\n      setReducedMotion(e.matches)\n\n      assign({\n        skipAnimation: e.matches,\n      })\n    }\n\n    handleMediaChange(mql)\n\n    if (mql.addEventListener) {\n      mql.addEventListener('change', handleMediaChange)\n    } else {\n      mql.addListener(handleMediaChange)\n    }\n\n    return () => {\n      if (mql.removeEventListener) {\n        mql.removeEventListener('change', handleMediaChange)\n      } else {\n        mql.removeListener(handleMediaChange)\n      }\n    }\n  }, [])\n\n  return reducedMotion\n}\n", "import * as Globals from './globals'\nexport { Globals }\n\nexport * from './FrameLoop'\nexport * from './clamp'\nexport * from './colors'\nexport * from './colorToRgba'\nexport * from './colorMatchers'\nexport * from './createInterpolator'\nexport * from './easings'\nexport * from './stringInterpolation'\nexport * from './deprecations'\nexport * from './helpers'\nexport * from './isAnimatedString'\n/**\n * Should these be moved to a DOM only\n * package to avoid native issues?\n */\nexport * from './dom-events/scroll'\nexport * from './dom-events/resize'\n\nexport * from './hooks/useConstant'\nexport * from './hooks/useForceUpdate'\nexport * from './hooks/useMemoOne'\nexport * from './hooks/useOnce'\nexport * from './hooks/usePrev'\nexport * from './hooks/useIsomorphicLayoutEffect'\nexport * from './hooks/useReducedMotion'\n\nexport * from './fluids'\n\nexport { raf } from '@react-spring/rafz'\nexport type { Timeout } from '@react-spring/rafz'\n", "import { each, useIsomorphicLayoutEffect } from '@react-spring/shared'\nimport { SpringRef } from '../SpringRef'\nimport { callProp } from '../helpers'\n\n/**\n * Used to orchestrate animation hooks in sequence with one another.\n * This is best used when you specifically want to orchestrate different\n * types of animation hook e.g. `useSpring` & `useTransition` in\n * sequence as opposed to multiple `useSpring` hooks.\n *\n *\n * ```jsx\n * export const MyComponent = () => {\n *  //...\n *  useChain([springRef, transitionRef])\n *  //...\n * }\n * ```\n *\n * @param refs – An array of `SpringRef`s.\n * @param timeSteps – Optional array of numbers that define the\n * delay between each animation from 0-1. The length should correlate\n * to the length of `refs`.\n * @param timeFrame – Optional number that defines the total duration\n *\n * @public\n */\nexport function useChain(\n  refs: ReadonlyArray<SpringRef>,\n  timeSteps?: number[],\n  timeFrame = 1000\n) {\n  useIsomorphicLayoutEffect(() => {\n    if (timeSteps) {\n      let prevDelay = 0\n      each(refs, (ref, i) => {\n        const controllers = ref.current\n        if (controllers.length) {\n          let delay = timeFrame * timeSteps[i]\n\n          // Use the previous delay if none exists.\n          if (isNaN(delay)) delay = prevDelay\n          else prevDelay = delay\n\n          each(controllers, ctrl => {\n            each(ctrl.queue, props => {\n              // memoizing stops recursion https://github.com/pmndrs/react-spring/issues/1367\n              const memoizedDelayProp = props.delay\n              props.delay = key => delay + callProp(memoizedDelayProp || 0, key)\n            })\n          })\n\n          ref.start()\n        }\n      })\n    } else {\n      let p: Promise<any> = Promise.resolve()\n      each(refs, ref => {\n        const controllers = ref.current\n        if (controllers.length) {\n          // Take the queue of each controller\n          const queues = controllers.map(ctrl => {\n            const q = ctrl.queue\n            ctrl.queue = []\n            return q\n          })\n\n          // Apply the queue when the previous ref stops animating\n          p = p.then(() => {\n            each(controllers, (ctrl, i) =>\n              each(queues[i] || [], update => ctrl.queue.push(update))\n            )\n            return Promise.all(ref.start())\n          })\n        }\n      })\n    }\n  })\n}\n", "import {\n  is,\n  toArray,\n  eachProp,\n  getFluidValue,\n  isAnimatedString,\n  FluidValue,\n  Globals as G,\n} from '@react-spring/shared'\nimport { AnyFn, OneOrMore, Lookup } from '@react-spring/types'\nimport { ReservedProps, ForwardProps, InferTo } from './types'\nimport type { Controller } from './Controller'\nimport type { SpringRef } from './SpringRef'\n\nexport function callProp<T>(\n  value: T,\n  ...args: T extends AnyFn ? Parameters<T> : unknown[]\n): T extends AnyFn<any, infer U> ? U : T {\n  return is.fun(value) ? value(...args) : value\n}\n\n/** Try to coerce the given value into a boolean using the given key */\nexport const matchProp = (\n  value: boolean | OneOrMore<string> | ((key: any) => boolean) | undefined,\n  key: string | undefined\n) =>\n  value === true ||\n  !!(\n    key &&\n    value &&\n    (is.fun(value) ? value(key) : toArray(value).includes(key))\n  )\n\nexport const resolveProp = <T>(\n  prop: T | Lookup<T> | undefined,\n  key: string | undefined\n) => (is.obj(prop) ? key && (prop as any)[key] : prop)\n\nexport const concatFn = <T extends AnyFn>(first: T | undefined, last: T) =>\n  first ? (...args: Parameters<T>) => (first(...args), last(...args)) : last\n\n/** Returns `true` if the given prop is having its default value set. */\nexport const hasDefaultProp = <T extends Lookup>(props: T, key: keyof T) =>\n  !is.und(getDefaultProp(props, key))\n\n/** Get the default value being set for the given `key` */\nexport const getDefaultProp = <T extends Lookup, P extends keyof T>(\n  props: T,\n  key: P\n): T[P] =>\n  props.default === true\n    ? props[key]\n    : props.default\n      ? props.default[key]\n      : undefined\n\nconst noopTransform = (value: any) => value\n\n/**\n * Extract the default props from an update.\n *\n * When the `default` prop is falsy, this function still behaves as if\n * `default: true` was used. The `default` prop is always respected when\n * truthy.\n */\nexport const getDefaultProps = <T extends Lookup>(\n  props: Lookup,\n  transform: (value: any, key: string) => any = noopTransform\n): T => {\n  let keys: readonly string[] = DEFAULT_PROPS\n  if (props.default && props.default !== true) {\n    props = props.default\n    keys = Object.keys(props)\n  }\n  const defaults: any = {}\n  for (const key of keys) {\n    const value = transform(props[key], key)\n    if (!is.und(value)) {\n      defaults[key] = value\n    }\n  }\n  return defaults\n}\n\n/**\n * These props are implicitly used as defaults when defined in a\n * declarative update (eg: render-based) or any update with `default: true`.\n *\n * Use `default: {}` or `default: false` to opt-out of these implicit defaults\n * for any given update.\n *\n * Note: These are not the only props with default values. For example, the\n * `pause`, `cancel`, and `immediate` props. But those must be updated with\n * the object syntax (eg: `default: { immediate: true }`).\n */\nexport const DEFAULT_PROPS = [\n  'config',\n  'onProps',\n  'onStart',\n  'onChange',\n  'onPause',\n  'onResume',\n  'onRest',\n] as const\n\nconst RESERVED_PROPS: {\n  [key: string]: 1 | undefined\n} = {\n  config: 1,\n  from: 1,\n  to: 1,\n  ref: 1,\n  loop: 1,\n  reset: 1,\n  pause: 1,\n  cancel: 1,\n  reverse: 1,\n  immediate: 1,\n  default: 1,\n  delay: 1,\n  onProps: 1,\n  onStart: 1,\n  onChange: 1,\n  onPause: 1,\n  onResume: 1,\n  onRest: 1,\n  onResolve: 1,\n\n  // Transition props\n  items: 1,\n  trail: 1,\n  sort: 1,\n  expires: 1,\n  initial: 1,\n  enter: 1,\n  update: 1,\n  leave: 1,\n  children: 1,\n  onDestroyed: 1,\n\n  // Internal props\n  keys: 1,\n  callId: 1,\n  parentId: 1,\n}\n\n/**\n * Extract any properties whose keys are *not* reserved for customizing your\n * animations. All hooks use this function, which means `useTransition` props\n * are reserved for `useSpring` calls, etc.\n */\nfunction getForwardProps<Props extends ReservedProps>(\n  props: Props\n): ForwardProps<Props> | undefined {\n  const forward: any = {}\n\n  let count = 0\n  eachProp(props, (value, prop) => {\n    if (!RESERVED_PROPS[prop]) {\n      forward[prop] = value\n      count++\n    }\n  })\n\n  if (count) {\n    return forward\n  }\n}\n\n/**\n * Clone the given `props` and move all non-reserved props\n * into the `to` prop.\n */\nexport function inferTo<T extends object>(props: T): InferTo<T> {\n  const to = getForwardProps(props)\n  if (to) {\n    const out: any = { to }\n    eachProp(props, (val, key) => key in to || (out[key] = val))\n    return out\n  }\n  return { ...props } as any\n}\n\n// Compute the goal value, converting \"red\" to \"rgba(255, 0, 0, 1)\" in the process\nexport function computeGoal<T>(value: T | FluidValue<T>): T {\n  value = getFluidValue(value)\n  return is.arr(value)\n    ? value.map(computeGoal)\n    : isAnimatedString(value)\n      ? (G.createStringInterpolator({\n          range: [0, 1],\n          output: [value, value] as any,\n        })(1) as any)\n      : value\n}\n\nexport function hasProps(props: object) {\n  for (const _ in props) return true\n  return false\n}\n\nexport function isAsyncTo(to: any) {\n  return is.fun(to) || (is.arr(to) && is.obj(to[0]))\n}\n\n/** Detach `ctrl` from `ctrl.ref` and (optionally) the given `ref` */\nexport function detachRefs(ctrl: Controller, ref?: SpringRef) {\n  ctrl.ref?.delete(ctrl)\n  ref?.delete(ctrl)\n}\n\n/** Replace `ctrl.ref` with the given `ref` (if defined) */\nexport function replaceRef(ctrl: Controller, ref?: SpringRef) {\n  if (ref && ctrl.ref !== ref) {\n    ctrl.ref?.delete(ctrl)\n    ref.add(ctrl)\n    ctrl.ref = ref\n  }\n}\n", "import { Lookup, Remap } from '@react-spring/types'\nimport { is } from '@react-spring/shared'\n\nimport { ControllerUpdate, PickAnimated, SpringValues } from '../types'\nimport { Valid } from '../types/common'\nimport { SpringRef } from '../SpringRef'\nimport { useSprings } from './useSprings'\n\n/**\n * The props that `useSpring` recognizes.\n */\nexport type UseSpringProps<Props extends object = any> = unknown &\n  PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? Remap<\n        ControllerUpdate<State> & {\n          /**\n           * Used to access the imperative API.\n           *\n           * When defined, the render animation won't auto-start.\n           */\n          ref?: SpringRef<State>\n        }\n      >\n    : never\n  : never\n\n/**\n * The `props` function is only called on the first render, unless\n * `deps` change (when defined). State is inferred from forward props.\n */\nexport function useSpring<Props extends object>(\n  props:\n    | Function\n    | (() => (Props & Valid<Props, UseSpringProps<Props>>) | UseSpringProps),\n  deps?: readonly any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [SpringValues<State>, SpringRef<State>]\n    : never\n  : never\n\n/**\n * Updated on every render, with state inferred from forward props.\n */\nexport function useSpring<Props extends object>(\n  props: (Props & Valid<Props, UseSpringProps<Props>>) | UseSpringProps\n): SpringValues<PickAnimated<Props>>\n\n/**\n * Updated only when `deps` change, with state inferred from forward props.\n */\nexport function useSpring<Props extends object>(\n  props: (Props & Valid<Props, UseSpringProps<Props>>) | UseSpringProps,\n  deps: readonly any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [SpringValues<State>, SpringRef<State>]\n    : never\n  : never\n\n/** @internal */\nexport function useSpring(props: any, deps?: readonly any[]) {\n  const isFn = is.fun(props)\n  const [[values], ref] = useSprings(\n    1,\n    isFn ? props : [props],\n    isFn ? deps || [] : deps\n  )\n  return isFn || arguments.length == 2 ? [values, ref] : values\n}\n", "import { useContext, useMemo, useRef } from 'react'\nimport { Lookup } from '@react-spring/types'\nimport {\n  is,\n  each,\n  usePrev,\n  useOnce,\n  useForceUpdate,\n  useIsomorphicLayoutEffect,\n} from '@react-spring/shared'\n\nimport {\n  ControllerFlushFn,\n  ControllerUpdate,\n  PickAnimated,\n  SpringValues,\n} from '../types'\nimport { UseSpringProps } from './useSpring'\nimport { declareUpdate } from '../SpringValue'\nimport {\n  Controller,\n  getSprings,\n  flushUpdateQueue,\n  setSprings,\n} from '../Controller'\nimport { hasProps, detachRefs, replaceRef } from '../helpers'\nimport { SpringContext } from '../SpringContext'\nimport { SpringRef } from '../SpringRef'\nimport type { SpringRef as SpringRefType } from '../SpringRef'\n\nexport type UseSpringsProps<State extends Lookup = Lookup> = unknown &\n  ControllerUpdate<State> & {\n    ref?: SpringRefType<State>\n  }\n\n/**\n * When the `deps` argument exists, the `props` function is called whenever\n * the `deps` change on re-render.\n *\n * Without the `deps` argument, the `props` function is only called once.\n */\nexport function useSprings<Props extends UseSpringProps>(\n  length: number,\n  props: (i: number, ctrl: Controller) => Props,\n  deps?: readonly any[]\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup<any>\n    ? [SpringValues<State>[], SpringRefType<State>]\n    : never\n  : never\n\n/**\n * Animations are updated on re-render.\n */\nexport function useSprings<Props extends UseSpringsProps>(\n  length: number,\n  props: Props[] & UseSpringsProps<PickAnimated<Props>>[]\n): SpringValues<PickAnimated<Props>>[]\n\n/**\n * When the `deps` argument exists, you get the `update` and `stop` function.\n */\nexport function useSprings<Props extends UseSpringsProps>(\n  length: number,\n  props: Props[] & UseSpringsProps<PickAnimated<Props>>[],\n  deps: readonly any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup<any>\n    ? [SpringValues<State>[], SpringRefType<State>]\n    : never\n  : never\n\n/** @internal */\nexport function useSprings(\n  length: number,\n  props: any[] | ((i: number, ctrl: Controller) => any),\n  deps?: readonly any[]\n): any {\n  const propsFn = is.fun(props) && props\n  if (propsFn && !deps) deps = []\n\n  // Create a local ref if a props function or deps array is ever passed.\n  const ref = useMemo(\n    () => (propsFn || arguments.length == 3 ? SpringRef() : void 0),\n    []\n  )\n\n  interface State {\n    // The controllers used for applying updates.\n    ctrls: Controller[]\n    // The queue of changes to make on commit.\n    queue: Array<() => void>\n    // The flush function used by controllers.\n    flush: ControllerFlushFn\n  }\n\n  // Set to 0 to prevent sync flush.\n  const layoutId = useRef(0)\n  const forceUpdate = useForceUpdate()\n\n  // State is updated on commit.\n  const state = useMemo(\n    (): State => ({\n      ctrls: [],\n      queue: [],\n      flush(ctrl, updates) {\n        const springs = getSprings(ctrl, updates)\n\n        // Flushing is postponed until the component's commit phase\n        // if a spring was created since the last commit.\n        const canFlushSync =\n          layoutId.current > 0 &&\n          !state.queue.length &&\n          !Object.keys(springs).some(key => !ctrl.springs[key])\n\n        return canFlushSync\n          ? flushUpdateQueue(ctrl, updates)\n          : new Promise<any>(resolve => {\n              setSprings(ctrl, springs)\n              state.queue.push(() => {\n                resolve(flushUpdateQueue(ctrl, updates))\n              })\n              forceUpdate()\n            })\n      },\n    }),\n    []\n  )\n\n  const ctrls = useRef([...state.ctrls])\n  const updates: any[] = []\n\n  // Cache old controllers to dispose in the commit phase.\n  const prevLength = usePrev(length) || 0\n\n  // Create new controllers when \"length\" increases, and destroy\n  // the affected controllers when \"length\" decreases.\n  useMemo(() => {\n    // Clean up any unused controllers\n    each(ctrls.current.slice(length, prevLength), ctrl => {\n      detachRefs(ctrl, ref)\n      ctrl.stop(true)\n    })\n    ctrls.current.length = length\n\n    declareUpdates(prevLength, length)\n  }, [length])\n\n  // Update existing controllers when \"deps\" are changed.\n  useMemo(() => {\n    declareUpdates(0, Math.min(prevLength, length))\n  }, deps)\n\n  /** Fill the `updates` array with declarative updates for the given index range. */\n  function declareUpdates(startIndex: number, endIndex: number) {\n    for (let i = startIndex; i < endIndex; i++) {\n      const ctrl =\n        ctrls.current[i] ||\n        (ctrls.current[i] = new Controller(null, state.flush))\n\n      const update: UseSpringProps<any> = propsFn\n        ? propsFn(i, ctrl)\n        : (props as any)[i]\n\n      if (update) {\n        updates[i] = declareUpdate(update)\n      }\n    }\n  }\n\n  // New springs are created during render so users can pass them to\n  // their animated components, but new springs aren't cached until the\n  // commit phase (see the `useIsomorphicLayoutEffect` callback below).\n  const springs = ctrls.current.map((ctrl, i) => getSprings(ctrl, updates[i]))\n\n  const context = useContext(SpringContext)\n  const prevContext = usePrev(context)\n  const hasContext = context !== prevContext && hasProps(context)\n\n  useIsomorphicLayoutEffect(() => {\n    layoutId.current++\n\n    // Replace the cached controllers.\n    state.ctrls = ctrls.current\n\n    // Flush the commit queue.\n    const { queue } = state\n    if (queue.length) {\n      state.queue = []\n      each(queue, cb => cb())\n    }\n\n    // Update existing controllers.\n    each(ctrls.current, (ctrl, i) => {\n      // Attach the controller to the local ref.\n      ref?.add(ctrl)\n\n      // Update the default props.\n      if (hasContext) {\n        ctrl.start({ default: context })\n      }\n\n      // Apply updates created during render.\n      const update = updates[i]\n      if (update) {\n        // Update the injected ref if needed.\n        replaceRef(ctrl, update.ref)\n\n        // When an injected ref exists, the update is postponed\n        // until the ref has its `start` method called.\n        if (ctrl.ref) {\n          ctrl.queue.push(update)\n        } else {\n          ctrl.start(update)\n        }\n      }\n    })\n  })\n\n  // Cancel the animations of all controllers on unmount.\n  useOnce(() => () => {\n    each(state.ctrls, ctrl => ctrl.stop(true))\n  })\n\n  // Return a deep copy of the `springs` array so the caller can\n  // safely mutate it during render.\n  const values = springs.map(x => ({ ...x }))\n\n  return ref ? [values, ref] : values\n}\n", "import {\n  is,\n  raf,\n  each,\n  isEqual,\n  toArray,\n  eachProp,\n  frameLoop,\n  flushCalls,\n  getFluidValue,\n  isAnimatedString,\n  FluidValue,\n  Globals as G,\n  callFluidObservers,\n  hasFluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n  getFluidObservers,\n} from '@react-spring/shared'\nimport {\n  Animated,\n  AnimatedValue,\n  AnimatedString,\n  getPayload,\n  getAnimated,\n  setAnimated,\n  getAnimatedType,\n} from '@react-spring/animated'\nimport { Lookup } from '@react-spring/types'\n\nimport { Animation } from './Animation'\nimport { mergeConfig } from './AnimationConfig'\nimport { scheduleProps } from './scheduleProps'\nimport { runAsync, RunAsyncState, RunAsyncProps, stopAsync } from './runAsync'\nimport {\n  callProp,\n  computeGoal,\n  matchProp,\n  inferTo,\n  getDefaultProps,\n  getDefaultProp,\n  isAsyncTo,\n  resolveProp,\n} from './helpers'\nimport { FrameValue, isFrameValue } from './FrameValue'\nimport {\n  isAnimating,\n  isPaused,\n  setPausedBit,\n  hasAnimated,\n  setActiveBit,\n} from './SpringPhase'\nimport {\n  AnimationRange,\n  AnimationResolver,\n  EventKey,\n  PickEventFns,\n} from './types/internal'\nimport { AsyncResult, SpringUpdate, VelocityProp, SpringProps } from './types'\nimport {\n  getCombinedResult,\n  getCancelledResult,\n  getFinishedResult,\n  getNoopResult,\n} from './AnimationResult'\n\ndeclare const console: any\n\ninterface DefaultSpringProps<T>\n  extends Pick<SpringProps<T>, 'pause' | 'cancel' | 'immediate' | 'config'>,\n    PickEventFns<SpringProps<T>> {}\n\n/**\n * Only numbers, strings, and arrays of numbers/strings are supported.\n * Non-animatable strings are also supported.\n */\nexport class SpringValue<T = any> extends FrameValue<T> {\n  /** The property name used when `to` or `from` is an object. Useful when debugging too. */\n  key?: string\n\n  /** The animation state */\n  animation = new Animation<T>()\n\n  /** The queue of pending props */\n  queue?: SpringUpdate<T>[]\n\n  /** Some props have customizable default values */\n  defaultProps: DefaultSpringProps<T> = {}\n\n  /** The state for `runAsync` calls */\n  protected _state: RunAsyncState<SpringValue<T>> = {\n    paused: false,\n    delayed: false,\n    pauseQueue: new Set(),\n    resumeQueue: new Set(),\n    timeouts: new Set(),\n  }\n\n  /** The promise resolvers of pending `start` calls */\n  protected _pendingCalls = new Set<AnimationResolver<this>>()\n\n  /** The counter for tracking `scheduleProps` calls */\n  protected _lastCallId = 0\n\n  /** The last `scheduleProps` call that changed the `to` prop */\n  protected _lastToId = 0\n\n  protected _memoizedDuration = 0\n\n  constructor(from: Exclude<T, object>, props?: SpringUpdate<T>)\n  constructor(props?: SpringUpdate<T>)\n  constructor(arg1?: any, arg2?: any) {\n    super()\n    if (!is.und(arg1) || !is.und(arg2)) {\n      const props = is.obj(arg1) ? { ...arg1 } : { ...arg2, from: arg1 }\n      if (is.und(props.default)) {\n        props.default = true\n      }\n      this.start(props)\n    }\n  }\n\n  /** Equals true when not advancing on each frame. */\n  get idle() {\n    return !(isAnimating(this) || this._state.asyncTo) || isPaused(this)\n  }\n\n  get goal() {\n    return getFluidValue(this.animation.to) as T\n  }\n\n  get velocity(): VelocityProp<T> {\n    const node = getAnimated(this)!\n    return (\n      node instanceof AnimatedValue\n        ? node.lastVelocity || 0\n        : node.getPayload().map(node => node.lastVelocity || 0)\n    ) as any\n  }\n\n  /**\n   * When true, this value has been animated at least once.\n   */\n  get hasAnimated() {\n    return hasAnimated(this)\n  }\n\n  /**\n   * When true, this value has an unfinished animation,\n   * which is either active or paused.\n   */\n  get isAnimating() {\n    return isAnimating(this)\n  }\n\n  /**\n   * When true, all current and future animations are paused.\n   */\n  get isPaused() {\n    return isPaused(this)\n  }\n\n  /**\n   *\n   *\n   */\n  get isDelayed() {\n    return this._state.delayed\n  }\n\n  /** Advance the current animation by a number of milliseconds */\n  advance(dt: number) {\n    let idle = true\n    let changed = false\n\n    const anim = this.animation\n    let { toValues } = anim\n    const { config } = anim\n\n    const payload = getPayload(anim.to)\n    if (!payload && hasFluidValue(anim.to)) {\n      toValues = toArray(getFluidValue(anim.to)) as any\n    }\n\n    anim.values.forEach((node, i) => {\n      if (node.done) return\n\n      const to =\n        // Animated strings always go from 0 to 1.\n        node.constructor == AnimatedString\n          ? 1\n          : payload\n            ? payload[i].lastPosition\n            : toValues![i]\n\n      let finished = anim.immediate\n      let position = to\n\n      if (!finished) {\n        position = node.lastPosition\n\n        // Loose springs never move.\n        if (config.tension <= 0) {\n          node.done = true\n          return\n        }\n\n        let elapsed = (node.elapsedTime += dt)\n        const from = anim.fromValues[i]\n\n        const v0 =\n          node.v0 != null\n            ? node.v0\n            : (node.v0 = is.arr(config.velocity)\n                ? config.velocity[i]\n                : config.velocity)\n\n        let velocity: number\n\n        /** The smallest distance from a value before being treated like said value. */\n        /**\n         * TODO: make this value ~0.0001 by default in next breaking change\n         * for more info see – https://github.com/pmndrs/react-spring/issues/1389\n         */\n        const precision =\n          config.precision ||\n          (from == to ? 0.005 : Math.min(1, Math.abs(to - from) * 0.001))\n\n        // Duration easing\n        if (!is.und(config.duration)) {\n          let p = 1\n          if (config.duration > 0) {\n            /**\n             * Here we check if the duration has changed in the config\n             * and if so update the elapsed time to the percentage\n             * of completition so there is no jank in the animation\n             * https://github.com/pmndrs/react-spring/issues/1163\n             */\n            if (this._memoizedDuration !== config.duration) {\n              // update the memoized version to the new duration\n              this._memoizedDuration = config.duration\n\n              // if the value has started animating we need to update it\n              if (node.durationProgress > 0) {\n                // set elapsed time to be the same percentage of progress as the previous duration\n                node.elapsedTime = config.duration * node.durationProgress\n                // add the delta so the below updates work as expected\n                elapsed = node.elapsedTime += dt\n              }\n            }\n\n            // calculate the new progress\n            p = (config.progress || 0) + elapsed / this._memoizedDuration\n            // p is clamped between 0-1\n            p = p > 1 ? 1 : p < 0 ? 0 : p\n            // store our new progress\n            node.durationProgress = p\n          }\n\n          position = from + config.easing(p) * (to - from)\n          velocity = (position - node.lastPosition) / dt\n\n          finished = p == 1\n        }\n\n        // Decay easing\n        else if (config.decay) {\n          const decay = config.decay === true ? 0.998 : config.decay\n          const e = Math.exp(-(1 - decay) * elapsed)\n\n          position = from + (v0 / (1 - decay)) * (1 - e)\n          finished = Math.abs(node.lastPosition - position) <= precision\n\n          // derivative of position\n          velocity = v0 * e\n        }\n\n        // Spring easing\n        else {\n          velocity = node.lastVelocity == null ? v0 : node.lastVelocity\n\n          /** The velocity at which movement is essentially none */\n          const restVelocity = config.restVelocity || precision / 10\n\n          // Bouncing is opt-in (not to be confused with overshooting)\n          const bounceFactor = config.clamp ? 0 : config.bounce!\n          const canBounce = !is.und(bounceFactor)\n\n          /** When `true`, the value is increasing over time */\n          const isGrowing = from == to ? node.v0 > 0 : from < to\n\n          /** When `true`, the velocity is considered moving */\n          let isMoving!: boolean\n\n          /** When `true`, the velocity is being deflected or clamped */\n          let isBouncing = false\n\n          const step = 1 // 1ms\n          const numSteps = Math.ceil(dt / step)\n          for (let n = 0; n < numSteps; ++n) {\n            isMoving = Math.abs(velocity) > restVelocity\n\n            if (!isMoving) {\n              finished = Math.abs(to - position) <= precision\n              if (finished) {\n                break\n              }\n            }\n\n            if (canBounce) {\n              isBouncing = position == to || position > to == isGrowing\n\n              // Invert the velocity with a magnitude, or clamp it.\n              if (isBouncing) {\n                velocity = -velocity * bounceFactor\n                position = to\n              }\n            }\n\n            const springForce = -config.tension * 0.000001 * (position - to)\n            const dampingForce = -config.friction * 0.001 * velocity\n            const acceleration = (springForce + dampingForce) / config.mass // pt/ms^2\n\n            velocity = velocity + acceleration * step // pt/ms\n            position = position + velocity * step\n          }\n        }\n\n        node.lastVelocity = velocity\n\n        if (Number.isNaN(position)) {\n          console.warn(`Got NaN while animating:`, this)\n          finished = true\n        }\n      }\n\n      // Parent springs must finish before their children can.\n      if (payload && !payload[i].done) {\n        finished = false\n      }\n\n      if (finished) {\n        node.done = true\n      } else {\n        idle = false\n      }\n\n      if (node.setValue(position, config.round)) {\n        changed = true\n      }\n    })\n\n    const node = getAnimated(this)!\n    /**\n     * Get the node's current value, this will be different\n     * to anim.to when config.decay is true\n     */\n    const currVal = node.getValue()\n    if (idle) {\n      // get our final fluid val from the anim.to\n      const finalVal = getFluidValue(anim.to)\n      /**\n       * check if they're not equal, or if they're\n       * change and if there's no config.decay set\n       */\n      if ((currVal !== finalVal || changed) && !config.decay) {\n        // set the value to anim.to\n        node.setValue(finalVal)\n        this._onChange(finalVal)\n      } else if (changed && config.decay) {\n        /**\n         * if it's changed but there is a config.decay,\n         * just call _onChange with currrent value\n         */\n        this._onChange(currVal)\n      }\n      // call stop because the spring has stopped.\n      this._stop()\n    } else if (changed) {\n      /**\n       * if the spring has changed, but is not idle,\n       * just call the _onChange handler\n       */\n      this._onChange(currVal)\n    }\n  }\n\n  /** Set the current value, while stopping the current animation */\n  set(value: T | FluidValue<T>) {\n    raf.batchedUpdates(() => {\n      this._stop()\n\n      // These override the current value and goal value that may have\n      // been updated by `onRest` handlers in the `_stop` call above.\n      this._focus(value)\n      this._set(value)\n    })\n    return this\n  }\n\n  /**\n   * Freeze the active animation in time, as well as any updates merged\n   * before `resume` is called.\n   */\n  pause() {\n    this._update({ pause: true })\n  }\n\n  /** Resume the animation if paused. */\n  resume() {\n    this._update({ pause: false })\n  }\n\n  /** Skip to the end of the current animation. */\n  finish() {\n    if (isAnimating(this)) {\n      const { to, config } = this.animation\n      raf.batchedUpdates(() => {\n        // Ensure the \"onStart\" and \"onRest\" props are called.\n        this._onStart()\n\n        // Jump to the goal value, except for decay animations\n        // which have an undefined goal value.\n        if (!config.decay) {\n          this._set(to, false)\n        }\n\n        this._stop()\n      })\n    }\n    return this\n  }\n\n  /** Push props into the pending queue. */\n  update(props: SpringUpdate<T>) {\n    const queue = this.queue || (this.queue = [])\n    queue.push(props)\n    return this\n  }\n\n  /**\n   * Update this value's animation using the queue of pending props,\n   * and unpause the current animation (if one is frozen).\n   *\n   * When arguments are passed, a new animation is created, and the\n   * queued animations are left alone.\n   */\n  start(): AsyncResult<this>\n\n  start(props: SpringUpdate<T>): AsyncResult<this>\n\n  start(to: T, props?: SpringProps<T>): AsyncResult<this>\n\n  start(to?: any, arg2?: any) {\n    let queue: SpringUpdate<T>[]\n    if (!is.und(to)) {\n      queue = [is.obj(to) ? to : { ...arg2, to }]\n    } else {\n      queue = this.queue || []\n      this.queue = []\n    }\n\n    return Promise.all(\n      queue.map(props => {\n        const up = this._update(props)\n        return up\n      })\n    ).then(results => getCombinedResult(this, results))\n  }\n\n  /**\n   * Stop the current animation, and cancel any delayed updates.\n   *\n   * Pass `true` to call `onRest` with `cancelled: true`.\n   */\n  stop(cancel?: boolean) {\n    const { to } = this.animation\n\n    // The current value becomes the goal value.\n    this._focus(this.get())\n\n    stopAsync(this._state, cancel && this._lastCallId)\n    raf.batchedUpdates(() => this._stop(to, cancel))\n\n    return this\n  }\n\n  /** Restart the animation. */\n  reset() {\n    this._update({ reset: true })\n  }\n\n  /** @internal */\n  eventObserved(event: FrameValue.Event) {\n    if (event.type == 'change') {\n      this._start()\n    } else if (event.type == 'priority') {\n      this.priority = event.priority + 1\n    }\n  }\n\n  /**\n   * Parse the `to` and `from` range from the given `props` object.\n   *\n   * This also ensures the initial value is available to animated components\n   * during the render phase.\n   */\n  protected _prepareNode(props: {\n    to?: any\n    from?: any\n    reverse?: boolean\n    default?: any\n  }) {\n    const key = this.key || ''\n\n    let { to, from } = props\n\n    to = is.obj(to) ? to[key] : to\n    if (to == null || isAsyncTo(to)) {\n      to = undefined\n    }\n\n    from = is.obj(from) ? from[key] : from\n    if (from == null) {\n      from = undefined\n    }\n\n    // Create the range now to avoid \"reverse\" logic.\n    const range = { to, from }\n\n    // Before ever animating, this method ensures an `Animated` node\n    // exists and keeps its value in sync with the \"from\" prop.\n    if (!hasAnimated(this)) {\n      if (props.reverse) [to, from] = [from, to]\n\n      from = getFluidValue(from)\n      if (!is.und(from)) {\n        this._set(from)\n      }\n      // Use the \"to\" value if our node is undefined.\n      else if (!getAnimated(this)) {\n        this._set(to)\n      }\n    }\n\n    return range\n  }\n\n  /** Every update is processed by this method before merging. */\n  protected _update(\n    { ...props }: SpringProps<T>,\n    isLoop?: boolean\n  ): AsyncResult<SpringValue<T>> {\n    const { key, defaultProps } = this\n\n    // Update the default props immediately.\n    if (props.default)\n      Object.assign(\n        defaultProps,\n        getDefaultProps(props, (value, prop) =>\n          /^on/.test(prop) ? resolveProp(value, key) : value\n        )\n      )\n\n    mergeActiveFn(this, props, 'onProps')\n    sendEvent(this, 'onProps', props, this)\n\n    // Ensure the initial value can be accessed by animated components.\n    const range = this._prepareNode(props)\n\n    if (Object.isFrozen(this)) {\n      throw Error(\n        'Cannot animate a `SpringValue` object that is frozen. ' +\n          'Did you forget to pass your component to `animated(...)` before animating its props?'\n      )\n    }\n\n    const state = this._state\n\n    return scheduleProps(++this._lastCallId, {\n      key,\n      props,\n      defaultProps,\n      state,\n      actions: {\n        pause: () => {\n          if (!isPaused(this)) {\n            setPausedBit(this, true)\n            flushCalls(state.pauseQueue)\n            sendEvent(\n              this,\n              'onPause',\n              getFinishedResult(this, checkFinished(this, this.animation.to)),\n              this\n            )\n          }\n        },\n        resume: () => {\n          if (isPaused(this)) {\n            setPausedBit(this, false)\n            if (isAnimating(this)) {\n              this._resume()\n            }\n            flushCalls(state.resumeQueue)\n            sendEvent(\n              this,\n              'onResume',\n              getFinishedResult(this, checkFinished(this, this.animation.to)),\n              this\n            )\n          }\n        },\n        start: this._merge.bind(this, range),\n      },\n    }).then(result => {\n      if (props.loop && result.finished && !(isLoop && result.noop)) {\n        const nextProps = createLoopUpdate(props)\n        if (nextProps) {\n          return this._update(nextProps, true)\n        }\n      }\n      return result\n    })\n  }\n\n  /** Merge props into the current animation */\n  protected _merge(\n    range: AnimationRange<T>,\n    props: RunAsyncProps<SpringValue<T>>,\n    resolve: AnimationResolver<SpringValue<T>>\n  ): void {\n    // The \"cancel\" prop cancels all pending delays and it forces the\n    // active animation to stop where it is.\n    if (props.cancel) {\n      this.stop(true)\n      return resolve(getCancelledResult(this))\n    }\n\n    /** The \"to\" prop is defined. */\n    const hasToProp = !is.und(range.to)\n\n    /** The \"from\" prop is defined. */\n    const hasFromProp = !is.und(range.from)\n\n    // Avoid merging other props if implicitly prevented, except\n    // when both the \"to\" and \"from\" props are undefined.\n    if (hasToProp || hasFromProp) {\n      if (props.callId > this._lastToId) {\n        this._lastToId = props.callId\n      } else {\n        return resolve(getCancelledResult(this))\n      }\n    }\n\n    const { key, defaultProps, animation: anim } = this\n    const { to: prevTo, from: prevFrom } = anim\n    let { to = prevTo, from = prevFrom } = range\n\n    // Focus the \"from\" value if changing without a \"to\" value.\n    // For default updates, do this only if no \"to\" value exists.\n    if (hasFromProp && !hasToProp && (!props.default || is.und(to))) {\n      to = from\n    }\n\n    // Flip the current range if \"reverse\" is true.\n    if (props.reverse) [to, from] = [from, to]\n\n    /** The \"from\" value is changing. */\n    const hasFromChanged = !isEqual(from, prevFrom)\n\n    if (hasFromChanged) {\n      anim.from = from\n    }\n\n    // Coerce \"from\" into a static value.\n    from = getFluidValue(from)\n\n    /** The \"to\" value is changing. */\n    const hasToChanged = !isEqual(to, prevTo)\n\n    if (hasToChanged) {\n      this._focus(to)\n    }\n\n    /** The \"to\" prop is async. */\n    const hasAsyncTo = isAsyncTo(props.to)\n\n    const { config } = anim\n    const { decay, velocity } = config\n\n    // Reset to default velocity when goal values are defined.\n    if (hasToProp || hasFromProp) {\n      config.velocity = 0\n    }\n\n    // The \"runAsync\" function treats the \"config\" prop as a default,\n    // so we must avoid merging it when the \"to\" prop is async.\n    if (props.config && !hasAsyncTo) {\n      mergeConfig(\n        config,\n        callProp(props.config, key!),\n        // Avoid calling the same \"config\" prop twice.\n        props.config !== defaultProps.config\n          ? callProp(defaultProps.config, key!)\n          : void 0\n      )\n    }\n\n    // This instance might not have its Animated node yet. For example,\n    // the constructor can be given props without a \"to\" or \"from\" value.\n    let node = getAnimated(this)\n    if (!node || is.und(to)) {\n      return resolve(getFinishedResult(this, true))\n    }\n\n    /** When true, start at the \"from\" value. */\n    const reset =\n      // When `reset` is undefined, the `from` prop implies `reset: true`,\n      // except for declarative updates. When `reset` is defined, there\n      // must exist a value to animate from.\n      is.und(props.reset)\n        ? hasFromProp && !props.default\n        : !is.und(from) && matchProp(props.reset, key)\n\n    // The current value, where the animation starts from.\n    const value = reset ? (from as T) : this.get()\n\n    // The animation ends at this value, unless \"to\" is fluid.\n    const goal = computeGoal<any>(to)\n\n    // Only specific types can be animated to/from.\n    const isAnimatable = is.num(goal) || is.arr(goal) || isAnimatedString(goal)\n\n    // When true, the value changes instantly on the next frame.\n    const immediate =\n      !hasAsyncTo &&\n      (!isAnimatable ||\n        matchProp(defaultProps.immediate || props.immediate, key))\n\n    if (hasToChanged) {\n      const nodeType = getAnimatedType(to)\n      if (nodeType !== node.constructor) {\n        if (immediate) {\n          node = this._set(goal)!\n        } else\n          throw Error(\n            `Cannot animate between ${node.constructor.name} and ${nodeType.name}, as the \"to\" prop suggests`\n          )\n      }\n    }\n\n    // The type of Animated node for the goal value.\n    const goalType = node.constructor\n\n    // When the goal value is fluid, we don't know if its value\n    // will change before the next animation frame, so it always\n    // starts the animation to be safe.\n    let started = hasFluidValue(to)\n    let finished = false\n\n    if (!started) {\n      // When true, the current value has probably changed.\n      const hasValueChanged = reset || (!hasAnimated(this) && hasFromChanged)\n\n      // When the \"to\" value or current value are changed,\n      // start animating if not already finished.\n      if (hasToChanged || hasValueChanged) {\n        finished = isEqual(computeGoal(value), goal)\n        started = !finished\n      }\n\n      // Changing \"decay\" or \"velocity\" starts the animation.\n      if (\n        (!isEqual(anim.immediate, immediate) && !immediate) ||\n        !isEqual(config.decay, decay) ||\n        !isEqual(config.velocity, velocity)\n      ) {\n        started = true\n      }\n    }\n\n    // Was the goal value set to the current value while animating?\n    if (finished && isAnimating(this)) {\n      // If the first frame has passed, allow the animation to\n      // overshoot instead of stopping abruptly.\n      if (anim.changed && !reset) {\n        started = true\n      }\n      // Stop the animation before its first frame.\n      else if (!started) {\n        this._stop(prevTo)\n      }\n    }\n\n    if (!hasAsyncTo) {\n      // Make sure our \"toValues\" are updated even if our previous\n      // \"to\" prop is a fluid value whose current value is also ours.\n      if (started || hasFluidValue(prevTo)) {\n        anim.values = node.getPayload()\n        anim.toValues = hasFluidValue(to)\n          ? null\n          : goalType == AnimatedString\n            ? [1]\n            : toArray(goal)\n      }\n\n      if (anim.immediate != immediate) {\n        anim.immediate = immediate\n\n        // Ensure the immediate goal is used as from value.\n        if (!immediate && !reset) {\n          this._set(prevTo)\n        }\n      }\n\n      if (started) {\n        const { onRest } = anim\n\n        // Set the active handlers when an animation starts.\n        each(ACTIVE_EVENTS, type => mergeActiveFn(this, props, type))\n\n        const result = getFinishedResult(this, checkFinished(this, prevTo))\n        flushCalls(this._pendingCalls, result)\n        this._pendingCalls.add(resolve)\n\n        if (anim.changed)\n          raf.batchedUpdates(() => {\n            // Ensure `onStart` can be called after a reset.\n            anim.changed = !reset\n\n            // Call the active `onRest` handler from the interrupted animation.\n            onRest?.(result, this)\n\n            // Notify the default `onRest` of the reset, but wait for the\n            // first frame to pass before sending an `onStart` event.\n            if (reset) {\n              callProp(defaultProps.onRest, result)\n            }\n            // Call the active `onStart` handler here since the first frame\n            // has already passed, which means this is a goal update and not\n            // an entirely new animation.\n            else {\n              anim.onStart?.(result, this)\n            }\n          })\n      }\n    }\n\n    if (reset) {\n      this._set(value)\n    }\n\n    if (hasAsyncTo) {\n      resolve(runAsync(props.to, props, this._state, this))\n    }\n\n    // Start an animation\n    else if (started) {\n      this._start()\n    }\n\n    // Postpone promise resolution until the animation is finished,\n    // so that no-op updates still resolve at the expected time.\n    else if (isAnimating(this) && !hasToChanged) {\n      this._pendingCalls.add(resolve)\n    }\n\n    // Resolve our promise immediately.\n    else {\n      resolve(getNoopResult(value))\n    }\n  }\n\n  /** Update the `animation.to` value, which might be a `FluidValue` */\n  protected _focus(value: T | FluidValue<T>) {\n    const anim = this.animation\n    if (value !== anim.to) {\n      if (getFluidObservers(this)) {\n        this._detach()\n      }\n      anim.to = value\n      if (getFluidObservers(this)) {\n        this._attach()\n      }\n    }\n  }\n\n  protected _attach() {\n    let priority = 0\n\n    const { to } = this.animation\n    if (hasFluidValue(to)) {\n      addFluidObserver(to, this)\n      if (isFrameValue(to)) {\n        priority = to.priority + 1\n      }\n    }\n\n    this.priority = priority\n  }\n\n  protected _detach() {\n    const { to } = this.animation\n    if (hasFluidValue(to)) {\n      removeFluidObserver(to, this)\n    }\n  }\n\n  /**\n   * Update the current value from outside the frameloop,\n   * and return the `Animated` node.\n   */\n  protected _set(arg: T | FluidValue<T>, idle = true): Animated | undefined {\n    const value = getFluidValue(arg)\n    if (!is.und(value)) {\n      const oldNode = getAnimated(this)\n      if (!oldNode || !isEqual(value, oldNode.getValue())) {\n        // Create a new node or update the existing node.\n        const nodeType = getAnimatedType(value)\n        if (!oldNode || oldNode.constructor != nodeType) {\n          setAnimated(this, nodeType.create(value))\n        } else {\n          oldNode.setValue(value)\n        }\n        // Never emit a \"change\" event for the initial value.\n        if (oldNode) {\n          raf.batchedUpdates(() => {\n            this._onChange(value, idle)\n          })\n        }\n      }\n    }\n    return getAnimated(this)\n  }\n\n  protected _onStart() {\n    const anim = this.animation\n    if (!anim.changed) {\n      anim.changed = true\n      sendEvent(\n        this,\n        'onStart',\n        getFinishedResult(this, checkFinished(this, anim.to)),\n        this\n      )\n    }\n  }\n\n  protected _onChange(value: T, idle?: boolean) {\n    if (!idle) {\n      this._onStart()\n      callProp(this.animation.onChange, value, this)\n    }\n    callProp(this.defaultProps.onChange, value, this)\n    super._onChange(value, idle)\n  }\n\n  // This method resets the animation state (even if already animating) to\n  // ensure the latest from/to range is used, and it also ensures this spring\n  // is added to the frameloop.\n  protected _start() {\n    const anim = this.animation\n\n    // Reset the state of each Animated node.\n    getAnimated(this)!.reset(getFluidValue(anim.to))\n\n    // Use the current values as the from values.\n    if (!anim.immediate) {\n      anim.fromValues = anim.values.map(node => node.lastPosition)\n    }\n\n    if (!isAnimating(this)) {\n      setActiveBit(this, true)\n      if (!isPaused(this)) {\n        this._resume()\n      }\n    }\n  }\n\n  protected _resume() {\n    // The \"skipAnimation\" global avoids the frameloop.\n    if (G.skipAnimation) {\n      this.finish()\n    } else {\n      frameLoop.start(this)\n    }\n  }\n\n  /**\n   * Exit the frameloop and notify `onRest` listeners.\n   *\n   * Always wrap `_stop` calls with `batchedUpdates`.\n   */\n  protected _stop(goal?: any, cancel?: boolean) {\n    if (isAnimating(this)) {\n      setActiveBit(this, false)\n\n      const anim = this.animation\n      each(anim.values, node => {\n        node.done = true\n      })\n\n      // These active handlers must be reset to undefined or else\n      // they could be called while idle. But keep them defined\n      // when the goal value is dynamic.\n      if (anim.toValues) {\n        anim.onChange = anim.onPause = anim.onResume = undefined\n      }\n\n      callFluidObservers(this, {\n        type: 'idle',\n        parent: this,\n      })\n\n      const result = cancel\n        ? getCancelledResult(this.get())\n        : getFinishedResult(this.get(), checkFinished(this, goal ?? anim.to))\n\n      flushCalls(this._pendingCalls, result)\n      if (anim.changed) {\n        anim.changed = false\n        sendEvent(this, 'onRest', result, this)\n      }\n    }\n  }\n}\n\n/** Returns true when the current value and goal value are equal. */\nfunction checkFinished<T>(target: SpringValue<T>, to: T | FluidValue<T>) {\n  const goal = computeGoal(to)\n  const value = computeGoal(target.get())\n  return isEqual(value, goal)\n}\n\nexport function createLoopUpdate<T>(\n  props: T & { loop?: any; to?: any; from?: any; reverse?: any },\n  loop = props.loop,\n  to = props.to\n): T | undefined {\n  const loopRet = callProp(loop)\n  if (loopRet) {\n    const overrides = loopRet !== true && inferTo(loopRet)\n    const reverse = (overrides || props).reverse\n    const reset = !overrides || overrides.reset\n    return createUpdate({\n      ...props,\n      loop,\n\n      // Avoid updating default props when looping.\n      default: false,\n\n      // Never loop the `pause` prop.\n      pause: undefined,\n\n      // For the \"reverse\" prop to loop as expected, the \"to\" prop\n      // must be undefined. The \"reverse\" prop is ignored when the\n      // \"to\" prop is an array or function.\n      to: !reverse || isAsyncTo(to) ? to : undefined,\n\n      // Ignore the \"from\" prop except on reset.\n      from: reset ? props.from : undefined,\n      reset,\n\n      // The \"loop\" prop can return a \"useSpring\" props object to\n      // override any of the original props.\n      ...overrides,\n    })\n  }\n}\n\n/**\n * Return a new object based on the given `props`.\n *\n * - All non-reserved props are moved into the `to` prop object.\n * - The `keys` prop is set to an array of affected keys,\n *   or `null` if all keys are affected.\n */\nexport function createUpdate(props: any) {\n  const { to, from } = (props = inferTo(props))\n\n  // Collect the keys affected by this update.\n  const keys = new Set<string>()\n\n  if (is.obj(to)) findDefined(to, keys)\n  if (is.obj(from)) findDefined(from, keys)\n\n  // The \"keys\" prop helps in applying updates to affected keys only.\n  props.keys = keys.size ? Array.from(keys) : null\n\n  return props\n}\n\n/**\n * A modified version of `createUpdate` meant for declarative APIs.\n */\nexport function declareUpdate(props: any) {\n  const update = createUpdate(props)\n  if (is.und(update.default)) {\n    update.default = getDefaultProps(update)\n  }\n  return update\n}\n\n/** Find keys with defined values */\nfunction findDefined(values: Lookup, keys: Set<string>) {\n  eachProp(values, (value, key) => value != null && keys.add(key as any))\n}\n\n/** Event props with \"active handler\" support */\nconst ACTIVE_EVENTS = [\n  'onStart',\n  'onRest',\n  'onChange',\n  'onPause',\n  'onResume',\n] as const\n\nfunction mergeActiveFn<T, P extends EventKey>(\n  target: SpringValue<T>,\n  props: SpringProps<T>,\n  type: P\n) {\n  target.animation[type] =\n    props[type] !== getDefaultProp(props, type)\n      ? resolveProp<any>(props[type], target.key)\n      : undefined\n}\n\ntype EventArgs<T, P extends EventKey> = Parameters<\n  Extract<SpringProps<T>[P], Function>\n>\n\n/** Call the active handler first, then the default handler. */\nfunction sendEvent<T, P extends EventKey>(\n  target: SpringValue<T>,\n  type: P,\n  ...args: EventArgs<T, P>\n) {\n  target.animation[type]?.(...(args as [any, any]))\n  target.defaultProps[type]?.(...(args as [any, any]))\n}\n", "import { is, easings } from '@react-spring/shared'\nimport { EasingFunction } from '@react-spring/types'\nimport { config as configs } from './constants'\n\nconst defaults: any = {\n  ...configs.default,\n  mass: 1,\n  damping: 1,\n  easing: easings.linear,\n  clamp: false,\n}\n\nexport class AnimationConfig {\n  /**\n   * With higher tension, the spring will resist bouncing and try harder to stop at its end value.\n   *\n   * When tension is zero, no animation occurs.\n   *\n   * @default 170\n   */\n  tension!: number\n\n  /**\n   * The damping ratio coefficient, or just the damping ratio when `speed` is defined.\n   *\n   * When `speed` is defined, this value should be between 0 and 1.\n   *\n   * Higher friction means the spring will slow down faster.\n   *\n   * @default 26\n   */\n  friction!: number\n\n  /**\n   * The natural frequency (in seconds), which dictates the number of bounces\n   * per second when no damping exists.\n   *\n   * When defined, `tension` is derived from this, and `friction` is derived\n   * from `tension` and `damping`.\n   */\n  frequency?: number\n\n  /**\n   * The damping ratio, which dictates how the spring slows down.\n   *\n   * Set to `0` to never slow down. Set to `1` to slow down without bouncing.\n   * Between `0` and `1` is for you to explore.\n   *\n   * Only works when `frequency` is defined.\n   *\n   * @default 1\n   */\n  damping!: number\n\n  /**\n   * Higher mass means more friction is required to slow down.\n   *\n   * Defaults to 1, which works fine most of the time.\n   *\n   * @default 1\n   */\n  mass!: number\n\n  /**\n   * The initial velocity of one or more values.\n   *\n   * @default 0\n   */\n  velocity: number | number[] = 0\n\n  /**\n   * The smallest velocity before the animation is considered \"not moving\".\n   *\n   * When undefined, `precision` is used instead.\n   */\n  restVelocity?: number\n\n  /**\n   * The smallest distance from a value before that distance is essentially zero.\n   *\n   * This helps in deciding when a spring is \"at rest\". The spring must be within\n   * this distance from its final value, and its velocity must be lower than this\n   * value too (unless `restVelocity` is defined).\n   *\n   * @default 0.01\n   */\n  precision?: number\n\n  /**\n   * For `duration` animations only. Note: The `duration` is not affected\n   * by this property.\n   *\n   * Defaults to `0`, which means \"start from the beginning\".\n   *\n   * Setting to `1+` makes an immediate animation.\n   *\n   * Setting to `0.5` means \"start from the middle of the easing function\".\n   *\n   * Any number `>= 0` and `<= 1` makes sense here.\n   */\n  progress?: number\n\n  /**\n   * Animation length in number of milliseconds.\n   */\n  duration?: number\n\n  /**\n   * The animation curve. Only used when `duration` is defined.\n   *\n   * Defaults to quadratic ease-in-out.\n   */\n  easing!: EasingFunction\n\n  /**\n   * Avoid overshooting by ending abruptly at the goal value.\n   *\n   * @default false\n   */\n  clamp!: boolean\n\n  /**\n   * When above zero, the spring will bounce instead of overshooting when\n   * exceeding its goal value. Its velocity is multiplied by `-1 + bounce`\n   * whenever its current value equals or exceeds its goal. For example,\n   * setting `bounce` to `0.5` chops the velocity in half on each bounce,\n   * in addition to any friction.\n   */\n  bounce?: number\n\n  /**\n   * \"Decay animations\" decelerate without an explicit goal value.\n   * Useful for scrolling animations.\n   *\n   * Use `true` for the default exponential decay factor (`0.998`).\n   *\n   * When a `number` between `0` and `1` is given, a lower number makes the\n   * animation slow down faster. And setting to `1` would make an unending\n   * animation.\n   *\n   * @default false\n   */\n  decay?: boolean | number\n\n  /**\n   * While animating, round to the nearest multiple of this number.\n   * The `from` and `to` values are never rounded, as well as any value\n   * passed to the `set` method of an animated value.\n   */\n  round?: number\n\n  constructor() {\n    Object.assign(this, defaults)\n  }\n}\n\nexport function mergeConfig(\n  config: AnimationConfig,\n  newConfig: Partial<AnimationConfig>,\n  defaultConfig?: Partial<AnimationConfig>\n): typeof config\n\nexport function mergeConfig(\n  config: any,\n  newConfig: object,\n  defaultConfig?: object\n) {\n  if (defaultConfig) {\n    defaultConfig = { ...defaultConfig }\n    sanitizeConfig(defaultConfig, newConfig)\n    newConfig = { ...defaultConfig, ...newConfig }\n  }\n\n  sanitizeConfig(config, newConfig)\n  Object.assign(config, newConfig)\n\n  for (const key in defaults) {\n    if (config[key] == null) {\n      config[key] = defaults[key]\n    }\n  }\n\n  let { frequency, damping } = config\n  const { mass } = config\n  if (!is.und(frequency)) {\n    if (frequency < 0.01) frequency = 0.01\n    if (damping < 0) damping = 0\n    config.tension = Math.pow((2 * Math.PI) / frequency, 2) * mass\n    config.friction = (4 * Math.PI * damping * mass) / frequency\n  }\n\n  return config\n}\n\n// Prevent a config from accidentally overriding new props.\n// This depends on which \"config\" props take precedence when defined.\nfunction sanitizeConfig(\n  config: Partial<AnimationConfig>,\n  props: Partial<AnimationConfig>\n) {\n  if (!is.und(props.decay)) {\n    config.duration = undefined\n  } else {\n    const isTensionConfig = !is.und(props.tension) || !is.und(props.friction)\n    if (\n      isTensionConfig ||\n      !is.und(props.frequency) ||\n      !is.und(props.damping) ||\n      !is.und(props.mass)\n    ) {\n      config.duration = undefined\n      config.decay = undefined\n    }\n    if (isTensionConfig) {\n      config.frequency = undefined\n    }\n  }\n}\n", "// The `mass` prop defaults to 1\nexport const config = {\n  default: { tension: 170, friction: 26 },\n  gentle: { tension: 120, friction: 14 },\n  wobbly: { tension: 180, friction: 12 },\n  stiff: { tension: 210, friction: 20 },\n  slow: { tension: 280, friction: 60 },\n  molasses: { tension: 280, friction: 120 },\n} as const\n", "import { AnimatedValue } from '@react-spring/animated'\nimport { FluidValue } from '@react-spring/shared'\nimport { AnimationConfig } from './AnimationConfig'\nimport { PickEventFns } from './types/internal'\nimport { SpringProps } from './types'\n\nconst emptyArray: readonly any[] = []\n\n/** An animation being executed by the frameloop */\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nexport class Animation<T = any> {\n  changed = false\n  values: readonly AnimatedValue[] = emptyArray\n  toValues: readonly number[] | null = null\n  fromValues: readonly number[] = emptyArray\n\n  to!: T | FluidValue<T>\n  from!: T | FluidValue<T>\n  config = new AnimationConfig()\n  immediate = false\n}\n\nexport interface Animation<T> extends PickEventFns<SpringProps<T>> {}\n", "import { Timeout, is, raf, Globals as G } from '@react-spring/shared'\nimport { matchProp, callProp } from './helpers'\nimport { AsyncResult, MatchProp } from './types'\nimport { RunAsyncState, RunAsyncProps } from './runAsync'\nimport {\n  AnimationResolver,\n  AnimationTarget,\n  InferProps,\n  InferState,\n} from './types/internal'\n\n// The `scheduleProps` function only handles these defaults.\ntype DefaultProps<T> = { cancel?: MatchProp<T>; pause?: MatchProp<T> }\n\ninterface ScheduledProps<T extends AnimationTarget> {\n  key?: string\n  props: InferProps<T>\n  defaultProps?: DefaultProps<InferState<T>>\n  state: RunAsyncState<T>\n  actions: {\n    pause: () => void\n    resume: () => void\n    start: (props: RunAsyncProps<T>, resolve: AnimationResolver<T>) => void\n  }\n}\n\n/**\n * This function sets a timeout if both the `delay` prop exists and\n * the `cancel` prop is not `true`.\n *\n * The `actions.start` function must handle the `cancel` prop itself,\n * but the `pause` prop is taken care of.\n */\nexport function scheduleProps<T extends AnimationTarget>(\n  callId: number,\n  { key, props, defaultProps, state, actions }: ScheduledProps<T>\n): AsyncResult<T> {\n  return new Promise((resolve, reject) => {\n    let delay: number\n    let timeout: Timeout\n\n    let cancel = matchProp(props.cancel ?? defaultProps?.cancel, key)\n    if (cancel) {\n      onStart()\n    } else {\n      // The `pause` prop updates the paused flag.\n      if (!is.und(props.pause)) {\n        state.paused = matchProp(props.pause, key)\n      }\n      // The default `pause` takes precedence when true,\n      // which allows `SpringContext` to work as expected.\n      let pause = defaultProps?.pause\n      if (pause !== true) {\n        pause = state.paused || matchProp(pause, key)\n      }\n\n      delay = callProp(props.delay || 0, key)\n      if (pause) {\n        state.resumeQueue.add(onResume)\n        actions.pause()\n      } else {\n        actions.resume()\n        onResume()\n      }\n    }\n\n    function onPause() {\n      state.resumeQueue.add(onResume)\n      state.timeouts.delete(timeout)\n      timeout.cancel()\n      // Cache the remaining delay.\n      delay = timeout.time - raf.now()\n    }\n\n    function onResume() {\n      if (delay > 0 && !G.skipAnimation) {\n        state.delayed = true\n        timeout = raf.setTimeout(onStart, delay)\n        state.pauseQueue.add(onPause)\n        state.timeouts.add(timeout)\n      } else {\n        onStart()\n      }\n    }\n\n    function onStart() {\n      if (state.delayed) {\n        state.delayed = false\n      }\n\n      state.pauseQueue.delete(onPause)\n      state.timeouts.delete(timeout)\n\n      // Maybe cancelled during its delay.\n      if (callId <= (state.cancelId || 0)) {\n        cancel = true\n      }\n\n      try {\n        actions.start({ ...props, callId, cancel }, resolve)\n      } catch (err) {\n        reject(err)\n      }\n    }\n  })\n}\n", "import {\n  is,\n  raf,\n  flush,\n  eachProp,\n  Timeout,\n  Globals as G,\n} from '@react-spring/shared'\nimport { Falsy } from '@react-spring/types'\n\nimport { getDefaultProps } from './helpers'\nimport { AnimationTarget, InferState, InferProps } from './types/internal'\nimport { AnimationResult, AsyncResult, SpringChain, SpringToFn } from './types'\nimport { getCancelledResult, getFinishedResult } from './AnimationResult'\n\ntype AsyncTo<T> = SpringChain<T> | SpringToFn<T>\n\n/** @internal */\nexport type RunAsyncProps<T extends AnimationTarget = any> = InferProps<T> & {\n  callId: number\n  parentId?: number\n  cancel: boolean\n  to?: any\n}\n\n/** @internal */\nexport interface RunAsyncState<T extends AnimationTarget = any> {\n  paused: boolean\n  pauseQueue: Set<() => void>\n  resumeQueue: Set<() => void>\n  timeouts: Set<Timeout>\n  delayed?: boolean\n  asyncId?: number\n  asyncTo?: AsyncTo<InferState<T>>\n  promise?: AsyncResult<T>\n  cancelId?: number\n}\n\n/**\n * Start an async chain or an async script.\n *\n * Always call `runAsync` in the action callback of a `scheduleProps` call.\n *\n * The `T` parameter can be a set of animated values (as an object type)\n * or a primitive type for a single animated value.\n */\nexport function runAsync<T extends AnimationTarget>(\n  to: AsyncTo<InferState<T>>,\n  props: RunAsyncProps<T>,\n  state: RunAsyncState<T>,\n  target: T\n): AsyncResult<T> {\n  const { callId, parentId, onRest } = props\n  const { asyncTo: prevTo, promise: prevPromise } = state\n\n  if (!parentId && to === prevTo && !props.reset) {\n    return prevPromise!\n  }\n\n  return (state.promise = (async () => {\n    state.asyncId = callId\n    state.asyncTo = to\n\n    // The default props of any `animate` calls.\n    const defaultProps = getDefaultProps<InferProps<T>>(props, (value, key) =>\n      // The `onRest` prop is only called when the `runAsync` promise is resolved.\n      key === 'onRest' ? undefined : value\n    )\n\n    let preventBail!: () => void\n    let bail: (error: any) => void\n\n    // This promise is rejected when the animation is interrupted.\n    const bailPromise = new Promise<void>(\n      (resolve, reject) => ((preventBail = resolve), (bail = reject))\n    )\n\n    const bailIfEnded = (bailSignal: BailSignal) => {\n      const bailResult =\n        // The `cancel` prop or `stop` method was used.\n        (callId <= (state.cancelId || 0) && getCancelledResult(target)) ||\n        // The async `to` prop was replaced.\n        (callId !== state.asyncId && getFinishedResult(target, false))\n\n      if (bailResult) {\n        bailSignal.result = bailResult\n\n        // Reject the `bailPromise` to ensure the `runAsync` promise\n        // is not relying on the caller to rethrow the error for us.\n        bail(bailSignal)\n        throw bailSignal\n      }\n    }\n\n    const animate: any = (arg1: any, arg2?: any) => {\n      // Create the bail signal outside the returned promise,\n      // so the generated stack trace is relevant.\n      const bailSignal = new BailSignal()\n      const skipAnimationSignal = new SkipAnimationSignal()\n\n      return (async () => {\n        if (G.skipAnimation) {\n          /**\n           * We need to stop animations if `skipAnimation`\n           * is set in the Globals\n           *\n           */\n          stopAsync(state)\n\n          // create the rejection error that's handled gracefully\n          skipAnimationSignal.result = getFinishedResult(target, false)\n          bail(skipAnimationSignal)\n          throw skipAnimationSignal\n        }\n\n        bailIfEnded(bailSignal)\n\n        const props: any = is.obj(arg1) ? { ...arg1 } : { ...arg2, to: arg1 }\n        props.parentId = callId\n\n        eachProp(defaultProps, (value, key) => {\n          if (is.und(props[key])) {\n            props[key] = value\n          }\n        })\n\n        const result = await target.start(props)\n        bailIfEnded(bailSignal)\n\n        if (state.paused) {\n          await new Promise<void>(resume => {\n            state.resumeQueue.add(resume)\n          })\n        }\n\n        return result\n      })()\n    }\n\n    let result!: AnimationResult<T>\n\n    if (G.skipAnimation) {\n      /**\n       * We need to stop animations if `skipAnimation`\n       * is set in the Globals\n       */\n      stopAsync(state)\n      return getFinishedResult(target, false)\n    }\n\n    try {\n      let animating!: Promise<void>\n\n      // Async sequence\n      if (is.arr(to)) {\n        animating = (async (queue: any[]) => {\n          for (const props of queue) {\n            await animate(props)\n          }\n        })(to)\n      }\n\n      // Async script\n      else {\n        animating = Promise.resolve(to(animate, target.stop.bind(target)))\n      }\n\n      await Promise.all([animating.then(preventBail), bailPromise])\n      result = getFinishedResult(target.get(), true, false)\n\n      // Bail handling\n    } catch (err) {\n      if (err instanceof BailSignal) {\n        result = err.result\n      } else if (err instanceof SkipAnimationSignal) {\n        result = err.result\n      } else {\n        throw err\n      }\n\n      // Reset the async state.\n    } finally {\n      if (callId == state.asyncId) {\n        state.asyncId = parentId\n        state.asyncTo = parentId ? prevTo : undefined\n        state.promise = parentId ? prevPromise : undefined\n      }\n    }\n\n    if (is.fun(onRest)) {\n      raf.batchedUpdates(() => {\n        onRest(result, target, target.item)\n      })\n    }\n\n    return result\n  })())\n}\n\n/** Stop the current `runAsync` call with `finished: false` (or with `cancelled: true` when `cancelId` is defined) */\nexport function stopAsync(state: RunAsyncState, cancelId?: number | Falsy) {\n  flush(state.timeouts, t => t.cancel())\n  state.pauseQueue.clear()\n  state.resumeQueue.clear()\n  state.asyncId = state.asyncTo = state.promise = undefined\n  if (cancelId) state.cancelId = cancelId\n}\n\n/** This error is thrown to signal an interrupted async animation. */\nexport class BailSignal extends Error {\n  result!: AnimationResult\n  constructor() {\n    super(\n      'An async animation has been interrupted. You see this error because you ' +\n        'forgot to use `await` or `.catch(...)` on its returned promise.'\n    )\n  }\n}\n\nexport class SkipAnimationSignal extends Error {\n  result!: AnimationResult\n\n  constructor() {\n    super('SkipAnimationSignal')\n  }\n}\n", "import { AnimationResult } from './types'\nimport { Readable } from './types/internal'\n\n/** @internal */\nexport const getCombinedResult = <T extends Readable>(\n  target: T,\n  results: AnimationResult<T>[]\n): AnimationResult<T> =>\n  results.length == 1\n    ? results[0]\n    : results.some(result => result.cancelled)\n      ? getCancelledResult(target.get())\n      : results.every(result => result.noop)\n        ? getNoopResult(target.get())\n        : getFinishedResult(\n            target.get(),\n            results.every(result => result.finished)\n          )\n\n/** No-op results are for updates that never start an animation. */\nexport const getNoopResult = (value: any) => ({\n  value,\n  noop: true,\n  finished: true,\n  cancelled: false,\n})\n\nexport const getFinishedResult = (\n  value: any,\n  finished: boolean,\n  cancelled = false\n) => ({\n  value,\n  finished,\n  cancelled,\n})\n\nexport const getCancelledResult = (value: any) => ({\n  value,\n  cancelled: true,\n  finished: false,\n})\n", "import {\n  deprecateInterpolate,\n  frameLoop,\n  FluidValue,\n  Globals as G,\n  callFluidObservers,\n} from '@react-spring/shared'\nimport { InterpolatorArgs } from '@react-spring/types'\nimport { getAnimated } from '@react-spring/animated'\n\nimport { Interpolation } from './Interpolation'\n\nexport const isFrameValue = (value: any): value is FrameValue =>\n  value instanceof FrameValue\n\nlet nextId = 1\n\n/**\n * A kind of `FluidValue` that manages an `AnimatedValue` node.\n *\n * Its underlying value can be accessed and even observed.\n */\nexport abstract class FrameValue<T = any> extends FluidValue<\n  T,\n  FrameValue.Event<T>\n> {\n  readonly id = nextId++\n\n  abstract key?: string\n  abstract get idle(): boolean\n\n  protected _priority = 0\n\n  get priority() {\n    return this._priority\n  }\n  set priority(priority: number) {\n    if (this._priority != priority) {\n      this._priority = priority\n      this._onPriorityChange(priority)\n    }\n  }\n\n  /** Get the current value */\n  get(): T {\n    const node = getAnimated(this)\n    return node && node.getValue()\n  }\n\n  /** Create a spring that maps our value to another value */\n  to<Out>(...args: InterpolatorArgs<T, Out>) {\n    return G.to(this, args) as Interpolation<T, Out>\n  }\n\n  /** @deprecated Use the `to` method instead. */\n  interpolate<Out>(...args: InterpolatorArgs<T, Out>) {\n    deprecateInterpolate()\n    return G.to(this, args) as Interpolation<T, Out>\n  }\n\n  toJSON() {\n    return this.get()\n  }\n\n  protected observerAdded(count: number) {\n    if (count == 1) this._attach()\n  }\n\n  protected observerRemoved(count: number) {\n    if (count == 0) this._detach()\n  }\n\n  /** @internal */\n  abstract advance(dt: number): void\n\n  /** @internal */\n  abstract eventObserved(_event: FrameValue.Event): void\n\n  /** Called when the first child is added. */\n  protected _attach() {}\n\n  /** Called when the last child is removed. */\n  protected _detach() {}\n\n  /** Tell our children about our new value */\n  protected _onChange(value: T, idle = false) {\n    callFluidObservers(this, {\n      type: 'change',\n      parent: this,\n      value,\n      idle,\n    })\n  }\n\n  /** Tell our children about our new priority */\n  protected _onPriorityChange(priority: number) {\n    if (!this.idle) {\n      frameLoop.sort(this)\n    }\n    callFluidObservers(this, {\n      type: 'priority',\n      parent: this,\n      priority,\n    })\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport declare namespace FrameValue {\n  /** A parent changed its value */\n  interface ChangeEvent<T = any> {\n    parent: FrameValue<T>\n    type: 'change'\n    value: T\n    idle: boolean\n  }\n\n  /** A parent changed its priority */\n  interface PriorityEvent<T = any> {\n    parent: FrameValue<T>\n    type: 'priority'\n    priority: number\n  }\n\n  /** A parent is done animating */\n  interface IdleEvent<T = any> {\n    parent: FrameValue<T>\n    type: 'idle'\n  }\n\n  /** Events sent to children of `FrameValue` objects */\n  export type Event<T = any> = ChangeEvent<T> | PriorityEvent<T> | IdleEvent<T>\n}\n", "/** The property symbol of the current animation phase. */\nconst $P = Symbol.for('SpringPhase')\n\nconst HAS_ANIMATED = 1\nconst IS_ANIMATING = 2\nconst IS_PAUSED = 4\n\n/** Returns true if the `target` has ever animated. */\nexport const hasAnimated = (target: any) => (target[$P] & HAS_ANIMATED) > 0\n\n/** Returns true if the `target` is animating (even if paused). */\nexport const isAnimating = (target: any) => (target[$P] & IS_ANIMATING) > 0\n\n/** Returns true if the `target` is paused (even if idle). */\nexport const isPaused = (target: any) => (target[$P] & IS_PAUSED) > 0\n\n/** Set the active bit of the `target` phase. */\nexport const setActiveBit = (target: any, active: boolean) =>\n  active\n    ? (target[$P] |= IS_ANIMATING | HAS_ANIMATED)\n    : (target[$P] &= ~IS_ANIMATING)\n\nexport const setPausedBit = (target: any, paused: boolean) =>\n  paused ? (target[$P] |= IS_PAUSED) : (target[$P] &= ~IS_PAUSED)\n", "import { OneOrMore, UnknownProps, Lookup, Falsy } from '@react-spring/types'\nimport {\n  is,\n  raf,\n  each,\n  noop,\n  flush,\n  toArray,\n  eachProp,\n  flushCalls,\n  addFluidObserver,\n  FluidObserver,\n} from '@react-spring/shared'\n\nimport { getDefaultProp } from './helpers'\nimport { FrameValue } from './FrameValue'\nimport type { SpringRef } from './SpringRef'\nimport { SpringValue, createLoopUpdate, createUpdate } from './SpringValue'\nimport { getCancelledResult, getCombinedResult } from './AnimationResult'\nimport { runAsync, RunAsyncState, stopAsync } from './runAsync'\nimport { scheduleProps } from './scheduleProps'\nimport {\n  AnimationResult,\n  AsyncResult,\n  ControllerFlushFn,\n  ControllerUpdate,\n  OnChange,\n  OnRest,\n  OnStart,\n  SpringChain,\n  SpringToFn,\n  SpringValues,\n} from './types'\n\n/** Events batched by the `Controller` class */\nconst BATCHED_EVENTS = ['onStart', 'onChange', 'onRest'] as const\n\nlet nextId = 1\n\n/** Queue of pending updates for a `Controller` instance. */\nexport interface ControllerQueue<State extends Lookup = Lookup>\n  extends Array<\n    ControllerUpdate<State, any> & {\n      /** The keys affected by this update. When null, all keys are affected. */\n      keys: string[] | null\n    }\n  > {}\n\nexport class Controller<State extends Lookup = Lookup> {\n  readonly id = nextId++\n\n  /** The animated values */\n  springs: SpringValues<State> = {} as any\n\n  /** The queue of props passed to the `update` method. */\n  queue: ControllerQueue<State> = []\n\n  /**\n   * The injected ref. When defined, render-based updates are pushed\n   * onto the `queue` instead of being auto-started.\n   */\n  ref?: SpringRef<State>\n\n  /** Custom handler for flushing update queues */\n  protected _flush?: ControllerFlushFn<this>\n\n  /** These props are used by all future spring values */\n  protected _initialProps?: Lookup\n\n  /** The counter for tracking `scheduleProps` calls */\n  protected _lastAsyncId = 0\n\n  /** The values currently being animated */\n  protected _active = new Set<FrameValue>()\n\n  /** The values that changed recently */\n  protected _changed = new Set<FrameValue>()\n\n  /** Equals false when `onStart` listeners can be called */\n  protected _started = false\n\n  private _item?: any\n\n  /** State used by the `runAsync` function */\n  protected _state: RunAsyncState<this> = {\n    paused: false,\n    pauseQueue: new Set(),\n    resumeQueue: new Set(),\n    timeouts: new Set(),\n  }\n\n  /** The event queues that are flushed once per frame maximum */\n  protected _events = {\n    onStart: new Map<\n      OnStart<SpringValue<State>, Controller<State>, any>,\n      AnimationResult\n    >(),\n    onChange: new Map<\n      OnChange<SpringValue<State>, Controller<State>, any>,\n      AnimationResult\n    >(),\n    onRest: new Map<\n      OnRest<SpringValue<State>, Controller<State>, any>,\n      AnimationResult\n    >(),\n  }\n\n  constructor(\n    props?: ControllerUpdate<State> | null,\n    flush?: ControllerFlushFn<any>\n  ) {\n    this._onFrame = this._onFrame.bind(this)\n    if (flush) {\n      this._flush = flush\n    }\n    if (props) {\n      this.start({ default: true, ...props })\n    }\n  }\n\n  /**\n   * Equals `true` when no spring values are in the frameloop, and\n   * no async animation is currently active.\n   */\n  get idle() {\n    return (\n      !this._state.asyncTo &&\n      Object.values(this.springs as Lookup<SpringValue>).every(spring => {\n        return spring.idle && !spring.isDelayed && !spring.isPaused\n      })\n    )\n  }\n\n  get item() {\n    return this._item\n  }\n\n  set item(item) {\n    this._item = item\n  }\n\n  /** Get the current values of our springs */\n  get(): State & UnknownProps {\n    const values: any = {}\n    this.each((spring, key) => (values[key] = spring.get()))\n    return values\n  }\n\n  /** Set the current values without animating. */\n  set(values: Partial<State>) {\n    for (const key in values) {\n      const value = values[key]\n      if (!is.und(value)) {\n        this.springs[key].set(value)\n      }\n    }\n  }\n\n  /** Push an update onto the queue of each value. */\n  update(props: ControllerUpdate<State> | Falsy) {\n    if (props) {\n      this.queue.push(createUpdate(props))\n    }\n    return this\n  }\n\n  /**\n   * Start the queued animations for every spring, and resolve the returned\n   * promise once all queued animations have finished or been cancelled.\n   *\n   * When you pass a queue (instead of nothing), that queue is used instead of\n   * the queued animations added with the `update` method, which are left alone.\n   */\n  start(props?: OneOrMore<ControllerUpdate<State>> | null): AsyncResult<this> {\n    let { queue } = this as any\n    if (props) {\n      queue = toArray<any>(props).map(createUpdate)\n    } else {\n      this.queue = []\n    }\n\n    if (this._flush) {\n      return this._flush(this, queue)\n    }\n\n    prepareKeys(this, queue)\n    return flushUpdateQueue(this, queue)\n  }\n\n  /** Stop all animations. */\n  stop(): this\n  /** Stop animations for the given keys. */\n  stop(keys: OneOrMore<string>): this\n  /** Cancel all animations. */\n  stop(cancel: boolean): this\n  /** Cancel animations for the given keys. */\n  stop(cancel: boolean, keys: OneOrMore<string>): this\n  /** Stop some or all animations. */\n  stop(keys?: OneOrMore<string>): this\n  /** Cancel some or all animations. */\n  stop(cancel: boolean, keys?: OneOrMore<string>): this\n  /** @internal */\n  stop(arg?: boolean | OneOrMore<string>, keys?: OneOrMore<string>) {\n    if (arg !== !!arg) {\n      keys = arg as OneOrMore<string>\n    }\n    if (keys) {\n      const springs = this.springs as Lookup<SpringValue>\n      each(toArray(keys) as string[], key => springs[key].stop(!!arg))\n    } else {\n      stopAsync(this._state, this._lastAsyncId)\n      this.each(spring => spring.stop(!!arg))\n    }\n    return this\n  }\n\n  /** Freeze the active animation in time */\n  pause(keys?: OneOrMore<string>) {\n    if (is.und(keys)) {\n      this.start({ pause: true })\n    } else {\n      const springs = this.springs as Lookup<SpringValue>\n      each(toArray(keys) as string[], key => springs[key].pause())\n    }\n    return this\n  }\n\n  /** Resume the animation if paused. */\n  resume(keys?: OneOrMore<string>) {\n    if (is.und(keys)) {\n      this.start({ pause: false })\n    } else {\n      const springs = this.springs as Lookup<SpringValue>\n      each(toArray(keys) as string[], key => springs[key].resume())\n    }\n    return this\n  }\n\n  /** Call a function once per spring value */\n  each(iterator: (spring: SpringValue, key: string) => void) {\n    eachProp(this.springs, iterator as any)\n  }\n\n  /** @internal Called at the end of every animation frame */\n  protected _onFrame() {\n    const { onStart, onChange, onRest } = this._events\n\n    const active = this._active.size > 0\n    const changed = this._changed.size > 0\n\n    if ((active && !this._started) || (changed && !this._started)) {\n      this._started = true\n      flush(onStart, ([onStart, result]) => {\n        result.value = this.get()\n        onStart(result, this, this._item)\n      })\n    }\n\n    const idle = !active && this._started\n    const values = changed || (idle && onRest.size) ? this.get() : null\n\n    if (changed && onChange.size) {\n      flush(onChange, ([onChange, result]) => {\n        result.value = values\n        onChange(result, this, this._item)\n      })\n    }\n\n    // The \"onRest\" queue is only flushed when all springs are idle.\n    if (idle) {\n      this._started = false\n      flush(onRest, ([onRest, result]) => {\n        result.value = values\n        onRest(result, this, this._item)\n      })\n    }\n  }\n\n  /** @internal */\n  eventObserved(event: FrameValue.Event) {\n    if (event.type == 'change') {\n      this._changed.add(event.parent)\n      if (!event.idle) {\n        this._active.add(event.parent)\n      }\n    } else if (event.type == 'idle') {\n      this._active.delete(event.parent)\n    }\n    // The `onFrame` handler runs when a parent is changed or idle.\n    else return\n    raf.onFrame(this._onFrame)\n  }\n}\n\n/**\n * Warning: Props might be mutated.\n */\nexport function flushUpdateQueue(\n  ctrl: Controller<any>,\n  queue: ControllerQueue\n) {\n  return Promise.all(queue.map(props => flushUpdate(ctrl, props))).then(\n    results => getCombinedResult(ctrl, results)\n  )\n}\n\n/**\n * Warning: Props might be mutated.\n *\n * Process a single set of props using the given controller.\n *\n * The returned promise resolves to `true` once the update is\n * applied and any animations it starts are finished without being\n * stopped or cancelled.\n */\nexport async function flushUpdate(\n  ctrl: Controller<any>,\n  props: ControllerQueue[number],\n  isLoop?: boolean\n): AsyncResult {\n  const { keys, to, from, loop, onRest, onResolve } = props\n  const defaults = is.obj(props.default) && props.default\n\n  // Looping must be handled in this function, or else the values\n  // would end up looping out-of-sync in many common cases.\n  if (loop) {\n    props.loop = false\n  }\n\n  // Treat false like null, which gets ignored.\n  if (to === false) props.to = null\n  if (from === false) props.from = null\n\n  const asyncTo = is.arr(to) || is.fun(to) ? to : undefined\n  if (asyncTo) {\n    props.to = undefined\n    props.onRest = undefined\n    if (defaults) {\n      defaults.onRest = undefined\n    }\n  }\n  // For certain events, use batching to prevent multiple calls per frame.\n  // However, batching is avoided when the `to` prop is async, because any\n  // event props are used as default props instead.\n  else {\n    each(BATCHED_EVENTS, key => {\n      const handler: any = props[key]\n      if (is.fun(handler)) {\n        const queue = ctrl['_events'][key]\n        props[key] = (({ finished, cancelled }: AnimationResult) => {\n          const result = queue.get(handler)\n          if (result) {\n            if (!finished) result.finished = false\n            if (cancelled) result.cancelled = true\n          } else {\n            // The \"value\" is set before the \"handler\" is called.\n            queue.set(handler, {\n              value: null,\n              finished: finished || false,\n              cancelled: cancelled || false,\n            })\n          }\n        }) as any\n\n        // Avoid using a batched `handler` as a default prop.\n        if (defaults) {\n          defaults[key] = props[key] as any\n        }\n      }\n    })\n  }\n\n  const state = ctrl['_state']\n\n  // Pause/resume the `asyncTo` when `props.pause` is true/false.\n  if (props.pause === !state.paused) {\n    state.paused = props.pause\n    flushCalls(props.pause ? state.pauseQueue : state.resumeQueue)\n  }\n  // When a controller is paused, its values are also paused.\n  else if (state.paused) {\n    props.pause = true\n  }\n\n  const promises: AsyncResult[] = (keys || Object.keys(ctrl.springs)).map(key =>\n    ctrl.springs[key]!.start(props as any)\n  )\n\n  const cancel =\n    props.cancel === true || getDefaultProp(props, 'cancel') === true\n\n  if (asyncTo || (cancel && state.asyncId)) {\n    promises.push(\n      scheduleProps(++ctrl['_lastAsyncId'], {\n        props,\n        state,\n        actions: {\n          pause: noop,\n          resume: noop,\n          start(props, resolve) {\n            if (cancel) {\n              stopAsync(state, ctrl['_lastAsyncId'])\n              resolve(getCancelledResult(ctrl))\n            } else {\n              props.onRest = onRest\n              resolve(\n                runAsync(\n                  asyncTo as SpringChain | SpringToFn,\n                  props,\n                  state,\n                  ctrl\n                )\n              )\n            }\n          },\n        },\n      })\n    )\n  }\n\n  // Pause after updating each spring, so they can be resumed separately\n  // and so their default `pause` and `cancel` props are updated.\n  if (state.paused) {\n    // Ensure `this` must be resumed before the returned promise\n    // is resolved and before starting the next `loop` repetition.\n    await new Promise<void>(resume => {\n      state.resumeQueue.add(resume)\n    })\n  }\n\n  const result = getCombinedResult<any>(ctrl, await Promise.all(promises))\n  if (loop && result.finished && !(isLoop && result.noop)) {\n    const nextProps = createLoopUpdate(props, loop, to)\n    if (nextProps) {\n      prepareKeys(ctrl, [nextProps])\n      return flushUpdate(ctrl, nextProps, true)\n    }\n  }\n  if (onResolve) {\n    raf.batchedUpdates(() => onResolve(result, ctrl, ctrl.item))\n  }\n  return result\n}\n\n/**\n * From an array of updates, get the map of `SpringValue` objects\n * by their keys. Springs are created when any update wants to\n * animate a new key.\n *\n * Springs created by `getSprings` are neither cached nor observed\n * until they're given to `setSprings`.\n */\nexport function getSprings<State extends Lookup>(\n  ctrl: Controller<Lookup<any>>,\n  props?: OneOrMore<ControllerUpdate<State>>\n) {\n  const springs = { ...ctrl.springs }\n  if (props) {\n    each(toArray(props), (props: any) => {\n      if (is.und(props.keys)) {\n        props = createUpdate(props)\n      }\n      if (!is.obj(props.to)) {\n        // Avoid passing array/function to each spring.\n        props = { ...props, to: undefined }\n      }\n      prepareSprings(springs as any, props, key => {\n        return createSpring(key)\n      })\n    })\n  }\n  setSprings(ctrl, springs)\n  return springs\n}\n\n/**\n * Tell a controller to manage the given `SpringValue` objects\n * whose key is not already in use.\n */\nexport function setSprings(\n  ctrl: Controller<Lookup<any>>,\n  springs: SpringValues<UnknownProps>\n) {\n  eachProp(springs, (spring, key) => {\n    if (!ctrl.springs[key]) {\n      ctrl.springs[key] = spring\n      addFluidObserver(spring, ctrl)\n    }\n  })\n}\n\nfunction createSpring(key: string, observer?: FluidObserver<FrameValue.Event>) {\n  const spring = new SpringValue()\n  spring.key = key\n  if (observer) {\n    addFluidObserver(spring, observer)\n  }\n  return spring\n}\n\n/**\n * Ensure spring objects exist for each defined key.\n *\n * Using the `props`, the `Animated` node of each `SpringValue` may\n * be created or updated.\n */\nfunction prepareSprings(\n  springs: SpringValues,\n  props: ControllerQueue[number],\n  create: (key: string) => SpringValue\n) {\n  if (props.keys) {\n    each(props.keys, key => {\n      const spring = springs[key] || (springs[key] = create(key))\n      spring['_prepareNode'](props)\n    })\n  }\n}\n\n/**\n * Ensure spring objects exist for each defined key, and attach the\n * `ctrl` to them for observation.\n *\n * The queue is expected to contain `createUpdate` results.\n */\nfunction prepareKeys(ctrl: Controller<any>, queue: ControllerQueue[number][]) {\n  each(queue, props => {\n    prepareSprings(ctrl.springs, props, key => {\n      return createSpring(key, ctrl)\n    })\n  })\n}\n", "import * as React from 'react'\nimport { useContext, PropsWithChildren } from 'react'\nimport { useMemoOne } from '@react-spring/shared'\n\n/**\n * This context affects all new and existing `SpringValue` objects\n * created with the hook API or the renderprops API.\n */\nexport interface SpringContext {\n  /** Pause all new and existing animations. */\n  pause?: boolean\n  /** Force all new and existing animations to be immediate. */\n  immediate?: boolean\n}\n\nexport const SpringContext = ({\n  children,\n  ...props\n}: PropsWithChildren<SpringContext>) => {\n  const inherited = useContext(ctx)\n\n  // Inherited values are dominant when truthy.\n  const pause = props.pause || !!inherited.pause,\n    immediate = props.immediate || !!inherited.immediate\n\n  // Memoize the context to avoid unwanted renders.\n  props = useMemoOne(() => ({ pause, immediate }), [pause, immediate])\n\n  const { Provider } = ctx\n  return <Provider value={props}>{children}</Provider>\n}\n\nconst ctx = makeContext(SpringContext, {} as SpringContext)\n\n// Allow `useContext(SpringContext)` in TypeScript.\nSpringContext.Provider = ctx.Provider\nSpringContext.Consumer = ctx.Consumer\n\n/** Make the `target` compatible with `useContext` */\nfunction makeContext<T>(target: any, init: T): React.Context<T> {\n  Object.assign(target, React.createContext(init))\n  target.Provider._context = target\n  target.Consumer._context = target\n  return target\n}\n", "import { each, is, deprecateDirectCall } from '@react-spring/shared'\nimport { Lookup, Falsy, OneOrMore } from '@react-spring/types'\nimport { AsyncResult, ControllerUpdate } from './types'\nimport { Controller } from './Controller'\n\nexport interface ControllerUpdateFn<State extends Lookup = Lookup> {\n  (i: number, ctrl: Controller<State>): ControllerUpdate<State> | Falsy\n}\n\nexport interface SpringRef<State extends Lookup = Lookup> {\n  (\n    props?: ControllerUpdate<State> | ControllerUpdateFn<State>\n  ): AsyncResult<Controller<State>>[]\n  current: Controller<State>[]\n\n  /** Add a controller to this ref */\n  add(ctrl: Controller<State>): void\n\n  /** Remove a controller from this ref */\n  delete(ctrl: Controller<State>): void\n\n  /** Pause all animations. */\n  pause(): this\n  /** Pause animations for the given keys. */\n  pause(keys: OneOrMore<string>): this\n  /** Pause some or all animations. */\n  pause(keys?: OneOrMore<string>): this\n\n  /** Resume all animations. */\n  resume(): this\n  /** Resume animations for the given keys. */\n  resume(keys: OneOrMore<string>): this\n  /** Resume some or all animations. */\n  resume(keys?: OneOrMore<string>): this\n\n  /** Update the state of each controller without animating. */\n  set(values: Partial<State>): void\n  /** Update the state of each controller without animating based on their passed state. */\n  set(values: (index: number, ctrl: Controller<State>) => Partial<State>): void\n\n  /** Start the queued animations of each controller. */\n  start(): AsyncResult<Controller<State>>[]\n  /** Update every controller with the same props. */\n  start(props: ControllerUpdate<State>): AsyncResult<Controller<State>>[]\n  /** Update controllers based on their state. */\n  start(props: ControllerUpdateFn<State>): AsyncResult<Controller<State>>[]\n  /** Start animating each controller. */\n  start(\n    props?: ControllerUpdate<State> | ControllerUpdateFn<State>\n  ): AsyncResult<Controller<State>>[]\n\n  /** Stop all animations. */\n  stop(): this\n  /** Stop animations for the given keys. */\n  stop(keys: OneOrMore<string>): this\n  /** Cancel all animations. */\n  stop(cancel: boolean): this\n  /** Cancel animations for the given keys. */\n  stop(cancel: boolean, keys: OneOrMore<string>): this\n  /** Stop some or all animations. */\n  stop(keys?: OneOrMore<string>): this\n  /** Cancel some or all animations. */\n  stop(cancel: boolean, keys?: OneOrMore<string>): this\n\n  /** Add the same props to each controller's update queue. */\n  update(props: ControllerUpdate<State>): this\n  /** Generate separate props for each controller's update queue. */\n  update(props: ControllerUpdateFn<State>): this\n  /** Add props to each controller's update queue. */\n  update(props: ControllerUpdate<State> | ControllerUpdateFn<State>): this\n\n  _getProps(\n    arg: ControllerUpdate<State> | ControllerUpdateFn<State>,\n    ctrl: Controller<State>,\n    index: number\n  ): ControllerUpdate<State> | Falsy\n}\n\nexport const SpringRef = <\n  State extends Lookup = Lookup,\n>(): SpringRef<State> => {\n  const current: Controller<State>[] = []\n\n  const SpringRef: SpringRef<State> = function (props) {\n    deprecateDirectCall()\n\n    const results: AsyncResult[] = []\n\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start())\n      } else {\n        const update = _getProps(props, ctrl, i)\n        if (update) {\n          results.push(ctrl.start(update))\n        }\n      }\n    })\n\n    return results\n  }\n\n  SpringRef.current = current\n\n  /** Add a controller to this ref */\n  SpringRef.add = function (ctrl: Controller<State>) {\n    if (!current.includes(ctrl)) {\n      current.push(ctrl)\n    }\n  }\n\n  /** Remove a controller from this ref */\n  SpringRef.delete = function (ctrl: Controller<State>) {\n    const i = current.indexOf(ctrl)\n    if (~i) current.splice(i, 1)\n  }\n\n  /** Pause all animations. */\n  SpringRef.pause = function () {\n    each(current, ctrl => ctrl.pause(...arguments))\n    return this\n  }\n\n  /** Resume all animations. */\n  SpringRef.resume = function () {\n    each(current, ctrl => ctrl.resume(...arguments))\n    return this\n  }\n\n  /** Update the state of each controller without animating. */\n  SpringRef.set = function (\n    values:\n      | Partial<State>\n      | ((i: number, ctrl: Controller<State>) => Partial<State>)\n  ) {\n    each(current, (ctrl, i) => {\n      const update = is.fun(values) ? values(i, ctrl) : values\n      if (update) {\n        ctrl.set(update)\n      }\n    })\n  }\n\n  SpringRef.start = function (props?: object | ControllerUpdateFn<State>) {\n    const results: AsyncResult[] = []\n\n    each(current, (ctrl, i) => {\n      if (is.und(props)) {\n        results.push(ctrl.start())\n      } else {\n        const update = this._getProps(props, ctrl, i)\n        if (update) {\n          results.push(ctrl.start(update))\n        }\n      }\n    })\n\n    return results\n  }\n\n  /** Stop all animations. */\n  SpringRef.stop = function () {\n    each(current, ctrl => ctrl.stop(...arguments))\n    return this\n  }\n\n  SpringRef.update = function (props: object | ControllerUpdateFn<State>) {\n    each(current, (ctrl, i) => ctrl.update(this._getProps(props, ctrl, i)))\n    return this\n  }\n\n  /** Overridden by `useTrail` to manipulate props */\n  const _getProps = function (\n    arg: ControllerUpdate<State> | ControllerUpdateFn<State>,\n    ctrl: Controller<State>,\n    index: number\n  ) {\n    return is.fun(arg) ? arg(index, ctrl) : arg\n  }\n\n  SpringRef._getProps = _getProps\n\n  return SpringRef\n}\n", "import { useState } from 'react'\nimport { Lookup } from '@react-spring/types'\nimport { SpringRef } from '../SpringRef'\nimport type { SpringRef as SpringRefType } from '../SpringRef'\n\nconst initSpringRef = () => SpringRef<any>()\n\nexport const useSpringRef = <State extends Lookup = Lookup>() =>\n  useState(initSpringRef)[0] as SpringRefType<State>\n", "import { useConstant, useOnce } from '@react-spring/shared'\n\nimport { SpringValue } from '../SpringValue'\nimport { SpringUpdate } from '../types'\n\n/**\n * Creates a constant single `SpringValue` that can be interacted\n * with imperatively. This is an advanced API and does not react\n * to updates from the parent component e.g. passing a new initial value\n *\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const opacity = useSpringValue(1)\n *\n *   return <animated.div style={{ opacity }} />\n * }\n * ```\n *\n * @param initial – The initial value of the `SpringValue`.\n * @param props – Typically the same props as `useSpring` e.g. `config`, `loop` etc.\n *\n * @public\n */\nexport const useSpringValue = <T>(\n  initial: Exclude<T, object>,\n  props?: SpringUpdate<T>\n) => {\n  const springValue = useConstant(() => new SpringValue(initial, props))\n\n  useOnce(() => () => {\n    springValue.stop()\n  })\n\n  return springValue\n}\n", "import { each, is, useIsomorphicLayoutEffect } from '@react-spring/shared'\nimport { Lookup } from '@react-spring/types'\n\nimport { Valid } from '../types/common'\nimport { PickAnimated, SpringValues } from '../types'\n\nimport { SpringRef } from '../SpringRef'\nimport { Controller } from '../Controller'\n\nimport { UseSpringProps } from './useSpring'\nimport { useSprings } from './useSprings'\nimport { replaceRef } from '../helpers'\n\nexport type UseTrailProps<Props extends object = any> = UseSpringProps<Props>\n\nexport function useTrail<Props extends object>(\n  length: number,\n  props: (\n    i: number,\n    ctrl: Controller\n  ) => UseTrailProps | (Props & Valid<Props, UseTrailProps<Props>>),\n  deps?: readonly any[]\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup<any>\n    ? [SpringValues<State>[], SpringRef<State>]\n    : never\n  : never\n\n/**\n * This hook is an abstraction around `useSprings` and is designed to\n * automatically orchestrate the springs to stagger one after the other\n *\n * ```jsx\n * export const MyComponent = () => {\n *  const trails = useTrail(3, {opacity: 0})\n *\n *  return trails.map(styles => <animated.div style={styles} />)\n * }\n * ```\n *\n * @param length – The number of springs you want to create\n * @param propsArg – The props to pass to the internal `useSprings` hook,\n * therefore is the same as `useSprings`.\n *\n * @public\n */\nexport function useTrail<Props extends object>(\n  length: number,\n  props: UseTrailProps | (Props & Valid<Props, UseTrailProps<Props>>)\n): SpringValues<PickAnimated<Props>>[]\n\n/**\n * This hook is an abstraction around `useSprings` and is designed to\n * automatically orchestrate the springs to stagger one after the other\n *\n * ```jsx\n * export const MyComponent = () => {\n *  const trails = useTrail(3, {opacity: 0}, [])\n *\n *  return trails.map(styles => <animated.div style={styles} />)\n * }\n * ```\n *\n * @param length – The number of springs you want to create\n * @param propsArg – The props to pass to the internal `useSprings` hook,\n * therefore is the same as `useSprings`.\n * @param deps – The optional array of dependencies to pass to the internal\n * `useSprings` hook, therefore is the same as `useSprings`.\n *\n * @public\n */\nexport function useTrail<Props extends object>(\n  length: number,\n  props: UseTrailProps | (Props & Valid<Props, UseTrailProps<Props>>),\n  deps: readonly any[]\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup<any>\n    ? [SpringValues<State>[], SpringRef<State>]\n    : never\n  : never\n\nexport function useTrail(\n  length: number,\n  propsArg: unknown,\n  deps?: readonly any[]\n) {\n  const propsFn = is.fun(propsArg) && propsArg\n  if (propsFn && !deps) deps = []\n\n  // The trail is reversed when every render-based update is reversed.\n  let reverse = true\n  let passedRef: SpringRef | undefined = undefined\n\n  const result = useSprings(\n    length,\n    (i, ctrl) => {\n      const props = propsFn ? propsFn(i, ctrl) : propsArg\n      passedRef = props.ref\n      reverse = reverse && props.reverse\n\n      return props\n    },\n    // Ensure the props function is called when no deps exist.\n    // This works around the 3 argument rule.\n    deps || [{}]\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    /**\n     * Run through the ref passed by the `useSprings` hook.\n     */\n    each(result[1].current, (ctrl, i) => {\n      const parent = result[1].current[i + (reverse ? 1 : -1)]\n\n      /**\n       * If there's a passed ref then we replace the ctrl ref with it\n       */\n      replaceRef(ctrl, passedRef)\n\n      /**\n       * And if there's a ctrl ref then we update instead of start\n       * which means nothing is fired until the start method\n       * of said passedRef is called.\n       */\n      if (ctrl.ref) {\n        if (parent) {\n          ctrl.update({ to: parent.springs })\n        }\n\n        return\n      }\n\n      if (parent) {\n        ctrl.start({ to: parent.springs })\n      } else {\n        ctrl.start()\n      }\n    })\n  }, deps)\n\n  if (propsFn || arguments.length == 3) {\n    const ref = passedRef ?? result[1]\n\n    ref['_getProps'] = (propsArg, ctrl, i) => {\n      const props = is.fun(propsArg) ? propsArg(i, ctrl) : propsArg\n      if (props) {\n        const parent = ref.current[i + (props.reverse ? 1 : -1)]\n        if (parent) props.to = parent.springs\n        return props\n      }\n    }\n    return result\n  }\n\n  return result[0]\n}\n", "import * as React from 'react'\nimport { useContext, useRef, useMemo } from 'react'\nimport { Lookup, OneOrMore, UnknownProps } from '@react-spring/types'\nimport {\n  is,\n  toArray,\n  useForceUpdate,\n  useOnce,\n  usePrev,\n  each,\n  useIsomorphicLayoutEffect,\n} from '@react-spring/shared'\n\nimport {\n  Change,\n  ControllerUpdate,\n  ItemKeys,\n  PickAnimated,\n  TransitionFn,\n  TransitionState,\n  TransitionTo,\n  UseTransitionProps,\n} from '../types'\nimport { Valid } from '../types/common'\nimport {\n  callProp,\n  detachRefs,\n  getDefaultProps,\n  hasProps,\n  inferTo,\n  replaceRef,\n} from '../helpers'\nimport { Controller, getSprings } from '../Controller'\nimport { SpringContext } from '../SpringContext'\nimport { SpringRef } from '../SpringRef'\nimport type { SpringRef as SpringRefType } from '../SpringRef'\nimport { TransitionPhase } from '../TransitionPhase'\n\ndeclare function setTimeout(handler: Function, timeout?: number): number\ndeclare function clearTimeout(timeoutId: number): void\n\nexport function useTransition<Item, Props extends object>(\n  data: OneOrMore<Item>,\n  props: () =>\n    | UseTransitionProps<Item>\n    | (Props & Valid<Props, UseTransitionProps<Item>>),\n  deps?: any[]\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [TransitionFn<Item, PickAnimated<Props>>, SpringRefType<State>]\n    : never\n  : never\n\nexport function useTransition<Item, Props extends object>(\n  data: OneOrMore<Item>,\n  props:\n    | UseTransitionProps<Item>\n    | (Props & Valid<Props, UseTransitionProps<Item>>)\n): TransitionFn<Item, PickAnimated<Props>>\n\nexport function useTransition<Item, Props extends object>(\n  data: OneOrMore<Item>,\n  props:\n    | UseTransitionProps<Item>\n    | (Props & Valid<Props, UseTransitionProps<Item>>),\n  deps: any[] | undefined\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [TransitionFn<Item, State>, SpringRefType<State>]\n    : never\n  : never\n\nexport function useTransition(\n  data: unknown,\n  props: UseTransitionProps | (() => any),\n  deps?: any[]\n): any {\n  const propsFn = is.fun(props) && props\n\n  const {\n    reset,\n    sort,\n    trail = 0,\n    expires = true,\n    exitBeforeEnter = false,\n    onDestroyed,\n    ref: propsRef,\n    config: propsConfig,\n  }: UseTransitionProps<any> = propsFn ? propsFn() : props\n\n  // Return a `SpringRef` if a deps array was passed.\n  const ref = useMemo(\n    () => (propsFn || arguments.length == 3 ? SpringRef() : void 0),\n    []\n  )\n\n  // Every item has its own transition.\n  const items = toArray(data)\n  const transitions: TransitionState[] = []\n\n  // The \"onRest\" callbacks need a ref to the latest transitions.\n  const usedTransitions = useRef<TransitionState[] | null>(null)\n  const prevTransitions = reset ? null : usedTransitions.current\n\n  useIsomorphicLayoutEffect(() => {\n    usedTransitions.current = transitions\n  })\n\n  useOnce(() => {\n    /**\n     * If transitions exist on mount of the component\n     * then reattach their refs on-mount, this was required\n     * for react18 strict mode to work properly.\n     *\n     * See https://github.com/pmndrs/react-spring/issues/1890\n     */\n\n    each(transitions, t => {\n      ref?.add(t.ctrl)\n      t.ctrl.ref = ref\n    })\n\n    // Destroy all transitions on dismount.\n    return () => {\n      each(usedTransitions.current!, t => {\n        if (t.expired) {\n          clearTimeout(t.expirationId!)\n        }\n        detachRefs(t.ctrl, ref)\n        t.ctrl.stop(true)\n      })\n    }\n  })\n\n  // Keys help with reusing transitions between renders.\n  // The `key` prop can be undefined (which means the items themselves are used\n  // as keys), or a function (which maps each item to its key), or an array of\n  // keys (which are assigned to each item by index).\n  const keys = getKeys(items, propsFn ? propsFn() : props, prevTransitions)\n\n  // Expired transitions that need clean up.\n  const expired = (reset && usedTransitions.current) || []\n  useIsomorphicLayoutEffect(() =>\n    each(expired, ({ ctrl, item, key }) => {\n      detachRefs(ctrl, ref)\n      callProp(onDestroyed, item, key)\n    })\n  )\n\n  // Map old indices to new indices.\n  const reused: number[] = []\n  if (prevTransitions)\n    each(prevTransitions, (t, i) => {\n      // Expired transitions are not rendered.\n      if (t.expired) {\n        clearTimeout(t.expirationId!)\n        expired.push(t)\n      } else {\n        i = reused[i] = keys.indexOf(t.key)\n        if (~i) transitions[i] = t\n      }\n    })\n\n  // Mount new items with fresh transitions.\n  each(items, (item, i) => {\n    if (!transitions[i]) {\n      transitions[i] = {\n        key: keys[i],\n        item,\n        phase: TransitionPhase.MOUNT,\n        ctrl: new Controller(),\n      }\n\n      transitions[i].ctrl.item = item\n    }\n  })\n\n  // Update the item of any transition whose key still exists,\n  // and ensure leaving transitions are rendered until they finish.\n  if (reused.length) {\n    let i = -1\n    const { leave }: UseTransitionProps<any> = propsFn ? propsFn() : props\n    each(reused, (keyIndex, prevIndex) => {\n      const t = prevTransitions![prevIndex]\n      if (~keyIndex) {\n        i = transitions.indexOf(t)\n        transitions[i] = { ...t, item: items[keyIndex] }\n      } else if (leave) {\n        transitions.splice(++i, 0, t)\n      }\n    })\n  }\n\n  if (is.fun(sort)) {\n    transitions.sort((a, b) => sort(a.item, b.item))\n  }\n\n  // Track cumulative delay for the \"trail\" prop.\n  let delay = -trail\n\n  // Expired transitions use this to dismount.\n  const forceUpdate = useForceUpdate()\n\n  // These props are inherited by every phase change.\n  const defaultProps = getDefaultProps<UseTransitionProps>(props)\n  // Generate changes to apply in useEffect.\n  const changes = new Map<TransitionState, Change>()\n  const exitingTransitions = useRef(new Map<TransitionState, Change>())\n\n  const forceChange = useRef(false)\n  each(transitions, (t, i) => {\n    const key = t.key\n    const prevPhase = t.phase\n\n    const p: UseTransitionProps<any> = propsFn ? propsFn() : props\n\n    let to: TransitionTo<any>\n    let phase: TransitionPhase\n\n    const propsDelay = callProp(p.delay || 0, key)\n\n    if (prevPhase == TransitionPhase.MOUNT) {\n      to = p.enter\n      phase = TransitionPhase.ENTER\n    } else {\n      const isLeave = keys.indexOf(key) < 0\n      if (prevPhase != TransitionPhase.LEAVE) {\n        if (isLeave) {\n          to = p.leave\n          phase = TransitionPhase.LEAVE\n        } else if ((to = p.update)) {\n          phase = TransitionPhase.UPDATE\n        } else return\n      } else if (!isLeave) {\n        to = p.enter\n        phase = TransitionPhase.ENTER\n      } else return\n    }\n\n    // When \"to\" is a function, it can return (1) an array of \"useSpring\" props,\n    // (2) an async function, or (3) an object with any \"useSpring\" props.\n    to = callProp(to, t.item, i)\n    to = is.obj(to) ? inferTo(to) : { to }\n\n    /**\n     * This would allow us to give different delays for phases.\n     * If we were to do this, we'd have to suffle the prop\n     * spreading below to set delay last.\n     * But if we were going to do that, we should consider letting\n     * the prop trail also be part of a phase.\n     */\n    // if (to.delay) {\n    //   phaseDelay = callProp(to.delay, key)\n    // }\n\n    if (!to.config) {\n      const config = propsConfig || defaultProps.config\n      to.config = callProp(config, t.item, i, phase)\n    }\n\n    delay += trail\n\n    // The payload is used to update the spring props once the current render is committed.\n    const payload: ControllerUpdate<UnknownProps> = {\n      ...defaultProps,\n      // we need to add our props.delay value you here.\n      delay: propsDelay + delay,\n      ref: propsRef,\n      immediate: p.immediate,\n      // This prevents implied resets.\n      reset: false,\n      // Merge any phase-specific props.\n      ...(to as any),\n    }\n\n    if (phase == TransitionPhase.ENTER && is.und(payload.from)) {\n      const p = propsFn ? propsFn() : props\n      // The `initial` prop is used on the first render of our parent component,\n      // as well as when `reset: true` is passed. It overrides the `from` prop\n      // when defined, and it makes `enter` instant when null.\n      const from = is.und(p.initial) || prevTransitions ? p.from : p.initial\n\n      payload.from = callProp(from, t.item, i)\n    }\n\n    const { onResolve } = payload\n    payload.onResolve = result => {\n      callProp(onResolve, result)\n\n      const transitions = usedTransitions.current!\n      const t = transitions.find(t => t.key === key)\n      if (!t) return\n\n      // Reset the phase of a cancelled enter/leave transition, so it can\n      // retry the animation on the next render.\n      if (result.cancelled && t.phase != TransitionPhase.UPDATE) {\n        /**\n         * @legacy Reset the phase of a cancelled enter/leave transition, so it can\n         * retry the animation on the next render.\n         *\n         * Note: leaving this here made the transitioned item respawn.\n         */\n        // t.phase = prevPhase\n        return\n      }\n\n      if (t.ctrl.idle) {\n        const idle = transitions.every(t => t.ctrl.idle)\n        if (t.phase == TransitionPhase.LEAVE) {\n          const expiry = callProp(expires, t.item)\n          if (expiry !== false) {\n            const expiryMs = expiry === true ? 0 : expiry\n            t.expired = true\n\n            // Force update once the expiration delay ends.\n            if (!idle && expiryMs > 0) {\n              // The maximum timeout is 2^31-1\n              if (expiryMs <= 0x7fffffff)\n                t.expirationId = setTimeout(forceUpdate, expiryMs)\n              return\n            }\n          }\n        }\n        // Force update once idle and expired items exist.\n        if (idle && transitions.some(t => t.expired)) {\n          /**\n           * Remove the exited transition from the list\n           * this may not exist but we'll try anyway.\n           */\n          exitingTransitions.current.delete(t)\n\n          if (exitBeforeEnter) {\n            /**\n             * If we have exitBeforeEnter == true\n             * we need to force the animation to start\n             */\n            forceChange.current = true\n          }\n\n          forceUpdate()\n        }\n      }\n    }\n\n    const springs = getSprings(t.ctrl, payload)\n\n    /**\n     * Make a separate map for the exiting changes and \"regular\" changes\n     */\n    if (phase === TransitionPhase.LEAVE && exitBeforeEnter) {\n      exitingTransitions.current.set(t, { phase, springs, payload })\n    } else {\n      changes.set(t, { phase, springs, payload })\n    }\n  })\n\n  // The prop overrides from an ancestor.\n  const context = useContext(SpringContext)\n  const prevContext = usePrev(context)\n  const hasContext = context !== prevContext && hasProps(context)\n\n  // Merge the context into each transition.\n  useIsomorphicLayoutEffect(() => {\n    if (hasContext) {\n      each(transitions, t => {\n        t.ctrl.start({ default: context })\n      })\n    }\n  }, [context])\n\n  each(changes, (_, t) => {\n    /**\n     * If we have children to exit because exitBeforeEnter is\n     * set to true, we remove the transitions so they go to back\n     * to their initial state.\n     */\n    if (exitingTransitions.current.size) {\n      const ind = transitions.findIndex(state => state.key === t.key)\n      transitions.splice(ind, 1)\n    }\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      /*\n       * if exitingTransitions.current has a size it means we're exiting before enter\n       * so we want to map through those and fire those first.\n       */\n      each(\n        exitingTransitions.current.size ? exitingTransitions.current : changes,\n        ({ phase, payload }, t) => {\n          const { ctrl } = t\n\n          t.phase = phase\n\n          // Attach the controller to our local ref.\n          ref?.add(ctrl)\n\n          // Merge the context into new items.\n          if (hasContext && phase == TransitionPhase.ENTER) {\n            ctrl.start({ default: context })\n          }\n\n          if (payload) {\n            // Update the injected ref if needed.\n            replaceRef(ctrl, payload.ref)\n\n            /**\n             * When an injected ref exists, the update is postponed\n             * until the ref has its `start` method called.\n             * Unless we have exitBeforeEnter in which case will skip\n             * to enter the new animation straight away as if they \"overlapped\"\n             */\n            if ((ctrl.ref || ref) && !forceChange.current) {\n              ctrl.update(payload)\n            } else {\n              ctrl.start(payload)\n\n              if (forceChange.current) {\n                forceChange.current = false\n              }\n            }\n          }\n        }\n      )\n    },\n    reset ? void 0 : deps\n  )\n\n  const renderTransitions: TransitionFn = render => (\n    <>\n      {transitions.map((t, i) => {\n        const { springs } = changes.get(t) || t.ctrl\n        const elem: any = render({ ...springs }, t.item, t, i)\n        return elem && elem.type ? (\n          <elem.type\n            {...elem.props}\n            key={is.str(t.key) || is.num(t.key) ? t.key : t.ctrl.id}\n            ref={elem.ref}\n          />\n        ) : (\n          elem\n        )\n      })}\n    </>\n  )\n\n  return ref ? [renderTransitions, ref] : renderTransitions\n}\n\n/** Local state for auto-generated item keys */\nlet nextKey = 1\n\nfunction getKeys(\n  items: readonly any[],\n  { key, keys = key }: { key?: ItemKeys; keys?: ItemKeys },\n  prevTransitions: TransitionState[] | null\n): readonly any[] {\n  if (keys === null) {\n    const reused = new Set()\n    return items.map(item => {\n      const t =\n        prevTransitions &&\n        prevTransitions.find(\n          t =>\n            t.item === item &&\n            t.phase !== TransitionPhase.LEAVE &&\n            !reused.has(t)\n        )\n      if (t) {\n        reused.add(t)\n        return t.key\n      }\n      return nextKey++\n    })\n  }\n  return is.und(keys) ? items : is.fun(keys) ? items.map(keys) : toArray(keys)\n}\n", "import { MutableRefObject } from 'react'\nimport { each, onScroll, useIsomorphicLayoutEffect } from '@react-spring/shared'\n\nimport { SpringProps, SpringValues } from '../types'\n\nimport { useSpring } from './useSpring'\n\nexport interface UseScrollOptions extends Omit<SpringProps, 'to' | 'from'> {\n  container?: MutableRefObject<HTMLElement>\n}\n\n/**\n * A small utility abstraction around our signature useSpring hook. It's a great way to create\n * a scroll-linked animation. With either the raw value of distance or a 0-1 progress value.\n * You can either use the scroll values of the whole document, or just a specific element.\n *\n * \n ```jsx\n    import { useScroll, animated } from '@react-spring/web'\n\n    function MyComponent() {\n      const { scrollYProgress } = useScroll()\n\n      return (\n        <animated.div style={{ opacity: scrollYProgress }}>\n          Hello World\n        </animated.div>\n      )\n    }\n  ```\n * \n * @param {UseScrollOptions} useScrollOptions options for the useScroll hook.\n * @param {MutableRefObject<HTMLElement>} useScrollOptions.container the container to listen to scroll events on, defaults to the window.\n *\n * @returns {SpringValues<{scrollX: number; scrollY: number; scrollXProgress: number; scrollYProgress: number}>} SpringValues the collection of values returned from the inner hook\n */\nexport const useScroll = ({\n  container,\n  ...springOptions\n}: UseScrollOptions = {}): SpringValues<{\n  scrollX: number\n  scrollY: number\n  scrollXProgress: number\n  scrollYProgress: number\n}> => {\n  const [scrollValues, api] = useSpring(\n    () => ({\n      scrollX: 0,\n      scrollY: 0,\n      scrollXProgress: 0,\n      scrollYProgress: 0,\n      ...springOptions,\n    }),\n    []\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onScroll(\n      ({ x, y }) => {\n        api.start({\n          scrollX: x.current,\n          scrollXProgress: x.progress,\n          scrollY: y.current,\n          scrollYProgress: y.progress,\n        })\n      },\n      { container: container?.current || undefined }\n    )\n\n    return () => {\n      /**\n       * Stop the springs on unmount.\n       */\n      each(Object.values(scrollValues), value => value.stop())\n\n      cleanupScroll()\n    }\n  }, [])\n\n  return scrollValues\n}\n", "import { MutableRefObject } from 'react'\nimport { onResize, each, useIsomorphicLayoutEffect } from '@react-spring/shared'\n\nimport { SpringProps, SpringValues } from '../types'\n\nimport { useSpring } from './useSpring'\n\nexport interface UseResizeOptions extends Omit<SpringProps, 'to' | 'from'> {\n  container?: MutableRefObject<HTMLElement | null | undefined>\n}\n\n/**\n * A small abstraction around the `useSpring` hook. It returns a `SpringValues` \n * object with the `width` and `height` of the element it's attached to & doesn't \n * necessarily have to be attached to the window, by passing a `container` you \n * can observe that element's size instead.\n * \n ```jsx\n    import { useResize, animated } from '@react-spring/web'\n\n    function MyComponent() {\n      const { width } = useResize()\n\n      return (\n        <animated.div style={{ width }}>\n          Hello World\n        </animated.div>\n      )\n    }\n  ```\n * \n * @param {UseResizeOptions} UseResizeOptions options for the useScroll hook.\n * @param {MutableRefObject<HTMLElement>} UseResizeOptions.container the container to listen to scroll events on, defaults to the window.\n *\n * @returns {SpringValues<{width: number; height: number;}>} SpringValues the collection of values returned from the inner hook\n */\nexport const useResize = ({\n  container,\n  ...springOptions\n}: UseResizeOptions): SpringValues<{\n  width: number\n  height: number\n}> => {\n  const [sizeValues, api] = useSpring(\n    () => ({\n      width: 0,\n      height: 0,\n      ...springOptions,\n    }),\n    []\n  )\n\n  useIsomorphicLayoutEffect(() => {\n    const cleanupScroll = onResize(\n      ({ width, height }) => {\n        api.start({\n          width,\n          height,\n          immediate:\n            sizeValues.width.get() === 0 || sizeValues.height.get() === 0,\n        })\n      },\n      { container: container?.current || undefined }\n    )\n\n    return () => {\n      /**\n       * Stop the springs on unmount.\n       */\n      each(Object.values(sizeValues), value => value.stop())\n\n      cleanupScroll()\n    }\n  }, [])\n\n  return sizeValues\n}\n", "import { RefObject, useRef, useState } from 'react'\nimport { is, useIsomorphicLayoutEffect } from '@react-spring/shared'\nimport { Lookup } from '@react-spring/types'\n\nimport { PickAnimated, SpringValues } from '../types'\nimport { useSpring, UseSpringProps } from './useSpring'\nimport { Valid } from '../types/common'\n\nexport interface IntersectionArgs\n  extends Omit<IntersectionObserverInit, 'root' | 'threshold'> {\n  root?: React.MutableRefObject<HTMLElement>\n  once?: boolean\n  amount?: 'any' | 'all' | number | number[]\n}\n\nconst defaultThresholdOptions = {\n  any: 0,\n  all: 1,\n}\n\nexport function useInView(args?: IntersectionArgs): [RefObject<any>, boolean]\nexport function useInView<Props extends object>(\n  /**\n   * TODO: make this narrower to only accept reserved props.\n   */\n  props: () => Props & Valid<Props, UseSpringProps<Props>>,\n  args?: IntersectionArgs\n): PickAnimated<Props> extends infer State\n  ? State extends Lookup\n    ? [RefObject<any>, SpringValues<State>]\n    : never\n  : never\nexport function useInView<TElement extends HTMLElement>(\n  props?: (() => UseSpringProps<any>) | IntersectionArgs,\n  args?: IntersectionArgs\n) {\n  const [isInView, setIsInView] = useState(false)\n  const ref = useRef<TElement>()\n\n  const propsFn = is.fun(props) && props\n\n  const springsProps = propsFn ? propsFn() : {}\n  const { to = {}, from = {}, ...restSpringProps } = springsProps\n\n  const intersectionArguments = propsFn ? args : props\n\n  const [springs, api] = useSpring(() => ({ from, ...restSpringProps }), [])\n\n  useIsomorphicLayoutEffect(() => {\n    const element = ref.current\n    const {\n      root,\n      once,\n      amount = 'any',\n      ...restArgs\n    } = intersectionArguments ?? {}\n\n    if (\n      !element ||\n      (once && isInView) ||\n      typeof IntersectionObserver === 'undefined'\n    )\n      return\n\n    const activeIntersections = new WeakMap<Element, VoidFunction>()\n\n    const onEnter = () => {\n      if (to) {\n        // @ts-expect-error – TODO: fix this type error\n        api.start(to)\n      }\n\n      setIsInView(true)\n\n      const cleanup = () => {\n        if (from) {\n          api.start(from)\n        }\n        setIsInView(false)\n      }\n\n      return once ? undefined : cleanup\n    }\n\n    const handleIntersection: IntersectionObserverCallback = entries => {\n      entries.forEach(entry => {\n        const onLeave = activeIntersections.get(entry.target)\n\n        if (entry.isIntersecting === Boolean(onLeave)) {\n          return\n        }\n\n        if (entry.isIntersecting) {\n          const newOnLeave = onEnter()\n          if (is.fun(newOnLeave)) {\n            activeIntersections.set(entry.target, newOnLeave)\n          } else {\n            observer.unobserve(entry.target)\n          }\n        } else if (onLeave) {\n          onLeave()\n          activeIntersections.delete(entry.target)\n        }\n      })\n    }\n\n    const observer = new IntersectionObserver(handleIntersection, {\n      root: (root && root.current) || undefined,\n      threshold:\n        typeof amount === 'number' || Array.isArray(amount)\n          ? amount\n          : defaultThresholdOptions[amount],\n      ...restArgs,\n    })\n\n    observer.observe(element)\n\n    return () => observer.unobserve(element)\n  }, [intersectionArguments])\n\n  if (propsFn) {\n    return [ref, springs]\n  }\n\n  return [ref, isInView]\n}\n", "import { NoInfer, UnknownProps } from '@react-spring/types'\nimport { useSpring, UseSpringProps } from '../hooks/useSpring'\nimport { SpringValues, SpringToFn, SpringChain } from '../types'\n\nexport type SpringComponentProps<State extends object = UnknownProps> =\n  unknown &\n    UseSpringProps<State> & {\n      children: (values: SpringValues<State>) => JSX.Element | null\n    }\n\n// Infer state from \"from\" object prop.\nexport function Spring<State extends object>(\n  props: {\n    from: State\n    to?: SpringChain<NoInfer<State>> | SpringToFn<NoInfer<State>>\n  } & Omit<SpringComponentProps<NoInfer<State>>, 'from' | 'to'>\n): JSX.Element | null\n\n// Infer state from \"to\" object prop.\nexport function Spring<State extends object>(\n  props: { to: State } & Omit<SpringComponentProps<NoInfer<State>>, 'to'>\n): JSX.Element | null\n\nexport function Spring({ children, ...props }: any) {\n  return children(useSpring(props))\n}\n", "import { ReactNode } from 'react'\nimport { NoInfer, Falsy } from '@react-spring/types'\nimport { is } from '@react-spring/shared'\n\nimport { Valid } from '../types/common'\nimport { PickAnimated, SpringValues } from '../types'\nimport { UseSpringProps } from '../hooks/useSpring'\nimport { useTrail } from '../hooks/useTrail'\n\nexport type TrailComponentProps<Item, Props extends object = any> = unknown &\n  UseSpringProps<Props> & {\n    items: readonly Item[]\n    children: (\n      item: NoInfer<Item>,\n      index: number\n    ) => ((values: SpringValues<PickAnimated<Props>>) => ReactNode) | Falsy\n  }\n\nexport function Trail<Item, Props extends TrailComponentProps<Item>>({\n  items,\n  children,\n  ...props\n}: Props & Valid<Props, TrailComponentProps<Item, Props>>) {\n  const trails: any[] = useTrail(items.length, props)\n  return items.map((item, index) => {\n    const result = children(item, index)\n    return is.fun(result) ? result(trails[index]) : result\n  })\n}\n", "import { Valid } from '../types/common'\nimport { TransitionComponentProps } from '../types'\nimport { useTransition } from '../hooks'\n\nexport function Transition<Item, Props extends TransitionComponentProps<Item>>(\n  props:\n    | TransitionComponentProps<Item>\n    | (Props & Valid<Props, TransitionComponentProps<Item, Props>>)\n): JSX.Element\n\nexport function Transition({\n  items,\n  children,\n  ...props\n}: TransitionComponentProps<any>) {\n  return useTransition(items, props)(children)\n}\n", "import { FluidValue, deprecateInterpolate } from '@react-spring/shared'\nimport {\n  Constrain,\n  OneOrMore,\n  Animatable,\n  ExtrapolateType,\n  InterpolatorConfig,\n  InterpolatorFn,\n} from '@react-spring/types'\nimport { Interpolation } from './Interpolation'\n\n/** Map the value of one or more dependencies */\nexport const to: Interpolator = (source: any, ...args: [any]) =>\n  new Interpolation(source, args)\n\n/** @deprecated Use the `to` export instead */\nexport const interpolate: Interpolator = (source: any, ...args: [any]) => (\n  deprecateInterpolate(), new Interpolation(source, args)\n)\n\n/** Extract the raw value types that are being interpolated */\nexport type Interpolated<T extends ReadonlyArray<any>> = {\n  [P in keyof T]: T[P] extends infer Element\n    ? Element extends FluidValue<infer U>\n      ? U\n      : Element\n    : never\n}\n\n/**\n * This interpolates one or more `FluidValue` objects.\n * The exported `interpolate` function uses this type.\n */\nexport interface Interpolator {\n  // Tuple of parent values\n  <Input extends ReadonlyArray<any>, Output>(\n    parents: Input,\n    interpolator: (...args: Interpolated<Input>) => Output\n  ): Interpolation<Output>\n\n  // Single parent value\n  <Input, Output>(\n    parent: FluidValue<Input> | Input,\n    interpolator: InterpolatorFn<Input, Output>\n  ): Interpolation<Output>\n\n  // Interpolation config\n  <Out>(\n    parents: OneOrMore<FluidValue>,\n    config: InterpolatorConfig<Out>\n  ): Interpolation<Animatable<Out>>\n\n  // Range shortcuts\n  <Out>(\n    parents: OneOrMore<FluidValue<number>> | FluidValue<number[]>,\n    range: readonly number[],\n    output: readonly Constrain<Out, Animatable>[],\n    extrapolate?: ExtrapolateType\n  ): Interpolation<Animatable<Out>>\n}\n", "import { Arrify, InterpolatorArgs, InterpolatorFn } from '@react-spring/types'\nimport {\n  is,\n  raf,\n  each,\n  isEqual,\n  toArray,\n  frameLoop,\n  FluidValue,\n  getFluidValue,\n  createInterpolator,\n  Globals as G,\n  callFluidObservers,\n  addFluidObserver,\n  removeFluidObserver,\n  hasFluidValue,\n} from '@react-spring/shared'\n\nimport { FrameValue, isFrameValue } from './FrameValue'\nimport {\n  getAnimated,\n  setAnimated,\n  getAnimatedType,\n  getPayload,\n} from '@react-spring/animated'\n\n/**\n * An `Interpolation` is a memoized value that's computed whenever one of its\n * `FluidValue` dependencies has its value changed.\n *\n * Other `FrameValue` objects can depend on this. For example, passing an\n * `Interpolation` as the `to` prop of a `useSpring` call will trigger an\n * animation toward the memoized value.\n */\nexport class Interpolation<\n  Input = any,\n  Output = any,\n> extends FrameValue<Output> {\n  /** Useful for debugging. */\n  key?: string\n\n  /** Equals false when in the frameloop */\n  idle = true\n\n  /** The function that maps inputs values to output */\n  readonly calc: InterpolatorFn<Input, Output>\n\n  /** The inputs which are currently animating */\n  protected _active = new Set<FluidValue>()\n\n  constructor(\n    /** The source of input values */\n    readonly source: unknown,\n    args: InterpolatorArgs<Input, Output>\n  ) {\n    super()\n    this.calc = createInterpolator(...args)\n\n    const value = this._get()\n    const nodeType = getAnimatedType(value)\n\n    // Assume the computed value never changes type.\n    setAnimated(this, nodeType.create(value))\n  }\n\n  advance(_dt?: number) {\n    const value = this._get()\n    const oldValue = this.get()\n    if (!isEqual(value, oldValue)) {\n      getAnimated(this)!.setValue(value)\n      this._onChange(value, this.idle)\n    }\n    // Become idle when all parents are idle or paused.\n    if (!this.idle && checkIdle(this._active)) {\n      becomeIdle(this)\n    }\n  }\n\n  protected _get() {\n    const inputs: Arrify<Input> = is.arr(this.source)\n      ? this.source.map(getFluidValue)\n      : (toArray(getFluidValue(this.source)) as any)\n\n    return this.calc(...inputs)\n  }\n\n  protected _start() {\n    if (this.idle && !checkIdle(this._active)) {\n      this.idle = false\n\n      each(getPayload(this)!, node => {\n        node.done = false\n      })\n\n      if (G.skipAnimation) {\n        raf.batchedUpdates(() => this.advance())\n        becomeIdle(this)\n      } else {\n        frameLoop.start(this)\n      }\n    }\n  }\n\n  // Observe our sources only when we're observed.\n  protected _attach() {\n    let priority = 1\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        addFluidObserver(source, this)\n      }\n      if (isFrameValue(source)) {\n        if (!source.idle) {\n          this._active.add(source)\n        }\n        priority = Math.max(priority, source.priority + 1)\n      }\n    })\n    this.priority = priority\n    this._start()\n  }\n\n  // Stop observing our sources once we have no observers.\n  protected _detach() {\n    each(toArray(this.source), source => {\n      if (hasFluidValue(source)) {\n        removeFluidObserver(source, this)\n      }\n    })\n    this._active.clear()\n    becomeIdle(this)\n  }\n\n  /** @internal */\n  eventObserved(event: FrameValue.Event) {\n    // Update our value when an idle parent is changed,\n    // and enter the frameloop when a parent is resumed.\n    if (event.type == 'change') {\n      if (event.idle) {\n        this.advance()\n      } else {\n        this._active.add(event.parent)\n        this._start()\n      }\n    }\n    // Once all parents are idle, the `advance` method runs one more time,\n    // so we should avoid updating the `idle` status here.\n    else if (event.type == 'idle') {\n      this._active.delete(event.parent)\n    }\n    // Ensure our priority is greater than all parents, which means\n    // our value won't be updated until our parents have updated.\n    else if (event.type == 'priority') {\n      this.priority = toArray(this.source).reduce(\n        (highest: number, parent) =>\n          Math.max(highest, (isFrameValue(parent) ? parent.priority : 0) + 1),\n        0\n      )\n    }\n  }\n}\n\n/** Returns true for an idle source. */\nfunction isIdle(source: any) {\n  return source.idle !== false\n}\n\n/** Return true if all values in the given set are idle or paused. */\nfunction checkIdle(active: Set<FluidValue>) {\n  // Parents can be active even when paused, so the `.every` check\n  // removes us from the frameloop if all active parents are paused.\n  return !active.size || Array.from(active).every(isIdle)\n}\n\n/** Become idle if not already idle. */\nfunction becomeIdle(self: Interpolation) {\n  if (!self.idle) {\n    self.idle = true\n\n    each(getPayload(self)!, node => {\n      node.done = true\n    })\n\n    callFluidObservers(self, {\n      type: 'idle',\n      parent: self,\n    })\n  }\n}\n", "import {\n  Globals,\n  frameLoop,\n  createStringInterpolator,\n} from '@react-spring/shared'\nimport { Interpolation } from './Interpolation'\n\n// Sane defaults\nGlobals.assign({\n  createStringInterpolator,\n  to: (source, args) => new Interpolation(source, args),\n})\n\nexport { Globals }\n\n/** Advance all animations by the given time */\nexport const update = frameLoop.advance\n", "export * from './hooks'\nexport * from './components'\nexport * from './interpolate'\nexport * from './constants'\nexport * from './globals'\n\nexport { Controller } from './Controller'\nexport { SpringValue } from './SpringValue'\nexport { SpringContext } from './SpringContext'\nexport { SpringRef } from './SpringRef'\n\nexport { FrameValue } from './FrameValue'\nexport { Interpolation } from './Interpolation'\nexport { BailSignal } from './runAsync'\nexport {\n  createInterpolator,\n  useIsomorphicLayoutEffect,\n  useReducedMotion,\n  easings,\n} from '@react-spring/shared'\nexport { inferTo } from './helpers'\n\nexport * from './types'\nexport * from '@react-spring/types'\n", "import { defineHidden } from '@react-spring/shared'\nimport { AnimatedValue } from './AnimatedValue'\n\nconst $node: any = Symbol.for('Animated:node')\n\nexport const isAnimated = <T = any>(value: any): value is Animated<T> =>\n  !!value && value[$node] === value\n\n/** Get the owner's `Animated` node. */\nexport const getAnimated = <T = any>(owner: any): Animated<T> | undefined =>\n  owner && owner[$node]\n\n/** Set the owner's `Animated` node. */\nexport const setAnimated = (owner: any, node: Animated) =>\n  defineHidden(owner, $node, node)\n\n/** Get every `AnimatedValue` in the owner's `Animated` node. */\nexport const getPayload = (owner: any): AnimatedValue[] | undefined =>\n  owner && owner[$node] && owner[$node].getPayload()\n\nexport abstract class Animated<T = any> {\n  /** The cache of animated values */\n  protected payload?: Payload\n\n  constructor() {\n    // This makes \"isAnimated\" return true.\n    setAnimated(this, this)\n  }\n\n  /** Get the current value. Pass `true` for only animated values. */\n  abstract getValue(animated?: boolean): T\n\n  /** Set the current value. Returns `true` if the value changed. */\n  abstract setValue(value: T): boolean | void\n\n  /** Reset any animation state. */\n  abstract reset(goal?: T): void\n\n  /** Get every `AnimatedValue` used by this node. */\n  getPayload(): Payload {\n    return this.payload || []\n  }\n}\n\nexport type Payload = readonly AnimatedValue[]\n", "import { is } from '@react-spring/shared'\nimport { Animated, Payload } from './Animated'\n\n/** An animated number or a native attribute value */\nexport class AnimatedValue<T = any> extends Animated {\n  done = true\n  elapsedTime!: number\n  lastPosition!: number\n  lastVelocity?: number | null\n  v0?: number | null\n  durationProgress = 0\n\n  constructor(protected _value: T) {\n    super()\n    if (is.num(this._value)) {\n      this.lastPosition = this._value\n    }\n  }\n\n  /** @internal */\n  static create(value: any) {\n    return new AnimatedValue(value)\n  }\n\n  getPayload(): Payload {\n    return [this]\n  }\n\n  getValue() {\n    return this._value\n  }\n\n  setValue(value: T, step?: number) {\n    if (is.num(value)) {\n      this.lastPosition = value\n      if (step) {\n        value = (Math.round(value / step) * step) as any\n        if (this.done) {\n          this.lastPosition = value as any\n        }\n      }\n    }\n    if (this._value === value) {\n      return false\n    }\n    this._value = value\n    return true\n  }\n\n  reset() {\n    const { done } = this\n    this.done = false\n    if (is.num(this._value)) {\n      this.elapsedTime = 0\n      this.durationProgress = 0\n      this.lastPosition = this._value\n      if (done) this.lastVelocity = null\n      this.v0 = null\n    }\n  }\n}\n", "import { AnimatedValue } from './AnimatedValue'\nimport { is, createInterpolator } from '@react-spring/shared'\n\ntype Value = string | number\n\nexport class AnimatedString extends AnimatedValue<Value> {\n  protected declare _value: number\n  protected _string: string | null = null\n  protected _toString: (input: number) => string\n\n  constructor(value: string) {\n    super(0)\n    this._toString = createInterpolator({\n      output: [value, value],\n    })\n  }\n\n  /** @internal */\n  static create(value: string) {\n    return new AnimatedString(value)\n  }\n\n  getValue() {\n    const value = this._string\n    return value == null ? (this._string = this._toString(this._value)) : value\n  }\n\n  setValue(value: Value) {\n    if (is.str(value)) {\n      if (value == this._string) {\n        return false\n      }\n      this._string = value\n      this._value = 1\n    } else if (super.setValue(value)) {\n      this._string = null\n    } else {\n      return false\n    }\n    return true\n  }\n\n  reset(goal?: string) {\n    if (goal) {\n      this._toString = createInterpolator({\n        output: [this.getValue(), goal],\n      })\n    }\n    this._value = 0\n    super.reset()\n  }\n}\n", "import { isAnimatedString } from '@react-spring/shared'\nimport { AnimatedObject } from './AnimatedObject'\nimport { AnimatedString } from './AnimatedString'\nimport { AnimatedValue } from './AnimatedValue'\n\ntype Value = number | string\ntype Source = AnimatedValue<Value>[]\n\n/** An array of animated nodes */\nexport class AnimatedArray<\n  T extends ReadonlyArray<Value> = Value[],\n> extends AnimatedObject {\n  protected declare source: Source\n  constructor(source: T) {\n    super(source)\n  }\n\n  /** @internal */\n  static create<T extends ReadonlyArray<Value>>(source: T) {\n    return new AnimatedArray(source)\n  }\n\n  getValue(): T {\n    return this.source.map(node => node.getValue()) as any\n  }\n\n  setValue(source: T) {\n    const payload = this.getPayload()\n    // Reuse the payload when lengths are equal.\n    if (source.length == payload.length) {\n      return payload.map((node, i) => node.setValue(source[i])).some(Boolean)\n    }\n    // Remake the payload when length changes.\n    super.setValue(source.map(makeAnimated))\n    return true\n  }\n}\n\nfunction makeAnimated(value: any) {\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue\n  return nodeType.create(value)\n}\n", "import { Lookup } from '@react-spring/types'\nimport {\n  each,\n  eachProp,\n  getFluidValue,\n  hasFluidValue,\n} from '@react-spring/shared'\nimport { Animated, isAnimated, getPayload } from './Animated'\nimport { AnimatedValue } from './AnimatedValue'\nimport { TreeContext } from './context'\n\n/** An object containing `Animated` nodes */\nexport class AnimatedObject extends Animated {\n  constructor(protected source: Lookup) {\n    super()\n    this.setValue(source)\n  }\n\n  getValue(animated?: boolean) {\n    const values: Lookup = {}\n    eachProp(this.source, (source, key) => {\n      if (isAnimated(source)) {\n        values[key] = source.getValue(animated)\n      } else if (hasFluidValue(source)) {\n        values[key] = getFluidValue(source)\n      } else if (!animated) {\n        values[key] = source\n      }\n    })\n    return values\n  }\n\n  /** Replace the raw object data */\n  setValue(source: Lookup) {\n    this.source = source\n    this.payload = this._makePayload(source)\n  }\n\n  reset() {\n    if (this.payload) {\n      each(this.payload, node => node.reset())\n    }\n  }\n\n  /** Create a payload set. */\n  protected _makePayload(source: Lookup) {\n    if (source) {\n      const payload = new Set<AnimatedValue>()\n      eachProp(source, this._addToPayload, payload)\n      return Array.from(payload)\n    }\n  }\n\n  /** Add to a payload set. */\n  protected _addToPayload(this: Set<AnimatedValue>, source: any) {\n    if (TreeContext.dependencies && hasFluidValue(source)) {\n      TreeContext.dependencies.add(source)\n    }\n    const payload = getPayload(source)\n    if (payload) {\n      each(payload, node => this.add(node))\n    }\n  }\n}\n", "import { FluidValue } from '@react-spring/shared'\n\nexport type TreeContext = {\n  /**\n   * Any animated values found when updating the payload of an `AnimatedObject`\n   * are also added to this `Set` to be observed by an animated component.\n   */\n  dependencies: Set<FluidValue> | null\n}\n\nexport const TreeContext: TreeContext = { dependencies: null }\n", "import { is, isAnimatedString } from '@react-spring/shared'\nimport { AnimatedType } from './types'\nimport { AnimatedArray } from './AnimatedArray'\nimport { AnimatedString } from './AnimatedString'\nimport { AnimatedValue } from './AnimatedValue'\nimport { getAnimated } from './Animated'\n\n/** Return the `Animated` node constructor for a given value */\nexport function getAnimatedType(value: any): AnimatedType {\n  const parentNode = getAnimated(value)\n  return parentNode\n    ? (parentNode.constructor as any)\n    : is.arr(value)\n      ? AnimatedArray\n      : isAnimatedString(value)\n        ? AnimatedString\n        : AnimatedValue\n}\n", "import { Lookup } from '@react-spring/types'\nimport { is, eachProp } from '@react-spring/shared'\nimport { AnimatableComponent, withAnimated } from './withAnimated'\nimport { Animated } from './Animated'\nimport { AnimatedObject } from './AnimatedObject'\n\nexport interface HostConfig {\n  /** Provide custom logic for native updates */\n  applyAnimatedValues: (node: any, props: Lookup) => boolean | void\n  /** Wrap the `style` prop with an animated node */\n  createAnimatedStyle: (style: Lookup) => Animated\n  /** Intercept props before they're passed to an animated component */\n  getComponentProps: (props: Lookup) => typeof props\n}\n\n// A stub type that gets replaced by @react-spring/web and others.\ntype WithAnimated = {\n  (Component: AnimatableComponent): any\n  [key: string]: any\n}\n\n// For storing the animated version on the original component\nconst cacheKey = Symbol.for('AnimatedComponent')\n\nexport const createHost = (\n  components: AnimatableComponent[] | { [key: string]: AnimatableComponent },\n  {\n    applyAnimatedValues = () => false,\n    createAnimatedStyle = style => new AnimatedObject(style),\n    getComponentProps = props => props,\n  }: Partial<HostConfig> = {}\n) => {\n  const hostConfig: HostConfig = {\n    applyAnimatedValues,\n    createAnimatedStyle,\n    getComponentProps,\n  }\n\n  const animated: WithAnimated = (Component: any) => {\n    const displayName = getDisplayName(Component) || 'Anonymous'\n\n    if (is.str(Component)) {\n      Component =\n        animated[Component] ||\n        (animated[Component] = withAnimated(Component, hostConfig))\n    } else {\n      Component =\n        Component[cacheKey] ||\n        (Component[cacheKey] = withAnimated(Component, hostConfig))\n    }\n\n    Component.displayName = `Animated(${displayName})`\n    return Component\n  }\n\n  eachProp(components, (Component, key) => {\n    if (is.arr(components)) {\n      key = getDisplayName(Component)!\n    }\n    animated[key] = animated(Component)\n  })\n\n  return {\n    animated,\n  }\n}\n\nconst getDisplayName = (arg: AnimatableComponent) =>\n  is.str(arg)\n    ? arg\n    : arg && is.str(arg.displayName)\n      ? arg.displayName\n      : (is.fun(arg) && arg.name) || null\n", "import * as React from 'react'\nimport { forwardRef, useRef, Ref, useCallback, useEffect } from 'react'\nimport {\n  is,\n  each,\n  raf,\n  useForceUpdate,\n  useOnce,\n  FluidEvent,\n  FluidValue,\n  addFluidObserver,\n  removeFluidObserver,\n  useIsomorphicLayoutEffect,\n} from '@react-spring/shared'\nimport { ElementType } from '@react-spring/types'\n\nimport { AnimatedObject } from './AnimatedObject'\nimport { TreeContext } from './context'\nimport { HostConfig } from './createHost'\n\nexport type AnimatableComponent = string | Exclude<ElementType, string>\n\nexport const withAnimated = (Component: any, host: HostConfig) => {\n  const hasInstance: boolean =\n    // Function components must use \"forwardRef\" to avoid being\n    // re-rendered on every animation frame.\n    !is.fun(Component) ||\n    (Component.prototype && Component.prototype.isReactComponent)\n\n  return forwardRef((givenProps: any, givenRef: Ref<any>) => {\n    const instanceRef = useRef<any>(null)\n\n    // The `hasInstance` value is constant, so we can safely avoid\n    // the `useCallback` invocation when `hasInstance` is false.\n    const ref =\n      hasInstance &&\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useCallback(\n        (value: any) => {\n          instanceRef.current = updateRef(givenRef, value)\n        },\n        [givenRef]\n      )\n\n    const [props, deps] = getAnimatedState(givenProps, host)\n\n    const forceUpdate = useForceUpdate()\n\n    const callback = () => {\n      const instance = instanceRef.current\n      if (hasInstance && !instance) {\n        // Either this component was unmounted before changes could be\n        // applied, or the wrapped component forgot to forward its ref.\n        return\n      }\n\n      const didUpdate = instance\n        ? host.applyAnimatedValues(instance, props.getValue(true))\n        : false\n\n      // Re-render the component when native updates fail.\n      if (didUpdate === false) {\n        forceUpdate()\n      }\n    }\n\n    const observer = new PropsObserver(callback, deps)\n\n    const observerRef = useRef<PropsObserver>()\n    useIsomorphicLayoutEffect(() => {\n      observerRef.current = observer\n\n      // Observe the latest dependencies.\n      each(deps, dep => addFluidObserver(dep, observer))\n\n      return () => {\n        // Stop observing previous dependencies.\n        if (observerRef.current) {\n          each(observerRef.current.deps, dep =>\n            removeFluidObserver(dep, observerRef.current!)\n          )\n          raf.cancel(observerRef.current.update)\n        }\n      }\n    })\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(callback, [])\n    // Stop observing on unmount.\n    useOnce(() => () => {\n      const observer = observerRef.current!\n      each(observer.deps, dep => removeFluidObserver(dep, observer))\n    })\n\n    const usedProps = host.getComponentProps(props.getValue())\n    return <Component {...usedProps} ref={ref} />\n  })\n}\n\nclass PropsObserver {\n  constructor(\n    readonly update: () => void,\n    readonly deps: Set<FluidValue>\n  ) {}\n  eventObserved(event: FluidEvent) {\n    if (event.type == 'change') {\n      raf.write(this.update)\n    }\n  }\n}\n\ntype AnimatedState = [props: AnimatedObject, dependencies: Set<FluidValue>]\n\nfunction getAnimatedState(props: any, host: HostConfig): AnimatedState {\n  const dependencies = new Set<FluidValue>()\n  TreeContext.dependencies = dependencies\n\n  // Search the style for dependencies.\n  if (props.style)\n    props = {\n      ...props,\n      style: host.createAnimatedStyle(props.style),\n    }\n\n  // Search the props for dependencies.\n  props = new AnimatedObject(props)\n\n  TreeContext.dependencies = null\n  return [props, dependencies]\n}\n\nfunction updateRef<T>(ref: Ref<T>, value: T) {\n  if (ref) {\n    if (is.fun(ref)) ref(value)\n    else (ref as any).current = value\n  }\n  return value\n}\n", "import { applyProps, addEffect } from '@react-three/fiber'\n\nimport { Globals } from '@react-spring/core'\nimport { createStringInterpolator, colors, raf } from '@react-spring/shared'\nimport { createHost } from '@react-spring/animated'\n\nimport { primitives } from './primitives'\nimport { WithAnimated } from './animated'\n\nGlobals.assign({\n  createStringInterpolator,\n  colors,\n  frameLoop: 'demand',\n})\n\n// Let r3f drive the frameloop.\naddEffect(() => {\n  raf.advance()\n})\n\nconst host = createHost(primitives, {\n  // @ts-expect-error r3f related\n  applyAnimatedValues: applyProps,\n})\n\nexport const animated = host.animated as WithAnimated\nexport { animated as a }\n\nexport * from './animated'\nexport * from '@react-spring/core'\n", "import * as THREE from 'three'\nimport '@react-three/fiber'\n\nexport type Primitives = keyof JSX.IntrinsicElements\n\nexport const primitives = ['primitive'].concat(\n  Object.keys(THREE)\n    .filter(key => /^[A-Z]/.test(key))\n    .map(key => key[0].toLowerCase() + key.slice(1))\n) as Primitives[]\n", "import * as React from 'react';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\n// These are removed in Zustand v4\n// unknown\n\n// Zustand v3 marked deprecations in 3.x, but there's no visible upgrade path\n\nconst context = /* @__PURE__ */React.createContext(null);\nfunction KeyboardControls({\n  map,\n  children,\n  onChange,\n  domElement\n}) {\n  const key = map.map(item => item.name + item.keys).join('-');\n  const useControls = React.useMemo(() => {\n    return create(subscribeWithSelector(() => map.reduce((prev, cur) => ({\n      ...prev,\n      [cur.name]: false\n    }), {})));\n  }, [key]);\n  const api = React.useMemo(() => [useControls.subscribe, useControls.getState, useControls], [key]);\n  const set = useControls.setState;\n  React.useEffect(() => {\n    const config = map.map(({\n      name,\n      keys,\n      up\n    }) => ({\n      keys,\n      up,\n      fn: value => {\n        // Set zustand state\n        set({\n          [name]: value\n        });\n        // Inform callback\n        if (onChange) onChange(name, value, api[1]());\n      }\n    }));\n    const keyMap = config.reduce((out, {\n      keys,\n      fn,\n      up = true\n    }) => {\n      keys.forEach(key => out[key] = {\n        fn,\n        pressed: false,\n        up\n      });\n      return out;\n    }, {});\n    const downHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        pressed,\n        up\n      } = obj;\n      obj.pressed = true;\n      if (up || !pressed) fn(true);\n    };\n    const upHandler = ({\n      key,\n      code\n    }) => {\n      const obj = keyMap[key] || keyMap[code];\n      if (!obj) return;\n      const {\n        fn,\n        up\n      } = obj;\n      obj.pressed = false;\n      if (up) fn(false);\n    };\n    const source = domElement || window;\n    source.addEventListener('keydown', downHandler, {\n      passive: true\n    });\n    source.addEventListener('keyup', upHandler, {\n      passive: true\n    });\n    return () => {\n      source.removeEventListener('keydown', downHandler);\n      source.removeEventListener('keyup', upHandler);\n    };\n  }, [domElement, key]);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api,\n    children: children\n  });\n}\nfunction useKeyboardControls(sel) {\n  const [sub, get, store] = React.useContext(context);\n  if (sel) return store(sel);else return [sub, get];\n}\n\nexport { KeyboardControls, useKeyboardControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { SelectionBox } from 'three-stdlib';\nimport { useThree } from '@react-three/fiber';\nimport { shallow } from 'zustand/shallow';\n\nconst context = /* @__PURE__ */React.createContext([]);\nfunction Select({\n  box,\n  multiple,\n  children,\n  onChange,\n  onChangePointerUp,\n  border = '1px solid #55aaff',\n  backgroundColor = 'rgba(75, 160, 255, 0.1)',\n  filter: customFilter = item => item,\n  ...props\n}) {\n  const [downed, down] = React.useState(false);\n  const {\n    setEvents,\n    camera,\n    raycaster,\n    gl,\n    controls,\n    size,\n    get\n  } = useThree();\n  const [hovered, hover] = React.useState(false);\n  const [active, dispatch] = React.useReducer((state, {\n    object,\n    shift\n  }) => {\n    if (object === undefined) return [];else if (Array.isArray(object)) return object;else if (!shift) return state[0] === object ? [] : [object];else if (state.includes(object)) return state.filter(o => o !== object);else return [object, ...state];\n  }, []);\n  React.useEffect(() => {\n    if (downed) onChange == null || onChange(active);else onChangePointerUp == null || onChangePointerUp(active);\n  }, [active, downed]);\n  const onClick = React.useCallback(e => {\n    e.stopPropagation();\n    dispatch({\n      object: customFilter([e.object])[0],\n      shift: multiple && e.shiftKey\n    });\n  }, []);\n  const onPointerMissed = React.useCallback(e => !hovered && dispatch({}), [hovered]);\n  const ref = React.useRef(null);\n  React.useEffect(() => {\n    if (!box || !multiple) return;\n    const selBox = new SelectionBox(camera, ref.current);\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n    element.style.border = border;\n    element.style.backgroundColor = backgroundColor;\n    element.style.position = 'fixed';\n    const startPoint = new THREE.Vector2();\n    const pointTopLeft = new THREE.Vector2();\n    const pointBottomRight = new THREE.Vector2();\n    const oldRaycasterEnabled = get().events.enabled;\n    const oldControlsEnabled = controls == null ? void 0 : controls.enabled;\n    let isDown = false;\n    function prepareRay(event, vec) {\n      const {\n        offsetX,\n        offsetY\n      } = event;\n      const {\n        width,\n        height\n      } = size;\n      vec.set(offsetX / width * 2 - 1, -(offsetY / height) * 2 + 1);\n    }\n    function onSelectStart(event) {\n      var _gl$domElement$parent;\n      if (controls) controls.enabled = false;\n      setEvents({\n        enabled: false\n      });\n      down(isDown = true);\n      (_gl$domElement$parent = gl.domElement.parentElement) == null || _gl$domElement$parent.appendChild(element);\n      element.style.left = `${event.clientX}px`;\n      element.style.top = `${event.clientY}px`;\n      element.style.width = '0px';\n      element.style.height = '0px';\n      startPoint.x = event.clientX;\n      startPoint.y = event.clientY;\n    }\n    function onSelectMove(event) {\n      pointBottomRight.x = Math.max(startPoint.x, event.clientX);\n      pointBottomRight.y = Math.max(startPoint.y, event.clientY);\n      pointTopLeft.x = Math.min(startPoint.x, event.clientX);\n      pointTopLeft.y = Math.min(startPoint.y, event.clientY);\n      element.style.left = `${pointTopLeft.x}px`;\n      element.style.top = `${pointTopLeft.y}px`;\n      element.style.width = `${pointBottomRight.x - pointTopLeft.x}px`;\n      element.style.height = `${pointBottomRight.y - pointTopLeft.y}px`;\n    }\n    function onSelectOver() {\n      if (isDown) {\n        var _element$parentElemen;\n        if (controls) controls.enabled = oldControlsEnabled;\n        setEvents({\n          enabled: oldRaycasterEnabled\n        });\n        down(isDown = false);\n        (_element$parentElemen = element.parentElement) == null || _element$parentElemen.removeChild(element);\n      }\n    }\n    function pointerDown(event) {\n      if (event.shiftKey) {\n        onSelectStart(event);\n        prepareRay(event, selBox.startPoint);\n      }\n    }\n    let previous = [];\n    function pointerMove(event) {\n      if (isDown) {\n        onSelectMove(event);\n        prepareRay(event, selBox.endPoint);\n        const allSelected = selBox.select().sort(o => o.uuid).filter(o => o.isMesh);\n        if (!shallow(allSelected, previous)) {\n          previous = allSelected;\n          dispatch({\n            object: customFilter(allSelected)\n          });\n        }\n      }\n    }\n    function pointerUp(event) {\n      if (isDown) onSelectOver();\n    }\n    document.addEventListener('pointerdown', pointerDown, {\n      passive: true\n    });\n    document.addEventListener('pointermove', pointerMove, {\n      passive: true,\n      capture: true\n    });\n    document.addEventListener('pointerup', pointerUp, {\n      passive: true\n    });\n    return () => {\n      document.removeEventListener('pointerdown', pointerDown);\n      document.removeEventListener('pointermove', pointerMove, true);\n      document.removeEventListener('pointerup', pointerUp);\n    };\n  }, [size.width, size.height, raycaster, camera, controls, gl]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    onClick: onClick,\n    onPointerOver: () => hover(true),\n    onPointerOut: () => hover(false),\n    onPointerMissed: onPointerMissed\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: active\n  }, children));\n}\n\n// The return type is explicitly declared here because otherwise TypeScript will emit `THREE.Object3D<THREE.Event>[]`.\n// The meaning of the generic parameter for `Object3D` was changed in r156, so it should not be included so that it\n// works with all versions of @types/three.\nfunction useSelect() {\n  return React.useContext(context);\n}\n\nexport { Select, useSelect };\n", "import React from 'react';\nimport { shallow } from 'zustand/vanilla/shallow';\n\nfunction useShallow(selector) {\n  const prev = React.useRef(undefined);\n  return (state) => {\n    const next = selector(state);\n    return shallow(prev.current, next) ? prev.current : prev.current = next;\n  };\n}\n\nexport { useShallow };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Quaternion } from 'three';\n\n/**\n * Wraps children in a billboarded group. Sample usage:\n *\n * ```js\n * <Billboard>\n *   <Text>hi</Text>\n * </Billboard>\n * ```\n */\nconst Billboard = /* @__PURE__ */React.forwardRef(function Billboard({\n  children,\n  follow = true,\n  lockX = false,\n  lockY = false,\n  lockZ = false,\n  ...props\n}, fref) {\n  const inner = React.useRef(null);\n  const localRef = React.useRef(null);\n  const q = new Quaternion();\n  useFrame(({\n    camera\n  }) => {\n    if (!follow || !localRef.current) return;\n\n    // save previous rotation in case we're locking an axis\n    const prevRotation = inner.current.rotation.clone();\n\n    // always face the camera\n    localRef.current.updateMatrix();\n    localRef.current.updateWorldMatrix(false, false);\n    localRef.current.getWorldQuaternion(q);\n    camera.getWorldQuaternion(inner.current.quaternion).premultiply(q.invert());\n\n    // readjust any axis that is locked\n    if (lockX) inner.current.rotation.x = prevRotation.x;\n    if (lockY) inner.current.rotation.y = prevRotation.y;\n    if (lockZ) inner.current.rotation.z = prevRotation.z;\n  });\n  React.useImperativeHandle(fref, () => localRef.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: localRef\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children));\n});\n\nexport { Billboard };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst ScreenSpace = /* @__PURE__ */React.forwardRef(({\n  children,\n  depth = -1,\n  ...rest\n}, ref) => {\n  const localRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => localRef.current, []);\n  useFrame(({\n    camera\n  }) => {\n    localRef.current.quaternion.copy(camera.quaternion);\n    localRef.current.position.copy(camera.position);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: localRef\n  }, rest), /*#__PURE__*/React.createElement(\"group\", {\n    \"position-z\": -depth\n  }, children));\n});\n\nexport { ScreenSpace };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useRef } from 'react';\nimport { Vector3 } from 'three';\nimport { calculateScaleFactor } from './calculateScaleFactor.js';\n\nconst worldPos = /* @__PURE__ */new Vector3();\n/**\n * Wraps children in an `Object3D` and attempts to scale from\n * world units to screen units * scale factor.\n *\n * For example, this will render a box of roughly 1x1 pixel size,\n * independently of how far the camera is.\n *\n * ```jsx\n * <ScreenSizer>\n *   <Box />\n * </ScreenSizer>\n * ```\n */\nconst ScreenSizer = /* @__PURE__ */forwardRef(({\n  scale = 1,\n  ...props\n}, ref) => {\n  const container = useRef(null);\n  React.useImperativeHandle(ref, () => container.current, []);\n  useFrame(state => {\n    const obj = container.current;\n    if (!obj) return;\n    const sf = calculateScaleFactor(obj.getWorldPosition(worldPos), scale, state.camera, state.size);\n    obj.scale.setScalar(sf * scale);\n  });\n  return /*#__PURE__*/React.createElement(\"object3D\", _extends({\n    ref: container\n  }, props));\n});\n\nexport { ScreenSizer };\n", "import * as THREE from 'three';\n\nconst tV0 = /* @__PURE__ */new THREE.Vector3();\nconst tV1 = /* @__PURE__ */new THREE.Vector3();\nconst tV2 = /* @__PURE__ */new THREE.Vector3();\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n  return scale;\n};\n\nexport { calculateScaleFactor };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { QuadraticBezierCurve3, Vector3 } from 'three';\nimport { Line } from './Line.js';\n\nconst v = /* @__PURE__ */new Vector3();\nconst QuadraticBezierLine = /* @__PURE__ */React.forwardRef(function QuadraticBezierLine({\n  start = [0, 0, 0],\n  end = [0, 0, 0],\n  mid,\n  segments = 20,\n  ...rest\n}, forwardref) {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardref, () => ref.current);\n  const [curve] = React.useState(() => new QuadraticBezierCurve3(undefined, undefined, undefined));\n  const getPoints = React.useCallback((start, end, mid, segments = 20) => {\n    if (start instanceof Vector3) curve.v0.copy(start);else curve.v0.set(...start);\n    if (end instanceof Vector3) curve.v2.copy(end);else curve.v2.set(...end);\n    if (mid instanceof Vector3) {\n      curve.v1.copy(mid);\n    } else if (Array.isArray(mid)) {\n      curve.v1.set(...mid);\n    } else {\n      curve.v1.copy(curve.v0.clone().add(curve.v2.clone().sub(curve.v0)).add(v.set(0, curve.v0.y - curve.v2.y, 0)));\n    }\n    return curve.getPoints(segments);\n  }, []);\n  React.useLayoutEffect(() => {\n    ref.current.setPoints = (start, end, mid) => {\n      const points = getPoints(start, end, mid);\n      if (ref.current.geometry) ref.current.geometry.setPositions(points.map(p => p.toArray()).flat());\n    };\n  }, []);\n  const points = React.useMemo(() => getPoints(start, end, mid, segments), [start, end, mid, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: points\n  }, rest));\n});\n\nexport { QuadraticBezierLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, Vector4, Vector2, Color } from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { LineSegments2, Line2, LineMaterial, LineSegmentsGeometry, LineGeometry } from 'three-stdlib';\n\nconst Line = /* @__PURE__ */React.forwardRef(function Line({\n  points,\n  color = 0xffffff,\n  vertexColors,\n  linewidth,\n  lineWidth,\n  segments,\n  dashed,\n  ...rest\n}, ref) {\n  var _vertexColors$, _ref;\n  const size = useThree(state => state.size);\n  const line2 = React.useMemo(() => segments ? new LineSegments2() : new Line2(), [segments]);\n  const [lineMaterial] = React.useState(() => new LineMaterial());\n  const itemSize = (vertexColors == null || (_vertexColors$ = vertexColors[0]) == null ? void 0 : _vertexColors$.length) === 4 ? 4 : 3;\n  const lineGeom = React.useMemo(() => {\n    const geom = segments ? new LineSegmentsGeometry() : new LineGeometry();\n    const pValues = points.map(p => {\n      const isArray = Array.isArray(p);\n      return p instanceof Vector3 || p instanceof Vector4 ? [p.x, p.y, p.z] : p instanceof Vector2 ? [p.x, p.y, 0] : isArray && p.length === 3 ? [p[0], p[1], p[2]] : isArray && p.length === 2 ? [p[0], p[1], 0] : p;\n    });\n    geom.setPositions(pValues.flat());\n    if (vertexColors) {\n      // using vertexColors requires the color value to be white see #1813\n      color = 0xffffff;\n      const cValues = vertexColors.map(c => c instanceof Color ? c.toArray() : c);\n      geom.setColors(cValues.flat(), itemSize);\n    }\n    return geom;\n  }, [points, segments, vertexColors, itemSize]);\n  React.useLayoutEffect(() => {\n    line2.computeLineDistances();\n  }, [points, line2]);\n  React.useLayoutEffect(() => {\n    if (dashed) {\n      lineMaterial.defines.USE_DASH = '';\n    } else {\n      // Setting lineMaterial.defines.USE_DASH to undefined is apparently not sufficient.\n      delete lineMaterial.defines.USE_DASH;\n    }\n    lineMaterial.needsUpdate = true;\n  }, [dashed, lineMaterial]);\n  React.useEffect(() => {\n    return () => {\n      lineGeom.dispose();\n      lineMaterial.dispose();\n    };\n  }, [lineGeom]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: line2,\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"primitive\", {\n    object: lineGeom,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: lineMaterial,\n    attach: \"material\",\n    color: color,\n    vertexColors: Boolean(vertexColors),\n    resolution: [size.width, size.height],\n    linewidth: (_ref = linewidth !== null && linewidth !== void 0 ? linewidth : lineWidth) !== null && _ref !== void 0 ? _ref : 1,\n    dashed: dashed,\n    transparent: itemSize === 4\n  }, rest)));\n});\n\nexport { Line };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CubicBezierCurve3 } from 'three';\nimport { Line } from './Line.js';\n\nconst CubicBezierLine = /* @__PURE__ */React.forwardRef(function CubicBezierLine({\n  start,\n  end,\n  midA,\n  midB,\n  segments = 20,\n  ...rest\n}, ref) {\n  const points = React.useMemo(() => {\n    const startV = start instanceof Vector3 ? start : new Vector3(...start);\n    const endV = end instanceof Vector3 ? end : new Vector3(...end);\n    const midAV = midA instanceof Vector3 ? midA : new Vector3(...midA);\n    const midBV = midB instanceof Vector3 ? midB : new Vector3(...midB);\n    const interpolatedV = new CubicBezierCurve3(startV, midAV, midBV, endV).getPoints(segments);\n    return interpolatedV;\n  }, [start, end, midA, midB, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: points\n  }, rest));\n});\n\nexport { CubicBezierLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CatmullRomCurve3, Color } from 'three';\nimport { Line } from './Line.js';\n\nconst CatmullRomLine = /* @__PURE__ */React.forwardRef(function CatmullRomLine({\n  points,\n  closed = false,\n  curveType = 'centripetal',\n  tension = 0.5,\n  segments = 20,\n  vertexColors,\n  ...rest\n}, ref) {\n  const curve = React.useMemo(() => {\n    const mappedPoints = points.map(pt => pt instanceof Vector3 ? pt : new Vector3(...pt));\n    return new CatmullRomCurve3(mappedPoints, closed, curveType, tension);\n  }, [points, closed, curveType, tension]);\n  const segmentedPoints = React.useMemo(() => curve.getPoints(segments), [curve, segments]);\n  const interpolatedVertexColors = React.useMemo(() => {\n    if (!vertexColors || vertexColors.length < 2) return undefined;\n    if (vertexColors.length === segments + 1) return vertexColors;\n    const mappedColors = vertexColors.map(color => color instanceof Color ? color : new Color(...color));\n    if (closed) mappedColors.push(mappedColors[0].clone());\n    const iColors = [mappedColors[0]];\n    const divisions = segments / (mappedColors.length - 1);\n    for (let i = 1; i < segments; i++) {\n      const alpha = i % divisions / divisions;\n      const colorIndex = Math.floor(i / divisions);\n      iColors.push(mappedColors[colorIndex].clone().lerp(mappedColors[colorIndex + 1], alpha));\n    }\n    iColors.push(mappedColors[mappedColors.length - 1]);\n    return iColors;\n  }, [vertexColors, segments]);\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    ref: ref,\n    points: segmentedPoints,\n    vertexColors: interpolatedVertexColors\n  }, rest));\n});\n\nexport { CatmullRomLine };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { AudioListener, AudioLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\n\nconst PositionalAudio = /* @__PURE__ */React.forwardRef(({\n  url,\n  distance = 1,\n  loop = true,\n  autoplay,\n  ...props\n}, ref) => {\n  const sound = React.useRef(null);\n  React.useImperativeHandle(ref, () => sound.current, []);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const [listener] = React.useState(() => new AudioListener());\n  const buffer = useLoader(AudioLoader, url);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    if (_sound) {\n      _sound.setBuffer(buffer);\n      _sound.setRefDistance(distance);\n      _sound.setLoop(loop);\n      if (autoplay && !_sound.isPlaying) _sound.play();\n    }\n  }, [buffer, camera, distance, loop]);\n  React.useEffect(() => {\n    const _sound = sound.current;\n    camera.add(listener);\n    return () => {\n      camera.remove(listener);\n      if (_sound) {\n        if (_sound.isPlaying) _sound.stop();\n        if (_sound.source && _sound.source._connected) _sound.disconnect();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"positionalAudio\", _extends({\n    ref: sound,\n    args: [listener]\n  }, props));\n});\n\nexport { PositionalAudio };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Text as Text$1, preloadFont } from 'troika-three-text';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\n\nconst Text = /* @__PURE__ */React.forwardRef(({\n  sdfGlyphSize = 64,\n  anchorX = 'center',\n  anchorY = 'middle',\n  font,\n  fontSize = 1,\n  children,\n  characters,\n  onSync,\n  ...props\n}, ref) => {\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const [troikaMesh] = React.useState(() => new Text$1());\n  const [nodes, text] = React.useMemo(() => {\n    const n = [];\n    let t = '';\n    React.Children.forEach(children, child => {\n      if (typeof child === 'string' || typeof child === 'number') {\n        t += child;\n      } else {\n        n.push(child);\n      }\n    });\n    return [n, t];\n  }, [children]);\n  suspend(() => new Promise(res => preloadFont({\n    font,\n    characters\n  }, res)), ['troika-text', font, characters]);\n  React.useLayoutEffect(() => void troikaMesh.sync(() => {\n    invalidate();\n    if (onSync) onSync(troikaMesh);\n  }));\n  React.useEffect(() => {\n    return () => troikaMesh.dispose();\n  }, [troikaMesh]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: troikaMesh,\n    ref: ref,\n    font: font,\n    text: text,\n    anchorX: anchorX,\n    anchorY: anchorY,\n    fontSize: fontSize,\n    sdfGlyphSize: sdfGlyphSize\n  }, props), nodes);\n});\n\nexport { Text };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { extend } from '@react-three/fiber';\nimport { TextGeometry, mergeVertices } from 'three-stdlib';\nimport { useFont } from './useFont.js';\n\nconst types = ['string', 'number'];\nconst getTextFromChildren = children => {\n  let label = '';\n  const rest = [];\n  React.Children.forEach(children, child => {\n    if (types.includes(typeof child)) label += child + '';else rest.push(child);\n  });\n  return [label, ...rest];\n};\nconst Text3D = /* @__PURE__ */React.forwardRef(({\n  font: _font,\n  letterSpacing = 0,\n  lineHeight = 1,\n  size = 1,\n  height = 0.2,\n  bevelThickness = 0.1,\n  bevelSize = 0.01,\n  bevelEnabled = false,\n  bevelOffset = 0,\n  bevelSegments = 4,\n  curveSegments = 8,\n  smooth,\n  children,\n  ...props\n}, fref) => {\n  React.useMemo(() => extend({\n    RenamedTextGeometry: TextGeometry\n  }), []);\n  const ref = React.useRef(null);\n  const font = useFont(_font);\n  const opts = useMemo(() => {\n    return {\n      font,\n      size,\n      height,\n      bevelThickness,\n      bevelSize,\n      bevelEnabled,\n      bevelSegments,\n      bevelOffset,\n      curveSegments,\n      letterSpacing,\n      lineHeight\n    };\n  }, [font, size, height, bevelThickness, bevelSize, bevelEnabled, bevelSegments, bevelOffset, curveSegments, letterSpacing, lineHeight]);\n\n  /**\n   * We need the `children` in the deps because we\n   * need to be able to do `<Text3d>{state}</Text3d>`.\n   */\n  const [label, ...rest] = useMemo(() => getTextFromChildren(children), [children]);\n  const args = React.useMemo(() => [label, opts], [label, opts]);\n  React.useLayoutEffect(() => {\n    if (smooth) {\n      ref.current.geometry = mergeVertices(ref.current.geometry, smooth);\n      ref.current.geometry.computeVertexNormals();\n    }\n  }, [args, smooth]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({}, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"renamedTextGeometry\", {\n    args: args\n  }), rest);\n});\n\nexport { Text3D };\n", "import { FontLoader } from 'three-stdlib';\nimport { suspend, preload, clear } from 'suspend-react';\n\nlet fontLoader = null;\nasync function loadFontData(font) {\n  return typeof font === 'string' ? await (await fetch(font)).json() : font;\n}\nfunction parseFontData(fontData) {\n  if (!fontLoader) {\n    fontLoader = new FontLoader();\n  }\n  return fontLoader.parse(fontData);\n}\nasync function loader(font) {\n  const data = await loadFontData(font);\n  return parseFontData(data);\n}\nfunction useFont(font) {\n  return suspend(loader, [font]);\n}\nuseFont.preload = font => preload(loader, [font]);\nuseFont.clear = font => clear([font]);\n\nexport { useFont };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { WebGLRenderTarget, HalfFloatType, RGBAFormat, UnsignedByteType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { EffectComposer, RenderPass, ShaderPass, GammaCorrectionShader } from 'three-stdlib';\n\nconst isWebGL2Available = () => {\n  try {\n    var canvas = document.createElement('canvas');\n    return !!(window.WebGL2RenderingContext && canvas.getContext('webgl2'));\n  } catch (e) {\n    return false;\n  }\n};\nconst Effects = /* @__PURE__ */React.forwardRef(({\n  children,\n  multisamping = 8,\n  renderIndex = 1,\n  disableRender,\n  disableGamma,\n  disableRenderPass,\n  depthBuffer = true,\n  stencilBuffer = false,\n  anisotropy = 1,\n  encoding,\n  type,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    EffectComposer,\n    RenderPass,\n    ShaderPass\n  }), []);\n  const composer = React.useRef(null);\n  React.useImperativeHandle(ref, () => composer.current, []);\n  const {\n    scene,\n    camera,\n    gl,\n    size,\n    viewport\n  } = useThree();\n  const [target] = React.useState(() => {\n    const t = new WebGLRenderTarget(size.width, size.height, {\n      type: type || HalfFloatType,\n      format: RGBAFormat,\n      depthBuffer,\n      stencilBuffer,\n      anisotropy\n    });\n\n    // sRGB textures must be RGBA8 since r137 https://github.com/mrdoob/three.js/pull/23129\n    if (type === UnsignedByteType && encoding != null) {\n      if ('colorSpace' in t) t.texture.colorSpace = encoding;else t.texture.encoding = encoding;\n    }\n    t.samples = multisamping;\n    return t;\n  });\n  React.useEffect(() => {\n    var _composer$current, _composer$current2;\n    (_composer$current = composer.current) == null || _composer$current.setSize(size.width, size.height);\n    (_composer$current2 = composer.current) == null || _composer$current2.setPixelRatio(viewport.dpr);\n  }, [gl, size, viewport.dpr]);\n  useFrame(() => {\n    var _composer$current3;\n    if (!disableRender) (_composer$current3 = composer.current) == null || _composer$current3.render();\n  }, renderIndex);\n  const passes = [];\n  if (!disableRenderPass) passes.push(/*#__PURE__*/React.createElement(\"renderPass\", {\n    key: \"renderpass\",\n    attach: `passes-${passes.length}`,\n    args: [scene, camera]\n  }));\n  if (!disableGamma) passes.push(/*#__PURE__*/React.createElement(\"shaderPass\", {\n    attach: `passes-${passes.length}`,\n    key: \"gammapass\",\n    args: [GammaCorrectionShader]\n  }));\n  React.Children.forEach(children, el => {\n    el && passes.push(/*#__PURE__*/React.cloneElement(el, {\n      key: passes.length,\n      attach: `passes-${passes.length}`\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"effectComposer\", _extends({\n    ref: composer,\n    args: [gl, target]\n  }, props), passes);\n});\n\nexport { Effects, isWebGL2Available };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nlet GradientType = /*#__PURE__*/function (GradientType) {\n  GradientType[\"Linear\"] = \"linear\";\n  GradientType[\"Radial\"] = \"radial\";\n  return GradientType;\n}({});\nfunction GradientTexture({\n  stops,\n  colors,\n  size = 1024,\n  width = 16,\n  type = GradientType.Linear,\n  innerCircleRadius = 0,\n  outerCircleRadius = 'auto',\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    canvas.width = width;\n    canvas.height = size;\n    let gradient;\n    if (type === GradientType.Linear) {\n      gradient = context.createLinearGradient(0, 0, 0, size);\n    } else {\n      const canvasCenterX = canvas.width / 2;\n      const canvasCenterY = canvas.height / 2;\n      const radius = outerCircleRadius !== 'auto' ? Math.abs(Number(outerCircleRadius)) : Math.sqrt(canvasCenterX ** 2 + canvasCenterY ** 2);\n      gradient = context.createRadialGradient(canvasCenterX, canvasCenterY, Math.abs(innerCircleRadius), canvasCenterX, canvasCenterY, radius);\n    }\n    const tempColor = new THREE.Color(); // reuse instance for performance\n    let i = stops.length;\n    while (i--) {\n      gradient.addColorStop(stops[i], tempColor.set(colors[i]).getStyle());\n    }\n    context.save();\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, size);\n    context.restore();\n    return canvas;\n  }, [stops]);\n\n  // @ts-ignore ????\n  return /*#__PURE__*/React.createElement(\"canvasTexture\", _extends({\n    colorSpace: gl.outputColorSpace,\n    args: [canvas],\n    attach: \"map\"\n  }, props));\n}\n\nexport { GradientTexture, GradientType };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './Texture.js';\nimport { version } from '../helpers/constants.js';\n\n// {texture: THREE.Texture} XOR {url: string}\n\nconst ImageMaterialImpl = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color('white'),\n  scale: /* @__PURE__ */new THREE.Vector2(1, 1),\n  imageBounds: /* @__PURE__ */new THREE.Vector2(1, 1),\n  resolution: 1024,\n  map: null,\n  zoom: 1,\n  radius: 0,\n  grayscale: 0,\n  opacity: 1\n}, /* glsl */`\n  varying vec2 vUv;\n  varying vec2 vPos;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n    vPos = position.xy;\n  }\n`, /* glsl */`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  varying vec2 vPos;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform float resolution;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float radius;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  \n  const float PI = 3.14159265;\n    \n  // from https://iquilezles.org/articles/distfunctions\n  float udRoundBox( vec2 p, vec2 b, float r ) {\n    return length(max(abs(p)-b+r,0.0))-r;\n  }\n\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n\n    vec2 res = vec2(scale * resolution);\n    vec2 halfRes = 0.5 * res;\n    float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    \n\t  vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n  }\n`);\nconst ImageBase = /* @__PURE__ */React.forwardRef(({\n  children,\n  color,\n  segments = 1,\n  scale = 1,\n  zoom = 1,\n  grayscale = 0,\n  opacity = 1,\n  radius = 0,\n  texture,\n  toneMapped,\n  transparent,\n  side,\n  ...props\n}, fref) => {\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const size = useThree(state => state.size);\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  const resolution = Math.max(size.width, size.height);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    // Support arbitrary plane geometries (for instance with rounded corners)\n    // @ts-ignore\n    if (ref.current.geometry.parameters) {\n      // @ts-ignore\n      ref.current.material.scale.set(\n      // @ts-ignore\n      planeBounds[0] * ref.current.geometry.parameters.width,\n      // @ts-ignore\n      planeBounds[1] * ref.current.geometry.parameters.height);\n    }\n    /* eslint react-hooks/exhaustive-deps: 1 */\n  }, [planeBounds[0], planeBounds[1]]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    resolution: resolution,\n    radius: radius,\n    toneMapped: toneMapped,\n    transparent: transparent,\n    side: side,\n    key: ImageMaterialImpl.key\n  }), children);\n});\nconst ImageWithUrl = /* @__PURE__ */React.forwardRef(({\n  url,\n  ...props\n}, ref) => {\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /* @__PURE__ */React.forwardRef(({\n  url: _url,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /* @__PURE__ */React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\n\nexport { Image };\n", "import * as THREE from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  const material = class material extends THREE.ShaderMaterial {\n    constructor(parameters = {}) {\n      const entries = Object.entries(uniforms);\n      // Create unforms and shaders\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = THREE.UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return {\n            ...acc,\n            ...uniform\n          };\n        }, {}),\n        vertexShader,\n        fragmentShader\n      });\n      // Create getter/setters\n      this.key = '';\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n\n      // Assign parameters, this might include uniforms\n      Object.assign(this, parameters);\n      // Call onInit\n      if (onInit) onInit(this);\n    }\n  };\n  material.key = THREE.MathUtils.generateUUID();\n  return material;\n}\n\nexport { shaderMaterial };\n", "import * as React from 'react';\nimport { useLayoutEffect, useEffect, useMemo } from 'react';\nimport { TextureLoader, Texture as Texture$1 } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input, onLoad) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n  useLayoutEffect(() => {\n    onLoad == null || onLoad(textures);\n  }, [onLoad]);\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  // NOTE: only available for WebGLRenderer\n  useEffect(() => {\n    if ('initTexture' in gl) {\n      let textureArray = [];\n      if (Array.isArray(textures)) {\n        textureArray = textures;\n      } else if (textures instanceof Texture$1) {\n        textureArray = [textures];\n      } else if (IsObject(textures)) {\n        textureArray = Object.values(textures);\n      }\n      textureArray.forEach(texture => {\n        if (texture instanceof Texture$1) {\n          gl.initTexture(texture);\n        }\n      });\n    }\n  }, [gl, textures]);\n  const mappedTextures = useMemo(() => {\n    if (IsObject(input)) {\n      const keyed = {};\n      let i = 0;\n      for (const key in input) keyed[key] = textures[i++];\n      return keyed;\n    } else {\n      return textures;\n    }\n  }, [input, textures]);\n  return mappedTextures;\n}\nuseTexture.preload = url => useLoader.preload(TextureLoader, url);\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\n//\n\nconst Texture = ({\n  children,\n  input,\n  onLoad\n}) => {\n  const ret = useTexture(input, onLoad);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(ret));\n};\n\nexport { IsObject, Texture, useTexture };\n", "import { REVISION } from 'three';\n\nconst getVersion = () => parseInt(REVISION.replace(/\\D+/g, ''));\nconst version = /* @__PURE__ */getVersion();\n\nexport { version };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { Line } from './Line.js';\n\nconst Edges = /* @__PURE__ */React.forwardRef(({\n  threshold = 15,\n  geometry: explicitGeometry,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  const tmpPoints = React.useMemo(() => [0, 0, 0, 1, 0, 0], []);\n  const memoizedGeometry = React.useRef();\n  const memoizedThreshold = React.useRef();\n  React.useLayoutEffect(() => {\n    const parent = ref.current.parent;\n    const geometry = explicitGeometry !== null && explicitGeometry !== void 0 ? explicitGeometry : parent == null ? void 0 : parent.geometry;\n    if (!geometry) return;\n    const cached = memoizedGeometry.current === geometry && memoizedThreshold.current === threshold;\n    if (cached) return;\n    memoizedGeometry.current = geometry;\n    memoizedThreshold.current = threshold;\n    const points = new THREE.EdgesGeometry(geometry, threshold).attributes.position.array;\n    ref.current.geometry.setPositions(points);\n    ref.current.geometry.attributes.instanceStart.needsUpdate = true;\n    ref.current.geometry.attributes.instanceEnd.needsUpdate = true;\n    ref.current.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(Line, _extends({\n    segments: true,\n    points: tmpPoints,\n    ref: ref,\n    raycast: () => null\n  }, props));\n});\n\nexport { Edges };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useThree, extend, applyProps } from '@react-three/fiber';\nimport { toCreasedNormals } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nconst OutlinesMaterial = /* @__PURE__ */shaderMaterial({\n  screenspace: false,\n  color: /* @__PURE__ */new THREE.Color('black'),\n  opacity: 1,\n  thickness: 0.05,\n  size: /* @__PURE__ */new THREE.Vector2()\n}, `#include <common>\n   #include <morphtarget_pars_vertex>\n   #include <skinning_pars_vertex>\n   #include <clipping_planes_pars_vertex>\n   uniform float thickness;\n   uniform bool screenspace;\n   uniform vec2 size;\n   void main() {\n     #if defined (USE_SKINNING)\n\t     #include <beginnormal_vertex>\n       #include <morphnormal_vertex>\n       #include <skinbase_vertex>\n       #include <skinnormal_vertex>\n       #include <defaultnormal_vertex>\n     #endif\n     #include <begin_vertex>\n\t   #include <morphtarget_vertex>\n\t   #include <skinning_vertex>\n     #include <project_vertex>\n     #include <clipping_planes_vertex>\n     vec4 tNormal = vec4(normal, 0.0);\n     vec4 tPosition = vec4(transformed, 1.0);\n     #ifdef USE_INSTANCING\n       tNormal = instanceMatrix * tNormal;\n       tPosition = instanceMatrix * tPosition;\n     #endif\n     if (screenspace) {\n       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;\n       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); \n     } else {\n       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;\n       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;\n       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;\n       clipPosition.xy += offset;\n       gl_Position = clipPosition;\n     }\n   }`, `uniform vec3 color;\n   uniform float opacity;\n   #include <clipping_planes_pars_fragment>\n   void main(){\n     #include <clipping_planes_fragment>\n     gl_FragColor = vec4(color, opacity);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nfunction Outlines({\n  color = 'black',\n  opacity = 1,\n  transparent = false,\n  screenspace = false,\n  toneMapped = true,\n  polygonOffset = false,\n  polygonOffsetFactor = 0,\n  renderOrder = 0,\n  thickness = 0.05,\n  angle = Math.PI,\n  clippingPlanes,\n  ...props\n}) {\n  const ref = React.useRef();\n  const [material] = React.useState(() => new OutlinesMaterial({\n    side: THREE.BackSide\n  }));\n  const {\n    gl\n  } = useThree();\n  const contextSize = gl.getDrawingBufferSize(new THREE.Vector2());\n  React.useMemo(() => extend({\n    OutlinesMaterial\n  }), []);\n  const oldAngle = React.useRef(0);\n  const oldGeometry = React.useRef();\n  React.useLayoutEffect(() => {\n    const group = ref.current;\n    if (!group) return;\n    const parent = group.parent;\n    if (parent && parent.geometry) {\n      if (oldAngle.current !== angle || oldGeometry.current !== parent.geometry) {\n        var _group$children;\n        oldAngle.current = angle;\n        oldGeometry.current = parent.geometry;\n\n        // Remove old mesh\n        let mesh = (_group$children = group.children) == null ? void 0 : _group$children[0];\n        if (mesh) {\n          if (angle) mesh.geometry.dispose();\n          group.remove(mesh);\n        }\n        if (parent.skeleton) {\n          mesh = new THREE.SkinnedMesh();\n          mesh.material = material;\n          mesh.bind(parent.skeleton, parent.bindMatrix);\n          group.add(mesh);\n        } else if (parent.isInstancedMesh) {\n          mesh = new THREE.InstancedMesh(parent.geometry, material, parent.count);\n          mesh.instanceMatrix = parent.instanceMatrix;\n          group.add(mesh);\n        } else {\n          mesh = new THREE.Mesh();\n          mesh.material = material;\n          group.add(mesh);\n        }\n        mesh.geometry = angle ? toCreasedNormals(parent.geometry, angle) : parent.geometry;\n        mesh.morphTargetInfluences = parent.morphTargetInfluences;\n        mesh.morphTargetDictionary = parent.morphTargetDictionary;\n      }\n    }\n  });\n  React.useLayoutEffect(() => {\n    const group = ref.current;\n    if (!group) return;\n    const mesh = group.children[0];\n    if (mesh) {\n      mesh.renderOrder = renderOrder;\n      const parent = group.parent;\n      applyProps(mesh, {\n        morphTargetInfluences: parent.morphTargetInfluences,\n        morphTargetDictionary: parent.morphTargetDictionary\n      });\n      applyProps(mesh.material, {\n        transparent,\n        thickness,\n        color,\n        opacity,\n        size: contextSize,\n        screenspace,\n        toneMapped,\n        polygonOffset,\n        polygonOffsetFactor,\n        clippingPlanes,\n        clipping: clippingPlanes && clippingPlanes.length > 0\n      });\n    }\n  });\n  React.useEffect(() => {\n    return () => {\n      // Dispose everything on unmount\n      const group = ref.current;\n      if (!group) return;\n      const mesh = group.children[0];\n      if (mesh) {\n        if (angle) mesh.geometry.dispose();\n        group.remove(mesh);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n}\n\nexport { Outlines };\n", "import { useFrame, useThree, createPortal } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Vector3, Object3D, Vector2 } from 'three';\nimport { MeshLineGeometry, MeshLineMaterial } from 'meshline';\n\nconst defaults = {\n  width: 0.2,\n  length: 1,\n  decay: 1,\n  local: false,\n  stride: 0,\n  interval: 1\n};\nconst shiftLeft = (collection, steps = 1) => {\n  collection.set(collection.subarray(steps));\n  collection.fill(-Infinity, -steps);\n  return collection;\n};\nfunction useTrail(target, settings) {\n  const {\n    length,\n    local,\n    decay,\n    interval,\n    stride\n  } = {\n    ...defaults,\n    ...settings\n  };\n  const points = React.useRef();\n  const [worldPosition] = React.useState(() => new Vector3());\n  React.useLayoutEffect(() => {\n    if (target) {\n      points.current = Float32Array.from({\n        length: length * 10 * 3\n      }, (_, i) => target.position.getComponent(i % 3));\n    }\n  }, [length, target]);\n  const prevPosition = React.useRef(new Vector3());\n  const frameCount = React.useRef(0);\n  useFrame(() => {\n    if (!target) return;\n    if (!points.current) return;\n    if (frameCount.current === 0) {\n      let newPosition;\n      if (local) {\n        newPosition = target.position;\n      } else {\n        target.getWorldPosition(worldPosition);\n        newPosition = worldPosition;\n      }\n      const steps = 1 * decay;\n      for (let i = 0; i < steps; i++) {\n        if (newPosition.distanceTo(prevPosition.current) < stride) continue;\n        shiftLeft(points.current, 3);\n        points.current.set(newPosition.toArray(), points.current.length - 3);\n      }\n      prevPosition.current.copy(newPosition);\n    }\n    frameCount.current++;\n    frameCount.current = frameCount.current % interval;\n  });\n  return points;\n}\nconst Trail = /* @__PURE__ */React.forwardRef((props, forwardRef) => {\n  const {\n    children\n  } = props;\n  const {\n    width,\n    length,\n    decay,\n    local,\n    stride,\n    interval\n  } = {\n    ...defaults,\n    ...props\n  };\n  const {\n    color = 'hotpink',\n    attenuation,\n    target\n  } = props;\n  const size = useThree(s => s.size);\n  const scene = useThree(s => s.scene);\n  const ref = React.useRef(null);\n  const [anchor, setAnchor] = React.useState(null);\n  const points = useTrail(anchor, {\n    length,\n    decay,\n    local,\n    stride,\n    interval\n  });\n  React.useEffect(() => {\n    const t = (target == null ? void 0 : target.current) || ref.current.children.find(o => {\n      return o instanceof Object3D;\n    });\n    if (t) {\n      setAnchor(t);\n    }\n  }, [points, target]);\n  const geo = React.useMemo(() => new MeshLineGeometry(), []);\n  const mat = React.useMemo(() => {\n    var _matOverride;\n    const m = new MeshLineMaterial({\n      lineWidth: 0.1 * width,\n      color: color,\n      sizeAttenuation: 1,\n      resolution: new Vector2(size.width, size.height)\n    });\n\n    // Get and apply first <meshLineMaterial /> from children\n    let matOverride;\n    if (children) {\n      if (Array.isArray(children)) {\n        matOverride = children.find(child => {\n          const c = child;\n          return typeof c.type === 'string' && c.type === 'meshLineMaterial';\n        });\n      } else {\n        const c = children;\n        if (typeof c.type === 'string' && c.type === 'meshLineMaterial') {\n          matOverride = c;\n        }\n      }\n    }\n    if (typeof ((_matOverride = matOverride) == null ? void 0 : _matOverride.props) === 'object') {\n      m.setValues(matOverride.props);\n    }\n    return m;\n  }, [width, color, size, children]);\n  React.useEffect(() => {\n    mat.uniforms.resolution.value.set(size.width, size.height);\n  }, [size]);\n  useFrame(() => {\n    if (!points.current) return;\n    geo.setPoints(points.current, attenuation);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", null, createPortal(/*#__PURE__*/React.createElement(\"mesh\", {\n    ref: forwardRef,\n    geometry: geo,\n    material: mat\n  }), scene), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children));\n});\n\nexport { Trail, useTrail };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshSurfaceSampler } from 'three-stdlib';\nimport { InstancedBufferAttribute, Vector3, Color, Object3D } from 'three';\n\nfunction useSurfaceSampler(mesh, count = 16, transform, weight, instanceMesh) {\n  const [buffer, setBuffer] = React.useState(() => {\n    const arr = Array.from({\n      length: count\n    }, () => [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]).flat();\n    return new InstancedBufferAttribute(Float32Array.from(arr), 16);\n  });\n  React.useLayoutEffect(() => {\n    if (typeof mesh.current === 'undefined') return;\n    const sampler = new MeshSurfaceSampler(mesh.current);\n    if (weight) {\n      sampler.setWeightAttribute(weight);\n    }\n    sampler.build();\n    const position = new Vector3();\n    const normal = new Vector3();\n    const color = new Color();\n    const dummy = new Object3D();\n    mesh.current.updateMatrixWorld(true);\n    for (let i = 0; i < count; i++) {\n      sampler.sample(position, normal, color);\n      if (typeof transform === 'function') {\n        transform({\n          dummy,\n          sampledMesh: mesh.current,\n          position,\n          normal,\n          color\n        }, i);\n      } else {\n        dummy.position.copy(position);\n      }\n      dummy.updateMatrix();\n      if (instanceMesh != null && instanceMesh.current) {\n        instanceMesh.current.setMatrixAt(i, dummy.matrix);\n      }\n      dummy.matrix.toArray(buffer.array, i * 16);\n    }\n    if (instanceMesh != null && instanceMesh.current) {\n      instanceMesh.current.instanceMatrix.needsUpdate = true;\n    }\n    buffer.needsUpdate = true;\n    setBuffer(new InstancedBufferAttribute(buffer.array, buffer.itemSize).copy(buffer));\n  }, [mesh, instanceMesh, weight, count, transform]);\n  return buffer;\n}\nfunction Sampler({\n  children,\n  weight,\n  transform,\n  instances,\n  mesh,\n  count = 16,\n  ...props\n}) {\n  const group = React.useRef(null);\n  const instancedRef = React.useRef(null);\n  const meshToSampleRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    var _instances$current, _mesh$current;\n    instancedRef.current = (_instances$current = instances == null ? void 0 : instances.current) !== null && _instances$current !== void 0 ? _instances$current : group.current.children.find(c => c.hasOwnProperty('instanceMatrix'));\n    meshToSampleRef.current = (_mesh$current = mesh == null ? void 0 : mesh.current) !== null && _mesh$current !== void 0 ? _mesh$current : group.current.children.find(c => c.type === 'Mesh');\n  }, [children, mesh == null ? void 0 : mesh.current, instances == null ? void 0 : instances.current]);\n  useSurfaceSampler(meshToSampleRef, count, transform, weight, instancedRef);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children);\n}\n\nexport { Sampler, useSurfaceSampler };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { BufferAttribute } from 'three';\n\n/**\n * Used exclusively as a child of a BufferGeometry.\n * Computes the BufferAttribute by calling the `compute` function\n * and attaches the attribute to the geometry.\n */\nconst ComputedAttribute = ({\n  compute,\n  name,\n  ...props\n}) => {\n  const [bufferAttribute] = React.useState(() => new BufferAttribute(new Float32Array(0), 1));\n  const primitive = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (primitive.current) {\n      var _ref;\n      // @ts-expect-error brittle\n      const parent = (_ref = primitive.current.parent) !== null && _ref !== void 0 ? _ref : primitive.current.__r3f.parent;\n      const attr = compute(parent);\n      primitive.current.copy(attr);\n    }\n  }, [compute]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: primitive,\n    object: bufferAttribute,\n    attach: `attributes-${name}`\n  }, props));\n};\n\nexport { ComputedAttribute };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { SkeletonUtils } from 'three-stdlib';\n\nfunction createSpread(child, {\n  keys = ['near', 'far', 'color', 'distance', 'decay', 'penumbra', 'angle', 'intensity', 'skeleton', 'visible', 'castShadow', 'receiveShadow', 'morphTargetDictionary', 'morphTargetInfluences', 'name', 'geometry', 'material', 'position', 'rotation', 'scale', 'up', 'userData', 'bindMode', 'bindMatrix', 'bindMatrixInverse', 'skeleton'],\n  deep,\n  inject,\n  castShadow,\n  receiveShadow\n}) {\n  let spread = {};\n  for (const key of keys) {\n    spread[key] = child[key];\n  }\n  if (deep) {\n    if (spread.geometry && deep !== 'materialsOnly') spread.geometry = spread.geometry.clone();\n    if (spread.material && deep !== 'geometriesOnly') spread.material = spread.material.clone();\n  }\n  if (inject) {\n    if (typeof inject === 'function') spread = {\n      ...spread,\n      children: inject(child)\n    };else if (/*#__PURE__*/React.isValidElement(inject)) spread = {\n      ...spread,\n      children: inject\n    };else spread = {\n      ...spread,\n      ...inject\n    };\n  }\n  if (child instanceof THREE.Mesh) {\n    if (castShadow) spread.castShadow = true;\n    if (receiveShadow) spread.receiveShadow = true;\n  }\n  return spread;\n}\nconst Clone = /* @__PURE__ */React.forwardRef(({\n  isChild = false,\n  object,\n  children,\n  deep,\n  castShadow,\n  receiveShadow,\n  inject,\n  keys,\n  ...props\n}, forwardRef) => {\n  const config = {\n    keys,\n    deep,\n    inject,\n    castShadow,\n    receiveShadow\n  };\n  object = React.useMemo(() => {\n    if (isChild === false && !Array.isArray(object)) {\n      let isSkinned = false;\n      object.traverse(object => {\n        if (object.isSkinnedMesh) isSkinned = true;\n      });\n      if (isSkinned) return SkeletonUtils.clone(object);\n    }\n    return object;\n  }, [object, isChild]);\n\n  // Deal with arrayed clones\n  if (Array.isArray(object)) {\n    return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n      ref: forwardRef\n    }), object.map(o => /*#__PURE__*/React.createElement(Clone, _extends({\n      key: o.uuid,\n      object: o\n    }, config))), children);\n  }\n\n  // Singleton clones\n  const {\n    children: injectChildren,\n    ...spread\n  } = createSpread(object, config);\n  const Element = object.type[0].toLowerCase() + object.type.slice(1);\n  return /*#__PURE__*/React.createElement(Element, _extends({}, spread, props, {\n    ref: forwardRef\n  }), object.children.map(child => {\n    if (child.type === 'Bone') return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n      key: child.uuid,\n      object: child\n    }, config));\n    return /*#__PURE__*/React.createElement(Clone, _extends({\n      key: child.uuid,\n      object: child\n    }, config, {\n      isChild: true\n    }));\n  }), children, injectChildren);\n});\n\nexport { Clone };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { MarchingCubes as MarchingCubes$1 } from 'three-stdlib';\nimport { useFrame } from '@react-three/fiber';\n\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst MarchingCubes = /* @__PURE__ */React.forwardRef(({\n  resolution = 28,\n  maxPolyCount = 10000,\n  enableUvs = false,\n  enableColors = false,\n  children,\n  ...props\n}, ref) => {\n  const marchingCubesRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => marchingCubesRef.current, []);\n  const marchingCubes = React.useMemo(() => new MarchingCubes$1(resolution, null, enableUvs, enableColors, maxPolyCount), [resolution, maxPolyCount, enableUvs, enableColors]);\n  const api = React.useMemo(() => ({\n    getParent: () => marchingCubesRef\n  }), []);\n  useFrame(() => {\n    marchingCubes.update();\n    marchingCubes.reset();\n  }, -1); // To make sure the reset runs before the balls or planes are added\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: marchingCubes,\n    ref: marchingCubesRef\n  }, props), /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children)));\n});\nconst MarchingCube = /* @__PURE__ */React.forwardRef(({\n  strength = 0.5,\n  subtract = 12,\n  color,\n  ...props\n}, ref) => {\n  const {\n    getParent\n  } = React.useContext(globalContext);\n  const parentRef = React.useMemo(() => getParent(), [getParent]);\n  const cubeRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => cubeRef.current, []);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (!parentRef.current || !cubeRef.current) return;\n    cubeRef.current.getWorldPosition(vec);\n    parentRef.current.addBall(0.5 + vec.x * 0.5, 0.5 + vec.y * 0.5, 0.5 + vec.z * 0.5, strength, subtract, color);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: cubeRef\n  }, props));\n});\nconst MarchingPlane = /* @__PURE__ */React.forwardRef(({\n  planeType: _planeType = 'x',\n  strength = 0.5,\n  subtract = 12,\n  ...props\n}, ref) => {\n  const {\n    getParent\n  } = React.useContext(globalContext);\n  const parentRef = React.useMemo(() => getParent(), [getParent]);\n  const wallRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => wallRef.current, []);\n  const planeType = React.useMemo(() => _planeType === 'x' ? 'addPlaneX' : _planeType === 'y' ? 'addPlaneY' : 'addPlaneZ', [_planeType]);\n  useFrame(() => {\n    if (!parentRef.current || !wallRef.current) return;\n    parentRef.current[planeType](strength, subtract);\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: wallRef\n  }, props));\n});\n\nexport { MarchingCube, MarchingCubes, MarchingPlane };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { applyProps } from '@react-three/fiber';\nimport { DecalGeometry } from 'three-stdlib';\n\nfunction isArray(vec) {\n  return Array.isArray(vec);\n}\nfunction vecToArray(vec = [0, 0, 0]) {\n  if (isArray(vec)) {\n    return vec;\n  } else if (vec instanceof THREE.Vector3 || vec instanceof THREE.Euler) {\n    return [vec.x, vec.y, vec.z];\n  } else {\n    return [vec, vec, vec];\n  }\n}\nconst Decal = /* @__PURE__ */React.forwardRef(function Decal({\n  debug,\n  depthTest = false,\n  polygonOffsetFactor = -10,\n  map,\n  mesh,\n  children,\n  position,\n  rotation,\n  scale,\n  ...props\n}, forwardRef) {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current);\n  const helper = React.useRef(null);\n  const state = React.useRef({\n    position: new THREE.Vector3(),\n    rotation: new THREE.Euler(),\n    scale: new THREE.Vector3(1, 1, 1)\n  });\n  React.useLayoutEffect(() => {\n    const parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;\n    const target = ref.current;\n    if (!(parent instanceof THREE.Mesh)) {\n      throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');\n    }\n    if (parent) {\n      applyProps(state.current, {\n        position,\n        scale\n      });\n\n      // Zero out the parents matrix world for this operation\n      const matrixWorld = parent.matrixWorld.clone();\n      parent.matrixWorld.identity();\n      if (!rotation || typeof rotation === 'number') {\n        const o = new THREE.Object3D();\n        o.position.copy(state.current.position);\n\n        // Thanks https://x.com/N8Programs !\n        const vertices = parent.geometry.attributes.position.array;\n        if (parent.geometry.attributes.normal === undefined) parent.geometry.computeVertexNormals();\n        const normal = parent.geometry.attributes.normal.array;\n        let distance = Infinity;\n        new THREE.Vector3();\n        let closestNormal = new THREE.Vector3();\n        const ox = o.position.x;\n        const oy = o.position.y;\n        const oz = o.position.z;\n        const vLength = vertices.length;\n        let chosenIdx = -1;\n        for (let i = 0; i < vLength; i += 3) {\n          const x = vertices[i];\n          const y = vertices[i + 1];\n          const z = vertices[i + 2];\n          const xDiff = x - ox;\n          const yDiff = y - oy;\n          const zDiff = z - oz;\n          const distSquared = xDiff * xDiff + yDiff * yDiff + zDiff * zDiff;\n          if (distSquared < distance) {\n            distance = distSquared;\n            chosenIdx = i;\n          }\n        }\n        closestNormal.fromArray(normal, chosenIdx);\n\n        // Get vector tangent to normal\n        o.lookAt(o.position.clone().add(closestNormal));\n        o.rotateZ(Math.PI);\n        o.rotateY(Math.PI);\n        if (typeof rotation === 'number') o.rotateZ(rotation);\n        applyProps(state.current, {\n          rotation: o.rotation\n        });\n      } else {\n        applyProps(state.current, {\n          rotation\n        });\n      }\n      target.geometry = new DecalGeometry(parent, state.current.position, state.current.rotation, state.current.scale);\n      // Reset parents matix-world\n      parent.matrixWorld = matrixWorld;\n      return () => {\n        target.geometry.dispose();\n      };\n    }\n  }, [mesh, ...vecToArray(position), ...vecToArray(scale), ...vecToArray(rotation)]);\n  React.useLayoutEffect(() => {\n    if (helper.current) {\n      applyProps(helper.current, state.current);\n      // Prevent the helpers from blocking rays\n      helper.current.traverse(child => child.raycast = () => null);\n    }\n  }, [debug]);\n\n  // <meshStandardMaterial transparent polygonOffset polygonOffsetFactor={-10} {...props} />}\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    \"material-transparent\": true,\n    \"material-polygonOffset\": true,\n    \"material-polygonOffsetFactor\": polygonOffsetFactor,\n    \"material-depthTest\": depthTest,\n    \"material-map\": map\n  }, props), children, debug && /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: helper\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", null), /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }), /*#__PURE__*/React.createElement(\"axesHelper\", null)));\n});\n\nexport { Decal };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect, Fragment } from 'react';\nimport { DoubleSide } from 'three';\nimport { SVGLoader } from 'three-stdlib';\n\nconst Svg = /* @__PURE__ */forwardRef(function R3FSvg({\n  src,\n  skipFill,\n  skipStrokes,\n  fillMaterial,\n  strokeMaterial,\n  fillMeshProps,\n  strokeMeshProps,\n  ...props\n}, ref) {\n  const svg = useLoader(SVGLoader, !src.startsWith('<svg') ? src : `data:image/svg+xml;utf8,${src}`);\n  const strokeGeometries = useMemo(() => skipStrokes ? [] : svg.paths.map(path => {\n    var _path$userData;\n    return ((_path$userData = path.userData) == null ? void 0 : _path$userData.style.stroke) === undefined || path.userData.style.stroke === 'none' ? null : path.subPaths.map(subPath => SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style));\n  }), [svg, skipStrokes]);\n  useEffect(() => {\n    return () => strokeGeometries.forEach(group => group && group.map(g => g.dispose()));\n  }, [strokeGeometries]);\n  let renderOrder = 0;\n  return /*#__PURE__*/React.createElement(\"object3D\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"object3D\", {\n    scale: [1, -1, 1]\n  }, svg.paths.map((path, p) => {\n    var _path$userData2, _path$userData3;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: p\n    }, !skipFill && ((_path$userData2 = path.userData) == null ? void 0 : _path$userData2.style.fill) !== undefined && path.userData.style.fill !== 'none' && SVGLoader.createShapes(path).map((shape, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s\n    }, fillMeshProps, {\n      renderOrder: renderOrder++\n    }), /*#__PURE__*/React.createElement(\"shapeGeometry\", {\n      args: [shape]\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.fill,\n      opacity: path.userData.style.fillOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, fillMaterial)))), !skipStrokes && ((_path$userData3 = path.userData) == null ? void 0 : _path$userData3.style.stroke) !== undefined && path.userData.style.stroke !== 'none' && path.subPaths.map((_subPath, s) => /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      key: s,\n      geometry: strokeGeometries[p][s]\n    }, strokeMeshProps, {\n      renderOrder: renderOrder++\n    }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", _extends({\n      color: path.userData.style.stroke,\n      opacity: path.userData.style.strokeOpacity,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false\n    }, strokeMaterial)))));\n  })));\n});\n\nexport { Svg };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { GLTFLoader, DRACOLoader, MeshoptDecoder } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\nimport { Clone } from './Clone.js';\n\nlet dracoLoader = null;\nlet decoderPath = 'https://www.gstatic.com/draco/versioned/decoders/1.5.5/';\nfunction extensions(useDraco = true, useMeshopt = true, extendLoader) {\n  return loader => {\n    if (extendLoader) {\n      extendLoader(loader);\n    }\n    if (useDraco) {\n      if (!dracoLoader) {\n        dracoLoader = new DRACOLoader();\n      }\n      dracoLoader.setDecoderPath(typeof useDraco === 'string' ? useDraco : decoderPath);\n      loader.setDRACOLoader(dracoLoader);\n    }\n    if (useMeshopt) {\n      loader.setMeshoptDecoder(typeof MeshoptDecoder === 'function' ? MeshoptDecoder() : MeshoptDecoder);\n    }\n  };\n}\nconst useGLTF = (path, useDraco, useMeshopt, extendLoader) => useLoader(GLTFLoader, path, extensions(useDraco, useMeshopt, extendLoader));\nuseGLTF.preload = (path, useDraco, useMeshopt, extendLoader) => useLoader.preload(GLTFLoader, path, extensions(useDraco, useMeshopt, extendLoader));\nuseGLTF.clear = path => useLoader.clear(GLTFLoader, path);\nuseGLTF.setDecoderPath = path => {\n  decoderPath = path;\n};\n\n//\n\nconst Gltf = /* @__PURE__ */React.forwardRef(({\n  src,\n  useDraco,\n  useMeshOpt,\n  extendLoader,\n  ...props\n}, ref) => {\n  const {\n    scene\n  } = useGLTF(src, useDraco, useMeshOpt, extendLoader);\n  return /*#__PURE__*/React.createElement(Clone, _extends({\n    ref: ref\n  }, props, {\n    object: scene\n  }));\n});\n\nexport { Gltf, useGLTF };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AsciiEffect } from 'three-stdlib';\n\nfunction AsciiRenderer({\n  renderIndex = 1,\n  bgColor = 'black',\n  fgColor = 'white',\n  characters = ' .:-+*=%@#',\n  invert = true,\n  color = false,\n  resolution = 0.15\n}) {\n  // Reactive state\n  const {\n    size,\n    gl,\n    scene,\n    camera\n  } = useThree();\n\n  // Create effect\n  const effect = React.useMemo(() => {\n    const effect = new AsciiEffect(gl, characters, {\n      invert,\n      color,\n      resolution\n    });\n    effect.domElement.style.position = 'absolute';\n    effect.domElement.style.top = '0px';\n    effect.domElement.style.left = '0px';\n    effect.domElement.style.pointerEvents = 'none';\n    return effect;\n  }, [characters, invert, color, resolution]);\n\n  // Styling\n  React.useLayoutEffect(() => {\n    effect.domElement.style.color = fgColor;\n    effect.domElement.style.backgroundColor = bgColor;\n  }, [fgColor, bgColor]);\n\n  // Append on mount, remove on unmount\n  React.useEffect(() => {\n    gl.domElement.style.opacity = '0';\n    gl.domElement.parentNode.appendChild(effect.domElement);\n    return () => {\n      gl.domElement.style.opacity = '1';\n      gl.domElement.parentNode.removeChild(effect.domElement);\n    };\n  }, [effect]);\n\n  // Set size\n  React.useEffect(() => {\n    effect.setSize(size.width, size.height);\n  }, [effect, size]);\n\n  // Take over render-loop (that is what the index is for)\n  useFrame(state => {\n    effect.render(scene, camera);\n  }, renderIndex);\n\n  // return something to not break type signatures\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport { AsciiRenderer };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useLoader, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nconst SplatMaterial = /* @__PURE__ */shaderMaterial({\n  alphaTest: 0,\n  viewport: /* @__PURE__ */new THREE.Vector2(1980, 1080),\n  focal: 1000.0,\n  centerAndScaleTexture: null,\n  covAndColorTexture: null\n}, /*glsl*/`\n    precision highp sampler2D;\n    precision highp usampler2D;\n    out vec4 vColor;\n    out vec3 vPosition;\n    uniform vec2 resolution;\n    uniform vec2 viewport;\n    uniform float focal;\n    attribute uint splatIndex;\n    uniform sampler2D centerAndScaleTexture;\n    uniform usampler2D covAndColorTexture;    \n\n    vec2 unpackInt16(in uint value) {\n      int v = int(value);\n      int v0 = v >> 16;\n      int v1 = (v & 0xFFFF);\n      if((v & 0x8000) != 0)\n        v1 |= 0xFFFF0000;\n      return vec2(float(v1), float(v0));\n    }\n\n    void main () {\n      ivec2 texSize = textureSize(centerAndScaleTexture, 0);\n      ivec2 texPos = ivec2(splatIndex%uint(texSize.x), splatIndex/uint(texSize.x));\n      vec4 centerAndScaleData = texelFetch(centerAndScaleTexture, texPos, 0);\n      vec4 center = vec4(centerAndScaleData.xyz, 1);\n      vec4 camspace = modelViewMatrix * center;\n      vec4 pos2d = projectionMatrix * camspace;\n\n      float bounds = 1.2 * pos2d.w;\n      if (pos2d.z < -pos2d.w || pos2d.x < -bounds || pos2d.x > bounds\n        || pos2d.y < -bounds || pos2d.y > bounds) {\n        gl_Position = vec4(0.0, 0.0, 2.0, 1.0);\n        return;\n      }\n\n      uvec4 covAndColorData = texelFetch(covAndColorTexture, texPos, 0);\n      vec2 cov3D_M11_M12 = unpackInt16(covAndColorData.x) * centerAndScaleData.w;\n      vec2 cov3D_M13_M22 = unpackInt16(covAndColorData.y) * centerAndScaleData.w;\n      vec2 cov3D_M23_M33 = unpackInt16(covAndColorData.z) * centerAndScaleData.w;\n      mat3 Vrk = mat3(\n        cov3D_M11_M12.x, cov3D_M11_M12.y, cov3D_M13_M22.x,\n        cov3D_M11_M12.y, cov3D_M13_M22.y, cov3D_M23_M33.x,\n        cov3D_M13_M22.x, cov3D_M23_M33.x, cov3D_M23_M33.y\n      );\n\n      mat3 J = mat3(\n        focal / camspace.z, 0., -(focal * camspace.x) / (camspace.z * camspace.z),\n        0., focal / camspace.z, -(focal * camspace.y) / (camspace.z * camspace.z),\n        0., 0., 0.\n      );\n\n      mat3 W = transpose(mat3(modelViewMatrix));\n      mat3 T = W * J;\n      mat3 cov = transpose(T) * Vrk * T;\n      vec2 vCenter = vec2(pos2d) / pos2d.w;\n      float diagonal1 = cov[0][0] + 0.3;\n      float offDiagonal = cov[0][1];\n      float diagonal2 = cov[1][1] + 0.3;\n      float mid = 0.5 * (diagonal1 + diagonal2);\n      float radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));\n      float lambda1 = mid + radius;\n      float lambda2 = max(mid - radius, 0.1);\n      vec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));\n      vec2 v1 = min(sqrt(2.0 * lambda1), 1024.0) * diagonalVector;\n      vec2 v2 = min(sqrt(2.0 * lambda2), 1024.0) * vec2(diagonalVector.y, -diagonalVector.x);\n      uint colorUint = covAndColorData.w;\n      vColor = vec4(\n        float(colorUint & uint(0xFF)) / 255.0,\n        float((colorUint >> uint(8)) & uint(0xFF)) / 255.0,\n        float((colorUint >> uint(16)) & uint(0xFF)) / 255.0,\n        float(colorUint >> uint(24)) / 255.0\n      );\n      vPosition = position;\n\n      gl_Position = vec4(\n        vCenter \n          + position.x * v2 / viewport * 2.0 \n          + position.y * v1 / viewport * 2.0, pos2d.z / pos2d.w, 1.0);\n    }\n    `, /*glsl*/`\n    #include <alphatest_pars_fragment>\n    #include <alphahash_pars_fragment>\n    in vec4 vColor;\n    in vec3 vPosition;\n    void main () {\n      float A = -dot(vPosition.xy, vPosition.xy);\n      if (A < -4.0) discard;\n      float B = exp(A) * vColor.a;\n      vec4 diffuseColor = vec4(vColor.rgb, B);\n      #include <alphatest_fragment>\n      #include <alphahash_fragment>\n      gl_FragColor = diffuseColor;\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n    }\n  `);\nfunction createWorker(self) {\n  let matrices = null;\n  let offset = 0;\n  function sortSplats(view, hashed = false) {\n    const vertexCount = matrices.length / 16;\n    const threshold = -0.0001;\n    let maxDepth = -Infinity;\n    let minDepth = Infinity;\n    const depthList = new Float32Array(vertexCount);\n    const sizeList = new Int32Array(depthList.buffer);\n    const validIndexList = new Int32Array(vertexCount);\n    let validCount = 0;\n    for (let i = 0; i < vertexCount; i++) {\n      // Sign of depth is reversed\n      const depth = view[0] * matrices[i * 16 + 12] + view[1] * matrices[i * 16 + 13] + view[2] * matrices[i * 16 + 14] + view[3];\n      // Skip behind of camera and small, transparent splat\n      if (hashed || depth < 0 && matrices[i * 16 + 15] > threshold * depth) {\n        depthList[validCount] = depth;\n        validIndexList[validCount] = i;\n        validCount++;\n        if (depth > maxDepth) maxDepth = depth;\n        if (depth < minDepth) minDepth = depth;\n      }\n    }\n\n    // This is a 16 bit single-pass counting sort\n    const depthInv = (256 * 256 - 1) / (maxDepth - minDepth);\n    const counts0 = new Uint32Array(256 * 256);\n    for (let i = 0; i < validCount; i++) {\n      sizeList[i] = (depthList[i] - minDepth) * depthInv | 0;\n      counts0[sizeList[i]]++;\n    }\n    const starts0 = new Uint32Array(256 * 256);\n    for (let i = 1; i < 256 * 256; i++) starts0[i] = starts0[i - 1] + counts0[i - 1];\n    const depthIndex = new Uint32Array(validCount);\n    for (let i = 0; i < validCount; i++) depthIndex[starts0[sizeList[i]]++] = validIndexList[i];\n    return depthIndex;\n  }\n  self.onmessage = e => {\n    if (e.data.method == 'push') {\n      if (offset === 0) matrices = new Float32Array(e.data.length);\n      const new_matrices = new Float32Array(e.data.matrices);\n      matrices.set(new_matrices, offset);\n      offset += new_matrices.length;\n    } else if (e.data.method == 'sort') {\n      if (matrices !== null) {\n        const indices = sortSplats(new Float32Array(e.data.view), e.data.hashed);\n        // @ts-ignore\n        self.postMessage({\n          indices,\n          key: e.data.key\n        }, [indices.buffer]);\n      }\n    }\n  };\n}\nclass SplatLoader extends THREE.Loader {\n  constructor(...args) {\n    super(...args);\n    // WebGLRenderer, needs to be filled out!\n    this.gl = null;\n    // Default chunk size for lazy loading\n    this.chunkSize = 25000;\n  }\n  load(url, onLoad, onProgress, onError) {\n    const shared = {\n      gl: this.gl,\n      url: this.manager.resolveURL(url),\n      worker: new Worker(URL.createObjectURL(new Blob(['(', createWorker.toString(), ')(self)'], {\n        type: 'application/javascript'\n      }))),\n      manager: this.manager,\n      update: (target, camera, hashed) => update(camera, shared, target, hashed),\n      connect: target => connect(shared, target),\n      loading: false,\n      loaded: false,\n      loadedVertexCount: 0,\n      chunkSize: this.chunkSize,\n      totalDownloadBytes: 0,\n      numVertices: 0,\n      rowLength: 3 * 4 + 3 * 4 + 4 + 4,\n      maxVertexes: 0,\n      bufferTextureWidth: 0,\n      bufferTextureHeight: 0,\n      stream: null,\n      centerAndScaleData: null,\n      covAndColorData: null,\n      covAndColorTexture: null,\n      centerAndScaleTexture: null,\n      onProgress\n    };\n    load(shared).then(onLoad).catch(e => {\n      onError == null || onError(e);\n      shared.manager.itemError(shared.url);\n    });\n  }\n}\nasync function load(shared) {\n  shared.manager.itemStart(shared.url);\n  const data = await fetch(shared.url);\n  if (data.body === null) throw 'Failed to fetch file';\n  let _totalDownloadBytes = data.headers.get('Content-Length');\n  const totalDownloadBytes = _totalDownloadBytes ? parseInt(_totalDownloadBytes) : undefined;\n  if (totalDownloadBytes == undefined) throw 'Failed to get content length';\n  shared.stream = data.body.getReader();\n  shared.totalDownloadBytes = totalDownloadBytes;\n  shared.numVertices = Math.floor(shared.totalDownloadBytes / shared.rowLength);\n  const context = shared.gl.getContext();\n  let maxTextureSize = context.getParameter(context.MAX_TEXTURE_SIZE);\n  shared.maxVertexes = maxTextureSize * maxTextureSize;\n  if (shared.numVertices > shared.maxVertexes) shared.numVertices = shared.maxVertexes;\n  shared.bufferTextureWidth = maxTextureSize;\n  shared.bufferTextureHeight = Math.floor((shared.numVertices - 1) / maxTextureSize) + 1;\n  shared.centerAndScaleData = new Float32Array(shared.bufferTextureWidth * shared.bufferTextureHeight * 4);\n  shared.covAndColorData = new Uint32Array(shared.bufferTextureWidth * shared.bufferTextureHeight * 4);\n  shared.centerAndScaleTexture = new THREE.DataTexture(shared.centerAndScaleData, shared.bufferTextureWidth, shared.bufferTextureHeight, THREE.RGBAFormat, THREE.FloatType);\n  shared.centerAndScaleTexture.needsUpdate = true;\n  shared.covAndColorTexture = new THREE.DataTexture(shared.covAndColorData, shared.bufferTextureWidth, shared.bufferTextureHeight, THREE.RGBAIntegerFormat, THREE.UnsignedIntType);\n  shared.covAndColorTexture.internalFormat = 'RGBA32UI';\n  shared.covAndColorTexture.needsUpdate = true;\n  return shared;\n}\nasync function lazyLoad(shared) {\n  shared.loading = true;\n  let bytesDownloaded = 0;\n  let bytesProcessed = 0;\n  const chunks = [];\n  let lastReportedProgress = 0;\n  const lengthComputable = shared.totalDownloadBytes !== 0;\n  while (true) {\n    try {\n      const {\n        value,\n        done\n      } = await shared.stream.read();\n      if (done) break;\n      bytesDownloaded += value.length;\n      if (shared.totalDownloadBytes != undefined) {\n        const percent = bytesDownloaded / shared.totalDownloadBytes * 100;\n        if (shared.onProgress && percent - lastReportedProgress > 1) {\n          const event = new ProgressEvent('progress', {\n            lengthComputable,\n            loaded: bytesDownloaded,\n            total: shared.totalDownloadBytes\n          });\n          shared.onProgress(event);\n          lastReportedProgress = percent;\n        }\n      }\n      chunks.push(value);\n      const bytesRemains = bytesDownloaded - bytesProcessed;\n      if (shared.totalDownloadBytes != undefined && bytesRemains > shared.rowLength * shared.chunkSize) {\n        let vertexCount = Math.floor(bytesRemains / shared.rowLength);\n        const concatenatedChunksbuffer = new Uint8Array(bytesRemains);\n        let offset = 0;\n        for (const chunk of chunks) {\n          concatenatedChunksbuffer.set(chunk, offset);\n          offset += chunk.length;\n        }\n        chunks.length = 0;\n        if (bytesRemains > vertexCount * shared.rowLength) {\n          const extra_data = new Uint8Array(bytesRemains - vertexCount * shared.rowLength);\n          extra_data.set(concatenatedChunksbuffer.subarray(bytesRemains - extra_data.length, bytesRemains), 0);\n          chunks.push(extra_data);\n        }\n        const buffer = new Uint8Array(vertexCount * shared.rowLength);\n        buffer.set(concatenatedChunksbuffer.subarray(0, buffer.byteLength), 0);\n        const matrices = pushDataBuffer(shared, buffer.buffer, vertexCount);\n        shared.worker.postMessage({\n          method: 'push',\n          src: shared.url,\n          length: shared.numVertices * 16,\n          matrices: matrices.buffer\n        }, [matrices.buffer]);\n        bytesProcessed += vertexCount * shared.rowLength;\n        if (shared.onProgress) {\n          const event = new ProgressEvent('progress', {\n            lengthComputable,\n            loaded: shared.totalDownloadBytes,\n            total: shared.totalDownloadBytes\n          });\n          shared.onProgress(event);\n        }\n      }\n    } catch (error) {\n      console.error(error);\n      break;\n    }\n  }\n  if (bytesDownloaded - bytesProcessed > 0) {\n    // Concatenate the chunks into a single Uint8Array\n    let concatenatedChunks = new Uint8Array(chunks.reduce((acc, chunk) => acc + chunk.length, 0));\n    let offset = 0;\n    for (const chunk of chunks) {\n      concatenatedChunks.set(chunk, offset);\n      offset += chunk.length;\n    }\n    let numVertices = Math.floor(concatenatedChunks.byteLength / shared.rowLength);\n    const matrices = pushDataBuffer(shared, concatenatedChunks.buffer, numVertices);\n    shared.worker.postMessage({\n      method: 'push',\n      src: shared.url,\n      length: numVertices * 16,\n      matrices: matrices.buffer\n    }, [matrices.buffer]);\n  }\n  shared.loaded = true;\n  shared.manager.itemEnd(shared.url);\n}\nfunction update(camera, shared, target, hashed) {\n  camera.updateMatrixWorld();\n  shared.gl.getCurrentViewport(target.viewport);\n  // @ts-ignore\n  target.material.viewport.x = target.viewport.z;\n  // @ts-ignore\n  target.material.viewport.y = target.viewport.w;\n  target.material.focal = target.viewport.w / 2.0 * Math.abs(camera.projectionMatrix.elements[5]);\n  if (target.ready) {\n    if (hashed && target.sorted) return;\n    target.ready = false;\n    const view = new Float32Array([target.modelViewMatrix.elements[2], -target.modelViewMatrix.elements[6], target.modelViewMatrix.elements[10], target.modelViewMatrix.elements[14]]);\n    shared.worker.postMessage({\n      method: 'sort',\n      src: shared.url,\n      key: target.uuid,\n      view: view.buffer,\n      hashed\n    }, [view.buffer]);\n    if (hashed && shared.loaded) target.sorted = true;\n  }\n}\nfunction connect(shared, target) {\n  if (!shared.loading) lazyLoad(shared);\n  target.ready = false;\n  target.pm = new THREE.Matrix4();\n  target.vm1 = new THREE.Matrix4();\n  target.vm2 = new THREE.Matrix4();\n  target.viewport = new THREE.Vector4();\n  let splatIndexArray = new Uint32Array(shared.bufferTextureWidth * shared.bufferTextureHeight);\n  const splatIndexes = new THREE.InstancedBufferAttribute(splatIndexArray, 1, false);\n  splatIndexes.setUsage(THREE.DynamicDrawUsage);\n  const geometry = target.geometry = new THREE.InstancedBufferGeometry();\n  const positionsArray = new Float32Array(6 * 3);\n  const positions = new THREE.BufferAttribute(positionsArray, 3);\n  geometry.setAttribute('position', positions);\n  positions.setXYZ(2, -2.0, 2.0, 0.0);\n  positions.setXYZ(1, 2.0, 2.0, 0.0);\n  positions.setXYZ(0, -2.0, -2.0, 0.0);\n  positions.setXYZ(5, -2.0, -2.0, 0.0);\n  positions.setXYZ(4, 2.0, 2.0, 0.0);\n  positions.setXYZ(3, 2.0, -2.0, 0.0);\n  positions.needsUpdate = true;\n  geometry.setAttribute('splatIndex', splatIndexes);\n  geometry.instanceCount = 1;\n  function listener(e) {\n    if (target && e.data.key === target.uuid) {\n      let indexes = new Uint32Array(e.data.indices);\n      // @ts-ignore\n      geometry.attributes.splatIndex.set(indexes);\n      geometry.attributes.splatIndex.needsUpdate = true;\n      geometry.instanceCount = indexes.length;\n      target.ready = true;\n    }\n  }\n  shared.worker.addEventListener('message', listener);\n  async function wait() {\n    while (true) {\n      const centerAndScaleTextureProperties = shared.gl.properties.get(shared.centerAndScaleTexture);\n      const covAndColorTextureProperties = shared.gl.properties.get(shared.covAndColorTexture);\n      if (centerAndScaleTextureProperties != null && centerAndScaleTextureProperties.__webglTexture && covAndColorTextureProperties != null && covAndColorTextureProperties.__webglTexture && shared.loadedVertexCount > 0) break;\n      await new Promise(resolve => setTimeout(resolve, 10));\n    }\n    target.ready = true;\n  }\n  wait();\n  return () => shared.worker.removeEventListener('message', listener);\n}\nfunction pushDataBuffer(shared, buffer, vertexCount) {\n  const context = shared.gl.getContext();\n  if (shared.loadedVertexCount + vertexCount > shared.maxVertexes) vertexCount = shared.maxVertexes - shared.loadedVertexCount;\n  if (vertexCount <= 0) throw 'Failed to parse file';\n  const u_buffer = new Uint8Array(buffer);\n  const f_buffer = new Float32Array(buffer);\n  const matrices = new Float32Array(vertexCount * 16);\n  const covAndColorData_uint8 = new Uint8Array(shared.covAndColorData.buffer);\n  const covAndColorData_int16 = new Int16Array(shared.covAndColorData.buffer);\n  for (let i = 0; i < vertexCount; i++) {\n    const quat = new THREE.Quaternion(-(u_buffer[32 * i + 28 + 1] - 128) / 128.0, (u_buffer[32 * i + 28 + 2] - 128) / 128.0, (u_buffer[32 * i + 28 + 3] - 128) / 128.0, -(u_buffer[32 * i + 28 + 0] - 128) / 128.0);\n    quat.invert();\n    const center = new THREE.Vector3(f_buffer[8 * i + 0], f_buffer[8 * i + 1], -f_buffer[8 * i + 2]);\n    const scale = new THREE.Vector3(f_buffer[8 * i + 3 + 0], f_buffer[8 * i + 3 + 1], f_buffer[8 * i + 3 + 2]);\n    const mtx = new THREE.Matrix4();\n    mtx.makeRotationFromQuaternion(quat);\n    mtx.transpose();\n    mtx.scale(scale);\n    const mtx_t = mtx.clone();\n    mtx.transpose();\n    mtx.premultiply(mtx_t);\n    mtx.setPosition(center);\n    const cov_indexes = [0, 1, 2, 5, 6, 10];\n    let max_value = 0.0;\n    for (let j = 0; j < cov_indexes.length; j++) if (Math.abs(mtx.elements[cov_indexes[j]]) > max_value) max_value = Math.abs(mtx.elements[cov_indexes[j]]);\n    let destOffset = shared.loadedVertexCount * 4 + i * 4;\n    shared.centerAndScaleData[destOffset + 0] = center.x;\n    shared.centerAndScaleData[destOffset + 1] = -center.y;\n    shared.centerAndScaleData[destOffset + 2] = center.z;\n    shared.centerAndScaleData[destOffset + 3] = max_value / 32767.0;\n    destOffset = shared.loadedVertexCount * 8 + i * 4 * 2;\n    for (let j = 0; j < cov_indexes.length; j++) covAndColorData_int16[destOffset + j] = mtx.elements[cov_indexes[j]] * 32767.0 / max_value;\n\n    // RGBA\n    destOffset = shared.loadedVertexCount * 16 + (i * 4 + 3) * 4;\n    const col = new THREE.Color(u_buffer[32 * i + 24 + 0] / 255, u_buffer[32 * i + 24 + 1] / 255, u_buffer[32 * i + 24 + 2] / 255);\n    col.convertSRGBToLinear();\n    covAndColorData_uint8[destOffset + 0] = col.r * 255;\n    covAndColorData_uint8[destOffset + 1] = col.g * 255;\n    covAndColorData_uint8[destOffset + 2] = col.b * 255;\n    covAndColorData_uint8[destOffset + 3] = u_buffer[32 * i + 24 + 3];\n\n    // Store scale and transparent to remove splat in sorting process\n    mtx.elements[15] = Math.max(scale.x, scale.y, scale.z) * u_buffer[32 * i + 24 + 3] / 255.0;\n    for (let j = 0; j < 16; j++) matrices[i * 16 + j] = mtx.elements[j];\n  }\n  while (vertexCount > 0) {\n    let width = 0;\n    let height = 0;\n    const xoffset = shared.loadedVertexCount % shared.bufferTextureWidth;\n    const yoffset = Math.floor(shared.loadedVertexCount / shared.bufferTextureWidth);\n    if (shared.loadedVertexCount % shared.bufferTextureWidth != 0) {\n      width = Math.min(shared.bufferTextureWidth, xoffset + vertexCount) - xoffset;\n      height = 1;\n    } else if (Math.floor(vertexCount / shared.bufferTextureWidth) > 0) {\n      width = shared.bufferTextureWidth;\n      height = Math.floor(vertexCount / shared.bufferTextureWidth);\n    } else {\n      width = vertexCount % shared.bufferTextureWidth;\n      height = 1;\n    }\n    const centerAndScaleTextureProperties = shared.gl.properties.get(shared.centerAndScaleTexture);\n    context.bindTexture(context.TEXTURE_2D, centerAndScaleTextureProperties.__webglTexture);\n    context.texSubImage2D(context.TEXTURE_2D, 0, xoffset, yoffset, width, height, context.RGBA, context.FLOAT, shared.centerAndScaleData, shared.loadedVertexCount * 4);\n    const covAndColorTextureProperties = shared.gl.properties.get(shared.covAndColorTexture);\n    context.bindTexture(context.TEXTURE_2D, covAndColorTextureProperties.__webglTexture);\n    context.texSubImage2D(context.TEXTURE_2D, 0, xoffset, yoffset, width, height,\n    // @ts-ignore\n    context.RGBA_INTEGER, context.UNSIGNED_INT, shared.covAndColorData, shared.loadedVertexCount * 4);\n    shared.gl.resetState();\n    shared.loadedVertexCount += width * height;\n    vertexCount -= width * height;\n  }\n  return matrices;\n}\nfunction Splat({\n  src,\n  toneMapped = false,\n  alphaTest = 0,\n  alphaHash = false,\n  chunkSize = 25000,\n  ...props\n}) {\n  extend({\n    SplatMaterial\n  });\n  const ref = React.useRef(null);\n  const gl = useThree(state => state.gl);\n  const camera = useThree(state => state.camera);\n\n  // Shared state, globally memoized, the same url re-uses the same daza\n  const shared = useLoader(SplatLoader, src, loader => {\n    loader.gl = gl;\n    loader.chunkSize = chunkSize;\n  });\n\n  // Listen to worker results, apply them to the target mesh\n  React.useLayoutEffect(() => shared.connect(ref.current), [src]);\n  // Update the worker\n  useFrame(() => shared.update(ref.current, camera, alphaHash));\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    frustumCulled: false\n  }, props), /*#__PURE__*/React.createElement(\"splatMaterial\", {\n    key: `${src}/${alphaTest}/${alphaHash}${SplatMaterial.key}`,\n    transparent: !alphaHash,\n    depthTest: true,\n    alphaTest: alphaHash ? 0 : alphaTest,\n    centerAndScaleTexture: shared.centerAndScaleTexture,\n    covAndColorTexture: shared.covAndColorTexture,\n    depthWrite: alphaHash ? true : alphaTest > 0,\n    blending: alphaHash ? THREE.NormalBlending : THREE.CustomBlending,\n    blendSrcAlpha: THREE.OneFactor,\n    alphaHash: !!alphaHash,\n    toneMapped: toneMapped\n  }));\n}\n\nexport { Splat };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\n\nconst isFunction = node => typeof node === 'function';\nconst OrthographicCamera = /* @__PURE__ */React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  children,\n  makeDefault,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => cameraRef.current, []);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.updateProjectionMatrix();\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"orthographicCamera\", _extends({\n    left: size.width / -2,\n    right: size.width / 2,\n    top: size.height / 2,\n    bottom: size.height / -2,\n    ref: cameraRef\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { OrthographicCamera };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n// TODO: consume this from three >r154 when SemVer allows\n\n// 👇 uncomment when TS version supports function overloads\n// export function useFBO(settings?: FBOSettings)\nfunction useFBO(/** Width in pixels, or settings (will render fullscreen by default) */\nwidth, /** Height in pixels */\nheight, /**Settings */\nsettings) {\n  const size = useThree(state => state.size);\n  const viewport = useThree(state => state.viewport);\n  const _width = typeof width === 'number' ? width : size.width * viewport.dpr;\n  const _height = typeof height === 'number' ? height : size.height * viewport.dpr;\n  const _settings = (typeof width === 'number' ? settings : width) || {};\n  const {\n    samples = 0,\n    depth,\n    ...targetSettings\n  } = _settings;\n  const target = React.useMemo(() => {\n    const target = new THREE.WebGLRenderTarget(_width, _height, {\n      minFilter: THREE.LinearFilter,\n      magFilter: THREE.LinearFilter,\n      type: THREE.HalfFloatType,\n      ...targetSettings\n    });\n    if (depth) {\n      target.depthTexture = new THREE.DepthTexture(_width, _height, THREE.FloatType);\n    }\n    target.samples = samples;\n    return target;\n  }, []);\n  React.useLayoutEffect(() => {\n    target.setSize(_width, _height);\n    if (samples) target.samples = samples;\n  }, [samples, target, _width, _height]);\n  React.useEffect(() => {\n    return () => target.dispose();\n  }, []);\n  return target;\n}\nconst Fbo = ({\n  children,\n  width,\n  height,\n  ...settings\n}) => {\n  const target = useFBO(width, height, settings);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(target));\n};\n\nexport { Fbo, useFBO };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\n\nconst isFunction = node => typeof node === 'function';\nconst PerspectiveCamera = /* @__PURE__ */React.forwardRef(({\n  envMap,\n  resolution = 256,\n  frames = Infinity,\n  makeDefault,\n  children,\n  ...props\n}, ref) => {\n  const set = useThree(({\n    set\n  }) => set);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const size = useThree(({\n    size\n  }) => size);\n  const cameraRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => cameraRef.current, []);\n  const groupRef = React.useRef(null);\n  const fbo = useFBO(resolution);\n  React.useLayoutEffect(() => {\n    if (!props.manual) {\n      cameraRef.current.aspect = size.width / size.height;\n    }\n  }, [size, props]);\n  React.useLayoutEffect(() => {\n    cameraRef.current.updateProjectionMatrix();\n  });\n  let count = 0;\n  let oldEnvMap = null;\n  const functional = isFunction(children);\n  useFrame(state => {\n    if (functional && (frames === Infinity || count < frames)) {\n      groupRef.current.visible = false;\n      state.gl.setRenderTarget(fbo);\n      oldEnvMap = state.scene.background;\n      if (envMap) state.scene.background = envMap;\n      state.gl.render(state.scene, cameraRef.current);\n      state.scene.background = oldEnvMap;\n      state.gl.setRenderTarget(null);\n      groupRef.current.visible = true;\n      count++;\n    }\n  });\n  React.useLayoutEffect(() => {\n    if (makeDefault) {\n      const oldCam = camera;\n      set(() => ({\n        camera: cameraRef.current\n      }));\n      return () => set(() => ({\n        camera: oldCam\n      }));\n    }\n    // The camera should not be part of the dependency list because this components camera is a stable reference\n    // that must exchange the default, and clean up after itself on unmount.\n  }, [cameraRef, makeDefault, set]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"perspectiveCamera\", _extends({\n    ref: cameraRef\n  }, props), !functional && children), /*#__PURE__*/React.createElement(\"group\", {\n    ref: groupRef\n  }, functional && children(fbo.texture)));\n});\n\nexport { PerspectiveCamera };\n", "import * as THREE from 'three';\nimport { WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport * as React from 'react';\nimport { useMemo, useEffect } from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useCubeCamera({\n  resolution = 256,\n  near = 0.1,\n  far = 1000,\n  envMap,\n  fog\n} = {}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const fbo = useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  useEffect(() => {\n    return () => {\n      fbo.dispose();\n    };\n  }, [fbo]);\n  const camera = useMemo(() => new THREE.CubeCamera(near, far, fbo), [near, far, fbo]);\n  let originalFog;\n  let originalBackground;\n  const update = React.useCallback(() => {\n    originalFog = scene.fog;\n    originalBackground = scene.background;\n    scene.background = envMap || originalBackground;\n    scene.fog = fog || originalFog;\n    camera.update(gl, scene);\n    scene.fog = originalFog;\n    scene.background = originalBackground;\n  }, [gl, scene, camera]);\n  return {\n    fbo,\n    camera,\n    update\n  };\n}\nfunction CubeCamera({\n  children,\n  frames = Infinity,\n  resolution,\n  near,\n  far,\n  envMap,\n  fog,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const {\n    fbo,\n    camera,\n    update\n  } = useCubeCamera({\n    resolution,\n    near,\n    far,\n    envMap,\n    fog\n  });\n  let count = 0;\n  useFrame(() => {\n    if (ref.current && (frames === Infinity || count < frames)) {\n      ref.current.visible = false;\n      update();\n      ref.current.visible = true;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: camera\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, children == null ? void 0 : children(fbo.texture)));\n}\n\nexport { CubeCamera, useCubeCamera };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { DeviceOrientationControls as DeviceOrientationControls$1 } from 'three-stdlib';\n\nconst DeviceOrientationControls = /* @__PURE__ */React.forwardRef((props, ref) => {\n  const {\n    camera,\n    onChange,\n    makeDefault,\n    ...rest\n  } = props;\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new DeviceOrientationControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls == null || controls.addEventListener == null || controls.addEventListener('change', callback);\n    return () => controls == null || controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n  }, [onChange, controls, invalidate]);\n  useFrame(() => controls == null ? void 0 : controls.update(), -1);\n  React.useEffect(() => {\n    const current = controls;\n    current == null || current.connect();\n    return () => current == null ? void 0 : current.dispose();\n  }, [controls]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest)) : null;\n});\n\nexport { DeviceOrientationControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { FlyControls as FlyControls$1 } from 'three-stdlib';\n\nconst FlyControls = /* @__PURE__ */React.forwardRef(({\n  domElement,\n  ...props\n}, fref) => {\n  const {\n    onChange,\n    makeDefault,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const camera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new FlyControls$1(camera), [camera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener == null || controls.addEventListener('change', callback);\n    return () => controls.removeEventListener == null ? void 0 : controls.removeEventListener('change', callback);\n  }, [onChange, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame((_, delta) => controls.update(delta));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: fref,\n    object: controls,\n    args: [camera, explDomElement]\n  }, rest));\n});\n\nexport { FlyControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { MapControls as MapControls$1 } from 'three-stdlib';\n\nconst MapControls = /* @__PURE__ */React.forwardRef((props = {\n  enableDamping: true\n}, ref) => {\n  const {\n    domElement,\n    camera,\n    makeDefault,\n    onChange,\n    onStart,\n    onEnd,\n    ...rest\n  } = props;\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const explCamera = camera || defaultCamera;\n  const controls = React.useMemo(() => new MapControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.dispose();\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, explDomElement]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame(() => controls.update(), -1);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: true\n  }, rest));\n});\n\nexport { MapControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { OrbitControls as OrbitControls$1 } from 'three-stdlib';\n\nconst OrbitControls = /* @__PURE__ */React.forwardRef(({\n  makeDefault,\n  camera,\n  regress,\n  domElement,\n  enableDamping = true,\n  keyEvents = false,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new OrbitControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    if (keyEvents) {\n      controls.connect(keyEvents === true ? explDomElement : keyEvents);\n    }\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [keyEvents, explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('change', callback);\n    controls.addEventListener('start', onStartCb);\n    controls.addEventListener('end', onEndCb);\n    return () => {\n      controls.removeEventListener('start', onStartCb);\n      controls.removeEventListener('end', onEndCb);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate, setEvents]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls,\n    enableDamping: enableDamping\n  }, restProps));\n});\n\nexport { OrbitControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { TrackballControls as TrackballControls$1 } from 'three-stdlib';\n\nconst TrackballControls = /* @__PURE__ */React.forwardRef(({\n  makeDefault,\n  camera,\n  domElement,\n  regress,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const {\n    invalidate,\n    camera: defaultCamera,\n    gl,\n    events,\n    set,\n    get,\n    performance,\n    viewport\n  } = useThree();\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new TrackballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  React.useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n      controls.removeEventListener('change', callback);\n    };\n  }, [onChange, onStart, onEnd, controls, invalidate]);\n  React.useEffect(() => {\n    controls.handleResize();\n  }, [viewport]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { TrackballControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { ArcballControls as ArcballControls$1 } from 'three-stdlib';\n\nconst ArcballControls = /* @__PURE__ */forwardRef(({\n  camera,\n  makeDefault,\n  regress,\n  domElement,\n  onChange,\n  onStart,\n  onEnd,\n  ...restProps\n}, ref) => {\n  const invalidate = useThree(state => state.invalidate);\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = useMemo(() => new ArcballControls$1(explCamera), [explCamera]);\n  useFrame(() => {\n    if (controls.enabled) controls.update();\n  }, -1);\n  useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.dispose();\n  }, [explDomElement, regress, controls, invalidate]);\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onStart) controls.addEventListener('start', onStart);\n    if (onEnd) controls.addEventListener('end', onEnd);\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onStart) controls.removeEventListener('start', onStart);\n      if (onEnd) controls.removeEventListener('end', onEnd);\n    };\n  }, [onChange, onStart, onEnd]);\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { ArcballControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { TransformControls as TransformControls$1 } from 'three-stdlib';\n\nconst TransformControls = /* @__PURE__ */React.forwardRef(({\n  children,\n  domElement,\n  onChange,\n  onMouseDown,\n  onMouseUp,\n  onObjectChange,\n  object,\n  makeDefault,\n  camera,\n  // Transform\n  enabled,\n  axis,\n  mode,\n  translationSnap,\n  rotationSnap,\n  scaleSnap,\n  space,\n  size,\n  showX,\n  showY,\n  showZ,\n  ...props\n}, ref) => {\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const defaultControls = useThree(state => state.controls);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new TransformControls$1(explCamera, explDomElement), [explCamera, explDomElement]);\n  const group = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (object) {\n      controls.attach(object instanceof THREE.Object3D ? object : object.current);\n    } else if (group.current instanceof THREE.Object3D) {\n      controls.attach(group.current);\n    }\n    return () => void controls.detach();\n  }, [object, children, controls]);\n  React.useEffect(() => {\n    if (defaultControls) {\n      const callback = event => defaultControls.enabled = !event.value;\n      controls.addEventListener('dragging-changed', callback);\n      return () => controls.removeEventListener('dragging-changed', callback);\n    }\n  }, [controls, defaultControls]);\n  const onChangeRef = React.useRef();\n  const onMouseDownRef = React.useRef();\n  const onMouseUpRef = React.useRef();\n  const onObjectChangeRef = React.useRef();\n  React.useLayoutEffect(() => void (onChangeRef.current = onChange), [onChange]);\n  React.useLayoutEffect(() => void (onMouseDownRef.current = onMouseDown), [onMouseDown]);\n  React.useLayoutEffect(() => void (onMouseUpRef.current = onMouseUp), [onMouseUp]);\n  React.useLayoutEffect(() => void (onObjectChangeRef.current = onObjectChange), [onObjectChange]);\n  React.useEffect(() => {\n    const onChange = e => {\n      invalidate();\n      onChangeRef.current == null || onChangeRef.current(e);\n    };\n    const onMouseDown = e => onMouseDownRef.current == null ? void 0 : onMouseDownRef.current(e);\n    const onMouseUp = e => onMouseUpRef.current == null ? void 0 : onMouseUpRef.current(e);\n    const onObjectChange = e => onObjectChangeRef.current == null ? void 0 : onObjectChangeRef.current(e);\n    controls.addEventListener('change', onChange);\n    controls.addEventListener('mouseDown', onMouseDown);\n    controls.addEventListener('mouseUp', onMouseUp);\n    controls.addEventListener('objectChange', onObjectChange);\n    return () => {\n      controls.removeEventListener('change', onChange);\n      controls.removeEventListener('mouseDown', onMouseDown);\n      controls.removeEventListener('mouseUp', onMouseUp);\n      controls.removeEventListener('objectChange', onObjectChange);\n    };\n  }, [invalidate, controls]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: ref,\n    object: controls,\n    enabled: enabled,\n    axis: axis,\n    mode: mode,\n    translationSnap: translationSnap,\n    rotationSnap: rotationSnap,\n    scaleSnap: scaleSnap,\n    space: space,\n    size: size,\n    showX: showX,\n    showY: showY,\n    showZ: showZ\n  }), /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props), children));\n});\n\nexport { TransformControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { PointerLockControls as PointerLockControls$1 } from 'three-stdlib';\n\nconst PointerLockControls = /* @__PURE__ */React.forwardRef(({\n  domElement,\n  selector,\n  onChange,\n  onLock,\n  onUnlock,\n  enabled = true,\n  makeDefault,\n  ...props\n}, ref) => {\n  const {\n    camera,\n    ...rest\n  } = props;\n  const setEvents = useThree(state => state.setEvents);\n  const gl = useThree(state => state.gl);\n  const defaultCamera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = React.useMemo(() => new PointerLockControls$1(explCamera), [explCamera]);\n  React.useEffect(() => {\n    if (enabled) {\n      controls.connect(explDomElement);\n      // Force events to be centered while PLC is active\n      const oldComputeOffsets = get().events.compute;\n      setEvents({\n        compute(event, state) {\n          const offsetX = state.size.width / 2;\n          const offsetY = state.size.height / 2;\n          state.pointer.set(offsetX / state.size.width * 2 - 1, -(offsetY / state.size.height) * 2 + 1);\n          state.raycaster.setFromCamera(state.pointer, state.camera);\n        }\n      });\n      return () => {\n        controls.disconnect();\n        setEvents({\n          compute: oldComputeOffsets\n        });\n      };\n    }\n  }, [enabled, controls]);\n  React.useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (onChange) onChange(e);\n    };\n    controls.addEventListener('change', callback);\n    if (onLock) controls.addEventListener('lock', onLock);\n    if (onUnlock) controls.addEventListener('unlock', onUnlock);\n\n    // Enforce previous interaction\n    const handler = () => controls.lock();\n    const elements = selector ? Array.from(document.querySelectorAll(selector)) : [document];\n    elements.forEach(element => element && element.addEventListener('click', handler));\n    return () => {\n      controls.removeEventListener('change', callback);\n      if (onLock) controls.removeEventListener('lock', onLock);\n      if (onUnlock) controls.removeEventListener('unlock', onUnlock);\n      elements.forEach(element => element ? element.removeEventListener('click', handler) : undefined);\n    };\n  }, [onChange, onLock, onUnlock, selector, controls, invalidate]);\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      // @ts-ignore https://github.com/three-types/three-ts-types/pull/1398\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, rest));\n});\n\nexport { PointerLockControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { FirstPersonControls as FirstPersonControls$1 } from 'three-stdlib';\n\nconst FirstPersonControls = /* @__PURE__ */React.forwardRef(({\n  domElement,\n  makeDefault,\n  ...props\n}, ref) => {\n  const camera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const events = useThree(state => state.events);\n  const get = useThree(state => state.get);\n  const set = useThree(state => state.set);\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const [controls] = React.useState(() => new FirstPersonControls$1(camera, explDomElement));\n  React.useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  useFrame((_, delta) => {\n    controls.update(delta);\n  }, -1);\n  return controls ? /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, props)) : null;\n});\n\nexport { FirstPersonControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, MathUtils, Matrix4, Quaternion, Raycaster, Sphere, Spherical, Vector2, Vector3, Vector4 } from 'three';\nimport * as React from 'react';\nimport { forwardRef, useMemo, useEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport CameraControlsImpl from 'camera-controls';\n\nconst CameraControls = /* @__PURE__ */forwardRef((props, ref) => {\n  // useMemo is used here instead of useEffect, otherwise the useMemo below runs first and throws\n  useMemo(() => {\n    // to allow for tree shaking, we only import the subset of THREE that is used by camera-controls\n    // see https://github.com/yomotsu/camera-controls#important\n    const subsetOfTHREE = {\n      Box3,\n      MathUtils: {\n        clamp: MathUtils.clamp\n      },\n      Matrix4,\n      Quaternion,\n      Raycaster,\n      Sphere,\n      Spherical,\n      Vector2,\n      Vector3,\n      Vector4\n    };\n    CameraControlsImpl.install({\n      THREE: subsetOfTHREE\n    });\n    extend({\n      CameraControlsImpl\n    });\n  }, []);\n  const {\n    camera,\n    domElement,\n    makeDefault,\n    onStart,\n    onEnd,\n    onChange,\n    regress,\n    ...restProps\n  } = props;\n  const defaultCamera = useThree(state => state.camera);\n  const gl = useThree(state => state.gl);\n  const invalidate = useThree(state => state.invalidate);\n  const events = useThree(state => state.events);\n  const setEvents = useThree(state => state.setEvents);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const performance = useThree(state => state.performance);\n  const explCamera = camera || defaultCamera;\n  const explDomElement = domElement || events.connected || gl.domElement;\n  const controls = useMemo(() => new CameraControlsImpl(explCamera), [explCamera]);\n  useFrame((state, delta) => {\n    if (controls.enabled) controls.update(delta);\n  }, -1);\n  useEffect(() => {\n    controls.connect(explDomElement);\n    return () => void controls.disconnect();\n  }, [explDomElement, controls]);\n  useEffect(() => {\n    const callback = e => {\n      invalidate();\n      if (regress) performance.regress();\n      if (onChange) onChange(e);\n    };\n    const onStartCb = e => {\n      if (onStart) onStart(e);\n    };\n    const onEndCb = e => {\n      if (onEnd) onEnd(e);\n    };\n    controls.addEventListener('update', callback);\n    controls.addEventListener('controlstart', onStartCb);\n    controls.addEventListener('controlend', onEndCb);\n    controls.addEventListener('control', callback);\n    controls.addEventListener('transitionstart', callback);\n    controls.addEventListener('wake', callback);\n    return () => {\n      controls.removeEventListener('update', callback);\n      controls.removeEventListener('controlstart', onStartCb);\n      controls.removeEventListener('controlend', onEndCb);\n      controls.removeEventListener('control', callback);\n      controls.removeEventListener('transitionstart', callback);\n      controls.removeEventListener('wake', callback);\n    };\n  }, [controls, onStart, onEnd, invalidate, setEvents, regress, onChange]);\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls: controls\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, controls]);\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    ref: ref,\n    object: controls\n  }, restProps));\n});\n\nexport { CameraControls };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { misc, easing } from 'maath';\n\nconst isObject3DRef = ref => (ref == null ? void 0 : ref.current) instanceof THREE.Object3D;\nconst MotionContext = /* @__PURE__ */React.createContext(null);\nfunction useMotion() {\n  const context = React.useContext(MotionContext);\n  if (!context) throw new Error('useMotion hook must be used in a MotionPathControls component.');\n  return context;\n}\nfunction Debug({\n  points = 50,\n  color = 'black'\n}) {\n  const {\n    path\n  } = useMotion();\n  const [dots, setDots] = React.useState([]);\n  const material = React.useMemo(() => new THREE.MeshBasicMaterial({\n    color: color\n  }), [color]);\n  const geometry = React.useMemo(() => new THREE.SphereGeometry(0.025, 16, 16), []);\n  const last = React.useRef([]);\n  React.useEffect(() => {\n    if (path.curves !== last.current) {\n      setDots(path.getPoints(points));\n      last.current = path.curves;\n    }\n  });\n  return dots.map((item, index) => /*#__PURE__*/React.createElement(\"mesh\", {\n    key: index,\n    material: material,\n    geometry: geometry,\n    position: [item.x, item.y, item.z]\n  }));\n}\nconst MotionPathControls = /* @__PURE__ */React.forwardRef(({\n  children,\n  curves = [],\n  debug = false,\n  debugColor = 'black',\n  object,\n  focus,\n  loop = true,\n  offset = undefined,\n  smooth = false,\n  eps = 0.00001,\n  damping = 0.1,\n  focusDamping = 0.1,\n  maxSpeed = Infinity,\n  ...props\n}, fref) => {\n  const {\n    camera\n  } = useThree();\n  const ref = React.useRef(null);\n  const pos = React.useRef(offset !== null && offset !== void 0 ? offset : 0);\n  const path = React.useMemo(() => new THREE.CurvePath(), []);\n  const state = React.useMemo(() => ({\n    focus,\n    object: (object == null ? void 0 : object.current) instanceof THREE.Object3D ? object : {\n      current: camera\n    },\n    path,\n    current: pos.current,\n    offset: pos.current,\n    point: new THREE.Vector3(),\n    tangent: new THREE.Vector3(),\n    next: new THREE.Vector3()\n  }), [focus, object]);\n  React.useLayoutEffect(() => {\n    var _r3f$objects, _ref$current;\n    path.curves = [];\n    const _curves = curves.length > 0 ? curves : (_r3f$objects = (_ref$current = ref.current) == null || (_ref$current = _ref$current.__r3f) == null ? void 0 : _ref$current.objects) !== null && _r3f$objects !== void 0 ? _r3f$objects : [];\n    for (let i = 0; i < _curves.length; i++) path.add(_curves[i]);\n\n    // Smoothen curve\n    if (smooth) {\n      const points = path.getPoints(typeof smooth === 'number' ? smooth : 1);\n      const catmull = new THREE.CatmullRomCurve3(points);\n      path.curves = [catmull];\n    }\n    path.updateArcLengths();\n  });\n  React.useImperativeHandle(fref, () => Object.assign(ref.current, {\n    motion: state\n  }), [state]);\n  React.useLayoutEffect(() => {\n    // When offset changes, normalise pos to avoid overshoot spinning\n    pos.current = misc.repeat(pos.current, 1);\n  }, [offset]);\n  const vec = React.useMemo(() => new THREE.Vector3(), []);\n  useFrame((_state, delta) => {\n    const lastOffset = state.offset;\n    easing.damp(pos, 'current', offset !== undefined ? offset : state.current, damping, delta, maxSpeed, undefined, eps);\n    state.offset = loop ? misc.repeat(pos.current, 1) : misc.clamp(pos.current, 0, 1);\n    if (path.getCurveLengths().length > 0) {\n      path.getPointAt(state.offset, state.point);\n      path.getTangentAt(state.offset, state.tangent).normalize();\n      path.getPointAt(misc.repeat(pos.current - (lastOffset - state.offset), 1), state.next);\n      const target = (object == null ? void 0 : object.current) instanceof THREE.Object3D ? object.current : camera;\n      target.position.copy(state.point);\n      if (focus) {\n        easing.dampLookAt(target, isObject3DRef(focus) ? focus.current.getWorldPosition(vec) : focus, focusDamping, delta, maxSpeed, undefined, eps);\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(MotionContext.Provider, {\n    value: state\n  }, children, debug && /*#__PURE__*/React.createElement(Debug, {\n    color: debugColor\n  })));\n});\n\nexport { MotionPathControls, useMotion };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { Vector3, Object3D, Matrix4, Quaternion } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { Hud } from './Hud.js';\n\nconst Context = /* @__PURE__ */React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\nconst dummy = /* @__PURE__ */new Object3D();\nconst matrix = /* @__PURE__ */new Matrix4();\nconst [q1, q2] = [/* @__PURE__ */new Quaternion(), /* @__PURE__ */new Quaternion()];\nconst target = /* @__PURE__ */new Vector3();\nconst targetPosition = /* @__PURE__ */new Vector3();\nconst isOrbitControls = controls => {\n  return 'minPolarAngle' in controls;\n};\nconst isCameraControls = controls => {\n  return 'getTarget' in controls;\n};\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 1,\n  onUpdate,\n  onTarget,\n  children\n}) => {\n  const size = useThree(state => state.size);\n  const mainCamera = useThree(state => state.camera);\n  // @ts-ignore\n  const defaultControls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n  const gizmoRef = React.useRef(null);\n  const virtualCam = React.useRef(null);\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  React.useEffect(() => {\n    defaultUp.current.copy(mainCamera.up);\n    dummy.up.copy(mainCamera.up);\n  }, [mainCamera]);\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) {\n      focusPoint.current = (onTarget == null ? void 0 : onTarget()) || (isCameraControls(defaultControls) ? defaultControls.getTarget(focusPoint.current) : defaultControls == null ? void 0 : defaultControls.target);\n    }\n    radius.current = mainCamera.position.distanceTo(target);\n\n    // Rotate from current camera orientation\n    q1.copy(mainCamera.quaternion);\n\n    // To new current camera orientation\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n          // Orbit controls uses UP vector as the orbit axes,\n          // so we need to reset it after the animation is done\n          // moving it around for the controls to work correctly\n          if (isOrbitControls(defaultControls)) {\n            mainCamera.up.copy(defaultUp.current);\n          }\n        } else {\n          const step = delta * turnRate;\n          // animate position by doing a slerp and then scaling the position on the unit sphere\n          q1.rotateTowards(q2, step);\n          // animate orientation\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (isCameraControls(defaultControls)) defaultControls.setPosition(mainCamera.position.x, mainCamera.position.y, mainCamera.position.z);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update(delta);\n          invalidate();\n        }\n      }\n\n      // Sync Gizmo with main camera orientation\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null || _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n    }\n  });\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera\n  }), [tweenCamera]);\n\n  // Position gizmo component within scene\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return /*#__PURE__*/React.createElement(Hud, {\n    renderPriority: renderPriority\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    makeDefault: true,\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, children)));\n};\n\nexport { GizmoHelper, useGizmoContext };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nfunction RenderHud({\n  defaultScene,\n  defaultCamera,\n  renderPriority = 1\n}) {\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  let oldCLear;\n  useFrame(() => {\n    oldCLear = gl.autoClear;\n    if (renderPriority === 1) {\n      // Clear scene and render the default scene\n      gl.autoClear = true;\n      gl.render(defaultScene, defaultCamera);\n    }\n    // Disable cleaning and render the portal with its own camera\n    gl.autoClear = false;\n    gl.clearDepth();\n    gl.render(scene, camera);\n    // Restore default\n    gl.autoClear = oldCLear;\n  }, renderPriority);\n  // Without an element that receives pointer events state.pointer will always be 0/0\n  return /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  });\n}\nfunction Hud({\n  children,\n  renderPriority = 1\n}) {\n  const {\n    scene: defaultScene,\n    camera: defaultCamera\n  } = useThree();\n  const [hudScene] = React.useState(() => new THREE.Scene());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(/*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(RenderHud, {\n    defaultScene: defaultScene,\n    defaultCamera: defaultCamera,\n    renderPriority: renderPriority\n  })), hudScene, {\n    events: {\n      priority: renderPriority + 1\n    }\n  }));\n}\n\nexport { Hud };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { useGizmoContext } from './GizmoHelper.js';\nimport { Vector3, CanvasTexture } from 'three';\n\nconst colors = {\n  bg: '#f0f0f0',\n  hover: '#999',\n  text: 'black',\n  stroke: 'black'\n};\nconst defaultFaces = ['Right', 'Left', 'Top', 'Bottom', 'Front', 'Back'];\nconst makePositionVector = xyz => new Vector3(...xyz).multiplyScalar(0.38);\nconst corners = /* @__PURE__ */[[1, 1, 1], [1, 1, -1], [1, -1, 1], [1, -1, -1], [-1, 1, 1], [-1, 1, -1], [-1, -1, 1], [-1, -1, -1]].map(makePositionVector);\nconst cornerDimensions = [0.25, 0.25, 0.25];\nconst edges = /* @__PURE__ */[[1, 1, 0], [1, 0, 1], [1, 0, -1], [1, -1, 0], [0, 1, 1], [0, 1, -1], [0, -1, 1], [0, -1, -1], [-1, 1, 0], [-1, 0, 1], [-1, 0, -1], [-1, -1, 0]].map(makePositionVector);\nconst edgeDimensions = /* @__PURE__ */edges.map(edge => edge.toArray().map(axis => axis == 0 ? 0.5 : 0.25));\nconst FaceMaterial = ({\n  hover,\n  index,\n  font = '20px Inter var, Arial, sans-serif',\n  faces = defaultFaces,\n  color = colors.bg,\n  hoverColor = colors.hover,\n  textColor = colors.text,\n  strokeColor = colors.stroke,\n  opacity = 1\n}) => {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    context.fillStyle = color;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.strokeStyle = strokeColor;\n    context.strokeRect(0, 0, canvas.width, canvas.height);\n    context.font = font;\n    context.textAlign = 'center';\n    context.fillStyle = textColor;\n    context.fillText(faces[index].toUpperCase(), 64, 76);\n    return new CanvasTexture(canvas);\n  }, [index, faces, font, color, textColor, strokeColor]);\n  return /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    map: texture,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    attach: `material-${index}`,\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: opacity\n  });\n};\nconst FaceCube = props => {\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(null);\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(null);\n  };\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(e.face.normal);\n  };\n  const handlePointerMove = e => {\n    e.stopPropagation();\n    setHover(Math.floor(e.faceIndex / 2));\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    onPointerOut: handlePointerOut,\n    onPointerMove: handlePointerMove,\n    onClick: props.onClick || handleClick\n  }, [...Array(6)].map((_, index) => /*#__PURE__*/React.createElement(FaceMaterial, _extends({\n    key: index,\n    index: index,\n    hover: hover === index\n  }, props))), /*#__PURE__*/React.createElement(\"boxGeometry\", null));\n};\nconst EdgeCube = ({\n  onClick,\n  dimensions,\n  position,\n  hoverColor = colors.hover\n}) => {\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const [hover, setHover] = React.useState(false);\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setHover(false);\n  };\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setHover(true);\n  };\n  const handleClick = e => {\n    e.stopPropagation();\n    tweenCamera(position);\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    scale: 1.01,\n    position: position,\n    onPointerOver: handlePointerOver,\n    onPointerOut: handlePointerOut,\n    onClick: onClick || handleClick\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: hover ? hoverColor : 'white',\n    transparent: true,\n    opacity: 0.6,\n    visible: hover\n  }), /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: dimensions\n  }));\n};\nconst GizmoViewcube = props => {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    scale: [60, 60, 60]\n  }, /*#__PURE__*/React.createElement(FaceCube, props), edges.map((edge, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: edge,\n    dimensions: edgeDimensions[index]\n  }, props))), corners.map((corner, index) => /*#__PURE__*/React.createElement(EdgeCube, _extends({\n    key: index,\n    position: corner,\n    dimensions: cornerDimensions\n  }, props))));\n};\n\nexport { GizmoViewcube };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\nimport { CanvasTexture } from 'three';\nimport { useGizmoContext } from './GizmoHelper.js';\n\nfunction Axis({\n  scale = [0.8, 0.05, 0.05],\n  color,\n  rotation\n}) {\n  return /*#__PURE__*/React.createElement(\"group\", {\n    rotation: rotation\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    position: [0.4, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: scale\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    color: color,\n    toneMapped: false\n  })));\n}\nfunction AxisHead({\n  onClick,\n  font,\n  disabled,\n  arcStyle,\n  label,\n  labelColor,\n  axisHeadScale = 1,\n  ...props\n}) {\n  const gl = useThree(state => state.gl);\n  const texture = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 64;\n    canvas.height = 64;\n    const context = canvas.getContext('2d');\n    context.beginPath();\n    context.arc(32, 32, 16, 0, 2 * Math.PI);\n    context.closePath();\n    context.fillStyle = arcStyle;\n    context.fill();\n    if (label) {\n      context.font = font;\n      context.textAlign = 'center';\n      context.fillStyle = labelColor;\n      context.fillText(label, 32, 41);\n    }\n    return new CanvasTexture(canvas);\n  }, [arcStyle, label, labelColor, font]);\n  const [active, setActive] = React.useState(false);\n  const scale = (label ? 1 : 0.75) * (active ? 1.2 : 1) * axisHeadScale;\n  const handlePointerOver = e => {\n    e.stopPropagation();\n    setActive(true);\n  };\n  const handlePointerOut = e => {\n    e.stopPropagation();\n    setActive(false);\n  };\n  return /*#__PURE__*/React.createElement(\"sprite\", _extends({\n    scale: scale,\n    onPointerOver: !disabled ? handlePointerOver : undefined,\n    onPointerOut: !disabled ? onClick || handlePointerOut : undefined\n  }, props), /*#__PURE__*/React.createElement(\"spriteMaterial\", {\n    map: texture,\n    \"map-anisotropy\": gl.capabilities.getMaxAnisotropy() || 1,\n    alphaTest: 0.3,\n    opacity: label ? 1 : 0.75,\n    toneMapped: false\n  }));\n}\nconst GizmoViewport = ({\n  hideNegativeAxes,\n  hideAxisHeads,\n  disabled,\n  font = '18px Inter var, Arial, sans-serif',\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  axisHeadScale = 1,\n  axisScale,\n  labels = ['X', 'Y', 'Z'],\n  labelColor = '#000',\n  onClick,\n  ...props\n}) => {\n  const [colorX, colorY, colorZ] = axisColors;\n  const {\n    tweenCamera\n  } = useGizmoContext();\n  const axisHeadProps = {\n    font,\n    disabled,\n    labelColor,\n    onClick,\n    axisHeadScale,\n    onPointerDown: !disabled ? e => {\n      tweenCamera(e.object.position);\n      e.stopPropagation();\n    } : undefined\n  };\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    scale: 40\n  }, props), /*#__PURE__*/React.createElement(Axis, {\n    color: colorX,\n    rotation: [0, 0, 0],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorY,\n    rotation: [0, 0, Math.PI / 2],\n    scale: axisScale\n  }), /*#__PURE__*/React.createElement(Axis, {\n    color: colorZ,\n    rotation: [0, -Math.PI / 2, 0],\n    scale: axisScale\n  }), !hideAxisHeads && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [1, 0, 0],\n    label: labels[0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, 1, 0],\n    label: labels[1]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, 1],\n    label: labels[2]\n  }, axisHeadProps)), !hideNegativeAxes && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorX,\n    position: [-1, 0, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorY,\n    position: [0, -1, 0]\n  }, axisHeadProps)), /*#__PURE__*/React.createElement(AxisHead, _extends({\n    arcStyle: colorZ,\n    position: [0, 0, -1]\n  }, axisHeadProps)))));\n};\n\nexport { GizmoViewport };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nconst GridMaterial = /* @__PURE__ */shaderMaterial({\n  cellSize: 0.5,\n  sectionSize: 1,\n  fadeDistance: 100,\n  fadeStrength: 1,\n  fadeFrom: 1,\n  cellThickness: 0.5,\n  sectionThickness: 1,\n  cellColor: /* @__PURE__ */new THREE.Color(),\n  sectionColor: /* @__PURE__ */new THREE.Color(),\n  infiniteGrid: false,\n  followCamera: false,\n  worldCamProjPosition: /* @__PURE__ */new THREE.Vector3(),\n  worldPlanePosition: /* @__PURE__ */new THREE.Vector3()\n}, /* glsl */`\n    varying vec3 localPosition;\n    varying vec4 worldPosition;\n\n    uniform vec3 worldCamProjPosition;\n    uniform vec3 worldPlanePosition;\n    uniform float fadeDistance;\n    uniform bool infiniteGrid;\n    uniform bool followCamera;\n\n    void main() {\n      localPosition = position.xzy;\n      if (infiniteGrid) localPosition *= 1.0 + fadeDistance;\n      \n      worldPosition = modelMatrix * vec4(localPosition, 1.0);\n      if (followCamera) {\n        worldPosition.xyz += (worldCamProjPosition - worldPlanePosition);\n        localPosition = (inverse(modelMatrix) * worldPosition).xyz;\n      }\n\n      gl_Position = projectionMatrix * viewMatrix * worldPosition;\n    }\n  `, /* glsl */`\n    varying vec3 localPosition;\n    varying vec4 worldPosition;\n\n    uniform vec3 worldCamProjPosition;\n    uniform float cellSize;\n    uniform float sectionSize;\n    uniform vec3 cellColor;\n    uniform vec3 sectionColor;\n    uniform float fadeDistance;\n    uniform float fadeStrength;\n    uniform float fadeFrom;\n    uniform float cellThickness;\n    uniform float sectionThickness;\n\n    float getGrid(float size, float thickness) {\n      vec2 r = localPosition.xz / size;\n      vec2 grid = abs(fract(r - 0.5) - 0.5) / fwidth(r);\n      float line = min(grid.x, grid.y) + 1.0 - thickness;\n      return 1.0 - min(line, 1.0);\n    }\n\n    void main() {\n      float g1 = getGrid(cellSize, cellThickness);\n      float g2 = getGrid(sectionSize, sectionThickness);\n\n      vec3 from = worldCamProjPosition*vec3(fadeFrom);\n      float dist = distance(from, worldPosition.xyz);\n      float d = 1.0 - min(dist / fadeDistance, 1.0);\n      vec3 color = mix(cellColor, sectionColor, min(1.0, sectionThickness * g2));\n\n      gl_FragColor = vec4(color, (g1 + g2) * pow(d, fadeStrength));\n      gl_FragColor.a = mix(0.75 * gl_FragColor.a, gl_FragColor.a, g2);\n      if (gl_FragColor.a <= 0.0) discard;\n\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n    }\n  `);\nconst Grid = /* @__PURE__ */React.forwardRef(({\n  args,\n  cellColor = '#000000',\n  sectionColor = '#2080ff',\n  cellSize = 0.5,\n  sectionSize = 1,\n  followCamera = false,\n  infiniteGrid = false,\n  fadeDistance = 100,\n  fadeStrength = 1,\n  fadeFrom = 1,\n  cellThickness = 0.5,\n  sectionThickness = 1,\n  side = THREE.BackSide,\n  ...props\n}, fRef) => {\n  extend({\n    GridMaterial\n  });\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  const plane = new THREE.Plane();\n  const upVector = new THREE.Vector3(0, 1, 0);\n  const zeroVector = new THREE.Vector3(0, 0, 0);\n  useFrame(state => {\n    plane.setFromNormalAndCoplanarPoint(upVector, zeroVector).applyMatrix4(ref.current.matrixWorld);\n    const gridMaterial = ref.current.material;\n    const worldCamProjPosition = gridMaterial.uniforms.worldCamProjPosition;\n    const worldPlanePosition = gridMaterial.uniforms.worldPlanePosition;\n    plane.projectPoint(state.camera.position, worldCamProjPosition.value);\n    worldPlanePosition.value.set(0, 0, 0).applyMatrix4(ref.current.matrixWorld);\n  });\n  const uniforms1 = {\n    cellSize,\n    sectionSize,\n    cellColor,\n    sectionColor,\n    cellThickness,\n    sectionThickness\n  };\n  const uniforms2 = {\n    fadeDistance,\n    fadeStrength,\n    fadeFrom,\n    infiniteGrid,\n    followCamera\n  };\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    frustumCulled: false\n  }, props), /*#__PURE__*/React.createElement(\"gridMaterial\", _extends({\n    transparent: true,\n    \"extensions-derivatives\": true,\n    side: side\n  }, uniforms1, uniforms2)), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }));\n});\n\nexport { Grid };\n", "import * as React from 'react';\nimport { CubeTextureLoader } from 'three';\nimport { useLoader } from '@react-three/fiber';\n\nfunction useCubeTexture(files, {\n  path\n}) {\n  // @ts-ignore\n  const [cubeTexture] = useLoader(\n  // @ts-ignore\n  CubeTextureLoader, [files], loader => loader.setPath(path));\n  return cubeTexture;\n}\nuseCubeTexture.preload = (files, {\n  path\n}) => useLoader.preload(\n// @ts-ignore\nCubeTextureLoader, [files], loader => loader.setPath(path));\nfunction CubeTexture({\n  children,\n  files,\n  ...options\n}) {\n  const texture = useCubeTexture(files, {\n    ...options\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(texture));\n}\n\nexport { CubeTexture, useCubeTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { FBXLoader } from 'three-stdlib';\nimport { useLoader } from '@react-three/fiber';\nimport { Clone } from './Clone.js';\n\nfunction useFBX(path) {\n  return useLoader(FBXLoader, path);\n}\nuseFBX.preload = path => useLoader.preload(FBXLoader, path);\nuseFBX.clear = input => useLoader.clear(FBXLoader, input);\nfunction Fbx({\n  path,\n  ...props\n}) {\n  const fbx = useFBX(path);\n  const object = fbx.children[0];\n  return /*#__PURE__*/React.createElement(Clone, _extends({}, props, {\n    object: object\n  }));\n}\n\nexport { Fbx, useFBX };\n", "import * as React from 'react';\nimport { useEffect } from 'react';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport { KTX2Loader } from 'three-stdlib';\nimport { IsObject } from './Texture.js';\n\nconst cdn = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master';\nfunction useKTX2(input, basisPath = `${cdn}/basis/`) {\n  const gl = useThree(state => state.gl);\n  const textures = useLoader(KTX2Loader, IsObject(input) ? Object.values(input) : input, loader => {\n    loader.detectSupport(gl);\n    loader.setTranscoderPath(basisPath);\n  });\n\n  // https://github.com/mrdoob/three.js/issues/22696\n  // Upload the texture to the GPU immediately instead of waiting for the first render\n  useEffect(() => {\n    const array = Array.isArray(textures) ? textures : [textures];\n    array.forEach(gl.initTexture);\n  }, [gl, textures]);\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\nuseKTX2.preload = (url, basisPath = `${cdn}/basis/`) => useLoader.preload(KTX2Loader, url, loader => {\n  loader.setTranscoderPath(basisPath);\n});\nuseKTX2.clear = input => useLoader.clear(KTX2Loader, input);\n\n//\n\nconst Ktx2 = ({\n  children,\n  input,\n  basisPath\n}) => {\n  const texture = useKTX2(input, basisPath);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(texture));\n};\n\nexport { Ktx2, useKTX2 };\n", "import * as React from 'react';\nimport { useRef, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { suspend } from 'suspend-react';\nimport { Events } from 'hls.js';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nconst IS_BROWSER = /* @__PURE__ */((_window$document, _window$navigator) => typeof window !== 'undefined' && typeof ((_window$document = window.document) == null ? void 0 : _window$document.createElement) === 'function' && typeof ((_window$navigator = window.navigator) == null ? void 0 : _window$navigator.userAgent) === 'string')();\nlet _HLSModule = null;\nasync function getHls(...args) {\n  var _HLSModule2;\n  (_HLSModule2 = _HLSModule) !== null && _HLSModule2 !== void 0 ? _HLSModule2 : _HLSModule = await import('hls.js'); // singleton\n  const Ctor = _HLSModule.default;\n  if (Ctor.isSupported()) {\n    return new Ctor(...args);\n  }\n  return null;\n}\nfunction useVideoTexture(srcOrSrcObject, {\n  unsuspend = 'loadedmetadata',\n  start = true,\n  hls: hlsConfig = {},\n  crossOrigin = 'anonymous',\n  muted = true,\n  loop = true,\n  playsInline = true,\n  onVideoFrame,\n  ...videoProps\n} = {}) {\n  const gl = useThree(state => state.gl);\n  const hlsRef = useRef(null);\n  const texture = suspend(() => new Promise(async res => {\n    let src = undefined;\n    let srcObject = undefined;\n    if (typeof srcOrSrcObject === 'string') {\n      src = srcOrSrcObject;\n    } else {\n      srcObject = srcOrSrcObject;\n    }\n    const video = Object.assign(document.createElement('video'), {\n      src,\n      srcObject,\n      crossOrigin,\n      loop,\n      muted,\n      playsInline,\n      ...videoProps\n    });\n\n    // hlsjs extension\n    if (src && IS_BROWSER && src.endsWith('.m3u8')) {\n      const hls = hlsRef.current = await getHls(hlsConfig);\n      if (hls) {\n        hls.on(Events.MEDIA_ATTACHED, () => void hls.loadSource(src));\n        hls.attachMedia(video);\n      }\n    }\n    const texture = new THREE.VideoTexture(video);\n    if ('colorSpace' in texture) texture.colorSpace = gl.outputColorSpace;else texture.encoding = gl.outputEncoding;\n    video.addEventListener(unsuspend, () => res(texture));\n  }), [srcOrSrcObject]);\n  const video = texture.source.data;\n  useVideoFrame(video, onVideoFrame);\n  useEffect(() => {\n    start && texture.image.play();\n    return () => {\n      if (hlsRef.current) {\n        hlsRef.current.destroy();\n        hlsRef.current = null;\n      }\n    };\n  }, [texture, start]);\n  return texture;\n}\n\n//\n// VideoTexture\n//\n\nconst VideoTexture = /* @__PURE__ */forwardRef(({\n  children,\n  src,\n  ...config\n}, fref) => {\n  const texture = useVideoTexture(src, config);\n  useEffect(() => {\n    return () => void texture.dispose();\n  }, [texture]);\n  useImperativeHandle(fref, () => texture, [texture]); // expose texture through ref\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(texture));\n});\n\n// rVFC hook\n\nconst useVideoFrame = (video, f) => {\n  useEffect(() => {\n    if (!f) return;\n    if (!video.requestVideoFrameCallback) return;\n    let handle;\n    const callback = (...args) => {\n      f(...args);\n      handle = video.requestVideoFrameCallback(callback);\n    };\n    video.requestVideoFrameCallback(callback);\n    return () => video.cancelVideoFrameCallback(handle);\n  }, [video, f]);\n};\n\nexport { VideoTexture, useVideoTexture };\n", "import * as THREE from 'three';\nimport { TextureLoader } from 'three';\nimport { useThree, useLoader } from '@react-three/fiber';\nimport * as React from 'react';\nimport { useState } from 'react';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\n// utils\nconst getFirstFrame = (frames, frameName) => {\n  if (Array.isArray(frames)) {\n    return frames[0];\n  } else {\n    const k = frameName !== null && frameName !== void 0 ? frameName : Object.keys(frames)[0];\n    return frames[k][0];\n  }\n};\nconst checkIfFrameIsEmpty = frameData => {\n  for (let i = 3; i < frameData.length; i += 4) {\n    if (frameData[i] !== 0) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction useSpriteLoader(/** The URL of the sprite sheet. */\ninput, /** The JSON data of the sprite sheet. */\njson, /** The names of the animations in the sprite sheet. */\nanimationNames, /** The number of frames in the sprite sheet. */\nnumberOfFrames, /** A callback that is called when the sprite sheet is loaded. */\nonLoad, /** The settings to use when creating the 2D context. */\ncanvasRenderingContext2DSettings) {\n  const viewportRef = React.useRef(useThree(state => state.viewport));\n  const spriteDataRef = React.useRef(null);\n  const totalFrames = React.useRef(0);\n  const aspectFactor = 0.1;\n  const inputRef = React.useRef(input);\n  const jsonRef = React.useRef(json);\n  const animationFramesRef = React.useRef(animationNames);\n  const [spriteData, setSpriteData] = useState(null);\n  const [spriteTexture, setSpriteTexture] = React.useState(new THREE.Texture());\n  const textureLoader = React.useMemo(() => new THREE.TextureLoader(), []);\n  const [spriteObj, setSpriteObj] = useState(null);\n  const calculateAspectRatio = React.useCallback((width, height, factor) => {\n    const adaptedHeight = height * (viewportRef.current.aspect > width / height ? viewportRef.current.width / width : viewportRef.current.height / height);\n    const adaptedWidth = width * (viewportRef.current.aspect > width / height ? viewportRef.current.width / width : viewportRef.current.height / height);\n    const scaleX = adaptedWidth * factor;\n    const scaleY = adaptedHeight * factor;\n    const currentMaxScale = 1;\n    // Calculate the maximum scale based on the aspect ratio and max scale limit\n    let finalMaxScaleW = Math.min(currentMaxScale, scaleX);\n    let finalMaxScaleH = Math.min(currentMaxScale, scaleY);\n\n    // Ensure that scaleX and scaleY do not exceed the max scale while maintaining aspect ratio\n    if (scaleX > currentMaxScale) {\n      finalMaxScaleW = currentMaxScale;\n      finalMaxScaleH = scaleY / scaleX * currentMaxScale;\n    }\n    return new THREE.Vector3(finalMaxScaleW, finalMaxScaleH, 1);\n  }, []);\n  const getRowsAndColumns = React.useCallback((texture, totalFrames) => {\n    if (texture.image) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d', canvasRenderingContext2DSettings);\n      if (!ctx) {\n        throw new Error('Failed to get 2d context');\n      }\n      canvas.width = texture.image.width;\n      canvas.height = texture.image.height;\n      ctx.drawImage(texture.image, 0, 0);\n      const width = texture.image.width;\n      const height = texture.image.height;\n\n      // Calculate rows and columns based on the number of frames and image dimensions\n      const cols = Math.round(Math.sqrt(totalFrames * (width / height)));\n      const rows = Math.round(totalFrames / cols);\n      const frameWidth = width / cols;\n      const frameHeight = height / rows;\n      const emptyFrames = [];\n      for (let row = 0; row < rows; row++) {\n        for (let col = 0; col < cols; col++) {\n          const frameIndex = row * cols + col;\n          if (frameIndex >= totalFrames) {\n            emptyFrames.push({\n              row,\n              col\n            });\n            continue;\n          }\n          const frameData = ctx.getImageData(col * frameWidth, row * frameHeight, frameWidth, frameHeight).data;\n          const isEmpty = checkIfFrameIsEmpty(frameData);\n          if (isEmpty) {\n            emptyFrames.push({\n              row,\n              col\n            });\n          }\n        }\n      }\n      return {\n        rows,\n        columns: cols,\n        frameWidth,\n        frameHeight,\n        emptyFrames\n      };\n    } else {\n      return {\n        rows: 0,\n        columns: 0,\n        frameWidth: 0,\n        frameHeight: 0,\n        emptyFrames: []\n      };\n    }\n  }, [canvasRenderingContext2DSettings]);\n\n  // calculate scale ratio for the frames\n  const calculateScaleRatio = React.useCallback(frames => {\n    // Helper function to calculate scale ratio for an array of frames\n    const processFrameArray = frameArray => {\n      // Find the largest frame\n      let largestFrame = null;\n      for (const frame of frameArray) {\n        const {\n          w,\n          h\n        } = frame.frame;\n        const area = w * h;\n        if (!largestFrame || area > largestFrame.area) {\n          largestFrame = {\n            w,\n            h,\n            area\n          };\n        }\n      }\n\n      // Set scaleRatio property on each frame\n      const frameArr = frameArray.map(frame => {\n        const {\n          w,\n          h\n        } = frame.frame;\n        const area = w * h;\n        const scaleRatio = largestFrame ? area === largestFrame.area ? 1 : Math.sqrt(area / largestFrame.area) : 1;\n        return {\n          ...frame,\n          scaleRatio\n        };\n      });\n      return frameArr;\n    };\n\n    // Handle both array and record cases\n    if (Array.isArray(frames)) {\n      return processFrameArray(frames);\n    } else {\n      const result = {};\n      for (const key in frames) {\n        result[key] = processFrameArray(frames[key]);\n      }\n      return result;\n    }\n  }, []);\n\n  // for frame based JSON Hash sprite data\n  const parseFrames = React.useCallback(() => {\n    const sprites = {};\n    const data = spriteDataRef.current;\n    const delimiters = animationFramesRef.current;\n    if (data) {\n      if (delimiters && Array.isArray(data['frames'])) {\n        for (let i = 0; i < delimiters.length; i++) {\n          // we convert each named animation group into an array\n          sprites[delimiters[i]] = [];\n          for (const value of data['frames']) {\n            const frameData = value['frame'];\n            const sourceWidth = value['sourceSize']['w'];\n            const sourceHeight = value['sourceSize']['h'];\n            if (typeof value['filename'] === 'string' && value['filename'].toLowerCase().indexOf(delimiters[i].toLowerCase()) !== -1) {\n              sprites[delimiters[i]].push({\n                ...value,\n                frame: frameData,\n                sourceSize: {\n                  w: sourceWidth,\n                  h: sourceHeight\n                }\n              });\n            }\n          }\n        }\n        for (const frame in sprites) {\n          const scaleRatioData = calculateScaleRatio(sprites[frame]);\n          if (Array.isArray(scaleRatioData)) {\n            sprites[frame] = scaleRatioData;\n          }\n        }\n        return sprites;\n      } else if (delimiters && typeof data['frames'] === 'object') {\n        for (let i = 0; i < delimiters.length; i++) {\n          // we convert each named animation group into an array\n          sprites[delimiters[i]] = [];\n          for (const innerKey in data['frames']) {\n            const value = data['frames'][innerKey];\n            const frameData = value['frame'];\n            const sourceWidth = value['sourceSize']['w'];\n            const sourceHeight = value['sourceSize']['h'];\n            if (typeof innerKey === 'string' && innerKey.toLowerCase().indexOf(delimiters[i].toLowerCase()) !== -1) {\n              sprites[delimiters[i]].push({\n                ...value,\n                frame: frameData,\n                sourceSize: {\n                  w: sourceWidth,\n                  h: sourceHeight\n                }\n              });\n            }\n          }\n        }\n        for (const frame in sprites) {\n          const scaleRatioData = calculateScaleRatio(sprites[frame]);\n          if (Array.isArray(scaleRatioData)) {\n            sprites[frame] = scaleRatioData;\n          }\n        }\n        return sprites;\n      } else {\n        let spritesArr = [];\n        if (data != null && data.frames) {\n          if (Array.isArray(data.frames)) {\n            spritesArr = data.frames.map(frame => ({\n              ...frame,\n              x: frame.frame.x,\n              y: frame.frame.y,\n              w: frame.frame.w,\n              h: frame.frame.h\n            }));\n          } else {\n            spritesArr = Object.values(data.frames).flat().map(frame => ({\n              ...frame,\n              x: frame.frame.x,\n              y: frame.frame.y,\n              w: frame.frame.w,\n              h: frame.frame.h\n            }));\n          }\n        }\n        return calculateScaleRatio(spritesArr);\n      }\n    }\n    return [];\n  }, [calculateScaleRatio, spriteDataRef]);\n  const parseSpriteData = React.useCallback((json, _spriteTexture) => {\n    let aspect = new THREE.Vector3(1, 1, 1);\n    // sprite only case\n    if (json === null) {\n      if (_spriteTexture && numberOfFrames) {\n        //get size from texture\n        const width = _spriteTexture.image.width;\n        const height = _spriteTexture.image.height;\n        totalFrames.current = numberOfFrames;\n        const {\n          rows,\n          columns,\n          frameWidth,\n          frameHeight,\n          emptyFrames\n        } = getRowsAndColumns(_spriteTexture, numberOfFrames);\n        const nonJsonFrames = {\n          frames: [],\n          meta: {\n            version: '1.0',\n            size: {\n              w: width,\n              h: height\n            },\n            rows,\n            columns,\n            frameWidth,\n            frameHeight,\n            scale: '1'\n          }\n        };\n        for (let row = 0; row < rows; row++) {\n          for (let col = 0; col < columns; col++) {\n            const isExcluded = (emptyFrames !== null && emptyFrames !== void 0 ? emptyFrames : []).some(coord => coord.row === row && coord.col === col);\n            if (isExcluded) {\n              continue;\n            }\n            if (Array.isArray(nonJsonFrames.frames)) {\n              nonJsonFrames.frames.push({\n                frame: {\n                  x: col * frameWidth,\n                  y: row * frameHeight,\n                  w: frameWidth,\n                  h: frameHeight\n                },\n                scaleRatio: 1,\n                rotated: false,\n                trimmed: false,\n                spriteSourceSize: {\n                  x: 0,\n                  y: 0,\n                  w: frameWidth,\n                  h: frameHeight\n                },\n                sourceSize: {\n                  w: frameWidth,\n                  h: frameHeight\n                }\n              });\n            }\n          }\n        }\n        aspect = calculateAspectRatio(frameWidth, frameHeight, aspectFactor);\n        spriteDataRef.current = nonJsonFrames;\n      }\n\n      //scale ratio for standalone sprite\n      if (spriteDataRef.current && spriteDataRef.current.frames) {\n        spriteDataRef.current.frames = calculateScaleRatio(spriteDataRef.current.frames);\n      }\n    } else if (_spriteTexture) {\n      spriteDataRef.current = json;\n      spriteDataRef.current.frames = parseFrames();\n      totalFrames.current = Array.isArray(json.frames) ? json.frames.length : Object.keys(json.frames).length;\n      const {\n        w,\n        h\n      } = getFirstFrame(json.frames).sourceSize;\n      aspect = calculateAspectRatio(w, h, aspectFactor);\n    }\n    setSpriteData(spriteDataRef.current);\n    if ('encoding' in _spriteTexture) {\n      _spriteTexture.encoding = 3001; // sRGBEncoding\n    } else if ('colorSpace' in _spriteTexture) {\n      //@ts-ignore\n      _spriteTexture.colorSpace = THREE.SRGBColorSpace;\n    }\n    setSpriteTexture(_spriteTexture);\n    setSpriteObj({\n      spriteTexture: _spriteTexture,\n      spriteData: spriteDataRef.current,\n      aspect: aspect\n    });\n  }, [getRowsAndColumns, numberOfFrames, parseFrames, calculateAspectRatio, calculateScaleRatio]);\n\n  /**\r\n   *\r\n   */\n  const loadJsonAndTextureAndExecuteCallback = React.useCallback((jsonUrl, textureUrl, callback) => {\n    const jsonPromise = fetch(jsonUrl).then(response => response.json());\n    const texturePromise = new Promise(resolve => {\n      textureLoader.load(textureUrl, resolve);\n    });\n    Promise.all([jsonPromise, texturePromise]).then(response => {\n      callback(response[0], response[1]);\n    });\n  }, [textureLoader]);\n  const loadStandaloneSprite = React.useCallback(textureUrl => {\n    if (!textureUrl && !inputRef.current) {\n      throw new Error('Either textureUrl or input must be provided');\n    }\n    const validUrl = textureUrl !== null && textureUrl !== void 0 ? textureUrl : inputRef.current;\n    if (!validUrl) {\n      throw new Error('A valid texture URL must be provided');\n    }\n    textureLoader.load(validUrl, texture => parseSpriteData(null, texture));\n  }, [textureLoader, parseSpriteData]);\n  const loadJsonAndTexture = React.useCallback((textureUrl, jsonUrl) => {\n    if (jsonUrl && textureUrl) {\n      loadJsonAndTextureAndExecuteCallback(jsonUrl, textureUrl, parseSpriteData);\n    } else {\n      loadStandaloneSprite(textureUrl);\n    }\n  }, [loadJsonAndTextureAndExecuteCallback, loadStandaloneSprite, parseSpriteData]);\n  React.useLayoutEffect(() => {\n    if (jsonRef.current && inputRef.current) {\n      loadJsonAndTextureAndExecuteCallback(jsonRef.current, inputRef.current, parseSpriteData);\n    } else if (inputRef.current) {\n      // only load the texture, this is an image sprite only\n      loadStandaloneSprite();\n    }\n    const _inputRef = inputRef.current;\n    return () => {\n      if (_inputRef) {\n        useLoader.clear(TextureLoader, _inputRef);\n      }\n    };\n  }, [loadJsonAndTextureAndExecuteCallback, loadStandaloneSprite, parseSpriteData]);\n  React.useLayoutEffect(() => {\n    onLoad == null || onLoad(spriteTexture, spriteData !== null && spriteData !== void 0 ? spriteData : null);\n  }, [spriteTexture, spriteData, onLoad]);\n  return {\n    spriteObj,\n    loadJsonAndTexture\n  };\n}\nuseSpriteLoader.preload = url => useLoader.preload(TextureLoader, url);\nuseSpriteLoader.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { checkIfFrameIsEmpty, getFirstFrame, useSpriteLoader };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nfunction useHelper(object3D, helperConstructor, ...args) {\n  const helper = React.useRef();\n  const scene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    let currentHelper = undefined;\n    if (object3D && object3D != null && object3D.current && helperConstructor) {\n      helper.current = currentHelper = new helperConstructor(object3D.current, ...args);\n    }\n    if (currentHelper) {\n      // Prevent the helpers from blocking rays\n      currentHelper.traverse(child => child.raycast = () => null);\n      scene.add(currentHelper);\n      return () => {\n        helper.current = undefined;\n        scene.remove(currentHelper);\n        currentHelper.dispose == null || currentHelper.dispose();\n      };\n    }\n  }, [scene, helperConstructor, object3D, ...args]);\n  useFrame(() => {\n    var _helper$current;\n    return void ((_helper$current = helper.current) == null || _helper$current.update == null ? void 0 : _helper$current.update());\n  });\n  return helper;\n}\n\n//\n\nconst Helper = ({\n  type: helperConstructor,\n  args = []\n}) => {\n  const thisRef = React.useRef(null);\n  const parentRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    parentRef.current = thisRef.current.parent;\n  });\n  useHelper(parentRef, helperConstructor, ...args);\n  return /*#__PURE__*/React.createElement(\"object3D\", {\n    ref: thisRef\n  });\n};\n\nexport { Helper, useHelper };\n", "import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\nimport StatsImpl from 'stats.js';\nimport { useEffectfulState } from '../helpers/useEffectfulState.js';\n\nfunction Stats({\n  showPanel = 0,\n  className,\n  parent\n}) {\n  const stats = useEffectfulState(() => new StatsImpl(), []);\n  React.useEffect(() => {\n    if (stats) {\n      const node = parent && parent.current || document.body;\n      stats.showPanel(showPanel);\n      node == null || node.appendChild(stats.dom);\n      const classNames = (className !== null && className !== void 0 ? className : '').split(' ').filter(cls => cls);\n      if (classNames.length) stats.dom.classList.add(...classNames);\n      const begin = addEffect(() => stats.begin());\n      const end = addAfterEffect(() => stats.end());\n      return () => {\n        if (classNames.length) stats.dom.classList.remove(...classNames);\n        node == null || node.removeChild(stats.dom);\n        begin();\n        end();\n      };\n    }\n  }, [parent, stats, className, showPanel]);\n  return null;\n}\n\nexport { Stats };\n", "import * as React from 'react';\n\nfunction call(ref, value) {\n  if (typeof ref === 'function') ref(value);else if (ref != null) ref.current = value;\n}\nfunction useEffectfulState(fn, deps = [], cb) {\n  const [state, set] = React.useState();\n  React.useLayoutEffect(() => {\n    const value = fn();\n    set(value);\n    call(cb, value);\n    return () => call(cb, null);\n  }, deps);\n  return state;\n}\n\nexport { useEffectfulState };\n", "import { useThree, addAfterEffect } from '@react-three/fiber';\nimport * as React from 'react';\nimport Stats from 'stats-gl';\n\nconst StatsGl = /* @__PURE__ */React.forwardRef(function StatsGl({\n  className,\n  parent,\n  id,\n  clearStatsGlStyle,\n  ...props\n}, fref) {\n  const gl = useThree(state => state.gl);\n  const stats = React.useMemo(() => {\n    const stats = new Stats({\n      ...props\n    });\n    stats.init(gl);\n    return stats;\n  }, [gl]);\n  React.useImperativeHandle(fref, () => stats.domElement, [stats]);\n  React.useEffect(() => {\n    if (stats) {\n      const node = parent && parent.current || document.body;\n      node == null || node.appendChild(stats.domElement);\n      stats.domElement.querySelectorAll('canvas').forEach(canvas => {\n        canvas.style.removeProperty('position');\n      });\n      if (id) stats.domElement.id = id;\n      if (clearStatsGlStyle) stats.domElement.removeAttribute('style');\n      stats.domElement.removeAttribute('style');\n      const classNames = (className !== null && className !== void 0 ? className : '').split(' ').filter(cls => cls);\n      if (classNames.length) stats.domElement.classList.add(...classNames);\n      const end = addAfterEffect(() => stats.update());\n      return () => {\n        if (classNames.length) stats.domElement.classList.remove(...classNames);\n        node == null || node.removeChild(stats.domElement);\n        end();\n      };\n    }\n  }, [parent, stats, className, id, clearStatsGlStyle]);\n  return null;\n});\n\nexport { StatsGl };\n", "import { DepthTexture, DepthFormat, UnsignedShortType } from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\n\nfunction useDepthBuffer({\n  size = 256,\n  frames = Infinity\n} = {}) {\n  const dpr = useThree(state => state.viewport.dpr);\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const w = size || width * dpr;\n  const h = size || height * dpr;\n  const depthConfig = React.useMemo(() => {\n    const depthTexture = new DepthTexture(w, h);\n    depthTexture.format = DepthFormat;\n    depthTexture.type = UnsignedShortType;\n    return {\n      depthTexture\n    };\n  }, [w, h]);\n  let count = 0;\n  const depthFBO = useFBO(w, h, depthConfig);\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      state.gl.setRenderTarget(depthFBO);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(null);\n      count++;\n    }\n  });\n  return depthFBO.depthTexture;\n}\n\nexport { useDepthBuffer };\n", "import * as React from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const pointer = useThree(state => state.pointer);\n  const [raycast] = React.useState(() => {\n    const raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(pointer, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };\n", "import * as React from 'react';\nimport { getGPUTier } from 'detect-gpu';\nimport { suspend } from 'suspend-react';\n\nconst useDetectGPU = props => suspend(() => getGPUTier(props), ['useDetectGPU']);\nfunction DetectGPU({\n  children,\n  ...options\n}) {\n  const result = useDetectGPU(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(result));\n}\n\nexport { DetectGPU, useDetectGPU };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree } from '@react-three/fiber';\nimport * as React from 'react';\nimport { Mesh } from 'three';\nimport { SAH, acceleratedRaycast, computeBoundsTree, disposeBoundsTree } from 'three-mesh-bvh';\n\nconst isMesh = child => child.isMesh;\n\n/**\n * @deprecated Use the Bvh component instead\n */\nfunction useBVH(mesh, options) {\n  options = {\n    strategy: SAH,\n    verbose: false,\n    setBoundingBox: true,\n    maxDepth: 40,\n    maxLeafTris: 10,\n    indirect: false,\n    ...options\n  };\n  React.useEffect(() => {\n    if (mesh.current) {\n      mesh.current.raycast = acceleratedRaycast;\n      const geometry = mesh.current.geometry;\n      geometry.computeBoundsTree = computeBoundsTree;\n      geometry.disposeBoundsTree = disposeBoundsTree;\n      geometry.computeBoundsTree(options);\n      return () => {\n        if (geometry.boundsTree) {\n          geometry.disposeBoundsTree();\n        }\n      };\n    }\n  }, [mesh, JSON.stringify(options)]);\n}\nconst Bvh = /* @__PURE__ */React.forwardRef(({\n  enabled = true,\n  firstHitOnly = false,\n  children,\n  strategy = SAH,\n  verbose = false,\n  setBoundingBox = true,\n  maxDepth = 40,\n  maxLeafTris = 10,\n  indirect = false,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const raycaster = useThree(state => state.raycaster);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useEffect(() => {\n    if (enabled) {\n      const options = {\n        strategy,\n        verbose,\n        setBoundingBox,\n        maxDepth,\n        maxLeafTris,\n        indirect\n      };\n      const group = ref.current;\n      // This can only safely work if the component is used once, but there is no alternative.\n      // Hijacking the raycast method to do it for individual meshes is not an option as it would\n      // cost too much memory ...\n      raycaster.firstHitOnly = firstHitOnly;\n      group.traverse(child => {\n        // Only include meshes that do not yet have a boundsTree and whose raycast is standard issue\n        if (isMesh(child) && !child.geometry.boundsTree && child.raycast === Mesh.prototype.raycast) {\n          child.raycast = acceleratedRaycast;\n          child.geometry.computeBoundsTree = computeBoundsTree;\n          child.geometry.disposeBoundsTree = disposeBoundsTree;\n          child.geometry.computeBoundsTree(options);\n        }\n      });\n      return () => {\n        delete raycaster.firstHitOnly;\n        group.traverse(child => {\n          if (isMesh(child) && child.geometry.boundsTree) {\n            child.geometry.disposeBoundsTree();\n            child.raycast = Mesh.prototype.raycast;\n          }\n        });\n      };\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), children);\n});\n\nexport { Bvh, useBVH };\n", "// Split strategy constants\nexport const CENTER = 0;\nexport const AVERAGE = 1;\nexport const SAH = 2;\n\n// Traversal constants\nexport const NOT_INTERSECTED = 0;\nexport const INTERSECTED = 1;\nexport const CONTAINED = 2;\n\n// SAH cost constants\n// TODO: hone these costs more. The relative difference between them should be the\n// difference in measured time to perform a triangle intersection vs traversing\n// bounds.\nexport const TRIANGLE_INTERSECT_COST = 1.25;\nexport const TRAVERSAL_COST = 1;\n\n\n// Build constants\nexport const BYTES_PER_NODE = 6 * 4 + 4 + 4;\nexport const IS_LEAFNODE_FLAG = 0xFFFF;\n\n// EPSILON for computing floating point error during build\n// https://en.wikipedia.org/wiki/Machine_epsilon#Values_for_standard_hardware_floating_point_arithmetics\nexport const FLOAT32_EPSILON = Math.pow( 2, - 24 );\n\nexport const SKIP_GENERATION = Symbol( 'SKIP_GENERATION' );\n", "import { BufferAttribute } from 'three';\n\nexport function getVertexCount( geo ) {\n\n\treturn geo.index ? geo.index.count : geo.attributes.position.count;\n\n}\n\nexport function getTriCount( geo ) {\n\n\treturn getVertexCount( geo ) / 3;\n\n}\n\nexport function getIndexArray( vertexCount, BufferConstructor = ArrayBuffer ) {\n\n\tif ( vertexCount > 65535 ) {\n\n\t\treturn new Uint32Array( new BufferConstructor( 4 * vertexCount ) );\n\n\t} else {\n\n\t\treturn new Uint16Array( new BufferConstructor( 2 * vertexCount ) );\n\n\t}\n\n}\n\n// ensures that an index is present on the geometry\nexport function ensureIndex( geo, options ) {\n\n\tif ( ! geo.index ) {\n\n\t\tconst vertexCount = geo.attributes.position.count;\n\t\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\t\tconst index = getIndexArray( vertexCount, BufferConstructor );\n\t\tgeo.setIndex( new BufferAttribute( index, 1 ) );\n\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tindex[ i ] = i;\n\n\t\t}\n\n\t}\n\n}\n\n// Computes the set of { offset, count } ranges which need independent BVH roots. Each\n// region in the geometry index that belongs to a different set of material groups requires\n// a separate BVH root, so that triangles indices belonging to one group never get swapped\n// with triangle indices belongs to another group. For example, if the groups were like this:\n//\n// [-------------------------------------------------------------]\n// |__________________|\n//   g0 = [0, 20]  |______________________||_____________________|\n//                      g1 = [16, 40]           g2 = [41, 60]\n//\n// we would need four BVH roots: [0, 15], [16, 20], [21, 40], [41, 60].\nexport function getFullGeometryRange( geo, range ) {\n\n\tconst triCount = getTriCount( geo );\n\tconst drawRange = range ? range : geo.drawRange;\n\tconst start = drawRange.start / 3;\n\tconst end = ( drawRange.start + drawRange.count ) / 3;\n\n\tconst offset = Math.max( 0, start );\n\tconst count = Math.min( triCount, end ) - offset;\n\treturn [ {\n\t\toffset: Math.floor( offset ),\n\t\tcount: Math.floor( count ),\n\t} ];\n\n}\n\nexport function getRootIndexRanges( geo, range ) {\n\n\tif ( ! geo.groups || ! geo.groups.length ) {\n\n\t\treturn getFullGeometryRange( geo, range );\n\n\t}\n\n\tconst ranges = [];\n\tconst rangeBoundaries = new Set();\n\n\tconst drawRange = range ? range : geo.drawRange;\n\tconst drawRangeStart = drawRange.start / 3;\n\tconst drawRangeEnd = ( drawRange.start + drawRange.count ) / 3;\n\tfor ( const group of geo.groups ) {\n\n\t\tconst groupStart = group.start / 3;\n\t\tconst groupEnd = ( group.start + group.count ) / 3;\n\t\trangeBoundaries.add( Math.max( drawRangeStart, groupStart ) );\n\t\trangeBoundaries.add( Math.min( drawRangeEnd, groupEnd ) );\n\n\t}\n\n\n\t// note that if you don't pass in a comparator, it sorts them lexicographically as strings :-(\n\tconst sortedBoundaries = Array.from( rangeBoundaries.values() ).sort( ( a, b ) => a - b );\n\tfor ( let i = 0; i < sortedBoundaries.length - 1; i ++ ) {\n\n\t\tconst start = sortedBoundaries[ i ];\n\t\tconst end = sortedBoundaries[ i + 1 ];\n\n\t\tranges.push( {\n\t\t\toffset: Math.floor( start ),\n\t\t\tcount: Math.floor( end - start ),\n\t\t} );\n\n\t}\n\n\treturn ranges;\n\n}\n\nexport function hasGroupGaps( geometry, range ) {\n\n\tconst vertexCount = getTriCount( geometry );\n\tconst groups = getRootIndexRanges( geometry, range )\n\t\t.sort( ( a, b ) => a.offset - b.offset );\n\n\tconst finalGroup = groups[ groups.length - 1 ];\n\tfinalGroup.count = Math.min( vertexCount - finalGroup.offset, finalGroup.count );\n\n\tlet total = 0;\n\tgroups.forEach( ( { count } ) => total += count );\n\treturn vertexCount !== total;\n\n}\n", "import { FLOAT32_EPSILON } from '../Constants.js';\nimport { getTriCount } from './geometryUtils.js';\n\n// computes the union of the bounds of all of the given triangles and puts the resulting box in \"target\".\n// A bounding box is computed for the centroids of the triangles, as well, and placed in \"centroidTarget\".\n// These are computed together to avoid redundant accesses to bounds array.\nexport function getBounds( triangleBounds, offset, count, target, centroidTarget ) {\n\n\tlet minx = Infinity;\n\tlet miny = Infinity;\n\tlet minz = Infinity;\n\tlet maxx = - Infinity;\n\tlet maxy = - Infinity;\n\tlet maxz = - Infinity;\n\n\tlet cminx = Infinity;\n\tlet cminy = Infinity;\n\tlet cminz = Infinity;\n\tlet cmaxx = - Infinity;\n\tlet cmaxy = - Infinity;\n\tlet cmaxz = - Infinity;\n\n\tfor ( let i = offset * 6, end = ( offset + count ) * 6; i < end; i += 6 ) {\n\n\t\tconst cx = triangleBounds[ i + 0 ];\n\t\tconst hx = triangleBounds[ i + 1 ];\n\t\tconst lx = cx - hx;\n\t\tconst rx = cx + hx;\n\t\tif ( lx < minx ) minx = lx;\n\t\tif ( rx > maxx ) maxx = rx;\n\t\tif ( cx < cminx ) cminx = cx;\n\t\tif ( cx > cmaxx ) cmaxx = cx;\n\n\t\tconst cy = triangleBounds[ i + 2 ];\n\t\tconst hy = triangleBounds[ i + 3 ];\n\t\tconst ly = cy - hy;\n\t\tconst ry = cy + hy;\n\t\tif ( ly < miny ) miny = ly;\n\t\tif ( ry > maxy ) maxy = ry;\n\t\tif ( cy < cminy ) cminy = cy;\n\t\tif ( cy > cmaxy ) cmaxy = cy;\n\n\t\tconst cz = triangleBounds[ i + 4 ];\n\t\tconst hz = triangleBounds[ i + 5 ];\n\t\tconst lz = cz - hz;\n\t\tconst rz = cz + hz;\n\t\tif ( lz < minz ) minz = lz;\n\t\tif ( rz > maxz ) maxz = rz;\n\t\tif ( cz < cminz ) cminz = cz;\n\t\tif ( cz > cmaxz ) cmaxz = cz;\n\n\t}\n\n\ttarget[ 0 ] = minx;\n\ttarget[ 1 ] = miny;\n\ttarget[ 2 ] = minz;\n\n\ttarget[ 3 ] = maxx;\n\ttarget[ 4 ] = maxy;\n\ttarget[ 5 ] = maxz;\n\n\tcentroidTarget[ 0 ] = cminx;\n\tcentroidTarget[ 1 ] = cminy;\n\tcentroidTarget[ 2 ] = cminz;\n\n\tcentroidTarget[ 3 ] = cmaxx;\n\tcentroidTarget[ 4 ] = cmaxy;\n\tcentroidTarget[ 5 ] = cmaxz;\n\n}\n\n// precomputes the bounding box for each triangle; required for quickly calculating tree splits.\n// result is an array of size tris.length * 6 where triangle i maps to a\n// [x_center, x_delta, y_center, y_delta, z_center, z_delta] tuple starting at index i * 6,\n// representing the center and half-extent in each dimension of triangle i\nexport function computeTriangleBounds( geo, target = null, offset = null, count = null ) {\n\n\tconst posAttr = geo.attributes.position;\n\tconst index = geo.index ? geo.index.array : null;\n\tconst triCount = getTriCount( geo );\n\tconst normalized = posAttr.normalized;\n\tlet triangleBounds;\n\tif ( target === null ) {\n\n\t\ttriangleBounds = new Float32Array( triCount * 6 * 4 );\n\t\toffset = 0;\n\t\tcount = triCount;\n\n\t} else {\n\n\t\ttriangleBounds = target;\n\t\toffset = offset || 0;\n\t\tcount = count || triCount;\n\n\t}\n\n\t// used for non-normalized positions\n\tconst posArr = posAttr.array;\n\n\t// support for an interleaved position buffer\n\tconst bufferOffset = posAttr.offset || 0;\n\tlet stride = 3;\n\tif ( posAttr.isInterleavedBufferAttribute ) {\n\n\t\tstride = posAttr.data.stride;\n\n\t}\n\n\t// used for normalized positions\n\tconst getters = [ 'getX', 'getY', 'getZ' ];\n\n\tfor ( let tri = offset; tri < offset + count; tri ++ ) {\n\n\t\tconst tri3 = tri * 3;\n\t\tconst tri6 = tri * 6;\n\n\t\tlet ai = tri3 + 0;\n\t\tlet bi = tri3 + 1;\n\t\tlet ci = tri3 + 2;\n\n\t\tif ( index ) {\n\n\t\t\tai = index[ ai ];\n\t\t\tbi = index[ bi ];\n\t\t\tci = index[ ci ];\n\n\t\t}\n\n\t\t// we add the stride and offset here since we access the array directly\n\t\t// below for the sake of performance\n\t\tif ( ! normalized ) {\n\n\t\t\tai = ai * stride + bufferOffset;\n\t\t\tbi = bi * stride + bufferOffset;\n\t\t\tci = ci * stride + bufferOffset;\n\n\t\t}\n\n\t\tfor ( let el = 0; el < 3; el ++ ) {\n\n\t\t\tlet a, b, c;\n\n\t\t\tif ( normalized ) {\n\n\t\t\t\ta = posAttr[ getters[ el ] ]( ai );\n\t\t\t\tb = posAttr[ getters[ el ] ]( bi );\n\t\t\t\tc = posAttr[ getters[ el ] ]( ci );\n\n\t\t\t} else {\n\n\t\t\t\ta = posArr[ ai + el ];\n\t\t\t\tb = posArr[ bi + el ];\n\t\t\t\tc = posArr[ ci + el ];\n\n\t\t\t}\n\n\t\t\tlet min = a;\n\t\t\tif ( b < min ) min = b;\n\t\t\tif ( c < min ) min = c;\n\n\t\t\tlet max = a;\n\t\t\tif ( b > max ) max = b;\n\t\t\tif ( c > max ) max = c;\n\n\t\t\t// Increase the bounds size by float32 epsilon to avoid precision errors when\n\t\t\t// converting to 32 bit float. Scale the epsilon by the size of the numbers being\n\t\t\t// worked with.\n\t\t\tconst halfExtents = ( max - min ) / 2;\n\t\t\tconst el2 = el * 2;\n\t\t\ttriangleBounds[ tri6 + el2 + 0 ] = min + halfExtents;\n\t\t\ttriangleBounds[ tri6 + el2 + 1 ] = halfExtents + ( Math.abs( min ) + halfExtents ) * FLOAT32_EPSILON;\n\n\t\t}\n\n\t}\n\n\treturn triangleBounds;\n\n}\n", "export function arrayToBox( nodeIndex32, array, target ) {\n\n\ttarget.min.x = array[ nodeIndex32 ];\n\ttarget.min.y = array[ nodeIndex32 + 1 ];\n\ttarget.min.z = array[ nodeIndex32 + 2 ];\n\n\ttarget.max.x = array[ nodeIndex32 + 3 ];\n\ttarget.max.y = array[ nodeIndex32 + 4 ];\n\ttarget.max.z = array[ nodeIndex32 + 5 ];\n\n\treturn target;\n\n}\n\nexport function makeEmptyBounds( target ) {\n\n\ttarget[ 0 ] = target[ 1 ] = target[ 2 ] = Infinity;\n\ttarget[ 3 ] = target[ 4 ] = target[ 5 ] = - Infinity;\n\n}\n\nexport function getLongestEdgeIndex( bounds ) {\n\n\tlet splitDimIdx = - 1;\n\tlet splitDist = - Infinity;\n\n\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\tconst dist = bounds[ i + 3 ] - bounds[ i ];\n\t\tif ( dist > splitDist ) {\n\n\t\t\tsplitDist = dist;\n\t\t\tsplitDimIdx = i;\n\n\t\t}\n\n\t}\n\n\treturn splitDimIdx;\n\n}\n\n// copies bounds a into bounds b\nexport function copyBounds( source, target ) {\n\n\ttarget.set( source );\n\n}\n\n// sets bounds target to the union of bounds a and b\nexport function unionBounds( a, b, target ) {\n\n\tlet aVal, bVal;\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst d3 = d + 3;\n\n\t\t// set the minimum values\n\t\taVal = a[ d ];\n\t\tbVal = b[ d ];\n\t\ttarget[ d ] = aVal < bVal ? aVal : bVal;\n\n\t\t// set the max values\n\t\taVal = a[ d3 ];\n\t\tbVal = b[ d3 ];\n\t\ttarget[ d3 ] = aVal > bVal ? aVal : bVal;\n\n\t}\n\n}\n\n// expands the given bounds by the provided triangle bounds\nexport function expandByTriangleBounds( startIndex, triangleBounds, bounds ) {\n\n\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\tconst tCenter = triangleBounds[ startIndex + 2 * d ];\n\t\tconst tHalf = triangleBounds[ startIndex + 2 * d + 1 ];\n\n\t\tconst tMin = tCenter - tHalf;\n\t\tconst tMax = tCenter + tHalf;\n\n\t\tif ( tMin < bounds[ d ] ) {\n\n\t\t\tbounds[ d ] = tMin;\n\n\t\t}\n\n\t\tif ( tMax > bounds[ d + 3 ] ) {\n\n\t\t\tbounds[ d + 3 ] = tMax;\n\n\t\t}\n\n\t}\n\n}\n\n// compute bounds surface area\nexport function computeSurfaceArea( bounds ) {\n\n\tconst d0 = bounds[ 3 ] - bounds[ 0 ];\n\tconst d1 = bounds[ 4 ] - bounds[ 1 ];\n\tconst d2 = bounds[ 5 ] - bounds[ 2 ];\n\n\treturn 2 * ( d0 * d1 + d1 * d2 + d2 * d0 );\n\n}\n", "import { getLongestEdgeIndex, computeSurfaceArea, copyBounds, unionBounds, expandByTriangleBounds } from '../../utils/ArrayBoxUtilities.js';\nimport { CENTER, AVERAGE, SAH, TRIANGLE_INTERSECT_COST, TRAVERSAL_COST } from '../Constants.js';\n\nconst BIN_COUNT = 32;\nconst binsSort = ( a, b ) => a.candidate - b.candidate;\nconst sahBins = new Array( BIN_COUNT ).fill().map( () => {\n\n\treturn {\n\n\t\tcount: 0,\n\t\tbounds: new Float32Array( 6 ),\n\t\trightCacheBounds: new Float32Array( 6 ),\n\t\tleftCacheBounds: new Float32Array( 6 ),\n\t\tcandidate: 0,\n\n\t};\n\n} );\nconst leftBounds = new Float32Array( 6 );\n\nexport function getOptimalSplit( nodeBoundingData, centroidBoundingData, triangleBounds, offset, count, strategy ) {\n\n\tlet axis = - 1;\n\tlet pos = 0;\n\n\t// Center\n\tif ( strategy === CENTER ) {\n\n\t\taxis = getLongestEdgeIndex( centroidBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = ( centroidBoundingData[ axis ] + centroidBoundingData[ axis + 3 ] ) / 2;\n\n\t\t}\n\n\t} else if ( strategy === AVERAGE ) {\n\n\t\taxis = getLongestEdgeIndex( nodeBoundingData );\n\t\tif ( axis !== - 1 ) {\n\n\t\t\tpos = getAverage( triangleBounds, offset, count, axis );\n\n\t\t}\n\n\t} else if ( strategy === SAH ) {\n\n\t\tconst rootSurfaceArea = computeSurfaceArea( nodeBoundingData );\n\t\tlet bestCost = TRIANGLE_INTERSECT_COST * count;\n\n\t\t// iterate over all axes\n\t\tconst cStart = offset * 6;\n\t\tconst cEnd = ( offset + count ) * 6;\n\t\tfor ( let a = 0; a < 3; a ++ ) {\n\n\t\t\tconst axisLeft = centroidBoundingData[ a ];\n\t\t\tconst axisRight = centroidBoundingData[ a + 3 ];\n\t\t\tconst axisLength = axisRight - axisLeft;\n\t\t\tconst binWidth = axisLength / BIN_COUNT;\n\n\t\t\t// If we have fewer triangles than we're planning to split then just check all\n\t\t\t// the triangle positions because it will be faster.\n\t\t\tif ( count < BIN_COUNT / 4 ) {\n\n\t\t\t\t// initialize the bin candidates\n\t\t\t\tconst truncatedBins = [ ...sahBins ];\n\t\t\t\ttruncatedBins.length = count;\n\n\t\t\t\t// set the candidates\n\t\t\t\tlet b = 0;\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6, b ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ b ];\n\t\t\t\t\tbin.candidate = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tbin.count = 0;\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tbounds,\n\t\t\t\t\t\tleftCacheBounds,\n\t\t\t\t\t\trightCacheBounds,\n\t\t\t\t\t} = bin;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\trightCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\trightCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tleftCacheBounds[ d ] = Infinity;\n\t\t\t\t\t\tleftCacheBounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bounds );\n\n\t\t\t\t}\n\n\t\t\t\ttruncatedBins.sort( binsSort );\n\n\t\t\t\t// remove redundant splits\n\t\t\t\tlet splitCount = count;\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\twhile ( bi + 1 < splitCount && truncatedBins[ bi + 1 ].candidate === bin.candidate ) {\n\n\t\t\t\t\t\ttruncatedBins.splice( bi + 1, 1 );\n\t\t\t\t\t\tsplitCount --;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// find the appropriate bin for each triangle and expand the bounds.\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst center = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\t\tif ( center >= bin.candidate ) {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.rightCacheBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.leftCacheBounds );\n\t\t\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// expand all the bounds\n\t\t\t\tfor ( let bi = 0; bi < splitCount; bi ++ ) {\n\n\t\t\t\t\tconst bin = truncatedBins[ bi ];\n\t\t\t\t\tconst leftCount = bin.count;\n\t\t\t\t\tconst rightCount = count - bin.count;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tconst leftBounds = bin.leftCacheBounds;\n\t\t\t\t\tconst rightBounds = bin.rightCacheBounds;\n\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet rightProb = 0;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// reset the bins\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tbin.count = 0;\n\t\t\t\t\tbin.candidate = axisLeft + binWidth + i * binWidth;\n\n\t\t\t\t\tconst bounds = bin.bounds;\n\t\t\t\t\tfor ( let d = 0; d < 3; d ++ ) {\n\n\t\t\t\t\t\tbounds[ d ] = Infinity;\n\t\t\t\t\t\tbounds[ d + 3 ] = - Infinity;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over all center positions\n\t\t\t\tfor ( let c = cStart; c < cEnd; c += 6 ) {\n\n\t\t\t\t\tconst triCenter = triangleBounds[ c + 2 * a ];\n\t\t\t\t\tconst relativeCenter = triCenter - axisLeft;\n\n\t\t\t\t\t// in the partition function if the centroid lies on the split plane then it is\n\t\t\t\t\t// considered to be on the right side of the split\n\t\t\t\t\tlet binIndex = ~ ~ ( relativeCenter / binWidth );\n\t\t\t\t\tif ( binIndex >= BIN_COUNT ) binIndex = BIN_COUNT - 1;\n\n\t\t\t\t\tconst bin = sahBins[ binIndex ];\n\t\t\t\t\tbin.count ++;\n\n\t\t\t\t\texpandByTriangleBounds( c, triangleBounds, bin.bounds );\n\n\t\t\t\t}\n\n\t\t\t\t// cache the unioned bounds from right to left so we don't have to regenerate them each time\n\t\t\t\tconst lastBin = sahBins[ BIN_COUNT - 1 ];\n\t\t\t\tcopyBounds( lastBin.bounds, lastBin.rightCacheBounds );\n\t\t\t\tfor ( let i = BIN_COUNT - 2; i >= 0; i -- ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tunionBounds( bin.bounds, nextBin.rightCacheBounds, bin.rightCacheBounds );\n\n\t\t\t\t}\n\n\t\t\t\tlet leftCount = 0;\n\t\t\t\tfor ( let i = 0; i < BIN_COUNT - 1; i ++ ) {\n\n\t\t\t\t\tconst bin = sahBins[ i ];\n\t\t\t\t\tconst binCount = bin.count;\n\t\t\t\t\tconst bounds = bin.bounds;\n\n\t\t\t\t\tconst nextBin = sahBins[ i + 1 ];\n\t\t\t\t\tconst rightBounds = nextBin.rightCacheBounds;\n\n\t\t\t\t\t// don't do anything with the bounds if the new bounds have no triangles\n\t\t\t\t\tif ( binCount !== 0 ) {\n\n\t\t\t\t\t\tif ( leftCount === 0 ) {\n\n\t\t\t\t\t\t\tcopyBounds( bounds, leftBounds );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tunionBounds( bounds, leftBounds, leftBounds );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tleftCount += binCount;\n\n\t\t\t\t\t// check the cost of this split\n\t\t\t\t\tlet leftProb = 0;\n\t\t\t\t\tlet rightProb = 0;\n\n\t\t\t\t\tif ( leftCount !== 0 ) {\n\n\t\t\t\t\t\tleftProb = computeSurfaceArea( leftBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst rightCount = count - leftCount;\n\t\t\t\t\tif ( rightCount !== 0 ) {\n\n\t\t\t\t\t\trightProb = computeSurfaceArea( rightBounds ) / rootSurfaceArea;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cost = TRAVERSAL_COST + TRIANGLE_INTERSECT_COST * (\n\t\t\t\t\t\tleftProb * leftCount + rightProb * rightCount\n\t\t\t\t\t);\n\n\t\t\t\t\tif ( cost < bestCost ) {\n\n\t\t\t\t\t\taxis = a;\n\t\t\t\t\t\tbestCost = cost;\n\t\t\t\t\t\tpos = bin.candidate;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\tconsole.warn( `MeshBVH: Invalid build strategy value ${ strategy } used.` );\n\n\t}\n\n\treturn { axis, pos };\n\n}\n\n// returns the average coordinate on the specified axis of the all the provided triangles\nfunction getAverage( triangleBounds, offset, count, axis ) {\n\n\tlet avg = 0;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tavg += triangleBounds[ i * 6 + axis * 2 ];\n\n\t}\n\n\treturn avg / count;\n\n}\n", "export class MeshBVHNode {\n\n\tconstructor() {\n\n\t\t// internal nodes have boundingData, left, right, and splitAxis\n\t\t// leaf nodes have offset and count (referring to primitives in the mesh geometry)\n\n\t\tthis.boundingData = new Float32Array( 6 );\n\n\t}\n\n}\n", "/********************************************************/\n/* This file is generated from \"sortUtils.template.js\". */\n/********************************************************/\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\n// will be on the left and elements on the right side of the split will be on the right. returns the index\n// of the first element on the right side, or offset + count if there are no elements on the right side.\nfunction partition( indirectBuffer, index, triangleBounds, offset, count, split ) {\n\n\tlet left = offset;\n\tlet right = offset + count - 1;\n\tconst pos = split.pos;\n\tconst axisOffset = split.axis * 2;\n\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\n\twhile ( true ) {\n\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\n\n\t\t\tleft ++;\n\n\t\t}\n\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\n\n\t\t\tright --;\n\n\t\t}\n\n\t\tif ( left < right ) {\n\n\t\t\t// we need to swap all of the information associated with the triangles at index\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\n\t\t\t// and perhaps the SAH planes\n\n\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\tlet t0 = index[ left * 3 + i ];\n\t\t\t\tindex[ left * 3 + i ] = index[ right * 3 + i ];\n\t\t\t\tindex[ right * 3 + i ] = t0;\n\n\t\t\t}\n\n\n\t\t\t// swap bounds\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tlet tb = triangleBounds[ left * 6 + i ];\n\t\t\t\ttriangleBounds[ left * 6 + i ] = triangleBounds[ right * 6 + i ];\n\t\t\t\ttriangleBounds[ right * 6 + i ] = tb;\n\n\t\t\t}\n\n\t\t\tleft ++;\n\t\t\tright --;\n\n\t\t} else {\n\n\t\t\treturn left;\n\n\t\t}\n\n\t}\n\n}\n\nexport { partition };\n", "/********************************************************/\n/* This file is generated from \"sortUtils.template.js\". */\n/********************************************************/\n// reorders `tris` such that for `count` elements after `offset`, elements on the left side of the split\n// will be on the left and elements on the right side of the split will be on the right. returns the index\n// of the first element on the right side, or offset + count if there are no elements on the right side.\nfunction partition_indirect( indirectBuffer, index, triangleBounds, offset, count, split ) {\n\n\tlet left = offset;\n\tlet right = offset + count - 1;\n\tconst pos = split.pos;\n\tconst axisOffset = split.axis * 2;\n\n\t// hoare partitioning, see e.g. https://en.wikipedia.org/wiki/Quicksort#Hoare_partition_scheme\n\twhile ( true ) {\n\n\t\twhile ( left <= right && triangleBounds[ left * 6 + axisOffset ] < pos ) {\n\n\t\t\tleft ++;\n\n\t\t}\n\n\t\t// if a triangle center lies on the partition plane it is considered to be on the right side\n\t\twhile ( left <= right && triangleBounds[ right * 6 + axisOffset ] >= pos ) {\n\n\t\t\tright --;\n\n\t\t}\n\n\t\tif ( left < right ) {\n\n\t\t\t// we need to swap all of the information associated with the triangles at index\n\t\t\t// left and right; that's the verts in the geometry index, the bounds,\n\t\t\t// and perhaps the SAH planes\n\t\t\tlet t = indirectBuffer[ left ];\n\t\t\tindirectBuffer[ left ] = indirectBuffer[ right ];\n\t\t\tindirectBuffer[ right ] = t;\n\n\n\t\t\t// swap bounds\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tlet tb = triangleBounds[ left * 6 + i ];\n\t\t\t\ttriangleBounds[ left * 6 + i ] = triangleBounds[ right * 6 + i ];\n\t\t\t\ttriangleBounds[ right * 6 + i ] = tb;\n\n\t\t\t}\n\n\t\t\tleft ++;\n\t\t\tright --;\n\n\t\t} else {\n\n\t\t\treturn left;\n\n\t\t}\n\n\t}\n\n}\n\nexport { partition_indirect };\n", "export function IS_LEAF( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 15 ] === 0xFFFF;\n\n}\n\nexport function OFFSET( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function COUNT( n16, uint16Array ) {\n\n\treturn uint16Array[ n16 + 14 ];\n\n}\n\nexport function LEFT_NODE( n32 ) {\n\n\treturn n32 + 8;\n\n}\n\nexport function RIGHT_NODE( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 6 ];\n\n}\n\nexport function SPLIT_AXIS( n32, uint32Array ) {\n\n\treturn uint32Array[ n32 + 7 ];\n\n}\n\nexport function BOUNDING_DATA_INDEX( n32 ) {\n\n\treturn n32;\n\n}\n", "import { BYTES_PER_NODE, IS_LEAFNODE_FLAG } from '../Constants.js';\nimport { IS_LEAF } from '../utils/nodeBufferUtils.js';\n\nlet float32Array, uint32Array, uint16Array, uint8Array;\nconst MAX_POINTER = Math.pow( 2, 32 );\n\nexport function countNodes( node ) {\n\n\tif ( 'count' in node ) {\n\n\t\treturn 1;\n\n\t} else {\n\n\t\treturn 1 + countNodes( node.left ) + countNodes( node.right );\n\n\t}\n\n}\n\nexport function populateBuffer( byteOffset, node, buffer ) {\n\n\tfloat32Array = new Float32Array( buffer );\n\tuint32Array = new Uint32Array( buffer );\n\tuint16Array = new Uint16Array( buffer );\n\tuint8Array = new Uint8Array( buffer );\n\n\treturn _populateBuffer( byteOffset, node );\n\n}\n\n// pack structure\n// boundingData  \t\t\t\t: 6 float32\n// right / offset \t\t\t\t: 1 uint32\n// splitAxis / isLeaf + count \t: 1 uint32 / 2 uint16\nfunction _populateBuffer( byteOffset, node ) {\n\n\tconst stride4Offset = byteOffset / 4;\n\tconst stride2Offset = byteOffset / 2;\n\tconst isLeaf = 'count' in node;\n\tconst boundingData = node.boundingData;\n\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\tfloat32Array[ stride4Offset + i ] = boundingData[ i ];\n\n\t}\n\n\tif ( isLeaf ) {\n\n\t\tif ( node.buffer ) {\n\n\t\t\tconst buffer = node.buffer;\n\t\t\tuint8Array.set( new Uint8Array( buffer ), byteOffset );\n\n\t\t\tfor ( let offset = byteOffset, l = byteOffset + buffer.byteLength; offset < l; offset += BYTES_PER_NODE ) {\n\n\t\t\t\tconst offset2 = offset / 2;\n\t\t\t\tif ( ! IS_LEAF( offset2, uint16Array ) ) {\n\n\t\t\t\t\tuint32Array[ ( offset / 4 ) + 6 ] += stride4Offset;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn byteOffset + buffer.byteLength;\n\n\t\t} else {\n\n\t\t\tconst offset = node.offset;\n\t\t\tconst count = node.count;\n\t\t\tuint32Array[ stride4Offset + 6 ] = offset;\n\t\t\tuint16Array[ stride2Offset + 14 ] = count;\n\t\t\tuint16Array[ stride2Offset + 15 ] = IS_LEAFNODE_FLAG;\n\t\t\treturn byteOffset + BYTES_PER_NODE;\n\n\t\t}\n\n\t} else {\n\n\t\tconst left = node.left;\n\t\tconst right = node.right;\n\t\tconst splitAxis = node.splitAxis;\n\n\t\tlet nextUnusedPointer;\n\t\tnextUnusedPointer = _populateBuffer( byteOffset + BYTES_PER_NODE, left );\n\n\t\tif ( ( nextUnusedPointer / 4 ) > MAX_POINTER ) {\n\n\t\t\tthrow new Error( 'MeshBVH: Cannot store child pointer greater than 32 bits.' );\n\n\t\t}\n\n\t\tuint32Array[ stride4Offset + 6 ] = nextUnusedPointer / 4;\n\t\tnextUnusedPointer = _populateBuffer( nextUnusedPointer, right );\n\n\t\tuint32Array[ stride4Offset + 7 ] = splitAxis;\n\t\treturn nextUnusedPointer;\n\n\t}\n\n}\n", "import { ensureIndex, getFullGeometryRange, getRootIndexRanges, getTriCount, hasGroupGaps, } from './geometryUtils.js';\nimport { getBounds, computeTriangleBounds } from './computeBoundsUtils.js';\nimport { getOptimalSplit } from './splitUtils.js';\nimport { MeshBVHNode } from '../MeshBVHNode.js';\nimport { BYTES_PER_NODE } from '../Constants.js';\n\nimport { partition } from './sortUtils.generated.js';\nimport { partition_indirect } from './sortUtils_indirect.generated.js';\nimport { countNodes, populateBuffer } from './buildUtils.js';\n\nexport function generateIndirectBuffer( geometry, useSharedArrayBuffer ) {\n\n\tconst triCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\tconst useUint32 = triCount > 2 ** 16;\n\tconst byteCount = useUint32 ? 4 : 2;\n\n\tconst buffer = useSharedArrayBuffer ? new SharedArrayBuffer( triCount * byteCount ) : new ArrayBuffer( triCount * byteCount );\n\tconst indirectBuffer = useUint32 ? new Uint32Array( buffer ) : new Uint16Array( buffer );\n\tfor ( let i = 0, l = indirectBuffer.length; i < l; i ++ ) {\n\n\t\tindirectBuffer[ i ] = i;\n\n\t}\n\n\treturn indirectBuffer;\n\n}\n\nexport function buildTree( bvh, triangleBounds, offset, count, options ) {\n\n\t// epxand variables\n\tconst {\n\t\tmaxDepth,\n\t\tverbose,\n\t\tmaxLeafTris,\n\t\tstrategy,\n\t\tonProgress,\n\t\tindirect,\n\t} = options;\n\tconst indirectBuffer = bvh._indirectBuffer;\n\tconst geometry = bvh.geometry;\n\tconst indexArray = geometry.index ? geometry.index.array : null;\n\tconst partionFunc = indirect ? partition_indirect : partition;\n\n\t// generate intermediate variables\n\tconst totalTriangles = getTriCount( geometry );\n\tconst cacheCentroidBoundingData = new Float32Array( 6 );\n\tlet reachedMaxDepth = false;\n\n\tconst root = new MeshBVHNode();\n\tgetBounds( triangleBounds, offset, count, root.boundingData, cacheCentroidBoundingData );\n\tsplitNode( root, offset, count, cacheCentroidBoundingData );\n\treturn root;\n\n\tfunction triggerProgress( trianglesProcessed ) {\n\n\t\tif ( onProgress ) {\n\n\t\t\tonProgress( trianglesProcessed / totalTriangles );\n\n\t\t}\n\n\t}\n\n\t// either recursively splits the given node, creating left and right subtrees for it, or makes it a leaf node,\n\t// recording the offset and count of its triangles and writing them into the reordered geometry index.\n\tfunction splitNode( node, offset, count, centroidBoundingData = null, depth = 0 ) {\n\n\t\tif ( ! reachedMaxDepth && depth >= maxDepth ) {\n\n\t\t\treachedMaxDepth = true;\n\t\t\tif ( verbose ) {\n\n\t\t\t\tconsole.warn( `MeshBVH: Max depth of ${ maxDepth } reached when generating BVH. Consider increasing maxDepth.` );\n\t\t\t\tconsole.warn( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// early out if we've met our capacity\n\t\tif ( count <= maxLeafTris || depth >= maxDepth ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\t// Find where to split the volume\n\t\tconst split = getOptimalSplit( node.boundingData, centroidBoundingData, triangleBounds, offset, count, strategy );\n\t\tif ( split.axis === - 1 ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\t\t\treturn node;\n\n\t\t}\n\n\t\tconst splitOffset = partionFunc( indirectBuffer, indexArray, triangleBounds, offset, count, split );\n\n\t\t// create the two new child nodes\n\t\tif ( splitOffset === offset || splitOffset === offset + count ) {\n\n\t\t\ttriggerProgress( offset + count );\n\t\t\tnode.offset = offset;\n\t\t\tnode.count = count;\n\n\t\t} else {\n\n\t\t\tnode.splitAxis = split.axis;\n\n\t\t\t// create the left child and compute its bounding box\n\t\t\tconst left = new MeshBVHNode();\n\t\t\tconst lstart = offset;\n\t\t\tconst lcount = splitOffset - offset;\n\t\t\tnode.left = left;\n\n\t\t\tgetBounds( triangleBounds, lstart, lcount, left.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( left, lstart, lcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t\t// repeat for right\n\t\t\tconst right = new MeshBVHNode();\n\t\t\tconst rstart = splitOffset;\n\t\t\tconst rcount = count - lcount;\n\t\t\tnode.right = right;\n\n\t\t\tgetBounds( triangleBounds, rstart, rcount, right.boundingData, cacheCentroidBoundingData );\n\t\t\tsplitNode( right, rstart, rcount, cacheCentroidBoundingData, depth + 1 );\n\n\t\t}\n\n\t\treturn node;\n\n\t}\n\n}\n\nexport function buildPackedTree( bvh, options ) {\n\n\tconst geometry = bvh.geometry;\n\tif ( options.indirect ) {\n\n\t\tbvh._indirectBuffer = generateIndirectBuffer( geometry, options.useSharedArrayBuffer );\n\n\t\tif ( hasGroupGaps( geometry, options.range ) && ! options.verbose ) {\n\n\t\t\tconsole.warn(\n\t\t\t\t'MeshBVH: Provided geometry contains groups or a range that do not fully span the vertex contents while using the \"indirect\" option. ' +\n\t\t\t\t'BVH may incorrectly report intersections on unrendered portions of the geometry.'\n\t\t\t);\n\n\t\t}\n\n\t}\n\n\tif ( ! bvh._indirectBuffer ) {\n\n\t\tensureIndex( geometry, options );\n\n\t}\n\n\tconst BufferConstructor = options.useSharedArrayBuffer ? SharedArrayBuffer : ArrayBuffer;\n\n\tconst triangleBounds = computeTriangleBounds( geometry );\n\tconst geometryRanges = options.indirect ? getFullGeometryRange( geometry, options.range ) : getRootIndexRanges( geometry, options.range );\n\tbvh._roots = geometryRanges.map( range => {\n\n\t\tconst root = buildTree( bvh, triangleBounds, range.offset, range.count, options );\n\t\tconst nodeCount = countNodes( root );\n\t\tconst buffer = new BufferConstructor( BYTES_PER_NODE * nodeCount );\n\t\tpopulateBuffer( 0, root, buffer );\n\t\treturn buffer;\n\n\t} );\n\n}\n", "import { Vector3 } from 'three';\n\nexport class SeparatingAxisBounds {\n\n\tconstructor() {\n\n\t\tthis.min = Infinity;\n\t\tthis.max = - Infinity;\n\n\t}\n\n\tsetFromPointsField( points, field ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = p[ field ];\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tsetFromPoints( axis, points ) {\n\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tconst val = axis.dot( p );\n\t\t\tmin = val < min ? val : min;\n\t\t\tmax = val > max ? val : max;\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tisSeparated( other ) {\n\n\t\treturn this.min > other.max || other.min > this.max;\n\n\t}\n\n}\n\nSeparatingAxisBounds.prototype.setFromBox = ( function () {\n\n\tconst p = new Vector3();\n\treturn function setFromBox( axis, box ) {\n\n\t\tconst boxMin = box.min;\n\t\tconst boxMax = box.max;\n\t\tlet min = Infinity;\n\t\tlet max = - Infinity;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tp.x = boxMin.x * x + boxMax.x * ( 1 - x );\n\t\t\t\t\tp.y = boxMin.y * y + boxMax.y * ( 1 - y );\n\t\t\t\t\tp.z = boxMin.z * z + boxMax.z * ( 1 - z );\n\n\t\t\t\t\tconst val = axis.dot( p );\n\t\t\t\t\tmin = Math.min( val, min );\n\t\t\t\t\tmax = Math.max( val, max );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t};\n\n} )();\n\nexport const areIntersecting = ( function () {\n\n\tconst cacheSatBounds = new SeparatingAxisBounds();\n\treturn function areIntersecting( shape1, shape2 ) {\n\n\t\tconst points1 = shape1.points;\n\t\tconst satAxes1 = shape1.satAxes;\n\t\tconst satBounds1 = shape1.satBounds;\n\n\t\tconst points2 = shape2.points;\n\t\tconst satAxes2 = shape2.satAxes;\n\t\tconst satBounds2 = shape2.satBounds;\n\n\t\t// check axes of the first shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds1[ i ];\n\t\t\tconst sa = satAxes1[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points2 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check axes of the second shape\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds2[ i ];\n\t\t\tconst sa = satAxes2[ i ];\n\t\t\tcacheSatBounds.setFromPoints( sa, points1 );\n\t\t\tif ( sb.isSeparated( cacheSatBounds ) ) return false;\n\n\t\t}\n\n\t};\n\n} )();\n", "import { Vector3, Vector2, Plane, Line3 } from 'three';\n\nexport const closestPointLineToLine = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/Line.cpp#L56\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst v02 = new Vector3();\n\treturn function closestPointLineToLine( l1, l2, result ) {\n\n\t\tconst v0 = l1.start;\n\t\tconst v10 = dir1;\n\t\tconst v2 = l2.start;\n\t\tconst v32 = dir2;\n\n\t\tv02.subVectors( v0, v2 );\n\t\tdir1.subVectors( l1.end, l1.start );\n\t\tdir2.subVectors( l2.end, l2.start );\n\n\t\t// float d0232 = v02.Dot(v32);\n\t\tconst d0232 = v02.dot( v32 );\n\n\t\t// float d3210 = v32.Dot(v10);\n\t\tconst d3210 = v32.dot( v10 );\n\n\t\t// float d3232 = v32.Dot(v32);\n\t\tconst d3232 = v32.dot( v32 );\n\n\t\t// float d0210 = v02.Dot(v10);\n\t\tconst d0210 = v02.dot( v10 );\n\n\t\t// float d1010 = v10.Dot(v10);\n\t\tconst d1010 = v10.dot( v10 );\n\n\t\t// float denom = d1010*d3232 - d3210*d3210;\n\t\tconst denom = d1010 * d3232 - d3210 * d3210;\n\n\t\tlet d, d2;\n\t\tif ( denom !== 0 ) {\n\n\t\t\td = ( d0232 * d3210 - d0210 * d3232 ) / denom;\n\n\t\t} else {\n\n\t\t\td = 0;\n\n\t\t}\n\n\t\td2 = ( d0232 + d * d3210 ) / d3232;\n\n\t\tresult.x = d;\n\t\tresult.y = d2;\n\n\t};\n\n} )();\n\nexport const closestPointsSegmentToSegment = ( function () {\n\n\t// https://github.com/juj/MathGeoLib/blob/master/src/Geometry/LineSegment.cpp#L187\n\tconst paramResult = new Vector2();\n\tconst temp1 = new Vector3();\n\tconst temp2 = new Vector3();\n\treturn function closestPointsSegmentToSegment( l1, l2, target1, target2 ) {\n\n\t\tclosestPointLineToLine( l1, l2, paramResult );\n\n\t\tlet d = paramResult.x;\n\t\tlet d2 = paramResult.y;\n\t\tif ( d >= 0 && d <= 1 && d2 >= 0 && d2 <= 1 ) {\n\n\t\t\tl1.at( d, target1 );\n\t\t\tl2.at( d2, target2 );\n\n\t\t\treturn;\n\n\t\t} else if ( d >= 0 && d <= 1 ) {\n\n\t\t\t// Only d2 is out of bounds.\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tl2.at( 0, target2 );\n\n\t\t\t} else {\n\n\t\t\t\tl2.at( 1, target2 );\n\n\t\t\t}\n\n\t\t\tl1.closestPointToPoint( target2, true, target1 );\n\t\t\treturn;\n\n\t\t} else if ( d2 >= 0 && d2 <= 1 ) {\n\n\t\t\t// Only d is out of bounds.\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tl1.at( 0, target1 );\n\n\t\t\t} else {\n\n\t\t\t\tl1.at( 1, target1 );\n\n\t\t\t}\n\n\t\t\tl2.closestPointToPoint( target1, true, target2 );\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// Both u and u2 are out of bounds.\n\t\t\tlet p;\n\t\t\tif ( d < 0 ) {\n\n\t\t\t\tp = l1.start;\n\n\t\t\t} else {\n\n\t\t\t\tp = l1.end;\n\n\t\t\t}\n\n\t\t\tlet p2;\n\t\t\tif ( d2 < 0 ) {\n\n\t\t\t\tp2 = l2.start;\n\n\t\t\t} else {\n\n\t\t\t\tp2 = l2.end;\n\n\t\t\t}\n\n\t\t\tconst closestPoint = temp1;\n\t\t\tconst closestPoint2 = temp2;\n\t\t\tl1.closestPointToPoint( p2, true, temp1 );\n\t\t\tl2.closestPointToPoint( p, true, temp2 );\n\n\t\t\tif ( closestPoint.distanceToSquared( p2 ) <= closestPoint2.distanceToSquared( p ) ) {\n\n\t\t\t\ttarget1.copy( closestPoint );\n\t\t\t\ttarget2.copy( p2 );\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\ttarget1.copy( p );\n\t\t\t\ttarget2.copy( closestPoint2 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n} )();\n\n\nexport const sphereIntersectTriangle = ( function () {\n\n\t// https://stackoverflow.com/questions/34043955/detect-collision-between-sphere-and-triangle-in-three-js\n\tconst closestPointTemp = new Vector3();\n\tconst projectedPointTemp = new Vector3();\n\tconst planeTemp = new Plane();\n\tconst lineTemp = new Line3();\n\treturn function sphereIntersectTriangle( sphere, triangle ) {\n\n\t\tconst { radius, center } = sphere;\n\t\tconst { a, b, c } = triangle;\n\n\t\t// phase 1\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = b;\n\t\tconst closestPoint1 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint1.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = a;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint2 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint2.distanceTo( center ) <= radius ) return true;\n\n\t\tlineTemp.start = b;\n\t\tlineTemp.end = c;\n\t\tconst closestPoint3 = lineTemp.closestPointToPoint( center, true, closestPointTemp );\n\t\tif ( closestPoint3.distanceTo( center ) <= radius ) return true;\n\n\t\t// phase 2\n\t\tconst plane = triangle.getPlane( planeTemp );\n\t\tconst dp = Math.abs( plane.distanceToPoint( center ) );\n\t\tif ( dp <= radius ) {\n\n\t\t\tconst pp = plane.projectPoint( center, projectedPointTemp );\n\t\t\tconst cp = triangle.containsPoint( pp );\n\t\t\tif ( cp ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t};\n\n} )();\n", "import { Triangle, Vector3, Line3, Sphere, Plane } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { closestPointsSegmentToSegment, sphereIntersectTriangle } from './MathUtilities.js';\n\nconst ZERO_EPSILON = 1e-15;\nfunction isNearZero( value ) {\n\n\treturn Math.abs( value ) < ZERO_EPSILON;\n\n}\n\nexport class ExtendedTriangle extends Triangle {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tthis.isExtendedTriangle = true;\n\t\tthis.satAxes = new Array( 4 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 4 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.points = [ this.a, this.b, this.c ];\n\t\tthis.sphere = new Sphere();\n\t\tthis.plane = new Plane();\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphereIntersectTriangle( sphere, this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst a = this.a;\n\t\tconst b = this.b;\n\t\tconst c = this.c;\n\t\tconst points = this.points;\n\n\t\tconst satAxes = this.satAxes;\n\t\tconst satBounds = this.satBounds;\n\n\t\tconst axis0 = satAxes[ 0 ];\n\t\tconst sab0 = satBounds[ 0 ];\n\t\tthis.getNormal( axis0 );\n\t\tsab0.setFromPoints( axis0, points );\n\n\t\tconst axis1 = satAxes[ 1 ];\n\t\tconst sab1 = satBounds[ 1 ];\n\t\taxis1.subVectors( a, b );\n\t\tsab1.setFromPoints( axis1, points );\n\n\t\tconst axis2 = satAxes[ 2 ];\n\t\tconst sab2 = satBounds[ 2 ];\n\t\taxis2.subVectors( b, c );\n\t\tsab2.setFromPoints( axis2, points );\n\n\t\tconst axis3 = satAxes[ 3 ];\n\t\tconst sab3 = satBounds[ 3 ];\n\t\taxis3.subVectors( c, a );\n\t\tsab3.setFromPoints( axis3, points );\n\n\t\tthis.sphere.setFromPoints( this.points );\n\t\tthis.plane.setFromNormalAndCoplanarPoint( axis0, a );\n\t\tthis.needsUpdate = false;\n\n\t}\n\n}\n\nExtendedTriangle.prototype.closestPointToSegment = ( function () {\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\tconst edge = new Line3();\n\n\treturn function distanceToSegment( segment, target1 = null, target2 = null ) {\n\n\t\tconst { start, end } = segment;\n\t\tconst points = this.points;\n\t\tlet distSq;\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check the triangle edges\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst nexti = ( i + 1 ) % 3;\n\t\t\tedge.start.copy( points[ i ] );\n\t\t\tedge.end.copy( points[ nexti ] );\n\n\t\t\tclosestPointsSegmentToSegment( edge, segment, point1, point2 );\n\n\t\t\tdistSq = point1.distanceToSquared( point2 );\n\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check end points\n\t\tthis.closestPointToPoint( start, point1 );\n\t\tdistSq = start.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( start );\n\n\t\t}\n\n\t\tthis.closestPointToPoint( end, point1 );\n\t\tdistSq = end.distanceToSquared( point1 );\n\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\tclosestDistanceSq = distSq;\n\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\tif ( target2 ) target2.copy( end );\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n\nExtendedTriangle.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri2 = new ExtendedTriangle();\n\tconst arr1 = new Array( 3 );\n\tconst arr2 = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\tconst dir = new Vector3();\n\tconst dir1 = new Vector3();\n\tconst dir2 = new Vector3();\n\tconst tempDir = new Vector3();\n\tconst edge = new Line3();\n\tconst edge1 = new Line3();\n\tconst edge2 = new Line3();\n\tconst tempPoint = new Vector3();\n\n\tfunction triIntersectPlane( tri, plane, targetEdge ) {\n\n\t\t// find the edge that intersects the other triangle plane\n\t\tconst points = tri.points;\n\t\tlet count = 0;\n\t\tlet startPointIntersection = - 1;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst { start, end } = edge;\n\t\t\tstart.copy( points[ i ] );\n\t\t\tend.copy( points[ ( i + 1 ) % 3 ] );\n\t\t\tedge.delta( dir );\n\n\t\t\tconst startIntersects = isNearZero( plane.distanceToPoint( start ) );\n\t\t\tif ( isNearZero( plane.normal.dot( dir ) ) && startIntersects ) {\n\n\t\t\t\t// if the edge lies on the plane then take the line\n\t\t\t\ttargetEdge.copy( edge );\n\t\t\t\tcount = 2;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\t// check if the start point is near the plane because \"intersectLine\" is not robust to that case\n\t\t\tconst doesIntersect = plane.intersectLine( edge, tempPoint );\n\t\t\tif ( ! doesIntersect && startIntersects ) {\n\n\t\t\t\ttempPoint.copy( start );\n\n\t\t\t}\n\n\t\t\t// ignore the end point\n\t\t\tif ( ( doesIntersect || startIntersects ) && ! isNearZero( tempPoint.distanceTo( end ) ) ) {\n\n\t\t\t\tif ( count <= 1 ) {\n\n\t\t\t\t\t// assign to the start or end point and save which index was snapped to\n\t\t\t\t\t// the start point if necessary\n\t\t\t\t\tconst point = count === 1 ? targetEdge.start : targetEdge.end;\n\t\t\t\t\tpoint.copy( tempPoint );\n\t\t\t\t\tif ( startIntersects ) {\n\n\t\t\t\t\t\tstartPointIntersection = count;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( count >= 2 ) {\n\n\t\t\t\t\t// if we're here that means that there must have been one point that had\n\t\t\t\t\t// snapped to the start point so replace it here\n\t\t\t\t\tconst point = startPointIntersection === 1 ? targetEdge.start : targetEdge.end;\n\t\t\t\t\tpoint.copy( tempPoint );\n\t\t\t\t\tcount = 2;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tcount ++;\n\t\t\t\tif ( count === 2 && startPointIntersection === - 1 ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn count;\n\n\t}\n\n\t// TODO: If the triangles are coplanar and intersecting the target is nonsensical. It should at least\n\t// be a line contained by both triangles if not a different special case somehow represented in the return result.\n\treturn function intersectsTriangle( other, target = null, suppressLog = false ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! other.isExtendedTriangle ) {\n\n\t\t\tsaTri2.copy( other );\n\t\t\tsaTri2.update();\n\t\t\tother = saTri2;\n\n\t\t} else if ( other.needsUpdate ) {\n\n\t\t\tother.update();\n\n\t\t}\n\n\t\tconst plane1 = this.plane;\n\t\tconst plane2 = other.plane;\n\n\t\tif ( Math.abs( plane1.normal.dot( plane2.normal ) ) > 1.0 - 1e-10 ) {\n\n\t\t\t// perform separating axis intersection test only for coplanar triangles\n\t\t\tconst satBounds1 = this.satBounds;\n\t\t\tconst satAxes1 = this.satAxes;\n\t\t\tarr2[ 0 ] = other.a;\n\t\t\tarr2[ 1 ] = other.b;\n\t\t\tarr2[ 2 ] = other.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds1[ i ];\n\t\t\t\tconst sa = satAxes1[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr2 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\tconst satBounds2 = other.satBounds;\n\t\t\tconst satAxes2 = other.satAxes;\n\t\t\tarr1[ 0 ] = this.a;\n\t\t\tarr1[ 1 ] = this.b;\n\t\t\tarr1[ 2 ] = this.c;\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sb = satBounds2[ i ];\n\t\t\t\tconst sa = satAxes2[ i ];\n\t\t\t\tcachedSatBounds.setFromPoints( sa, arr1 );\n\t\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t\t}\n\n\t\t\t// check crossed axes\n\t\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\t\tconst sa1 = satAxes1[ i ];\n\t\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\t\tconst sa2 = satAxes2[ i2 ];\n\t\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, arr1 );\n\t\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, arr2 );\n\t\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( target ) {\n\n\t\t\t\t// TODO find two points that intersect on the edges and make that the result\n\t\t\t\tif ( ! suppressLog ) {\n\n\t\t\t\t\tconsole.warn( 'ExtendedTriangle.intersectsTriangle: Triangles are coplanar which does not support an output edge. Setting edge to 0, 0, 0.' );\n\n\t\t\t\t}\n\n\t\t\t\ttarget.start.set( 0, 0, 0 );\n\t\t\t\ttarget.end.set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// find the edge that intersects the other triangle plane\n\t\t\tconst count1 = triIntersectPlane( this, plane2, edge1 );\n\t\t\tif ( count1 === 1 && other.containsPoint( edge1.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.end );\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count1 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find the other triangles edge that intersects this plane\n\t\t\tconst count2 = triIntersectPlane( other, plane1, edge2 );\n\t\t\tif ( count2 === 1 && this.containsPoint( edge2.end ) ) {\n\n\t\t\t\tif ( target ) {\n\n\t\t\t\t\ttarget.start.copy( edge2.end );\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t} else if ( count2 !== 2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// find swap the second edge so both lines are running the same direction\n\t\t\tedge1.delta( dir1 );\n\t\t\tedge2.delta( dir2 );\n\n\t\t\tif ( dir1.dot( dir2 ) < 0 ) {\n\n\t\t\t\tlet tmp = edge2.start;\n\t\t\t\tedge2.start = edge2.end;\n\t\t\t\tedge2.end = tmp;\n\n\t\t\t}\n\n\t\t\t// check if the edges are overlapping\n\t\t\tconst s1 = edge1.start.dot( dir1 );\n\t\t\tconst e1 = edge1.end.dot( dir1 );\n\t\t\tconst s2 = edge2.start.dot( dir1 );\n\t\t\tconst e2 = edge2.end.dot( dir1 );\n\t\t\tconst separated1 = e1 < s2;\n\t\t\tconst separated2 = s1 < e2;\n\n\t\t\tif ( s1 !== e2 && s2 !== e1 && separated1 === separated2 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// assign the target output\n\t\t\tif ( target ) {\n\n\t\t\t\ttempDir.subVectors( edge1.start, edge2.start );\n\t\t\t\tif ( tempDir.dot( dir1 ) > 0 ) {\n\n\t\t\t\t\ttarget.start.copy( edge1.start );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.start.copy( edge2.start );\n\n\t\t\t\t}\n\n\t\t\t\ttempDir.subVectors( edge1.end, edge2.end );\n\t\t\t\tif ( tempDir.dot( dir1 ) < 0 ) {\n\n\t\t\t\t\ttarget.end.copy( edge1.end );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttarget.end.copy( edge2.end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\n\nExtendedTriangle.prototype.distanceToTriangle = ( function () {\n\n\tconst point = new Vector3();\n\tconst point2 = new Vector3();\n\tconst cornerFields = [ 'a', 'b', 'c' ];\n\tconst line1 = new Line3();\n\tconst line2 = new Line3();\n\n\treturn function distanceToTriangle( other, target1 = null, target2 = null ) {\n\n\t\tconst lineTarget = target1 || target2 ? line1 : null;\n\t\tif ( this.intersectsTriangle( other, lineTarget ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tif ( target1 ) lineTarget.getCenter( target1 );\n\t\t\t\tif ( target2 ) lineTarget.getCenter( target2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check all point distances\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tlet dist;\n\t\t\tconst field = cornerFields[ i ];\n\t\t\tconst otherVec = other[ field ];\n\t\t\tthis.closestPointToPoint( otherVec, point );\n\n\t\t\tdist = otherVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\tif ( target2 ) target2.copy( otherVec );\n\n\t\t\t}\n\n\n\t\t\tconst thisVec = this[ field ];\n\t\t\tother.closestPointToPoint( thisVec, point );\n\n\t\t\tdist = thisVec.distanceToSquared( point );\n\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( thisVec );\n\t\t\t\tif ( target2 ) target2.copy( point );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst f11 = cornerFields[ i ];\n\t\t\tconst f12 = cornerFields[ ( i + 1 ) % 3 ];\n\t\t\tline1.set( this[ f11 ], this[ f12 ] );\n\t\t\tfor ( let i2 = 0; i2 < 3; i2 ++ ) {\n\n\t\t\t\tconst f21 = cornerFields[ i2 ];\n\t\t\t\tconst f22 = cornerFields[ ( i2 + 1 ) % 3 ];\n\t\t\t\tline2.set( other[ f21 ], other[ f22 ] );\n\n\t\t\t\tclosestPointsSegmentToSegment( line1, line2, point, point2 );\n\n\t\t\t\tconst dist = point.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n", "import { Vector3, Matrix4, Line3 } from 'three';\nimport { SeparatingAxisBounds } from './SeparatingAxisBounds.js';\nimport { ExtendedTriangle } from './ExtendedTriangle.js';\nimport { closestPointsSegmentToSegment } from './MathUtilities.js';\n\nexport class OrientedBox {\n\n\tconstructor( min, max, matrix ) {\n\n\t\tthis.isOrientedBox = true;\n\t\tthis.min = new Vector3();\n\t\tthis.max = new Vector3();\n\t\tthis.matrix = new Matrix4();\n\t\tthis.invMatrix = new Matrix4();\n\t\tthis.points = new Array( 8 ).fill().map( () => new Vector3() );\n\t\tthis.satAxes = new Array( 3 ).fill().map( () => new Vector3() );\n\t\tthis.satBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.alignedSatBounds = new Array( 3 ).fill().map( () => new SeparatingAxisBounds() );\n\t\tthis.needsUpdate = false;\n\n\t\tif ( min ) this.min.copy( min );\n\t\tif ( max ) this.max.copy( max );\n\t\tif ( matrix ) this.matrix.copy( matrix );\n\n\t}\n\n\tset( min, max, matrix ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\t\tthis.matrix.copy( matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.min.copy( other.min );\n\t\tthis.max.copy( other.max );\n\t\tthis.matrix.copy( other.matrix );\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nOrientedBox.prototype.update = ( function () {\n\n\treturn function update() {\n\n\t\tconst matrix = this.matrix;\n\t\tconst min = this.min;\n\t\tconst max = this.max;\n\n\t\tconst points = this.points;\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tconst i = ( ( 1 << 0 ) * x ) | ( ( 1 << 1 ) * y ) | ( ( 1 << 2 ) * z );\n\t\t\t\t\tconst v = points[ i ];\n\t\t\t\t\tv.x = x ? max.x : min.x;\n\t\t\t\t\tv.y = y ? max.y : min.y;\n\t\t\t\t\tv.z = z ? max.z : min.z;\n\n\t\t\t\t\tv.applyMatrix4( matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst minVec = points[ 0 ];\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst index = 1 << i;\n\t\t\tconst pi = points[ index ];\n\n\t\t\taxis.subVectors( minVec, pi );\n\t\t\tsb.setFromPoints( axis, points );\n\n\t\t}\n\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\t\talignedSatBounds[ 0 ].setFromPointsField( points, 'x' );\n\t\talignedSatBounds[ 1 ].setFromPointsField( points, 'y' );\n\t\talignedSatBounds[ 2 ].setFromPointsField( points, 'z' );\n\n\t\tthis.invMatrix.copy( this.matrix ).invert();\n\t\tthis.needsUpdate = false;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsBox = ( function () {\n\n\tconst aabbBounds = new SeparatingAxisBounds();\n\treturn function intersectsBox( box ) {\n\n\t\t// TODO: should this be doing SAT against the AABB?\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\t\tconst alignedSatBounds = this.alignedSatBounds;\n\n\t\taabbBounds.min = min.x;\n\t\taabbBounds.max = max.x;\n\t\tif ( alignedSatBounds[ 0 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.y;\n\t\taabbBounds.max = max.y;\n\t\tif ( alignedSatBounds[ 1 ].isSeparated( aabbBounds ) ) return false;\n\n\t\taabbBounds.min = min.z;\n\t\taabbBounds.max = max.z;\n\t\tif ( alignedSatBounds[ 2 ].isSeparated( aabbBounds ) ) return false;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst axis = satAxes[ i ];\n\t\t\tconst sb = satBounds[ i ];\n\t\t\taabbBounds.setFromBox( axis, box );\n\t\t\tif ( sb.isSeparated( aabbBounds ) ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.intersectsTriangle = ( function () {\n\n\tconst saTri = new ExtendedTriangle();\n\tconst pointsArr = new Array( 3 );\n\tconst cachedSatBounds = new SeparatingAxisBounds();\n\tconst cachedSatBounds2 = new SeparatingAxisBounds();\n\tconst cachedAxis = new Vector3();\n\treturn function intersectsTriangle( triangle ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( ! triangle.isExtendedTriangle ) {\n\n\t\t\tsaTri.copy( triangle );\n\t\t\tsaTri.update();\n\t\t\ttriangle = saTri;\n\n\t\t} else if ( triangle.needsUpdate ) {\n\n\t\t\ttriangle.update();\n\n\t\t}\n\n\t\tconst satBounds = this.satBounds;\n\t\tconst satAxes = this.satAxes;\n\n\t\tpointsArr[ 0 ] = triangle.a;\n\t\tpointsArr[ 1 ] = triangle.b;\n\t\tpointsArr[ 2 ] = triangle.c;\n\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = satBounds[ i ];\n\t\t\tconst sa = satAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, pointsArr );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\tconst triSatBounds = triangle.satBounds;\n\t\tconst triSatAxes = triangle.satAxes;\n\t\tconst points = this.points;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sb = triSatBounds[ i ];\n\t\t\tconst sa = triSatAxes[ i ];\n\t\t\tcachedSatBounds.setFromPoints( sa, points );\n\t\t\tif ( sb.isSeparated( cachedSatBounds ) ) return false;\n\n\t\t}\n\n\t\t// check crossed axes\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tconst sa1 = satAxes[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 4; i2 ++ ) {\n\n\t\t\t\tconst sa2 = triSatAxes[ i2 ];\n\t\t\t\tcachedAxis.crossVectors( sa1, sa2 );\n\t\t\t\tcachedSatBounds.setFromPoints( cachedAxis, pointsArr );\n\t\t\t\tcachedSatBounds2.setFromPoints( cachedAxis, points );\n\t\t\t\tif ( cachedSatBounds.isSeparated( cachedSatBounds2 ) ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.closestPointToPoint = ( function () {\n\n\treturn function closestPointToPoint( point, target1 ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\ttarget1\n\t\t\t.copy( point )\n\t\t\t.applyMatrix4( this.invMatrix )\n\t\t\t.clamp( this.min, this.max )\n\t\t\t.applyMatrix4( this.matrix );\n\n\t\treturn target1;\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToPoint = ( function () {\n\n\tconst target = new Vector3();\n\treturn function distanceToPoint( point ) {\n\n\t\tthis.closestPointToPoint( point, target );\n\t\treturn point.distanceTo( target );\n\n\t};\n\n} )();\n\nOrientedBox.prototype.distanceToBox = ( function () {\n\n\tconst xyzFields = [ 'x', 'y', 'z' ];\n\tconst segments1 = new Array( 12 ).fill().map( () => new Line3() );\n\tconst segments2 = new Array( 12 ).fill().map( () => new Line3() );\n\n\tconst point1 = new Vector3();\n\tconst point2 = new Vector3();\n\n\t// early out if we find a value below threshold\n\treturn function distanceToBox( box, threshold = 0, target1 = null, target2 = null ) {\n\n\t\tif ( this.needsUpdate ) {\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t\tif ( this.intersectsBox( box ) ) {\n\n\t\t\tif ( target1 || target2 ) {\n\n\t\t\t\tbox.getCenter( point2 );\n\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\tbox.closestPointToPoint( point1, point2 );\n\n\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t}\n\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tconst threshold2 = threshold * threshold;\n\t\tconst min = box.min;\n\t\tconst max = box.max;\n\t\tconst points = this.points;\n\n\n\t\t// iterate over every edge and compare distances\n\t\tlet closestDistanceSq = Infinity;\n\n\t\t// check over all these points\n\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\tconst p = points[ i ];\n\t\t\tpoint2.copy( p ).clamp( min, max );\n\n\t\t\tconst dist = p.distanceToSquared( point2 );\n\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\tif ( target1 ) target1.copy( p );\n\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate and check all line segment distances\n\t\tlet count = 0;\n\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\tfor ( let i1 = 0; i1 <= 1; i1 ++ ) {\n\n\t\t\t\tfor ( let i2 = 0; i2 <= 1; i2 ++ ) {\n\n\t\t\t\t\tconst nextIndex = ( i + 1 ) % 3;\n\t\t\t\t\tconst nextIndex2 = ( i + 2 ) % 3;\n\n\t\t\t\t\t// get obb line segments\n\t\t\t\t\tconst index = i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst index2 = 1 << i | i1 << nextIndex | i2 << nextIndex2;\n\t\t\t\t\tconst p1 = points[ index ];\n\t\t\t\t\tconst p2 = points[ index2 ];\n\t\t\t\t\tconst line1 = segments1[ count ];\n\t\t\t\t\tline1.set( p1, p2 );\n\n\n\t\t\t\t\t// get aabb line segments\n\t\t\t\t\tconst f1 = xyzFields[ i ];\n\t\t\t\t\tconst f2 = xyzFields[ nextIndex ];\n\t\t\t\t\tconst f3 = xyzFields[ nextIndex2 ];\n\t\t\t\t\tconst line2 = segments2[ count ];\n\t\t\t\t\tconst start = line2.start;\n\t\t\t\t\tconst end = line2.end;\n\n\t\t\t\t\tstart[ f1 ] = min[ f1 ];\n\t\t\t\t\tstart[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tstart[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tend[ f1 ] = max[ f1 ];\n\t\t\t\t\tend[ f2 ] = i1 ? min[ f2 ] : max[ f2 ];\n\t\t\t\t\tend[ f3 ] = i2 ? min[ f3 ] : max[ f2 ];\n\n\t\t\t\t\tcount ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// check all the other boxes point\n\t\tfor ( let x = 0; x <= 1; x ++ ) {\n\n\t\t\tfor ( let y = 0; y <= 1; y ++ ) {\n\n\t\t\t\tfor ( let z = 0; z <= 1; z ++ ) {\n\n\t\t\t\t\tpoint2.x = x ? max.x : min.x;\n\t\t\t\t\tpoint2.y = y ? max.y : min.y;\n\t\t\t\t\tpoint2.z = z ? max.z : min.z;\n\n\t\t\t\t\tthis.closestPointToPoint( point2, point1 );\n\t\t\t\t\tconst dist = point2.distanceToSquared( point1 );\n\t\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 12; i ++ ) {\n\n\t\t\tconst l1 = segments1[ i ];\n\t\t\tfor ( let i2 = 0; i2 < 12; i2 ++ ) {\n\n\t\t\t\tconst l2 = segments2[ i2 ];\n\t\t\t\tclosestPointsSegmentToSegment( l1, l2, point1, point2 );\n\t\t\t\tconst dist = point1.distanceToSquared( point2 );\n\t\t\t\tif ( dist < closestDistanceSq ) {\n\n\t\t\t\t\tclosestDistanceSq = dist;\n\t\t\t\t\tif ( target1 ) target1.copy( point1 );\n\t\t\t\t\tif ( target2 ) target2.copy( point2 );\n\n\t\t\t\t\tif ( dist < threshold2 ) return Math.sqrt( dist );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.sqrt( closestDistanceSq );\n\n\t};\n\n} )();\n", "export class PrimitivePool {\n\n\tconstructor( getNewPrimitive ) {\n\n\t\tthis._getNewPrimitive = getNewPrimitive;\n\t\tthis._primitives = [];\n\n\t}\n\n\tgetPrimitive() {\n\n\t\tconst primitives = this._primitives;\n\t\tif ( primitives.length === 0 ) {\n\n\t\t\treturn this._getNewPrimitive();\n\n\t\t} else {\n\n\t\t\treturn primitives.pop();\n\n\t\t}\n\n\t}\n\n\treleasePrimitive( primitive ) {\n\n\t\tthis._primitives.push( primitive );\n\n\t}\n\n}\n", "import { ExtendedTriangle } from '../math/ExtendedTriangle.js';\nimport { PrimitivePool } from './PrimitivePool.js';\n\nclass ExtendedTrianglePoolBase extends PrimitivePool {\n\n\tconstructor() {\n\n\t\tsuper( () => new ExtendedTriangle() );\n\n\t}\n\n}\n\nexport const ExtendedTrianglePool = /* @__PURE__ */ new ExtendedTrianglePoolBase();\n", "class _BufferStack {\n\n\tconstructor() {\n\n\t\tthis.float32Array = null;\n\t\tthis.uint16Array = null;\n\t\tthis.uint32Array = null;\n\n\t\tconst stack = [];\n\t\tlet prevBuffer = null;\n\t\tthis.setBuffer = buffer => {\n\n\t\t\tif ( prevBuffer ) {\n\n\t\t\t\tstack.push( prevBuffer );\n\n\t\t\t}\n\n\t\t\tprevBuffer = buffer;\n\t\t\tthis.float32Array = new Float32Array( buffer );\n\t\t\tthis.uint16Array = new Uint16Array( buffer );\n\t\t\tthis.uint32Array = new Uint32Array( buffer );\n\n\t\t};\n\n\t\tthis.clearBuffer = () => {\n\n\t\t\tprevBuffer = null;\n\t\t\tthis.float32Array = null;\n\t\t\tthis.uint16Array = null;\n\t\t\tthis.uint32Array = null;\n\n\t\t\tif ( stack.length !== 0 ) {\n\n\t\t\t\tthis.setBuffer( stack.pop() );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n}\n\nexport const BufferStack = new _BufferStack();\n", "import { Box3 } from 'three';\nimport { CONTAINED } from '../Constants.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { PrimitivePool } from '../../utils/PrimitivePool.js';\nimport { COUNT, OFFSET, LEFT_NODE, RIGHT_NODE, IS_LEAF, BOUNDING_DATA_INDEX } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\n\nlet _box1, _box2;\nconst boxStack = [];\nconst boxPool = /* @__PURE__ */ new PrimitivePool( () => new Box3() );\n\nexport function shapecast( bvh, root, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset ) {\n\n\t// setup\n\t_box1 = boxPool.getPrimitive();\n\t_box2 = boxPool.getPrimitive();\n\tboxStack.push( _box1, _box2 );\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\n\tconst result = shapecastTraverse( 0, bvh.geometry, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\n\n\t// cleanup\n\tBufferStack.clearBuffer();\n\tboxPool.releasePrimitive( _box1 );\n\tboxPool.releasePrimitive( _box2 );\n\tboxStack.pop();\n\tboxStack.pop();\n\n\tconst length = boxStack.length;\n\tif ( length > 0 ) {\n\n\t\t_box2 = boxStack[ length - 1 ];\n\t\t_box1 = boxStack[ length - 2 ];\n\n\t}\n\n\treturn result;\n\n}\n\nfunction shapecastTraverse(\n\tnodeIndex32,\n\tgeometry,\n\tintersectsBoundsFunc,\n\tintersectsRangeFunc,\n\tnodeScoreFunc = null,\n\tnodeIndexByteOffset = 0, // offset for unique node identifier\n\tdepth = 0\n) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, _box1 );\n\t\treturn intersectsRangeFunc( offset, count, false, depth, nodeIndexByteOffset + nodeIndex32, _box1 );\n\n\t} else {\n\n\t\tconst left = LEFT_NODE( nodeIndex32 );\n\t\tconst right = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tlet c1 = left;\n\t\tlet c2 = right;\n\n\t\tlet score1, score2;\n\t\tlet box1, box2;\n\t\tif ( nodeScoreFunc ) {\n\n\t\t\tbox1 = _box1;\n\t\t\tbox2 = _box2;\n\n\t\t\t// bounding data is not offset\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\t\tscore1 = nodeScoreFunc( box1 );\n\t\t\tscore2 = nodeScoreFunc( box2 );\n\n\t\t\tif ( score2 < score1 ) {\n\n\t\t\t\tc1 = right;\n\t\t\t\tc2 = left;\n\n\t\t\t\tconst temp = score1;\n\t\t\t\tscore1 = score2;\n\t\t\t\tscore2 = temp;\n\n\t\t\t\tbox1 = box2;\n\t\t\t\t// box2 is always set before use below\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Check box 1 intersection\n\t\tif ( ! box1 ) {\n\n\t\t\tbox1 = _box1;\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( c1 ), float32Array, box1 );\n\n\t\t}\n\n\t\tconst isC1Leaf = IS_LEAF( c1 * 2, uint16Array );\n\t\tconst c1Intersection = intersectsBoundsFunc( box1, isC1Leaf, score1, depth + 1, nodeIndexByteOffset + c1 );\n\n\t\tlet c1StopTraversal;\n\t\tif ( c1Intersection === CONTAINED ) {\n\n\t\t\tconst offset = getLeftOffset( c1 );\n\t\t\tconst end = getRightEndOffset( c1 );\n\t\t\tconst count = end - offset;\n\n\t\t\tc1StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c1, box1 );\n\n\t\t} else {\n\n\t\t\tc1StopTraversal =\n\t\t\t\tc1Intersection &&\n\t\t\t\tshapecastTraverse(\n\t\t\t\t\tc1,\n\t\t\t\t\tgeometry,\n\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\tdepth + 1\n\t\t\t\t);\n\n\t\t}\n\n\t\tif ( c1StopTraversal ) return true;\n\n\t\t// Check box 2 intersection\n\t\t// cached box2 will have been overwritten by previous traversal\n\t\tbox2 = _box2;\n\t\tarrayToBox( BOUNDING_DATA_INDEX( c2 ), float32Array, box2 );\n\n\t\tconst isC2Leaf = IS_LEAF( c2 * 2, uint16Array );\n\t\tconst c2Intersection = intersectsBoundsFunc( box2, isC2Leaf, score2, depth + 1, nodeIndexByteOffset + c2 );\n\n\t\tlet c2StopTraversal;\n\t\tif ( c2Intersection === CONTAINED ) {\n\n\t\t\tconst offset = getLeftOffset( c2 );\n\t\t\tconst end = getRightEndOffset( c2 );\n\t\t\tconst count = end - offset;\n\n\t\t\tc2StopTraversal = intersectsRangeFunc( offset, count, true, depth + 1, nodeIndexByteOffset + c2, box2 );\n\n\t\t} else {\n\n\t\t\tc2StopTraversal =\n\t\t\t\tc2Intersection &&\n\t\t\t\tshapecastTraverse(\n\t\t\t\t\tc2,\n\t\t\t\t\tgeometry,\n\t\t\t\t\tintersectsBoundsFunc,\n\t\t\t\t\tintersectsRangeFunc,\n\t\t\t\t\tnodeScoreFunc,\n\t\t\t\t\tnodeIndexByteOffset,\n\t\t\t\t\tdepth + 1\n\t\t\t\t);\n\n\t\t}\n\n\t\tif ( c2StopTraversal ) return true;\n\n\t\treturn false;\n\n\t\t// Define these inside the function so it has access to the local variables needed\n\t\t// when converting to the buffer equivalents\n\t\tfunction getLeftOffset( nodeIndex32 ) {\n\n\t\t\tconst { uint16Array, uint32Array } = BufferStack;\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\tnodeIndex32 = LEFT_NODE( nodeIndex32 );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\treturn OFFSET( nodeIndex32, uint32Array );\n\n\t\t}\n\n\t\tfunction getRightEndOffset( nodeIndex32 ) {\n\n\t\t\tconst { uint16Array, uint32Array } = BufferStack;\n\t\t\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t// traverse until we find a leaf\n\t\t\twhile ( ! IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\t\t// adjust offset to point to the right node\n\t\t\t\tnodeIndex32 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\t\tnodeIndex16 = nodeIndex32 * 2;\n\n\t\t\t}\n\n\t\t\t// return the end offset of the triangle range\n\t\t\treturn OFFSET( nodeIndex32, uint32Array ) + COUNT( nodeIndex16, uint16Array );\n\n\t\t}\n\n\t}\n\n}\n", "import { Vector3 } from 'three';\n\nconst temp = /* @__PURE__ */ new Vector3();\nconst temp1 = /* @__PURE__ */ new Vector3();\n\nexport function closestPointToPoint(\n\tbvh,\n\tpoint,\n\ttarget = { },\n\tminThreshold = 0,\n\tmaxThreshold = Infinity,\n) {\n\n\t// early out if under minThreshold\n\t// skip checking if over maxThreshold\n\t// set minThreshold = maxThreshold to quickly check if a point is within a threshold\n\t// returns Infinity if no value found\n\tconst minThresholdSq = minThreshold * minThreshold;\n\tconst maxThresholdSq = maxThreshold * maxThreshold;\n\tlet closestDistanceSq = Infinity;\n\tlet closestDistanceTriIndex = null;\n\tbvh.shapecast(\n\n\t\t{\n\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\ttemp.copy( point ).clamp( box.min, box.max );\n\t\t\t\treturn temp.distanceToSquared( point );\n\n\t\t\t},\n\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\treturn score < closestDistanceSq && score < maxThresholdSq;\n\n\t\t\t},\n\n\t\t\tintersectsTriangle: ( tri, triIndex ) => {\n\n\t\t\t\ttri.closestPointToPoint( point, temp );\n\t\t\t\tconst distSq = point.distanceToSquared( temp );\n\t\t\t\tif ( distSq < closestDistanceSq ) {\n\n\t\t\t\t\ttemp1.copy( temp );\n\t\t\t\t\tclosestDistanceSq = distSq;\n\t\t\t\t\tclosestDistanceTriIndex = triIndex;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distSq < minThresholdSq ) {\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t}\n\n\t);\n\n\tif ( closestDistanceSq === Infinity ) return null;\n\n\tconst closestDistance = Math.sqrt( closestDistanceSq );\n\n\tif ( ! target.point ) target.point = temp1.clone();\n\telse target.point.copy( temp1 );\n\ttarget.distance = closestDistance,\n\ttarget.faceIndex = closestDistanceTriIndex;\n\n\treturn target;\n\n}\n", "import { Vector3, Vector2, Triangle, DoubleSide, BackSide } from 'three';\n\n// Ripped and modified From THREE.js Mesh raycast\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L115\nconst _vA = /* @__PURE__ */ new Vector3();\nconst _vB = /* @__PURE__ */ new Vector3();\nconst _vC = /* @__PURE__ */ new Vector3();\n\nconst _uvA = /* @__PURE__ */ new Vector2();\nconst _uvB = /* @__PURE__ */ new Vector2();\nconst _uvC = /* @__PURE__ */ new Vector2();\n\nconst _normalA = /* @__PURE__ */ new Vector3();\nconst _normalB = /* @__PURE__ */ new Vector3();\nconst _normalC = /* @__PURE__ */ new Vector3();\n\nconst _intersectionPoint = /* @__PURE__ */ new Vector3();\nfunction checkIntersection( ray, pA, pB, pC, point, side, near, far ) {\n\n\tlet intersect;\n\tif ( side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, side !== DoubleSide, point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\tconst distance = ray.origin.distanceTo( point );\n\n\tif ( distance < near || distance > far ) return null;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\tpoint: point.clone(),\n\n\t};\n\n}\n\nfunction checkBufferGeometryIntersection( ray, position, normal, uv, uv1, a, b, c, side, near, far ) {\n\n\t_vA.fromBufferAttribute( position, a );\n\t_vB.fromBufferAttribute( position, b );\n\t_vC.fromBufferAttribute( position, c );\n\n\tconst intersection = checkIntersection( ray, _vA, _vB, _vC, _intersectionPoint, side, near, far );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA.fromBufferAttribute( uv1, a );\n\t\t\t_uvB.fromBufferAttribute( uv1, b );\n\t\t\t_uvC.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA, _vB, _vC, _normalA, _normalB, _normalC, new Vector3() );\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.faceIndex = a;\n\n\t}\n\n\treturn intersection;\n\n}\n\n// https://github.com/mrdoob/three.js/blob/0aa87c999fe61e216c1133fba7a95772b503eddf/src/objects/Mesh.js#L258\nfunction intersectTri( geo, side, ray, tri, intersections, near, far ) {\n\n\tconst triOffset = tri * 3;\n\tlet a = triOffset + 0;\n\tlet b = triOffset + 1;\n\tlet c = triOffset + 2;\n\n\tconst index = geo.index;\n\tif ( geo.index ) {\n\n\t\ta = index.getX( a );\n\t\tb = index.getX( b );\n\t\tc = index.getX( c );\n\n\t}\n\n\tconst { position, normal, uv, uv1 } = geo.attributes;\n\tconst intersection = checkBufferGeometryIntersection( ray, position, normal, uv, uv1, a, b, c, side, near, far );\n\n\tif ( intersection ) {\n\n\t\tintersection.faceIndex = tri;\n\t\tif ( intersections ) intersections.push( intersection );\n\t\treturn intersection;\n\n\t}\n\n\treturn null;\n\n}\n\nexport { intersectTri };\n", "\nimport { Vector2, Vector3, Triangle } from 'three';\n\n// sets the vertices of triangle `tri` with the 3 vertices after i\nexport function setTriangle( tri, i, index, pos ) {\n\n\tconst ta = tri.a;\n\tconst tb = tri.b;\n\tconst tc = tri.c;\n\n\tlet i0 = i;\n\tlet i1 = i + 1;\n\tlet i2 = i + 2;\n\tif ( index ) {\n\n\t\ti0 = index.getX( i0 );\n\t\ti1 = index.getX( i1 );\n\t\ti2 = index.getX( i2 );\n\n\t}\n\n\tta.x = pos.getX( i0 );\n\tta.y = pos.getY( i0 );\n\tta.z = pos.getZ( i0 );\n\n\ttb.x = pos.getX( i1 );\n\ttb.y = pos.getY( i1 );\n\ttb.z = pos.getZ( i1 );\n\n\ttc.x = pos.getX( i2 );\n\ttc.y = pos.getY( i2 );\n\ttc.z = pos.getZ( i2 );\n\n}\n\nconst tempV1 = /* @__PURE__ */ new Vector3();\nconst tempV2 = /* @__PURE__ */ new Vector3();\nconst tempV3 = /* @__PURE__ */ new Vector3();\nconst tempUV1 = /* @__PURE__ */ new Vector2();\nconst tempUV2 = /* @__PURE__ */ new Vector2();\nconst tempUV3 = /* @__PURE__ */ new Vector2();\n\nexport function getTriangleHitPointInfo( point, geometry, triangleIndex, target ) {\n\n\tconst indices = geometry.getIndex().array;\n\tconst positions = geometry.getAttribute( 'position' );\n\tconst uvs = geometry.getAttribute( 'uv' );\n\n\tconst a = indices[ triangleIndex * 3 ];\n\tconst b = indices[ triangleIndex * 3 + 1 ];\n\tconst c = indices[ triangleIndex * 3 + 2 ];\n\n\ttempV1.fromBufferAttribute( positions, a );\n\ttempV2.fromBufferAttribute( positions, b );\n\ttempV3.fromBufferAttribute( positions, c );\n\n\t// find the associated material index\n\tlet materialIndex = 0;\n\tconst groups = geometry.groups;\n\tconst firstVertexIndex = triangleIndex * 3;\n\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\tconst group = groups[ i ];\n\t\tconst { start, count } = group;\n\t\tif ( firstVertexIndex >= start && firstVertexIndex < start + count ) {\n\n\t\t\tmaterialIndex = group.materialIndex;\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// extract uvs\n\tlet uv = null;\n\tif ( uvs ) {\n\n\t\ttempUV1.fromBufferAttribute( uvs, a );\n\t\ttempUV2.fromBufferAttribute( uvs, b );\n\t\ttempUV3.fromBufferAttribute( uvs, c );\n\n\t\tif ( target && target.uv ) uv = target.uv;\n\t\telse uv = new Vector2();\n\n\t\tTriangle.getInterpolation( point, tempV1, tempV2, tempV3, tempUV1, tempUV2, tempUV3, uv );\n\n\t}\n\n\t// adjust the provided target or create a new one\n\tif ( target ) {\n\n\t\tif ( ! target.face ) target.face = { };\n\t\ttarget.face.a = a;\n\t\ttarget.face.b = b;\n\t\ttarget.face.c = c;\n\t\ttarget.face.materialIndex = materialIndex;\n\t\tif ( ! target.face.normal ) target.face.normal = new Vector3();\n\t\tTriangle.getNormal( tempV1, tempV2, tempV3, target.face.normal );\n\n\t\tif ( uv ) target.uv = uv;\n\n\t\treturn target;\n\n\t} else {\n\n\t\treturn {\n\t\t\tface: {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tmaterialIndex: materialIndex,\n\t\t\t\tnormal: Triangle.getNormal( tempV1, tempV2, tempV3, new Vector3() )\n\t\t\t},\n\t\t\tuv: uv\n\t\t};\n\n\t}\n\n}\n", "import { intersectTri } from '../../utils/ThreeRayIntersectUtilities.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\n\n/*************************************************************/\n/* This file is generated from \"iterationUtils.template.js\". */\n/*************************************************************/\n/* eslint-disable indent */\n\nfunction intersectTris( bvh, side, ray, offset, count, intersections, near, far ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\n\t\tintersectTri( geometry, side, ray, i, intersections, near, far );\n\n\n\t}\n\n}\n\nfunction intersectClosestTri( bvh, side, ray, offset, count, near, far ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tlet dist = Infinity;\n\tlet res = null;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tlet intersection;\n\n\t\tintersection = intersectTri( geometry, side, ray, i, null, near, far );\n\n\n\t\tif ( intersection && intersection.distance < dist ) {\n\n\t\t\tres = intersection;\n\t\t\tdist = intersection.distance;\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\nfunction iterateOverTriangles(\n\toffset,\n\tcount,\n\tbvh,\n\tintersectsTriangleFunc,\n\tcontained,\n\tdepth,\n\ttriangle\n) {\n\n\tconst { geometry } = bvh;\n\tconst { index } = geometry;\n\tconst pos = geometry.attributes.position;\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\tlet tri;\n\n\t\ttri = i;\n\n\t\tsetTriangle( triangle, tri * 3, index, pos );\n\t\ttriangle.needsUpdate = true;\n\n\t\tif ( intersectsTriangleFunc( triangle, tri, contained, depth ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\nexport { intersectClosestTri, intersectTris, iterateOverTriangles };\n", "import { IS_LEAFNODE_FLAG } from '../Constants.js';\n\n/****************************************************/\n/* This file is generated from \"refit.template.js\". */\n/****************************************************/\n\nfunction refit( bvh, nodeIndices = null ) {\n\n\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\n\n\t\tnodeIndices = new Set( nodeIndices );\n\n\t}\n\n\tconst geometry = bvh.geometry;\n\tconst indexArr = geometry.index ? geometry.index.array : null;\n\tconst posAttr = geometry.attributes.position;\n\n\tlet buffer, uint32Array, uint16Array, float32Array;\n\tlet byteOffset = 0;\n\tconst roots = bvh._roots;\n\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\tbuffer = roots[ i ];\n\t\tuint32Array = new Uint32Array( buffer );\n\t\tuint16Array = new Uint16Array( buffer );\n\t\tfloat32Array = new Float32Array( buffer );\n\n\t\t_traverse( 0, byteOffset );\n\t\tbyteOffset += buffer.byteLength;\n\n\t}\n\n\tfunction _traverse( node32Index, byteOffset, force = false ) {\n\n\t\tconst node16Index = node32Index * 2;\n\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\n\t\t\tlet minx = Infinity;\n\t\t\tlet miny = Infinity;\n\t\t\tlet minz = Infinity;\n\t\t\tlet maxx = - Infinity;\n\t\t\tlet maxy = - Infinity;\n\t\t\tlet maxz = - Infinity;\n\n\n\t\t\tfor ( let i = 3 * offset, l = 3 * ( offset + count ); i < l; i ++ ) {\n\n\t\t\t\tlet index = indexArr[ i ];\n\t\t\t\tconst x = posAttr.getX( index );\n\t\t\t\tconst y = posAttr.getY( index );\n\t\t\t\tconst z = posAttr.getZ( index );\n\n\t\t\t\tif ( x < minx ) minx = x;\n\t\t\t\tif ( x > maxx ) maxx = x;\n\n\t\t\t\tif ( y < miny ) miny = y;\n\t\t\t\tif ( y > maxy ) maxy = y;\n\n\t\t\t\tif ( z < minz ) minz = z;\n\t\t\t\tif ( z > maxz ) maxz = z;\n\n\t\t\t}\n\n\n\t\t\tif (\n\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\n\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\n\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\n\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\n\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\n\t\t\t) {\n\n\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\n\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\n\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\n\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\n\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst left = node32Index + 8;\n\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\n\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\n\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\n\t\t\tconst offsetLeft = left + byteOffset;\n\t\t\tconst offsetRight = right + byteOffset;\n\t\t\tlet forceChildren = force;\n\t\t\tlet includesLeft = false;\n\t\t\tlet includesRight = false;\n\n\t\t\tif ( nodeIndices ) {\n\n\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\n\t\t\t\t// then we assume that all children need to be updated.\n\t\t\t\tif ( ! forceChildren ) {\n\n\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\n\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\n\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tincludesLeft = true;\n\t\t\t\tincludesRight = true;\n\n\t\t\t}\n\n\t\t\tconst traverseLeft = forceChildren || includesLeft;\n\t\t\tconst traverseRight = forceChildren || includesRight;\n\n\t\t\tlet leftChange = false;\n\t\t\tif ( traverseLeft ) {\n\n\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tlet rightChange = false;\n\t\t\tif ( traverseRight ) {\n\n\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tconst didChange = leftChange || rightChange;\n\t\t\tif ( didChange ) {\n\n\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tconst lefti = left + i;\n\t\t\t\t\tconst righti = right + i;\n\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\n\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\n\t\t\t\t\tconst minRightValue = float32Array[ righti ];\n\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\n\n\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn didChange;\n\n\t\t}\n\n\t}\n\n}\n\nexport { refit };\n", "/**\n * This function performs intersection tests similar to Ray.intersectBox in three.js,\n * with the difference that the box values are read from an array to improve performance.\n */\nexport function intersectRay( nodeIndex32, array, ray, near, far ) {\n\n\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\tconst invdirx = 1 / ray.direction.x,\n\t\tinvdiry = 1 / ray.direction.y,\n\t\tinvdirz = 1 / ray.direction.z;\n\n\tconst ox = ray.origin.x;\n\tconst oy = ray.origin.y;\n\tconst oz = ray.origin.z;\n\n\tlet minx = array[ nodeIndex32 ];\n\tlet maxx = array[ nodeIndex32 + 3 ];\n\n\tlet miny = array[ nodeIndex32 + 1 ];\n\tlet maxy = array[ nodeIndex32 + 3 + 1 ];\n\n\tlet minz = array[ nodeIndex32 + 2 ];\n\tlet maxz = array[ nodeIndex32 + 3 + 2 ];\n\n\tif ( invdirx >= 0 ) {\n\n\t\ttmin = ( minx - ox ) * invdirx;\n\t\ttmax = ( maxx - ox ) * invdirx;\n\n\t} else {\n\n\t\ttmin = ( maxx - ox ) * invdirx;\n\t\ttmax = ( minx - ox ) * invdirx;\n\n\t}\n\n\tif ( invdiry >= 0 ) {\n\n\t\ttymin = ( miny - oy ) * invdiry;\n\t\ttymax = ( maxy - oy ) * invdiry;\n\n\t} else {\n\n\t\ttymin = ( maxy - oy ) * invdiry;\n\t\ttymax = ( miny - oy ) * invdiry;\n\n\t}\n\n\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return false;\n\n\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\tif ( invdirz >= 0 ) {\n\n\t\ttzmin = ( minz - oz ) * invdirz;\n\t\ttzmax = ( maxz - oz ) * invdirz;\n\n\t} else {\n\n\t\ttzmin = ( maxz - oz ) * invdirz;\n\t\ttzmax = ( minz - oz ) * invdirz;\n\n\t}\n\n\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return false;\n\n\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t//return point closest to the ray (positive side)\n\n\treturn tmin <= far && tmax >= near;\n\n}\n", "import { intersectTri } from '../../utils/ThreeRayIntersectUtilities.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\n\n/*************************************************************/\n/* This file is generated from \"iterationUtils.template.js\". */\n/*************************************************************/\n/* eslint-disable indent */\n\nfunction intersectTris_indirect( bvh, side, ray, offset, count, intersections, near, far ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tlet vi = _indirectBuffer ? _indirectBuffer[ i ] : i;\n\t\tintersectTri( geometry, side, ray, vi, intersections, near, far );\n\n\n\t}\n\n}\n\nfunction intersectClosestTri_indirect( bvh, side, ray, offset, count, near, far ) {\n\n\tconst { geometry, _indirectBuffer } = bvh;\n\tlet dist = Infinity;\n\tlet res = null;\n\tfor ( let i = offset, end = offset + count; i < end; i ++ ) {\n\n\t\tlet intersection;\n\t\tintersection = intersectTri( geometry, side, ray, _indirectBuffer ? _indirectBuffer[ i ] : i, null, near, far );\n\n\n\t\tif ( intersection && intersection.distance < dist ) {\n\n\t\t\tres = intersection;\n\t\t\tdist = intersection.distance;\n\n\t\t}\n\n\t}\n\n\treturn res;\n\n}\n\nfunction iterateOverTriangles_indirect(\n\toffset,\n\tcount,\n\tbvh,\n\tintersectsTriangleFunc,\n\tcontained,\n\tdepth,\n\ttriangle\n) {\n\n\tconst { geometry } = bvh;\n\tconst { index } = geometry;\n\tconst pos = geometry.attributes.position;\n\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\tlet tri;\n\t\ttri = bvh.resolveTriangleIndex( i );\n\n\t\tsetTriangle( triangle, tri * 3, index, pos );\n\t\ttriangle.needsUpdate = true;\n\n\t\tif ( intersectsTriangleFunc( triangle, tri, contained, depth ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t}\n\n\treturn false;\n\n}\n\nexport { intersectClosestTri_indirect, intersectTris_indirect, iterateOverTriangles_indirect };\n", "import { intersectRay } from '../utils/intersectUtils.js';\nimport { IS_LEAF, OFFSET, COUNT, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { intersectTris } from '../utils/iterationUtils.generated.js';\nimport '../utils/iterationUtils_indirect.generated.js';\n\n/******************************************************/\n/* This file is generated from \"raycast.template.js\". */\n/******************************************************/\n\nfunction raycast( bvh, root, side, ray, intersects, near, far ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\t_raycast( 0, bvh, side, ray, intersects, near, far );\n\tBufferStack.clearBuffer();\n\n}\n\nfunction _raycast( nodeIndex32, bvh, side, ray, intersects, near, far ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tconst nodeIndex16 = nodeIndex32 * 2;\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\n\t\tintersectTris( bvh, side, ray, offset, count, intersects, near, far );\n\n\n\t} else {\n\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\n\t\tif ( intersectRay( leftIndex, float32Array, ray, near, far ) ) {\n\n\t\t\t_raycast( leftIndex, bvh, side, ray, intersects, near, far );\n\n\t\t}\n\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tif ( intersectRay( rightIndex, float32Array, ray, near, far ) ) {\n\n\t\t\t_raycast( rightIndex, bvh, side, ray, intersects, near, far );\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycast };\n", "import { IS_LEAF, OFFSET, COUNT, SPLIT_AXIS, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { intersectRay } from '../utils/intersectUtils.js';\nimport { intersectClosestTri } from '../utils/iterationUtils.generated.js';\nimport '../utils/iterationUtils_indirect.generated.js';\n\n/***********************************************************/\n/* This file is generated from \"raycastFirst.template.js\". */\n/***********************************************************/\n\nconst _xyzFields = [ 'x', 'y', 'z' ];\n\nfunction raycastFirst( bvh, root, side, ray, near, far ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _raycastFirst( 0, bvh, side, ray, near, far );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _raycastFirst( nodeIndex32, bvh, side, ray, near, far ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\n\t\t// eslint-disable-next-line no-unreachable\n\t\treturn intersectClosestTri( bvh, side, ray, offset, count, near, far );\n\n\n\t} else {\n\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\t\tconst xyzAxis = _xyzFields[ splitAxis ];\n\t\tconst rayDir = ray.direction[ xyzAxis ];\n\t\tconst leftToRight = rayDir >= 0;\n\n\t\t// c1 is the child to check first\n\t\tlet c1, c2;\n\t\tif ( leftToRight ) {\n\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\n\n\t\t} else {\n\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\n\n\t\t}\n\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, near, far );\n\t\tconst c1Result = c1Intersection ? _raycastFirst( c1, bvh, side, ray, near, far ) : null;\n\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\n\t\tif ( c1Result ) {\n\n\t\t\t// check if the point is within the second bounds\n\t\t\t// \"point\" is in the local frame of the bvh\n\t\t\tconst point = c1Result.point[ xyzAxis ];\n\t\t\tconst isOutside = leftToRight ?\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\n\n\t\t\tif ( isOutside ) {\n\n\t\t\t\treturn c1Result;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// either there was no intersection in the first node, or there could still be a closer\n\t\t// intersection in the second, so check the second node and then take the better of the two\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, near, far );\n\t\tconst c2Result = c2Intersection ? _raycastFirst( c2, bvh, side, ray, near, far ) : null;\n\n\t\tif ( c1Result && c2Result ) {\n\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n\n\t\t} else {\n\n\t\t\treturn c1Result || c2Result || null;\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycastFirst };\n", "import { Box3, Matrix4 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../../math/ExtendedTriangle.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { IS_LEAF, OFFSET, COUNT, BOUNDING_DATA_INDEX } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\n\n/*****************************************************************/\n/* This file is generated from \"intersectsGeometry.template.js\". */\n/*****************************************************************/\n/* eslint-disable indent */\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nconst triangle = /* @__PURE__ */ new ExtendedTriangle();\nconst triangle2 = /* @__PURE__ */ new ExtendedTriangle();\nconst invertedMat = /* @__PURE__ */ new Matrix4();\n\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\n\nfunction intersectsGeometry( bvh, root, otherGeometry, geometryToBvh ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _intersectsGeometry( 0, bvh, otherGeometry, geometryToBvh );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _intersectsGeometry( nodeIndex32, bvh, otherGeometry, geometryToBvh, cachedObb = null ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tif ( cachedObb === null ) {\n\n\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\totherGeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\tcachedObb = obb;\n\n\t}\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst thisGeometry = bvh.geometry;\n\t\tconst thisIndex = thisGeometry.index;\n\t\tconst thisPos = thisGeometry.attributes.position;\n\n\t\tconst index = otherGeometry.index;\n\t\tconst pos = otherGeometry.attributes.position;\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\n\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\n\t\t// here.\n\t\tinvertedMat.copy( geometryToBvh ).invert();\n\n\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t// if there's a bounds tree\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\n\t\t\tobb2.matrix.copy( invertedMat );\n\t\t\tobb2.needsUpdate = true;\n\n\t\t\t// TODO: use a triangle iteration function here\n\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\n\n\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\n\n\t\t\t\tintersectsTriangle: tri => {\n\n\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.needsUpdate = true;\n\n\n\t\t\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\t\tsetTriangle( triangle2, i, thisIndex, thisPos );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn res;\n\n\t\t} else {\n\n\t\t\t// if we're just dealing with raw geometry\n\n\t\t\tfor ( let i = offset * 3, l = ( count + offset ) * 3; i < l; i += 3 ) {\n\n\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\tsetTriangle( triangle, i, thisIndex, thisPos );\n\n\n\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\n\t\t}\n\n\t} else {\n\n\t\tconst left = nodeIndex32 + 8;\n\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\n\t\tconst leftIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( left, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( leftIntersection ) return true;\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\n\t\tconst rightIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( right, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( rightIntersection ) return true;\n\n\t\treturn false;\n\n\t}\n\n}\n\nexport { intersectsGeometry };\n", "import { Matrix4, Vector3 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { getTriCount } from '../build/geometryUtils.js';\nimport { ExtendedTrianglePool } from '../../utils/ExtendedTrianglePool.js';\n\n/*********************************************************************/\n/* This file is generated from \"closestPointToGeometry.template.js\". */\n/*********************************************************************/\n\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\n\nfunction closestPointToGeometry(\n\tbvh,\n\totherGeometry,\n\tgeometryToBvh,\n\ttarget1 = { },\n\ttarget2 = { },\n\tminThreshold = 0,\n\tmaxThreshold = Infinity,\n) {\n\n\tif ( ! otherGeometry.boundingBox ) {\n\n\t\totherGeometry.computeBoundingBox();\n\n\t}\n\n\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\tobb.needsUpdate = true;\n\n\tconst geometry = bvh.geometry;\n\tconst pos = geometry.attributes.position;\n\tconst index = geometry.index;\n\tconst otherPos = otherGeometry.attributes.position;\n\tconst otherIndex = otherGeometry.index;\n\tconst triangle = ExtendedTrianglePool.getPrimitive();\n\tconst triangle2 = ExtendedTrianglePool.getPrimitive();\n\n\tlet tempTarget1 = temp1;\n\tlet tempTargetDest1 = temp2;\n\tlet tempTarget2 = null;\n\tlet tempTargetDest2 = null;\n\n\tif ( target2 ) {\n\n\t\ttempTarget2 = temp3;\n\t\ttempTargetDest2 = temp4;\n\n\t}\n\n\tlet closestDistance = Infinity;\n\tlet closestDistanceTriIndex = null;\n\tlet closestDistanceOtherTriIndex = null;\n\ttempMatrix.copy( geometryToBvh ).invert();\n\tobb2.matrix.copy( tempMatrix );\n\tbvh.shapecast(\n\t\t{\n\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\treturn obb.distanceToBox( box );\n\n\t\t\t},\n\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\n\n\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\n\t\t\t\t\t// save the bounds to use during triangle checks.\n\t\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t\tobb2.min.copy( box.min );\n\t\t\t\t\t\tobb2.max.copy( box.max );\n\t\t\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\tintersectsRange: ( offset, count ) => {\n\n\t\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\n\t\t\t\t\t// the closest bounds in the other geometry to check.\n\t\t\t\t\tconst otherBvh = otherGeometry.boundsTree;\n\t\t\t\t\treturn otherBvh.shapecast( {\n\t\t\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\n\n\t\t\t\t\t\t\tfor ( let i2 = otherOffset, l2 = otherOffset + otherCount; i2 < l2; i2 ++ ) {\n\n\n\t\t\t\t\t\t\t\tsetTriangle( triangle2, 3 * i2, otherIndex, otherPos );\n\n\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle, 3 * i, index, pos );\n\n\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\n\t\t\t\t\tconst triCount = getTriCount( otherGeometry );\n\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\tsetTriangle( triangle2, 3 * i2, otherIndex, otherPos );\n\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\n\t\t\t\t\t\t\tsetTriangle( triangle, 3 * i, index, pos );\n\n\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t}\n\n\t);\n\n\tExtendedTrianglePool.releasePrimitive( triangle );\n\tExtendedTrianglePool.releasePrimitive( triangle2 );\n\n\tif ( closestDistance === Infinity ) {\n\n\t\treturn null;\n\n\t}\n\n\tif ( ! target1.point ) {\n\n\t\ttarget1.point = tempTargetDest1.clone();\n\n\t} else {\n\n\t\ttarget1.point.copy( tempTargetDest1 );\n\n\t}\n\n\ttarget1.distance = closestDistance,\n\ttarget1.faceIndex = closestDistanceTriIndex;\n\n\tif ( target2 ) {\n\n\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\n\t\telse target2.point.copy( tempTargetDest2 );\n\t\ttarget2.point.applyMatrix4( tempMatrix );\n\t\ttempTargetDest1.applyMatrix4( tempMatrix );\n\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\n\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\n\n\t}\n\n\treturn target1;\n\n}\n\nexport { closestPointToGeometry };\n", "import { IS_LEAFNODE_FLAG } from '../Constants.js';\n\n/****************************************************/\n/* This file is generated from \"refit.template.js\". */\n/****************************************************/\n\nfunction refit_indirect( bvh, nodeIndices = null ) {\n\n\tif ( nodeIndices && Array.isArray( nodeIndices ) ) {\n\n\t\tnodeIndices = new Set( nodeIndices );\n\n\t}\n\n\tconst geometry = bvh.geometry;\n\tconst indexArr = geometry.index ? geometry.index.array : null;\n\tconst posAttr = geometry.attributes.position;\n\n\tlet buffer, uint32Array, uint16Array, float32Array;\n\tlet byteOffset = 0;\n\tconst roots = bvh._roots;\n\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\tbuffer = roots[ i ];\n\t\tuint32Array = new Uint32Array( buffer );\n\t\tuint16Array = new Uint16Array( buffer );\n\t\tfloat32Array = new Float32Array( buffer );\n\n\t\t_traverse( 0, byteOffset );\n\t\tbyteOffset += buffer.byteLength;\n\n\t}\n\n\tfunction _traverse( node32Index, byteOffset, force = false ) {\n\n\t\tconst node16Index = node32Index * 2;\n\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\tif ( isLeaf ) {\n\n\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\n\t\t\tlet minx = Infinity;\n\t\t\tlet miny = Infinity;\n\t\t\tlet minz = Infinity;\n\t\t\tlet maxx = - Infinity;\n\t\t\tlet maxy = - Infinity;\n\t\t\tlet maxz = - Infinity;\n\n\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\tconst t = 3 * bvh.resolveTriangleIndex( i );\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tlet index = t + j;\n\t\t\t\t\tindex = indexArr ? indexArr[ index ] : index;\n\n\t\t\t\t\tconst x = posAttr.getX( index );\n\t\t\t\t\tconst y = posAttr.getY( index );\n\t\t\t\t\tconst z = posAttr.getZ( index );\n\n\t\t\t\t\tif ( x < minx ) minx = x;\n\t\t\t\t\tif ( x > maxx ) maxx = x;\n\n\t\t\t\t\tif ( y < miny ) miny = y;\n\t\t\t\t\tif ( y > maxy ) maxy = y;\n\n\t\t\t\t\tif ( z < minz ) minz = z;\n\t\t\t\t\tif ( z > maxz ) maxz = z;\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tif (\n\t\t\t\tfloat32Array[ node32Index + 0 ] !== minx ||\n\t\t\t\tfloat32Array[ node32Index + 1 ] !== miny ||\n\t\t\t\tfloat32Array[ node32Index + 2 ] !== minz ||\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] !== maxx ||\n\t\t\t\tfloat32Array[ node32Index + 4 ] !== maxy ||\n\t\t\t\tfloat32Array[ node32Index + 5 ] !== maxz\n\t\t\t) {\n\n\t\t\t\tfloat32Array[ node32Index + 0 ] = minx;\n\t\t\t\tfloat32Array[ node32Index + 1 ] = miny;\n\t\t\t\tfloat32Array[ node32Index + 2 ] = minz;\n\n\t\t\t\tfloat32Array[ node32Index + 3 ] = maxx;\n\t\t\t\tfloat32Array[ node32Index + 4 ] = maxy;\n\t\t\t\tfloat32Array[ node32Index + 5 ] = maxz;\n\n\t\t\t\treturn true;\n\n\t\t\t} else {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst left = node32Index + 8;\n\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\n\t\t\t// the identifying node indices provided by the shapecast function include offsets of all\n\t\t\t// root buffers to guarantee they're unique between roots so offset left and right indices here.\n\t\t\tconst offsetLeft = left + byteOffset;\n\t\t\tconst offsetRight = right + byteOffset;\n\t\t\tlet forceChildren = force;\n\t\t\tlet includesLeft = false;\n\t\t\tlet includesRight = false;\n\n\t\t\tif ( nodeIndices ) {\n\n\t\t\t\t// if we see that neither the left or right child are included in the set that need to be updated\n\t\t\t\t// then we assume that all children need to be updated.\n\t\t\t\tif ( ! forceChildren ) {\n\n\t\t\t\t\tincludesLeft = nodeIndices.has( offsetLeft );\n\t\t\t\t\tincludesRight = nodeIndices.has( offsetRight );\n\t\t\t\t\tforceChildren = ! includesLeft && ! includesRight;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tincludesLeft = true;\n\t\t\t\tincludesRight = true;\n\n\t\t\t}\n\n\t\t\tconst traverseLeft = forceChildren || includesLeft;\n\t\t\tconst traverseRight = forceChildren || includesRight;\n\n\t\t\tlet leftChange = false;\n\t\t\tif ( traverseLeft ) {\n\n\t\t\t\tleftChange = _traverse( left, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tlet rightChange = false;\n\t\t\tif ( traverseRight ) {\n\n\t\t\t\trightChange = _traverse( right, byteOffset, forceChildren );\n\n\t\t\t}\n\n\t\t\tconst didChange = leftChange || rightChange;\n\t\t\tif ( didChange ) {\n\n\t\t\t\tfor ( let i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\tconst lefti = left + i;\n\t\t\t\t\tconst righti = right + i;\n\t\t\t\t\tconst minLeftValue = float32Array[ lefti ];\n\t\t\t\t\tconst maxLeftValue = float32Array[ lefti + 3 ];\n\t\t\t\t\tconst minRightValue = float32Array[ righti ];\n\t\t\t\t\tconst maxRightValue = float32Array[ righti + 3 ];\n\n\t\t\t\t\tfloat32Array[ node32Index + i ] = minLeftValue < minRightValue ? minLeftValue : minRightValue;\n\t\t\t\t\tfloat32Array[ node32Index + i + 3 ] = maxLeftValue > maxRightValue ? maxLeftValue : maxRightValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn didChange;\n\n\t\t}\n\n\t}\n\n}\n\nexport { refit_indirect };\n", "import { intersectRay } from '../utils/intersectUtils.js';\nimport { IS_LEAF, OFFSET, COUNT, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport '../utils/iterationUtils.generated.js';\nimport { intersectTris_indirect } from '../utils/iterationUtils_indirect.generated.js';\n\n/******************************************************/\n/* This file is generated from \"raycast.template.js\". */\n/******************************************************/\n\nfunction raycast_indirect( bvh, root, side, ray, intersects, near, far ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\t_raycast( 0, bvh, side, ray, intersects, near, far );\n\tBufferStack.clearBuffer();\n\n}\n\nfunction _raycast( nodeIndex32, bvh, side, ray, intersects, near, far ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tconst nodeIndex16 = nodeIndex32 * 2;\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\tintersectTris_indirect( bvh, side, ray, offset, count, intersects, near, far );\n\n\n\t} else {\n\n\t\tconst leftIndex = LEFT_NODE( nodeIndex32 );\n\t\tif ( intersectRay( leftIndex, float32Array, ray, near, far ) ) {\n\n\t\t\t_raycast( leftIndex, bvh, side, ray, intersects, near, far );\n\n\t\t}\n\n\t\tconst rightIndex = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\tif ( intersectRay( rightIndex, float32Array, ray, near, far ) ) {\n\n\t\t\t_raycast( rightIndex, bvh, side, ray, intersects, near, far );\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycast_indirect };\n", "import { IS_LEAF, OFFSET, COUNT, SPLIT_AXIS, LEFT_NODE, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { intersectRay } from '../utils/intersectUtils.js';\nimport '../utils/iterationUtils.generated.js';\nimport { intersectClosestTri_indirect } from '../utils/iterationUtils_indirect.generated.js';\n\n/***********************************************************/\n/* This file is generated from \"raycastFirst.template.js\". */\n/***********************************************************/\n\nconst _xyzFields = [ 'x', 'y', 'z' ];\n\nfunction raycastFirst_indirect( bvh, root, side, ray, near, far ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _raycastFirst( 0, bvh, side, ray, near, far );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _raycastFirst( nodeIndex32, bvh, side, ray, near, far ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\treturn intersectClosestTri_indirect( bvh, side, ray, offset, count, near, far );\n\n\n\t} else {\n\n\t\t// consider the position of the split plane with respect to the oncoming ray; whichever direction\n\t\t// the ray is coming from, look for an intersection among that side of the tree first\n\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\t\tconst xyzAxis = _xyzFields[ splitAxis ];\n\t\tconst rayDir = ray.direction[ xyzAxis ];\n\t\tconst leftToRight = rayDir >= 0;\n\n\t\t// c1 is the child to check first\n\t\tlet c1, c2;\n\t\tif ( leftToRight ) {\n\n\t\t\tc1 = LEFT_NODE( nodeIndex32 );\n\t\t\tc2 = RIGHT_NODE( nodeIndex32, uint32Array );\n\n\t\t} else {\n\n\t\t\tc1 = RIGHT_NODE( nodeIndex32, uint32Array );\n\t\t\tc2 = LEFT_NODE( nodeIndex32 );\n\n\t\t}\n\n\t\tconst c1Intersection = intersectRay( c1, float32Array, ray, near, far );\n\t\tconst c1Result = c1Intersection ? _raycastFirst( c1, bvh, side, ray, near, far ) : null;\n\n\t\t// if we got an intersection in the first node and it's closer than the second node's bounding\n\t\t// box, we don't need to consider the second node because it couldn't possibly be a better result\n\t\tif ( c1Result ) {\n\n\t\t\t// check if the point is within the second bounds\n\t\t\t// \"point\" is in the local frame of the bvh\n\t\t\tconst point = c1Result.point[ xyzAxis ];\n\t\t\tconst isOutside = leftToRight ?\n\t\t\t\tpoint <= float32Array[ c2 + splitAxis ] : // min bounding data\n\t\t\t\tpoint >= float32Array[ c2 + splitAxis + 3 ]; // max bounding data\n\n\t\t\tif ( isOutside ) {\n\n\t\t\t\treturn c1Result;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// either there was no intersection in the first node, or there could still be a closer\n\t\t// intersection in the second, so check the second node and then take the better of the two\n\t\tconst c2Intersection = intersectRay( c2, float32Array, ray, near, far );\n\t\tconst c2Result = c2Intersection ? _raycastFirst( c2, bvh, side, ray, near, far ) : null;\n\n\t\tif ( c1Result && c2Result ) {\n\n\t\t\treturn c1Result.distance <= c2Result.distance ? c1Result : c2Result;\n\n\t\t} else {\n\n\t\t\treturn c1Result || c2Result || null;\n\n\t\t}\n\n\t}\n\n}\n\nexport { raycastFirst_indirect };\n", "import { Box3, Matrix4 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { ExtendedTriangle } from '../../math/ExtendedTriangle.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { IS_LEAF, OFFSET, COUNT, BOUNDING_DATA_INDEX } from '../utils/nodeBufferUtils.js';\nimport { BufferStack } from '../utils/BufferStack.js';\n\n/*****************************************************************/\n/* This file is generated from \"intersectsGeometry.template.js\". */\n/*****************************************************************/\n/* eslint-disable indent */\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nconst triangle = /* @__PURE__ */ new ExtendedTriangle();\nconst triangle2 = /* @__PURE__ */ new ExtendedTriangle();\nconst invertedMat = /* @__PURE__ */ new Matrix4();\n\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\n\nfunction intersectsGeometry_indirect( bvh, root, otherGeometry, geometryToBvh ) {\n\n\tBufferStack.setBuffer( bvh._roots[ root ] );\n\tconst result = _intersectsGeometry( 0, bvh, otherGeometry, geometryToBvh );\n\tBufferStack.clearBuffer();\n\n\treturn result;\n\n}\n\nfunction _intersectsGeometry( nodeIndex32, bvh, otherGeometry, geometryToBvh, cachedObb = null ) {\n\n\tconst { float32Array, uint16Array, uint32Array } = BufferStack;\n\tlet nodeIndex16 = nodeIndex32 * 2;\n\n\tif ( cachedObb === null ) {\n\n\t\tif ( ! otherGeometry.boundingBox ) {\n\n\t\t\totherGeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\t\tcachedObb = obb;\n\n\t}\n\n\tconst isLeaf = IS_LEAF( nodeIndex16, uint16Array );\n\tif ( isLeaf ) {\n\n\t\tconst thisGeometry = bvh.geometry;\n\t\tconst thisIndex = thisGeometry.index;\n\t\tconst thisPos = thisGeometry.attributes.position;\n\n\t\tconst index = otherGeometry.index;\n\t\tconst pos = otherGeometry.attributes.position;\n\n\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\n\t\t// get the inverse of the geometry matrix so we can transform our triangles into the\n\t\t// geometry space we're trying to test. We assume there are fewer triangles being checked\n\t\t// here.\n\t\tinvertedMat.copy( geometryToBvh ).invert();\n\n\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t// if there's a bounds tree\n\t\t\tarrayToBox( BOUNDING_DATA_INDEX( nodeIndex32 ), float32Array, obb2 );\n\t\t\tobb2.matrix.copy( invertedMat );\n\t\t\tobb2.needsUpdate = true;\n\n\t\t\t// TODO: use a triangle iteration function here\n\t\t\tconst res = otherGeometry.boundsTree.shapecast( {\n\n\t\t\t\tintersectsBounds: box => obb2.intersectsBox( box ),\n\n\t\t\t\tintersectsTriangle: tri => {\n\n\t\t\t\t\ttri.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\ttri.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\t\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\t\t\tsetTriangle( triangle2, 3 * bvh.resolveTriangleIndex( i ), thisIndex, thisPos );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\t\t\t\t\t\tif ( tri.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\treturn res;\n\n\t\t} else {\n\n\t\t\t// if we're just dealing with raw geometry\n\t\t\tfor ( let i = offset, l = count + offset; i < l; i ++ ) {\n\n\t\t\t\t// this triangle needs to be transformed into the current BVH coordinate frame\n\t\t\t\tconst ti = bvh.resolveTriangleIndex( i );\n\t\t\t\tsetTriangle( triangle, 3 * ti, thisIndex, thisPos );\n\n\n\t\t\t\ttriangle.a.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.b.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.c.applyMatrix4( invertedMat );\n\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\tfor ( let i2 = 0, l2 = index.count; i2 < l2; i2 += 3 ) {\n\n\t\t\t\t\tsetTriangle( triangle2, i2, index, pos );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tif ( triangle.intersectsTriangle( triangle2 ) ) {\n\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t} else {\n\n\t\tconst left = nodeIndex32 + 8;\n\t\tconst right = uint32Array[ nodeIndex32 + 6 ];\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( left ), float32Array, boundingBox );\n\t\tconst leftIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( left, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( leftIntersection ) return true;\n\n\t\tarrayToBox( BOUNDING_DATA_INDEX( right ), float32Array, boundingBox );\n\t\tconst rightIntersection =\n\t\t\tcachedObb.intersectsBox( boundingBox ) &&\n\t\t\t_intersectsGeometry( right, bvh, otherGeometry, geometryToBvh, cachedObb );\n\n\t\tif ( rightIntersection ) return true;\n\n\t\treturn false;\n\n\t}\n\n}\n\nexport { intersectsGeometry_indirect };\n", "import { Matrix4, Vector3 } from 'three';\nimport { OrientedBox } from '../../math/OrientedBox.js';\nimport { setTriangle } from '../../utils/TriangleUtilities.js';\nimport { getTriCount } from '../build/geometryUtils.js';\nimport { ExtendedTrianglePool } from '../../utils/ExtendedTrianglePool.js';\n\n/*********************************************************************/\n/* This file is generated from \"closestPointToGeometry.template.js\". */\n/*********************************************************************/\n\nconst tempMatrix = /* @__PURE__ */ new Matrix4();\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst obb2 = /* @__PURE__ */ new OrientedBox();\nconst temp1 = /* @__PURE__ */ new Vector3();\nconst temp2 = /* @__PURE__ */ new Vector3();\nconst temp3 = /* @__PURE__ */ new Vector3();\nconst temp4 = /* @__PURE__ */ new Vector3();\n\nfunction closestPointToGeometry_indirect(\n\tbvh,\n\totherGeometry,\n\tgeometryToBvh,\n\ttarget1 = { },\n\ttarget2 = { },\n\tminThreshold = 0,\n\tmaxThreshold = Infinity,\n) {\n\n\tif ( ! otherGeometry.boundingBox ) {\n\n\t\totherGeometry.computeBoundingBox();\n\n\t}\n\n\tobb.set( otherGeometry.boundingBox.min, otherGeometry.boundingBox.max, geometryToBvh );\n\tobb.needsUpdate = true;\n\n\tconst geometry = bvh.geometry;\n\tconst pos = geometry.attributes.position;\n\tconst index = geometry.index;\n\tconst otherPos = otherGeometry.attributes.position;\n\tconst otherIndex = otherGeometry.index;\n\tconst triangle = ExtendedTrianglePool.getPrimitive();\n\tconst triangle2 = ExtendedTrianglePool.getPrimitive();\n\n\tlet tempTarget1 = temp1;\n\tlet tempTargetDest1 = temp2;\n\tlet tempTarget2 = null;\n\tlet tempTargetDest2 = null;\n\n\tif ( target2 ) {\n\n\t\ttempTarget2 = temp3;\n\t\ttempTargetDest2 = temp4;\n\n\t}\n\n\tlet closestDistance = Infinity;\n\tlet closestDistanceTriIndex = null;\n\tlet closestDistanceOtherTriIndex = null;\n\ttempMatrix.copy( geometryToBvh ).invert();\n\tobb2.matrix.copy( tempMatrix );\n\tbvh.shapecast(\n\t\t{\n\n\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\treturn obb.distanceToBox( box );\n\n\t\t\t},\n\n\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\tif ( score < closestDistance && score < maxThreshold ) {\n\n\t\t\t\t\t// if we know the triangles of this bounds will be intersected next then\n\t\t\t\t\t// save the bounds to use during triangle checks.\n\t\t\t\t\tif ( isLeaf ) {\n\n\t\t\t\t\t\tobb2.min.copy( box.min );\n\t\t\t\t\t\tobb2.max.copy( box.max );\n\t\t\t\t\t\tobb2.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t},\n\n\t\t\tintersectsRange: ( offset, count ) => {\n\n\t\t\t\tif ( otherGeometry.boundsTree ) {\n\n\t\t\t\t\t// if the other geometry has a bvh then use the accelerated path where we use shapecast to find\n\t\t\t\t\t// the closest bounds in the other geometry to check.\n\t\t\t\t\tconst otherBvh = otherGeometry.boundsTree;\n\t\t\t\t\treturn otherBvh.shapecast( {\n\t\t\t\t\t\tboundsTraverseOrder: box => {\n\n\t\t\t\t\t\t\treturn obb2.distanceToBox( box );\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsBounds: ( box, isLeaf, score ) => {\n\n\t\t\t\t\t\t\treturn score < closestDistance && score < maxThreshold;\n\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\tintersectsRange: ( otherOffset, otherCount ) => {\n\n\t\t\t\t\t\t\tfor ( let i2 = otherOffset, l2 = otherOffset + otherCount; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\t\t\tconst ti2 = otherBvh.resolveTriangleIndex( i2 );\n\t\t\t\t\t\t\t\tsetTriangle( triangle2, 3 * ti2, otherIndex, otherPos );\n\n\t\t\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\t\tconst ti = bvh.resolveTriangleIndex( i );\n\t\t\t\t\t\t\t\t\tsetTriangle( triangle, 3 * ti, index, pos );\n\n\t\t\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t},\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// If no bounds tree then we'll just check every triangle.\n\t\t\t\t\tconst triCount = getTriCount( otherGeometry );\n\t\t\t\t\tfor ( let i2 = 0, l2 = triCount; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\t\tsetTriangle( triangle2, 3 * i2, otherIndex, otherPos );\n\t\t\t\t\t\ttriangle2.a.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.b.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.c.applyMatrix4( geometryToBvh );\n\t\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tconst ti = bvh.resolveTriangleIndex( i );\n\t\t\t\t\t\t\tsetTriangle( triangle, 3 * ti, index, pos );\n\n\t\t\t\t\t\t\ttriangle.needsUpdate = true;\n\n\t\t\t\t\t\t\tconst dist = triangle.distanceToTriangle( triangle2, tempTarget1, tempTarget2 );\n\t\t\t\t\t\t\tif ( dist < closestDistance ) {\n\n\t\t\t\t\t\t\t\ttempTargetDest1.copy( tempTarget1 );\n\n\t\t\t\t\t\t\t\tif ( tempTargetDest2 ) {\n\n\t\t\t\t\t\t\t\t\ttempTargetDest2.copy( tempTarget2 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tclosestDistance = dist;\n\t\t\t\t\t\t\t\tclosestDistanceTriIndex = i;\n\t\t\t\t\t\t\t\tclosestDistanceOtherTriIndex = i2;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// stop traversal if we find a point that's under the given threshold\n\t\t\t\t\t\t\tif ( dist < minThreshold ) {\n\n\t\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t}\n\n\t);\n\n\tExtendedTrianglePool.releasePrimitive( triangle );\n\tExtendedTrianglePool.releasePrimitive( triangle2 );\n\n\tif ( closestDistance === Infinity ) {\n\n\t\treturn null;\n\n\t}\n\n\tif ( ! target1.point ) {\n\n\t\ttarget1.point = tempTargetDest1.clone();\n\n\t} else {\n\n\t\ttarget1.point.copy( tempTargetDest1 );\n\n\t}\n\n\ttarget1.distance = closestDistance,\n\ttarget1.faceIndex = closestDistanceTriIndex;\n\n\tif ( target2 ) {\n\n\t\tif ( ! target2.point ) target2.point = tempTargetDest2.clone();\n\t\telse target2.point.copy( tempTargetDest2 );\n\t\ttarget2.point.applyMatrix4( tempMatrix );\n\t\ttempTargetDest1.applyMatrix4( tempMatrix );\n\t\ttarget2.distance = tempTargetDest1.sub( target2.point ).length();\n\t\ttarget2.faceIndex = closestDistanceOtherTriIndex;\n\n\t}\n\n\treturn target1;\n\n}\n\nexport { closestPointToGeometry_indirect };\n", "export function isSharedArrayBufferSupported() {\n\n\treturn typeof SharedArrayBuffer !== 'undefined';\n\n}\n\nexport function convertToBufferType( array, BufferConstructor ) {\n\n\tif ( array === null ) {\n\n\t\treturn array;\n\n\t} else if ( array.buffer ) {\n\n\t\tconst buffer = array.buffer;\n\t\tif ( buffer.constructor === BufferConstructor ) {\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tconst ArrayConstructor = array.constructor;\n\t\tconst result = new ArrayConstructor( new BufferConstructor( buffer.byteLength ) );\n\t\tresult.set( array );\n\t\treturn result;\n\n\t} else {\n\n\t\tif ( array.constructor === BufferConstructor ) {\n\n\t\t\treturn array;\n\n\t\t}\n\n\t\tconst result = new BufferConstructor( array.byteLength );\n\t\tnew Uint8Array( result ).set( new Uint8Array( array ) );\n\t\treturn result;\n\n\t}\n\n}\n", "import { Box3, Matrix4 } from 'three';\nimport { BufferStack } from '../utils/BufferStack.js';\nimport { BOUNDING_DATA_INDEX, COUNT, IS_LEAF, LEFT_NODE, OFFSET, RIGHT_NODE } from '../utils/nodeBufferUtils.js';\nimport { arrayToBox } from '../../utils/ArrayBoxUtilities.js';\nimport { PrimitivePool } from '../../utils/PrimitivePool.js';\n\nconst _bufferStack1 = new BufferStack.constructor();\nconst _bufferStack2 = new BufferStack.constructor();\nconst _boxPool = new PrimitivePool( () => new Box3() );\nconst _leftBox1 = new Box3();\nconst _rightBox1 = new Box3();\n\nconst _leftBox2 = new Box3();\nconst _rightBox2 = new Box3();\n\nlet _active = false;\n\nexport function bvhcast( bvh, otherBvh, matrixToLocal, intersectsRanges ) {\n\n\tif ( _active ) {\n\n\t\tthrow new Error( 'MeshBVH: Recursive calls to bvhcast not supported.' );\n\n\t}\n\n\t_active = true;\n\n\tconst roots = bvh._roots;\n\tconst otherRoots = otherBvh._roots;\n\tlet result;\n\tlet offset1 = 0;\n\tlet offset2 = 0;\n\tconst invMat = new Matrix4().copy( matrixToLocal ).invert();\n\n\t// iterate over the first set of roots\n\tfor ( let i = 0, il = roots.length; i < il; i ++ ) {\n\n\t\t_bufferStack1.setBuffer( roots[ i ] );\n\t\toffset2 = 0;\n\n\t\t// prep the initial root box\n\t\tconst localBox = _boxPool.getPrimitive();\n\t\tarrayToBox( BOUNDING_DATA_INDEX( 0 ), _bufferStack1.float32Array, localBox );\n\t\tlocalBox.applyMatrix4( invMat );\n\n\t\t// iterate over the second set of roots\n\t\tfor ( let j = 0, jl = otherRoots.length; j < jl; j ++ ) {\n\n\t\t\t_bufferStack2.setBuffer( otherRoots[ j ] );\n\n\t\t\tresult = _traverse(\n\t\t\t\t0, 0, matrixToLocal, invMat, intersectsRanges,\n\t\t\t\toffset1, offset2, 0, 0,\n\t\t\t\tlocalBox,\n\t\t\t);\n\n\t\t\t_bufferStack2.clearBuffer();\n\t\t\toffset2 += otherRoots[ j ].length;\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// release stack info\n\t\t_boxPool.releasePrimitive( localBox );\n\t\t_bufferStack1.clearBuffer();\n\t\toffset1 += roots[ i ].length;\n\n\t\tif ( result ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t_active = false;\n\treturn result;\n\n}\n\nfunction _traverse(\n\tnode1Index32,\n\tnode2Index32,\n\tmatrix2to1,\n\tmatrix1to2,\n\tintersectsRangesFunc,\n\n\t// offsets for ids\n\tnode1IndexByteOffset = 0,\n\tnode2IndexByteOffset = 0,\n\n\t// tree depth\n\tdepth1 = 0,\n\tdepth2 = 0,\n\n\tcurrBox = null,\n\treversed = false,\n\n) {\n\n\t// get the buffer stacks associated with the current indices\n\tlet bufferStack1, bufferStack2;\n\tif ( reversed ) {\n\n\t\tbufferStack1 = _bufferStack2;\n\t\tbufferStack2 = _bufferStack1;\n\n\t} else {\n\n\t\tbufferStack1 = _bufferStack1;\n\t\tbufferStack2 = _bufferStack2;\n\n\t}\n\n\t// get the local instances of the typed buffers\n\tconst\n\t\tfloat32Array1 = bufferStack1.float32Array,\n\t\tuint32Array1 = bufferStack1.uint32Array,\n\t\tuint16Array1 = bufferStack1.uint16Array,\n\t\tfloat32Array2 = bufferStack2.float32Array,\n\t\tuint32Array2 = bufferStack2.uint32Array,\n\t\tuint16Array2 = bufferStack2.uint16Array;\n\n\tconst node1Index16 = node1Index32 * 2;\n\tconst node2Index16 = node2Index32 * 2;\n\tconst isLeaf1 = IS_LEAF( node1Index16, uint16Array1 );\n\tconst isLeaf2 = IS_LEAF( node2Index16, uint16Array2 );\n\tlet result = false;\n\tif ( isLeaf2 && isLeaf1 ) {\n\n\t\t// if both bounds are leaf nodes then fire the callback if the boxes intersect\n\t\tif ( reversed ) {\n\n\t\t\tresult = intersectsRangesFunc(\n\t\t\t\tOFFSET( node2Index32, uint32Array2 ), COUNT( node2Index32 * 2, uint16Array2 ),\n\t\t\t\tOFFSET( node1Index32, uint32Array1 ), COUNT( node1Index32 * 2, uint16Array1 ),\n\t\t\t\tdepth2, node2IndexByteOffset + node2Index32,\n\t\t\t\tdepth1, node1IndexByteOffset + node1Index32,\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tresult = intersectsRangesFunc(\n\t\t\t\tOFFSET( node1Index32, uint32Array1 ), COUNT( node1Index32 * 2, uint16Array1 ),\n\t\t\t\tOFFSET( node2Index32, uint32Array2 ), COUNT( node2Index32 * 2, uint16Array2 ),\n\t\t\t\tdepth1, node1IndexByteOffset + node1Index32,\n\t\t\t\tdepth2, node2IndexByteOffset + node2Index32,\n\t\t\t);\n\n\t\t}\n\n\t} else if ( isLeaf2 ) {\n\n\t\t// SWAP\n\t\t// If we've traversed to the leaf node on the other bvh then we need to swap over\n\t\t// to traverse down the first one\n\n\t\t// get the new box to use\n\t\tconst newBox = _boxPool.getPrimitive();\n\t\tarrayToBox( BOUNDING_DATA_INDEX( node2Index32 ), float32Array2, newBox );\n\t\tnewBox.applyMatrix4( matrix2to1 );\n\n\t\t// get the child bounds to check before traversal\n\t\tconst cl1 = LEFT_NODE( node1Index32 );\n\t\tconst cr1 = RIGHT_NODE( node1Index32, uint32Array1 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cl1 ), float32Array1, _leftBox1 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cr1 ), float32Array1, _rightBox1 );\n\n\t\t// precompute the intersections otherwise the global boxes will be modified during traversal\n\t\tconst intersectCl1 = newBox.intersectsBox( _leftBox1 );\n\t\tconst intersectCr1 = newBox.intersectsBox( _rightBox1 );\n\t\tresult = (\n\t\t\tintersectCl1 && _traverse(\n\t\t\t\tnode2Index32, cl1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\tnewBox, ! reversed,\n\t\t\t)\n\t\t) || (\n\t\t\tintersectCr1 && _traverse(\n\t\t\t\tnode2Index32, cr1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\tnewBox, ! reversed,\n\t\t\t)\n\t\t);\n\n\t\t_boxPool.releasePrimitive( newBox );\n\n\t} else {\n\n\t\t// if neither are leaves then we should swap if one of the children does not\n\t\t// intersect with the current bounds\n\n\t\t// get the child bounds to check\n\t\tconst cl2 = LEFT_NODE( node2Index32 );\n\t\tconst cr2 = RIGHT_NODE( node2Index32, uint32Array2 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cl2 ), float32Array2, _leftBox2 );\n\t\tarrayToBox( BOUNDING_DATA_INDEX( cr2 ), float32Array2, _rightBox2 );\n\n\t\tconst leftIntersects = currBox.intersectsBox( _leftBox2 );\n\t\tconst rightIntersects = currBox.intersectsBox( _rightBox2 );\n\t\tif ( leftIntersects && rightIntersects ) {\n\n\t\t\t// continue to traverse both children if they both intersect\n\t\t\tresult = _traverse(\n\t\t\t\tnode1Index32, cl2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\tcurrBox, reversed,\n\t\t\t) || _traverse(\n\t\t\t\tnode1Index32, cr2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\tcurrBox, reversed,\n\t\t\t);\n\n\t\t} else if ( leftIntersects ) {\n\n\t\t\tif ( isLeaf1 ) {\n\n\t\t\t\t// if the current box is a leaf then just continue\n\t\t\t\tresult = _traverse(\n\t\t\t\t\tnode1Index32, cl2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\t\tcurrBox, reversed,\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\t// SWAP\n\t\t\t\t// if only one box intersects then we have to swap to the other bvh to continue\n\t\t\t\tconst newBox = _boxPool.getPrimitive();\n\t\t\t\tnewBox.copy( _leftBox2 ).applyMatrix4( matrix2to1 );\n\n\t\t\t\tconst cl1 = LEFT_NODE( node1Index32 );\n\t\t\t\tconst cr1 = RIGHT_NODE( node1Index32, uint32Array1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cl1 ), float32Array1, _leftBox1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cr1 ), float32Array1, _rightBox1 );\n\n\t\t\t\t// precompute the intersections otherwise the global boxes will be modified during traversal\n\t\t\t\tconst intersectCl1 = newBox.intersectsBox( _leftBox1 );\n\t\t\t\tconst intersectCr1 = newBox.intersectsBox( _rightBox1 );\n\t\t\t\tresult = (\n\t\t\t\t\tintersectCl1 && _traverse(\n\t\t\t\t\t\tcl2, cl1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t) || (\n\t\t\t\t\tintersectCr1 && _traverse(\n\t\t\t\t\t\tcl2, cr1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t_boxPool.releasePrimitive( newBox );\n\n\t\t\t}\n\n\t\t} else if ( rightIntersects ) {\n\n\t\t\tif ( isLeaf1 ) {\n\n\t\t\t\t// if the current box is a leaf then just continue\n\t\t\t\tresult = _traverse(\n\t\t\t\t\tnode1Index32, cr2, matrix2to1, matrix1to2, intersectsRangesFunc,\n\t\t\t\t\tnode1IndexByteOffset, node2IndexByteOffset, depth1, depth2 + 1,\n\t\t\t\t\tcurrBox, reversed,\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\t// SWAP\n\t\t\t\t// if only one box intersects then we have to swap to the other bvh to continue\n\t\t\t\tconst newBox = _boxPool.getPrimitive();\n\t\t\t\tnewBox.copy( _rightBox2 ).applyMatrix4( matrix2to1 );\n\n\t\t\t\tconst cl1 = LEFT_NODE( node1Index32 );\n\t\t\t\tconst cr1 = RIGHT_NODE( node1Index32, uint32Array1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cl1 ), float32Array1, _leftBox1 );\n\t\t\t\tarrayToBox( BOUNDING_DATA_INDEX( cr1 ), float32Array1, _rightBox1 );\n\n\t\t\t\t// precompute the intersections otherwise the global boxes will be modified during traversal\n\t\t\t\tconst intersectCl1 = newBox.intersectsBox( _leftBox1 );\n\t\t\t\tconst intersectCr1 = newBox.intersectsBox( _rightBox1 );\n\t\t\t\tresult = (\n\t\t\t\t\tintersectCl1 && _traverse(\n\t\t\t\t\t\tcr2, cl1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t) || (\n\t\t\t\t\tintersectCr1 && _traverse(\n\t\t\t\t\t\tcr2, cr1, matrix1to2, matrix2to1, intersectsRangesFunc,\n\t\t\t\t\t\tnode2IndexByteOffset, node1IndexByteOffset, depth2, depth1 + 1,\n\t\t\t\t\t\tnewBox, ! reversed,\n\t\t\t\t\t)\n\t\t\t\t);\n\n\t\t\t\t_boxPool.releasePrimitive( newBox );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n", "import { BufferAttribute, Box3, FrontSide } from 'three';\nimport { CENTER, BYTES_PER_NODE, IS_LEAFNODE_FLAG, SKIP_GENERATION } from './Constants.js';\nimport { buildPackedTree } from './build/buildTree.js';\nimport { OrientedBox } from '../math/OrientedBox.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { ExtendedTrianglePool } from '../utils/ExtendedTrianglePool.js';\nimport { shapecast } from './cast/shapecast.js';\nimport { closestPointToPoint } from './cast/closestPointToPoint.js';\n\nimport { iterateOverTriangles } from './utils/iterationUtils.generated.js';\nimport { refit } from './cast/refit.generated.js';\nimport { raycast } from './cast/raycast.generated.js';\nimport { raycastFirst } from './cast/raycastFirst.generated.js';\nimport { intersectsGeometry } from './cast/intersectsGeometry.generated.js';\nimport { closestPointToGeometry } from './cast/closestPointToGeometry.generated.js';\n\nimport { iterateOverTriangles_indirect } from './utils/iterationUtils_indirect.generated.js';\nimport { refit_indirect } from './cast/refit_indirect.generated.js';\nimport { raycast_indirect } from './cast/raycast_indirect.generated.js';\nimport { raycastFirst_indirect } from './cast/raycastFirst_indirect.generated.js';\nimport { intersectsGeometry_indirect } from './cast/intersectsGeometry_indirect.generated.js';\nimport { closestPointToGeometry_indirect } from './cast/closestPointToGeometry_indirect.generated.js';\nimport { isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\nimport { setTriangle } from '../utils/TriangleUtilities.js';\nimport { bvhcast } from './cast/bvhcast.js';\n\nconst obb = /* @__PURE__ */ new OrientedBox();\nconst tempBox = /* @__PURE__ */ new Box3();\nexport const DEFAULT_OPTIONS = {\n\tstrategy: CENTER,\n\tmaxDepth: 40,\n\tmaxLeafTris: 10,\n\tuseSharedArrayBuffer: false,\n\tsetBoundingBox: true,\n\tonProgress: null,\n\tindirect: false,\n\tverbose: true,\n\trange: null\n};\n\nexport class MeshBVH {\n\n\tstatic serialize( bvh, options = {} ) {\n\n\t\toptions = {\n\t\t\tcloneBuffers: true,\n\t\t\t...options,\n\t\t};\n\n\t\tconst geometry = bvh.geometry;\n\t\tconst rootData = bvh._roots;\n\t\tconst indirectBuffer = bvh._indirectBuffer;\n\t\tconst indexAttribute = geometry.getIndex();\n\t\tlet result;\n\t\tif ( options.cloneBuffers ) {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData.map( root => root.slice() ),\n\t\t\t\tindex: indexAttribute ? indexAttribute.array.slice() : null,\n\t\t\t\tindirectBuffer: indirectBuffer ? indirectBuffer.slice() : null,\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tresult = {\n\t\t\t\troots: rootData,\n\t\t\t\tindex: indexAttribute ? indexAttribute.array : null,\n\t\t\t\tindirectBuffer: indirectBuffer,\n\t\t\t};\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tstatic deserialize( data, geometry, options = {} ) {\n\n\t\toptions = {\n\t\t\tsetIndex: true,\n\t\t\tindirect: Boolean( data.indirectBuffer ),\n\t\t\t...options,\n\t\t};\n\n\t\tconst { index, roots, indirectBuffer } = data;\n\t\tconst bvh = new MeshBVH( geometry, { ...options, [ SKIP_GENERATION ]: true } );\n\t\tbvh._roots = roots;\n\t\tbvh._indirectBuffer = indirectBuffer || null;\n\n\t\tif ( options.setIndex ) {\n\n\t\t\tconst indexAttribute = geometry.getIndex();\n\t\t\tif ( indexAttribute === null ) {\n\n\t\t\t\tconst newIndex = new BufferAttribute( data.index, 1, false );\n\t\t\t\tgeometry.setIndex( newIndex );\n\n\t\t\t} else if ( indexAttribute.array !== index ) {\n\n\t\t\t\tindexAttribute.array.set( index );\n\t\t\t\tindexAttribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bvh;\n\n\t}\n\n\tget indirect() {\n\n\t\treturn ! ! this._indirectBuffer;\n\n\t}\n\n\tconstructor( geometry, options = {} ) {\n\n\t\tif ( ! geometry.isBufferGeometry ) {\n\n\t\t\tthrow new Error( 'MeshBVH: Only BufferGeometries are supported.' );\n\n\t\t} else if ( geometry.index && geometry.index.isInterleavedBufferAttribute ) {\n\n\t\t\tthrow new Error( 'MeshBVH: InterleavedBufferAttribute is not supported for the index attribute.' );\n\n\t\t}\n\n\t\t// default options\n\t\toptions = Object.assign( {\n\n\t\t\t...DEFAULT_OPTIONS,\n\n\t\t\t// undocumented options\n\n\t\t\t// Whether to skip generating the tree. Used for deserialization.\n\t\t\t[ SKIP_GENERATION ]: false,\n\n\t\t}, options );\n\n\t\tif ( options.useSharedArrayBuffer && ! isSharedArrayBufferSupported() ) {\n\n\t\t\tthrow new Error( 'MeshBVH: SharedArrayBuffer is not available.' );\n\n\t\t}\n\n\t\t// retain references to the geometry so we can use them it without having to\n\t\t// take a geometry reference in every function.\n\t\tthis.geometry = geometry;\n\t\tthis._roots = null;\n\t\tthis._indirectBuffer = null;\n\t\tif ( ! options[ SKIP_GENERATION ] ) {\n\n\t\t\tbuildPackedTree( this, options );\n\n\t\t\tif ( ! geometry.boundingBox && options.setBoundingBox ) {\n\n\t\t\t\tgeometry.boundingBox = this.getBoundingBox( new Box3() );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.resolveTriangleIndex = options.indirect ? i => this._indirectBuffer[ i ] : i => i;\n\n\t}\n\n\trefit( nodeIndices = null ) {\n\n\t\tconst refitFunc = this.indirect ? refit_indirect : refit;\n\t\treturn refitFunc( this, nodeIndices );\n\n\t}\n\n\ttraverse( callback, rootIndex = 0 ) {\n\n\t\tconst buffer = this._roots[ rootIndex ];\n\t\tconst uint32Array = new Uint32Array( buffer );\n\t\tconst uint16Array = new Uint16Array( buffer );\n\t\t_traverse( 0 );\n\n\t\tfunction _traverse( node32Index, depth = 0 ) {\n\n\t\t\tconst node16Index = node32Index * 2;\n\t\t\tconst isLeaf = uint16Array[ node16Index + 15 ] === IS_LEAFNODE_FLAG;\n\t\t\tif ( isLeaf ) {\n\n\t\t\t\tconst offset = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst count = uint16Array[ node16Index + 14 ];\n\t\t\t\tcallback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), offset, count );\n\n\t\t\t} else {\n\n\t\t\t\t// TODO: use node functions here\n\t\t\t\tconst left = node32Index + BYTES_PER_NODE / 4;\n\t\t\t\tconst right = uint32Array[ node32Index + 6 ];\n\t\t\t\tconst splitAxis = uint32Array[ node32Index + 7 ];\n\t\t\t\tconst stopTraversal = callback( depth, isLeaf, new Float32Array( buffer, node32Index * 4, 6 ), splitAxis );\n\n\t\t\t\tif ( ! stopTraversal ) {\n\n\t\t\t\t\t_traverse( left, depth + 1 );\n\t\t\t\t\t_traverse( right, depth + 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Core Cast Functions */\n\traycast( ray, materialOrSide = FrontSide, near = 0, far = Infinity ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst intersects = [];\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tconst raycastFunc = this.indirect ? raycast_indirect : raycast;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\t\t\tconst startCount = intersects.length;\n\n\t\t\traycastFunc( this, i, materialSide, ray, intersects, near, far );\n\n\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\tconst materialIndex = groups[ i ].materialIndex;\n\t\t\t\tfor ( let j = startCount, jl = intersects.length; j < jl; j ++ ) {\n\n\t\t\t\t\tintersects[ j ].face.materialIndex = materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn intersects;\n\n\t}\n\n\traycastFirst( ray, materialOrSide = FrontSide, near = 0, far = Infinity ) {\n\n\t\tconst roots = this._roots;\n\t\tconst geometry = this.geometry;\n\t\tconst isMaterial = materialOrSide.isMaterial;\n\t\tconst isArrayMaterial = Array.isArray( materialOrSide );\n\n\t\tlet closestResult = null;\n\n\t\tconst groups = geometry.groups;\n\t\tconst side = isMaterial ? materialOrSide.side : materialOrSide;\n\t\tconst raycastFirstFunc = this.indirect ? raycastFirst_indirect : raycastFirst;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst materialSide = isArrayMaterial ? materialOrSide[ groups[ i ].materialIndex ].side : side;\n\t\t\tconst result = raycastFirstFunc( this, i, materialSide, ray, near, far );\n\t\t\tif ( result != null && ( closestResult == null || result.distance < closestResult.distance ) ) {\n\n\t\t\t\tclosestResult = result;\n\t\t\t\tif ( isArrayMaterial ) {\n\n\t\t\t\t\tresult.face.materialIndex = groups[ i ].materialIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn closestResult;\n\n\t}\n\n\tintersectsGeometry( otherGeometry, geomToMesh ) {\n\n\t\tlet result = false;\n\t\tconst roots = this._roots;\n\t\tconst intersectsGeometryFunc = this.indirect ? intersectsGeometry_indirect : intersectsGeometry;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tresult = intersectsGeometryFunc( this, i, otherGeometry, geomToMesh );\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tshapecast( callbacks ) {\n\n\t\tconst triangle = ExtendedTrianglePool.getPrimitive();\n\t\tconst iterateFunc = this.indirect ? iterateOverTriangles_indirect : iterateOverTriangles;\n\t\tlet {\n\t\t\tboundsTraverseOrder,\n\t\t\tintersectsBounds,\n\t\t\tintersectsRange,\n\t\t\tintersectsTriangle,\n\t\t} = callbacks;\n\n\t\t// wrap the intersectsRange function\n\t\tif ( intersectsRange && intersectsTriangle ) {\n\n\t\t\tconst originalIntersectsRange = intersectsRange;\n\t\t\tintersectsRange = ( offset, count, contained, depth, nodeIndex ) => {\n\n\t\t\t\tif ( ! originalIntersectsRange( offset, count, contained, depth, nodeIndex ) ) {\n\n\t\t\t\t\treturn iterateFunc( offset, count, this, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\n\t\t\t};\n\n\t\t} else if ( ! intersectsRange ) {\n\n\t\t\tif ( intersectsTriangle ) {\n\n\t\t\t\tintersectsRange = ( offset, count, contained, depth ) => {\n\n\t\t\t\t\treturn iterateFunc( offset, count, this, intersectsTriangle, contained, depth, triangle );\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRange = ( offset, count, contained ) => {\n\n\t\t\t\t\treturn contained;\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// run shapecast\n\t\tlet result = false;\n\t\tlet byteOffset = 0;\n\t\tconst roots = this._roots;\n\t\tfor ( let i = 0, l = roots.length; i < l; i ++ ) {\n\n\t\t\tconst root = roots[ i ];\n\t\t\tresult = shapecast( this, i, intersectsBounds, intersectsRange, boundsTraverseOrder, byteOffset );\n\n\t\t\tif ( result ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tbyteOffset += root.byteLength;\n\n\t\t}\n\n\t\tExtendedTrianglePool.releasePrimitive( triangle );\n\n\t\treturn result;\n\n\t}\n\n\tbvhcast( otherBvh, matrixToLocal, callbacks ) {\n\n\t\tlet {\n\t\t\tintersectsRanges,\n\t\t\tintersectsTriangles,\n\t\t} = callbacks;\n\n\t\tconst triangle1 = ExtendedTrianglePool.getPrimitive();\n\t\tconst indexAttr1 = this.geometry.index;\n\t\tconst positionAttr1 = this.geometry.attributes.position;\n\t\tconst assignTriangle1 = this.indirect ?\n\t\t\ti1 => {\n\n\n\t\t\t\tconst ti = this.resolveTriangleIndex( i1 );\n\t\t\t\tsetTriangle( triangle1, ti * 3, indexAttr1, positionAttr1 );\n\n\t\t\t} :\n\t\t\ti1 => {\n\n\t\t\t\tsetTriangle( triangle1, i1 * 3, indexAttr1, positionAttr1 );\n\n\t\t\t};\n\n\t\tconst triangle2 = ExtendedTrianglePool.getPrimitive();\n\t\tconst indexAttr2 = otherBvh.geometry.index;\n\t\tconst positionAttr2 = otherBvh.geometry.attributes.position;\n\t\tconst assignTriangle2 = otherBvh.indirect ?\n\t\t\ti2 => {\n\n\t\t\t\tconst ti2 = otherBvh.resolveTriangleIndex( i2 );\n\t\t\t\tsetTriangle( triangle2, ti2 * 3, indexAttr2, positionAttr2 );\n\n\t\t\t} :\n\t\t\ti2 => {\n\n\t\t\t\tsetTriangle( triangle2, i2 * 3, indexAttr2, positionAttr2 );\n\n\t\t\t};\n\n\t\t// generate triangle callback if needed\n\t\tif ( intersectsTriangles ) {\n\n\t\t\tconst iterateOverDoubleTriangles = ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) => {\n\n\t\t\t\tfor ( let i2 = offset2, l2 = offset2 + count2; i2 < l2; i2 ++ ) {\n\n\t\t\t\t\tassignTriangle2( i2 );\n\n\t\t\t\t\ttriangle2.a.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.b.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.c.applyMatrix4( matrixToLocal );\n\t\t\t\t\ttriangle2.needsUpdate = true;\n\n\t\t\t\t\tfor ( let i1 = offset1, l1 = offset1 + count1; i1 < l1; i1 ++ ) {\n\n\t\t\t\t\t\tassignTriangle1( i1 );\n\n\t\t\t\t\t\ttriangle1.needsUpdate = true;\n\n\t\t\t\t\t\tif ( intersectsTriangles( triangle1, triangle2, i1, i2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t\tif ( intersectsRanges ) {\n\n\t\t\t\tconst originalIntersectsRanges = intersectsRanges;\n\t\t\t\tintersectsRanges = function ( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) {\n\n\t\t\t\t\tif ( ! originalIntersectsRanges( offset1, count1, offset2, count2, depth1, index1, depth2, index2 ) ) {\n\n\t\t\t\t\t\treturn iterateOverDoubleTriangles( offset1, count1, offset2, count2, depth1, index1, depth2, index2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tintersectsRanges = iterateOverDoubleTriangles;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bvhcast( this, otherBvh, matrixToLocal, intersectsRanges );\n\n\t}\n\n\n\t/* Derived Cast Functions */\n\tintersectsBox( box, boxToMesh ) {\n\n\t\tobb.set( box.min, box.max, boxToMesh );\n\t\tobb.needsUpdate = true;\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => obb.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => obb.intersectsTriangle( tri )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.shapecast(\n\t\t\t{\n\t\t\t\tintersectsBounds: box => sphere.intersectsBox( box ),\n\t\t\t\tintersectsTriangle: tri => tri.intersectsSphere( sphere )\n\t\t\t}\n\t\t);\n\n\t}\n\n\tclosestPointToGeometry( otherGeometry, geometryToBvh, target1 = { }, target2 = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\tconst closestPointToGeometryFunc = this.indirect ? closestPointToGeometry_indirect : closestPointToGeometry;\n\t\treturn closestPointToGeometryFunc(\n\t\t\tthis,\n\t\t\totherGeometry,\n\t\t\tgeometryToBvh,\n\t\t\ttarget1,\n\t\t\ttarget2,\n\t\t\tminThreshold,\n\t\t\tmaxThreshold,\n\t\t);\n\n\t}\n\n\tclosestPointToPoint( point, target = { }, minThreshold = 0, maxThreshold = Infinity ) {\n\n\t\treturn closestPointToPoint(\n\t\t\tthis,\n\t\t\tpoint,\n\t\t\ttarget,\n\t\t\tminThreshold,\n\t\t\tmaxThreshold,\n\t\t);\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\ttarget.makeEmpty();\n\n\t\tconst roots = this._roots;\n\t\troots.forEach( buffer => {\n\n\t\t\tarrayToBox( 0, new Float32Array( buffer ), tempBox );\n\t\t\ttarget.union( tempBox );\n\n\t\t} );\n\n\t\treturn target;\n\n\t}\n\n}\n", "import { LineBasicMaterial, BufferAttribute, Box3, Group, MeshBasicMaterial, Object3D, BufferGeometry, Mesh, Matrix4 } from 'three';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\n\nconst boundingBox = /* @__PURE__ */ new Box3();\nconst matrix = /* @__PURE__ */ new Matrix4();\n\nclass MeshBVHRootHelper extends Object3D {\n\n\tget isMesh() {\n\n\t\treturn ! this.displayEdges;\n\n\t}\n\n\tget isLineSegments() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tget isLine() {\n\n\t\treturn this.displayEdges;\n\n\t}\n\n\tgetVertexPosition( ...args ) {\n\n\t\t// implement this function so it works with Box3.setFromObject\n\t\treturn Mesh.prototype.getVertexPosition.call( this, ...args );\n\n\t}\n\n\tconstructor( bvh, material, depth = 10, group = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.material = material;\n\t\tthis.geometry = new BufferGeometry();\n\t\tthis.name = 'MeshBVHRootHelper';\n\t\tthis.depth = depth;\n\t\tthis.displayParents = false;\n\t\tthis.bvh = bvh;\n\t\tthis.displayEdges = true;\n\t\tthis._group = group;\n\n\t}\n\n\traycast() {}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst boundsTree = this.bvh;\n\t\tconst group = this._group;\n\t\tgeometry.dispose();\n\t\tthis.visible = false;\n\t\tif ( boundsTree ) {\n\n\t\t\t// count the number of bounds required\n\t\t\tconst targetDepth = this.depth - 1;\n\t\t\tconst displayParents = this.displayParents;\n\t\t\tlet boundsCount = 0;\n\t\t\tboundsTree.traverse( ( depth, isLeaf ) => {\n\n\t\t\t\tif ( depth >= targetDepth || isLeaf ) {\n\n\t\t\t\t\tboundsCount ++;\n\t\t\t\t\treturn true;\n\n\t\t\t\t} else if ( displayParents ) {\n\n\t\t\t\t\tboundsCount ++;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\t// fill in the position buffer with the bounds corners\n\t\t\tlet posIndex = 0;\n\t\t\tconst positionArray = new Float32Array( 8 * 3 * boundsCount );\n\t\t\tboundsTree.traverse( ( depth, isLeaf, boundingData ) => {\n\n\t\t\t\tconst terminate = depth >= targetDepth || isLeaf;\n\t\t\t\tif ( terminate || displayParents ) {\n\n\t\t\t\t\tarrayToBox( 0, boundingData, boundingBox );\n\n\t\t\t\t\tconst { min, max } = boundingBox;\n\t\t\t\t\tfor ( let x = - 1; x <= 1; x += 2 ) {\n\n\t\t\t\t\t\tconst xVal = x < 0 ? min.x : max.x;\n\t\t\t\t\t\tfor ( let y = - 1; y <= 1; y += 2 ) {\n\n\t\t\t\t\t\t\tconst yVal = y < 0 ? min.y : max.y;\n\t\t\t\t\t\t\tfor ( let z = - 1; z <= 1; z += 2 ) {\n\n\t\t\t\t\t\t\t\tconst zVal = z < 0 ? min.z : max.z;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 0 ] = xVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 1 ] = yVal;\n\t\t\t\t\t\t\t\tpositionArray[ posIndex + 2 ] = zVal;\n\n\t\t\t\t\t\t\t\tposIndex += 3;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn terminate;\n\n\t\t\t\t}\n\n\t\t\t}, group );\n\n\t\t\tlet indexArray;\n\t\t\tlet indices;\n\t\t\tif ( this.displayEdges ) {\n\n\t\t\t\t// fill in the index buffer to point to the corner points\n\t\t\t\tindices = new Uint8Array( [\n\t\t\t\t\t// x axis\n\t\t\t\t\t0, 4,\n\t\t\t\t\t1, 5,\n\t\t\t\t\t2, 6,\n\t\t\t\t\t3, 7,\n\n\t\t\t\t\t// y axis\n\t\t\t\t\t0, 2,\n\t\t\t\t\t1, 3,\n\t\t\t\t\t4, 6,\n\t\t\t\t\t5, 7,\n\n\t\t\t\t\t// z axis\n\t\t\t\t\t0, 1,\n\t\t\t\t\t2, 3,\n\t\t\t\t\t4, 5,\n\t\t\t\t\t6, 7,\n\t\t\t\t] );\n\n\t\t\t} else {\n\n\t\t\t\tindices = new Uint8Array( [\n\n\t\t\t\t\t// X-, X+\n\t\t\t\t\t0, 1, 2,\n\t\t\t\t\t2, 1, 3,\n\n\t\t\t\t\t4, 6, 5,\n\t\t\t\t\t6, 7, 5,\n\n\t\t\t\t\t// Y-, Y+\n\t\t\t\t\t1, 4, 5,\n\t\t\t\t\t0, 4, 1,\n\n\t\t\t\t\t2, 3, 6,\n\t\t\t\t\t3, 7, 6,\n\n\t\t\t\t\t// Z-, Z+\n\t\t\t\t\t0, 2, 4,\n\t\t\t\t\t2, 6, 4,\n\n\t\t\t\t\t1, 5, 3,\n\t\t\t\t\t3, 5, 7,\n\n\t\t\t\t] );\n\n\t\t\t}\n\n\t\t\tif ( positionArray.length > 65535 ) {\n\n\t\t\t\tindexArray = new Uint32Array( indices.length * boundsCount );\n\n\t\t\t} else {\n\n\t\t\t\tindexArray = new Uint16Array( indices.length * boundsCount );\n\n\t\t\t}\n\n\t\t\tconst indexLength = indices.length;\n\t\t\tfor ( let i = 0; i < boundsCount; i ++ ) {\n\n\t\t\t\tconst posOffset = i * 8;\n\t\t\t\tconst indexOffset = i * indexLength;\n\t\t\t\tfor ( let j = 0; j < indexLength; j ++ ) {\n\n\t\t\t\t\tindexArray[ indexOffset + j ] = posOffset + indices[ j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the geometry\n\t\t\tgeometry.setIndex(\n\t\t\t\tnew BufferAttribute( indexArray, 1, false ),\n\t\t\t);\n\t\t\tgeometry.setAttribute(\n\t\t\t\t'position',\n\t\t\t\tnew BufferAttribute( positionArray, 3, false ),\n\t\t\t);\n\t\t\tthis.visible = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass MeshBVHHelper extends Group {\n\n\tget color() {\n\n\t\treturn this.edgeMaterial.color;\n\n\t}\n\n\tget opacity() {\n\n\t\treturn this.edgeMaterial.opacity;\n\n\t}\n\n\tset opacity( v ) {\n\n\t\tthis.edgeMaterial.opacity = v;\n\t\tthis.meshMaterial.opacity = v;\n\n\t}\n\n\tconstructor( mesh = null, bvh = null, depth = 10 ) {\n\n\t\t// handle bvh, depth signature\n\t\tif ( mesh instanceof MeshBVH ) {\n\n\t\t\tdepth = bvh || 10;\n\t\t\tbvh = mesh;\n\t\t\tmesh = null;\n\n\t\t}\n\n\t\t// handle mesh, depth signature\n\t\tif ( typeof bvh === 'number' ) {\n\n\t\t\tdepth = bvh;\n\t\t\tbvh = null;\n\n\t\t}\n\n\t\tsuper();\n\n\t\tthis.name = 'MeshBVHHelper';\n\t\tthis.depth = depth;\n\t\tthis.mesh = mesh;\n\t\tthis.bvh = bvh;\n\t\tthis.displayParents = false;\n\t\tthis.displayEdges = true;\n\t\tthis.objectIndex = 0;\n\t\tthis._roots = [];\n\n\t\tconst edgeMaterial = new LineBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tconst meshMaterial = new MeshBasicMaterial( {\n\t\t\tcolor: 0x00FF88,\n\t\t\ttransparent: true,\n\t\t\topacity: 0.3,\n\t\t\tdepthWrite: false,\n\t\t} );\n\n\t\tmeshMaterial.color = edgeMaterial.color;\n\n\t\tthis.edgeMaterial = edgeMaterial;\n\t\tthis.meshMaterial = meshMaterial;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.mesh;\n\t\tlet bvh = this.bvh || mesh.geometry.boundsTree || null;\n\t\tif ( mesh.isBatchedMesh && mesh.boundsTrees && ! bvh ) {\n\n\t\t\t// get the bvh from a batchedMesh if not provided\n\t\t\t// TODO: we should have an official way to get the geometry index cleanly\n\t\t\tconst drawInfo = mesh._drawInfo[ this.objectIndex ];\n\t\t\tif ( drawInfo ) {\n\n\t\t\t\tbvh = mesh.boundsTrees[ drawInfo.geometryIndex ] || bvh;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst totalRoots = bvh ? bvh._roots.length : 0;\n\t\twhile ( this._roots.length > totalRoots ) {\n\n\t\t\tconst root = this._roots.pop();\n\t\t\troot.geometry.dispose();\n\t\t\tthis.remove( root );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < totalRoots; i ++ ) {\n\n\t\t\tconst { depth, edgeMaterial, meshMaterial, displayParents, displayEdges } = this;\n\n\t\t\tif ( i >= this._roots.length ) {\n\n\t\t\t\tconst root = new MeshBVHRootHelper( bvh, edgeMaterial, depth, i );\n\t\t\t\tthis.add( root );\n\t\t\t\tthis._roots.push( root );\n\n\t\t\t}\n\n\t\t\tconst root = this._roots[ i ];\n\t\t\troot.bvh = bvh;\n\t\t\troot.depth = depth;\n\t\t\troot.displayParents = displayParents;\n\t\t\troot.displayEdges = displayEdges;\n\t\t\troot.material = displayEdges ? edgeMaterial : meshMaterial;\n\t\t\troot.update();\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( ...args ) {\n\n\t\tconst mesh = this.mesh;\n\t\tconst parent = this.parent;\n\n\t\tif ( mesh !== null ) {\n\n\t\t\tmesh.updateWorldMatrix( true, false );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( parent.matrixWorld )\n\t\t\t\t\t.invert()\n\t\t\t\t\t.multiply( mesh.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrix\n\t\t\t\t\t.copy( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\t// handle batched and instanced mesh bvhs\n\t\t\tif ( mesh.isInstancedMesh || mesh.isBatchedMesh ) {\n\n\t\t\t\tmesh.getMatrixAt( this.objectIndex, matrix );\n\t\t\t\tthis.matrix.multiply( matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrix.decompose(\n\t\t\t\tthis.position,\n\t\t\t\tthis.quaternion,\n\t\t\t\tthis.scale,\n\t\t\t);\n\n\t\t}\n\n\t\tsuper.updateMatrixWorld( ...args );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.depth = source.depth;\n\t\tthis.mesh = source.mesh;\n\t\tthis.bvh = source.bvh;\n\t\tthis.opacity = source.opacity;\n\t\tthis.color.copy( source.color );\n\n\t}\n\n\tclone() {\n\n\t\treturn new MeshBVHHelper( this.mesh, this.bvh, this.depth );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.edgeMaterial.dispose();\n\t\tthis.meshMaterial.dispose();\n\n\t\tconst children = this.children;\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].geometry.dispose();\n\n\t\t}\n\n\t}\n\n}\n\nexport class MeshBVHVisualizer extends MeshBVHHelper {\n\n\tconstructor( ...args ) {\n\n\t\tsuper( ...args );\n\n\t\tconsole.warn( 'MeshBVHVisualizer: MeshBVHVisualizer has been deprecated. Use MeshBVHHelper, instead.' );\n\n\t}\n\n}\n\nexport { MeshBVHHelper };\n", "import { Box3, Vector3 } from 'three';\nimport { TRAVERSAL_COST, TRIANGLE_INTERSECT_COST } from '../core/Constants.js';\nimport { arrayToBox } from '../utils/ArrayBoxUtilities.js';\nimport { isSharedArrayBufferSupported } from '../utils/BufferUtils.js';\n\nconst _box1 = /* @__PURE__ */ new Box3();\nconst _box2 = /* @__PURE__ */ new Box3();\nconst _vec = /* @__PURE__ */ new Vector3();\n\n// https://stackoverflow.com/questions/1248302/how-to-get-the-size-of-a-javascript-object\nfunction getPrimitiveSize( el ) {\n\n\tswitch ( typeof el ) {\n\n\t\tcase 'number':\n\t\t\treturn 8;\n\t\tcase 'string':\n\t\t\treturn el.length * 2;\n\t\tcase 'boolean':\n\t\t\treturn 4;\n\t\tdefault:\n\t\t\treturn 0;\n\n\t}\n\n}\n\nfunction isTypedArray( arr ) {\n\n\tconst regex = /(Uint|Int|Float)(8|16|32)Array/;\n\treturn regex.test( arr.constructor.name );\n\n}\n\nfunction getRootExtremes( bvh, group ) {\n\n\tconst result = {\n\t\tnodeCount: 0,\n\t\tleafNodeCount: 0,\n\n\t\tdepth: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\ttris: {\n\t\t\tmin: Infinity, max: - Infinity\n\t\t},\n\t\tsplits: [ 0, 0, 0 ],\n\t\tsurfaceAreaScore: 0,\n\t};\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offsetOrSplit, count ) => {\n\n\t\tconst l0 = boundingData[ 0 + 3 ] - boundingData[ 0 ];\n\t\tconst l1 = boundingData[ 1 + 3 ] - boundingData[ 1 ];\n\t\tconst l2 = boundingData[ 2 + 3 ] - boundingData[ 2 ];\n\n\t\tconst surfaceArea = 2 * ( l0 * l1 + l1 * l2 + l2 * l0 );\n\n\t\tresult.nodeCount ++;\n\t\tif ( isLeaf ) {\n\n\t\t\tresult.leafNodeCount ++;\n\n\t\t\tresult.depth.min = Math.min( depth, result.depth.min );\n\t\t\tresult.depth.max = Math.max( depth, result.depth.max );\n\n\t\t\tresult.tris.min = Math.min( count, result.tris.min );\n\t\t\tresult.tris.max = Math.max( count, result.tris.max );\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRIANGLE_INTERSECT_COST * count;\n\n\t\t} else {\n\n\t\t\tresult.splits[ offsetOrSplit ] ++;\n\n\t\t\tresult.surfaceAreaScore += surfaceArea * TRAVERSAL_COST;\n\n\t\t}\n\n\t}, group );\n\n\t// If there are no leaf nodes because the tree hasn't finished generating yet.\n\tif ( result.tris.min === Infinity ) {\n\n\t\tresult.tris.min = 0;\n\t\tresult.tris.max = 0;\n\n\t}\n\n\tif ( result.depth.min === Infinity ) {\n\n\t\tresult.depth.min = 0;\n\t\tresult.depth.max = 0;\n\n\t}\n\n\treturn result;\n\n}\n\nfunction getBVHExtremes( bvh ) {\n\n\treturn bvh._roots.map( ( root, i ) => getRootExtremes( bvh, i ) );\n\n}\n\nfunction estimateMemoryInBytes( obj ) {\n\n\tconst traversed = new Set();\n\tconst stack = [ obj ];\n\tlet bytes = 0;\n\n\twhile ( stack.length ) {\n\n\t\tconst curr = stack.pop();\n\t\tif ( traversed.has( curr ) ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\ttraversed.add( curr );\n\n\t\tfor ( let key in curr ) {\n\n\t\t\tif ( ! Object.hasOwn( curr, key ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tbytes += getPrimitiveSize( key );\n\n\t\t\tconst value = curr[ key ];\n\t\t\tif ( value && ( typeof value === 'object' || typeof value === 'function' ) ) {\n\n\t\t\t\tif ( isTypedArray( value ) ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else if ( isSharedArrayBufferSupported() && value instanceof SharedArrayBuffer ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else if ( value instanceof ArrayBuffer ) {\n\n\t\t\t\t\tbytes += value.byteLength;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstack.push( value );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tbytes += getPrimitiveSize( value );\n\n\t\t\t}\n\n\n\t\t}\n\n\t}\n\n\treturn bytes;\n\n}\n\nfunction validateBounds( bvh ) {\n\n\tconst geometry = bvh.geometry;\n\tconst depthStack = [];\n\tconst index = geometry.index;\n\tconst position = geometry.getAttribute( 'position' );\n\tlet passes = true;\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tdepth,\n\t\t\tisLeaf,\n\t\t\tboundingData,\n\t\t\toffset,\n\t\t\tcount,\n\t\t};\n\t\tdepthStack[ depth ] = info;\n\n\t\tarrayToBox( 0, boundingData, _box1 );\n\t\tconst parent = depthStack[ depth - 1 ];\n\n\t\tif ( isLeaf ) {\n\n\t\t\t// check triangles\n\t\t\tfor ( let i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\t\t\tconst triIndex = bvh.resolveTriangleIndex( i );\n\t\t\t\tlet i0 = 3 * triIndex;\n\t\t\t\tlet i1 = 3 * triIndex + 1;\n\t\t\t\tlet i2 = 3 * triIndex + 2;\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\ti0 = index.getX( i0 );\n\t\t\t\t\ti1 = index.getX( i1 );\n\t\t\t\t\ti2 = index.getX( i2 );\n\n\t\t\t\t}\n\n\t\t\t\tlet isContained;\n\n\t\t\t\t_vec.fromBufferAttribute( position, i0 );\n\t\t\t\tisContained = _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i1 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\t_vec.fromBufferAttribute( position, i2 );\n\t\t\t\tisContained = isContained && _box1.containsPoint( _vec );\n\n\t\t\t\tconsole.assert( isContained, 'Leaf bounds does not fully contain triangle.' );\n\t\t\t\tpasses = passes && isContained;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parent ) {\n\n\t\t\t// check if my bounds fit in my parents\n\t\t\tarrayToBox( 0, boundingData, _box2 );\n\n\t\t\tconst isContained = _box2.containsBox( _box1 );\n\t\t\tconsole.assert( isContained, 'Parent bounds does not fully contain child.' );\n\t\t\tpasses = passes && isContained;\n\n\t\t}\n\n\t} );\n\n\treturn passes;\n\n}\n\n// Returns a simple, human readable object that represents the BVH.\nfunction getJSONStructure( bvh ) {\n\n\tconst depthStack = [];\n\n\tbvh.traverse( ( depth, isLeaf, boundingData, offset, count ) => {\n\n\t\tconst info = {\n\t\t\tbounds: arrayToBox( 0, boundingData, new Box3() ),\n\t\t};\n\n\t\tif ( isLeaf ) {\n\n\t\t\tinfo.count = count;\n\t\t\tinfo.offset = offset;\n\n\t\t} else {\n\n\t\t\tinfo.left = null;\n\t\t\tinfo.right = null;\n\n\t\t}\n\n\t\tdepthStack[ depth ] = info;\n\n\t\t// traversal hits the left then right node\n\t\tconst parent = depthStack[ depth - 1 ];\n\t\tif ( parent ) {\n\n\t\t\tif ( parent.left === null ) {\n\n\t\t\t\tparent.left = info;\n\n\t\t\t} else {\n\n\t\t\t\tparent.right = info;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn depthStack[ 0 ];\n\n}\n\nexport { estimateMemoryInBytes, getBVHExtremes, validateBounds, getJSONStructure };\n", "// converts the given BVH raycast intersection to align with the three.js raycast\n// structure (include object, world space distance and point).\nexport function convertRaycastIntersect( hit, object, raycaster ) {\n\n\tif ( hit === null ) {\n\n\t\treturn null;\n\n\t}\n\n\thit.point.applyMatrix4( object.matrixWorld );\n\thit.distance = hit.point.distanceTo( raycaster.ray.origin );\n\thit.object = object;\n\n\treturn hit;\n\n}\n", "import { Ray, Matrix4, Mesh, Vector3, Sphere, REVISION } from 'three';\nimport { convertRaycastIntersect } from './GeometryRayIntersectUtilities.js';\nimport { MeshBVH } from '../core/MeshBVH.js';\nimport * as THREE from 'three';\n\nconst BatchedMesh = THREE.BatchedMesh || null; // this is necessary to not break three.js r157-\nconst IS_REVISION_166 = parseInt( REVISION ) >= 166;\nconst ray = /* @__PURE__ */ new Ray();\nconst direction = /* @__PURE__ */ new Vector3();\nconst tmpInverseMatrix = /* @__PURE__ */ new Matrix4();\nconst origMeshRaycastFunc = Mesh.prototype.raycast;\nconst origBatchedRaycastFunc = BatchedMesh !== null ? BatchedMesh.prototype.raycast : null;\nconst _worldScale = /* @__PURE__ */ new Vector3();\nconst _mesh = /* @__PURE__ */ new Mesh();\nconst _batchIntersects = [];\n\nexport function acceleratedRaycast( raycaster, intersects ) {\n\n\tif ( this.isBatchedMesh ) {\n\n\t\tacceleratedBatchedMeshRaycast.call( this, raycaster, intersects );\n\n\t} else {\n\n\t\tacceleratedMeshRaycast.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nfunction acceleratedBatchedMeshRaycast( raycaster, intersects ) {\n\n\tif ( this.boundsTrees ) {\n\n\t\tconst boundsTrees = this.boundsTrees;\n\t\tconst drawInfo = this._drawInfo;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry = this.geometry;\n\n\t\tconst oldBoundsTree = _mesh.geometry.boundsTree;\n\t\tconst oldDrawRange = _mesh.geometry.drawRange;\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\t// TODO: provide new method to get instances count instead of 'drawInfo.length'\n\t\tfor ( let i = 0, l = drawInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! this.getVisibleAt( i ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// TODO: use getGeometryIndex\n\t\t\tconst geometryId = drawInfo[ i ].geometryIndex;\n\n\t\t\t_mesh.geometry.boundsTree = boundsTrees[ geometryId ];\n\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\n\t\t\tif ( ! _mesh.geometry.boundsTree ) {\n\n\t\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\n\t\t\t\tconst drawRange = drawRanges[ geometryId ];\n\t\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t}\n\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.geometry.boundsTree = oldBoundsTree;\n\t\t_mesh.geometry.drawRange = oldDrawRange;\n\t\t_mesh.material = null;\n\t\t_mesh.geometry = null;\n\n\t} else {\n\n\t\torigBatchedRaycastFunc.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nfunction acceleratedMeshRaycast( raycaster, intersects ) {\n\n\tif ( this.geometry.boundsTree ) {\n\n\t\tif ( this.material === undefined ) return;\n\n\t\ttmpInverseMatrix.copy( this.matrixWorld ).invert();\n\t\tray.copy( raycaster.ray ).applyMatrix4( tmpInverseMatrix );\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\t\tdirection.copy( ray.direction ).multiply( _worldScale );\n\n\t\tconst scaleFactor = direction.length();\n\t\tconst near = raycaster.near / scaleFactor;\n\t\tconst far = raycaster.far / scaleFactor;\n\n\t\tconst bvh = this.geometry.boundsTree;\n\t\tif ( raycaster.firstHitOnly === true ) {\n\n\t\t\tconst hit = convertRaycastIntersect( bvh.raycastFirst( ray, this.material, near, far ), this, raycaster );\n\t\t\tif ( hit ) {\n\n\t\t\t\tintersects.push( hit );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst hits = bvh.raycast( ray, this.material, near, far );\n\t\t\tfor ( let i = 0, l = hits.length; i < l; i ++ ) {\n\n\t\t\t\tconst hit = convertRaycastIntersect( hits[ i ], this, raycaster );\n\t\t\t\tif ( hit ) {\n\n\t\t\t\t\tintersects.push( hit );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\torigMeshRaycastFunc.call( this, raycaster, intersects );\n\n\t}\n\n}\n\nexport function computeBoundsTree( options = {} ) {\n\n\tthis.boundsTree = new MeshBVH( this, options );\n\treturn this.boundsTree;\n\n}\n\nexport function disposeBoundsTree() {\n\n\tthis.boundsTree = null;\n\n}\n\nexport function computeBatchedBoundsTree( index = - 1, options = {} ) {\n\n\tif ( ! IS_REVISION_166 ) {\n\n\t\tthrow new Error( 'BatchedMesh: Three r166+ is required to compute bounds trees.' );\n\n\t}\n\n\tif ( options.indirect ) {\n\n\t\tconsole.warn( '\"Indirect\" is set to false because it is not supported for BatchedMesh.' );\n\n\t}\n\n\toptions = {\n\t\t...options,\n\t\tindirect: false,\n\t\trange: null\n\t};\n\n\tconst drawRanges = this._drawRanges;\n\tconst geometryCount = this._geometryCount;\n\tif ( ! this.boundsTrees ) {\n\n\t\tthis.boundsTrees = new Array( geometryCount ).fill( null );\n\n\t}\n\n\tconst boundsTrees = this.boundsTrees;\n\twhile ( boundsTrees.length < geometryCount ) {\n\n\t\tboundsTrees.push( null );\n\n\t}\n\n\tif ( index < 0 ) {\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\toptions.range = drawRanges[ i ];\n\t\t\tboundsTrees[ i ] = new MeshBVH( this.geometry, options );\n\n\t\t}\n\n\t\treturn boundsTrees;\n\n\t} else {\n\n\t\tif ( index < drawRanges.length ) {\n\n\t\t\toptions.range = drawRanges[ index ];\n\t\t\tboundsTrees[ index ] = new MeshBVH( this.geometry, options );\n\n\t\t}\n\n\t\treturn boundsTrees[ index ] || null;\n\n\t}\n\n}\n\nexport function disposeBatchedBoundsTree( index = - 1 ) {\n\n\tif ( index < 0 ) {\n\n\t\tthis.boundsTrees.fill( null );\n\n\t} else {\n\n\t\tif ( index < this.boundsTree.length ) {\n\n\t\t\tthis.boundsTrees[ index ] = null;\n\n\t\t}\n\n\t}\n\n}\n", "import {\n\tDataTexture,\n\tFloatType,\n\tIntType,\n\tUnsignedIntType,\n\tByteType,\n\tUnsignedByteType,\n\tShortType,\n\tUnsignedShortType,\n\n\tRedFormat,\n\tRGFormat,\n\tRGBAFormat,\n\n\tRedIntegerFormat,\n\tRGIntegerFormat,\n\tRGBAIntegerFormat,\n\n\tNearestFilter,\n} from 'three';\n\nfunction countToStringFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return 'R';\n\t\tcase 2: return 'RG';\n\t\tcase 3: return 'RGBA';\n\t\tcase 4: return 'RGBA';\n\n\t}\n\n\tthrow new Error();\n\n}\n\nfunction countToFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedFormat;\n\t\tcase 2: return RGFormat;\n\t\tcase 3: return RGBAFormat;\n\t\tcase 4: return RGBAFormat;\n\n\t}\n\n}\n\nfunction countToIntFormat( count ) {\n\n\tswitch ( count ) {\n\n\t\tcase 1: return RedIntegerFormat;\n\t\tcase 2: return RGIntegerFormat;\n\t\tcase 3: return RGBAIntegerFormat;\n\t\tcase 4: return RGBAIntegerFormat;\n\n\t}\n\n}\n\nexport class VertexAttributeTexture extends DataTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis.minFilter = NearestFilter;\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.generateMipmaps = false;\n\t\tthis.overrideItemSize = null;\n\t\tthis._forcedType = null;\n\n\t}\n\n\tupdateFrom( attr ) {\n\n\t\tconst overrideItemSize = this.overrideItemSize;\n\t\tconst originalItemSize = attr.itemSize;\n\t\tconst originalCount = attr.count;\n\t\tif ( overrideItemSize !== null ) {\n\n\t\t\tif ( ( originalItemSize * originalCount ) % overrideItemSize !== 0.0 ) {\n\n\t\t\t\tthrow new Error( 'VertexAttributeTexture: overrideItemSize must divide evenly into buffer length.' );\n\n\t\t\t}\n\n\t\t\tattr.itemSize = overrideItemSize;\n\t\t\tattr.count = originalCount * originalItemSize / overrideItemSize;\n\n\t\t}\n\n\t\tconst itemSize = attr.itemSize;\n\t\tconst count = attr.count;\n\t\tconst normalized = attr.normalized;\n\t\tconst originalBufferCons = attr.array.constructor;\n\t\tconst byteCount = originalBufferCons.BYTES_PER_ELEMENT;\n\t\tlet targetType = this._forcedType;\n\t\tlet finalStride = itemSize;\n\n\t\t// derive the type of texture this should be in the shader\n\t\tif ( targetType === null ) {\n\n\t\t\tswitch ( originalBufferCons ) {\n\n\t\t\t\tcase Float32Array:\n\t\t\t\t\ttargetType = FloatType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Uint8Array:\n\t\t\t\tcase Uint16Array:\n\t\t\t\tcase Uint32Array:\n\t\t\t\t\ttargetType = UnsignedIntType;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase Int8Array:\n\t\t\t\tcase Int16Array:\n\t\t\t\tcase Int32Array:\n\t\t\t\t\ttargetType = IntType;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// get the target format to store the texture as\n\t\tlet type, format, normalizeValue, targetBufferCons;\n\t\tlet internalFormat = countToStringFormat( itemSize );\n\t\tswitch ( targetType ) {\n\n\t\t\tcase FloatType:\n\t\t\t\tnormalizeValue = 1.0;\n\t\t\t\tformat = countToFormat( itemSize );\n\n\t\t\t\tif ( normalized && byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = originalBufferCons;\n\t\t\t\t\tinternalFormat += '8';\n\n\t\t\t\t\tif ( originalBufferCons === Uint8Array ) {\n\n\t\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttype = ByteType;\n\t\t\t\t\t\tinternalFormat += '_SNORM';\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Float32Array;\n\t\t\t\t\tinternalFormat += '32F';\n\t\t\t\t\ttype = FloatType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase IntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'I';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Int8Array;\n\t\t\t\t\ttype = ByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Int16Array;\n\t\t\t\t\ttype = ShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Int32Array;\n\t\t\t\t\ttype = IntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase UnsignedIntType:\n\t\t\t\tinternalFormat += byteCount * 8 + 'UI';\n\t\t\t\tnormalizeValue = normalized ? Math.pow( 2, originalBufferCons.BYTES_PER_ELEMENT * 8 - 1 ) : 1.0;\n\t\t\t\tformat = countToIntFormat( itemSize );\n\n\t\t\t\tif ( byteCount === 1 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint8Array;\n\t\t\t\t\ttype = UnsignedByteType;\n\n\t\t\t\t} else if ( byteCount === 2 ) {\n\n\t\t\t\t\ttargetBufferCons = Uint16Array;\n\t\t\t\t\ttype = UnsignedShortType;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetBufferCons = Uint32Array;\n\t\t\t\t\ttype = UnsignedIntType;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// there will be a mismatch between format length and final length because\n\t\t// RGBFormat and RGBIntegerFormat was removed\n\t\tif ( finalStride === 3 && ( format === RGBAFormat || format === RGBAIntegerFormat ) ) {\n\n\t\t\tfinalStride = 4;\n\n\t\t}\n\n\t\t// copy the data over to the new texture array\n\t\tconst dimension = Math.ceil( Math.sqrt( count ) ) || 1;\n\t\tconst length = finalStride * dimension * dimension;\n\t\tconst dataArray = new targetBufferCons( length );\n\n\t\t// temporarily set the normalized state to false since we have custom normalization logic\n\t\tconst originalNormalized = attr.normalized;\n\t\tattr.normalized = false;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tconst ii = finalStride * i;\n\t\t\tdataArray[ ii ] = attr.getX( i ) / normalizeValue;\n\n\t\t\tif ( itemSize >= 2 ) {\n\n\t\t\t\tdataArray[ ii + 1 ] = attr.getY( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 3 ) {\n\n\t\t\t\tdataArray[ ii + 2 ] = attr.getZ( i ) / normalizeValue;\n\n\t\t\t\tif ( finalStride === 4 ) {\n\n\t\t\t\t\tdataArray[ ii + 3 ] = 1.0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( itemSize >= 4 ) {\n\n\t\t\t\tdataArray[ ii + 3 ] = attr.getW( i ) / normalizeValue;\n\n\t\t\t}\n\n\t\t}\n\n\t\tattr.normalized = originalNormalized;\n\n\t\tthis.internalFormat = internalFormat;\n\t\tthis.format = format;\n\t\tthis.type = type;\n\t\tthis.image.width = dimension;\n\t\tthis.image.height = dimension;\n\t\tthis.image.data = dataArray;\n\t\tthis.needsUpdate = true;\n\t\tthis.dispose();\n\n\t\tattr.itemSize = originalItemSize;\n\t\tattr.count = originalCount;\n\n\t}\n\n}\n\nexport class UIntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = UnsignedIntType;\n\n\t}\n\n}\n\nexport class IntVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = IntType;\n\n\t}\n\n\n}\n\nexport class FloatVertexAttributeTexture extends VertexAttributeTexture {\n\n\tconstructor() {\n\n\t\tsuper();\n\t\tthis._forcedType = FloatType;\n\n\t}\n\n}\n", "import {\n\tDataTexture,\n\tFloatType,\n\tUnsignedIntType,\n\tRGBAFormat,\n\tRGIntegerFormat,\n\tNearestFilter,\n\tBufferAttribute,\n} from 'three';\nimport {\n\tFloatVertexAttributeTexture,\n\tUIntVertexAttributeTexture,\n} from './VertexAttributeTexture.js';\nimport { BYTES_PER_NODE } from '../core/Constants.js';\nimport {\n\tBOUNDING_DATA_INDEX,\n\tCOUNT,\n\tIS_LEAF,\n\tRIGHT_NODE,\n\tOFFSET,\n\tSPLIT_AXIS,\n} from '../core/utils/nodeBufferUtils.js';\nimport { getIndexArray, getVertexCount } from '../core/build/geometryUtils.js';\n\nexport class MeshBVHUniformStruct {\n\n\tconstructor() {\n\n\t\tthis.index = new UIntVertexAttributeTexture();\n\t\tthis.position = new FloatVertexAttributeTexture();\n\t\tthis.bvhBounds = new DataTexture();\n\t\tthis.bvhContents = new DataTexture();\n\t\tthis._cachedIndexAttr = null;\n\n\t\tthis.index.overrideItemSize = 3;\n\n\t}\n\n\tupdateFrom( bvh ) {\n\n\t\tconst { geometry } = bvh;\n\t\tbvhToTextures( bvh, this.bvhBounds, this.bvhContents );\n\n\t\tthis.position.updateFrom( geometry.attributes.position );\n\n\t\t// dereference a new index attribute if we're using indirect storage\n\t\tif ( bvh.indirect ) {\n\n\t\t\tconst indirectBuffer = bvh._indirectBuffer;\n\t\t\tif (\n\t\t\t\tthis._cachedIndexAttr === null ||\n\t\t\t\tthis._cachedIndexAttr.count !== indirectBuffer.length\n\t\t\t) {\n\n\t\t\t\tif ( geometry.index ) {\n\n\t\t\t\t\tthis._cachedIndexAttr = geometry.index.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst array = getIndexArray( getVertexCount( geometry ) );\n\t\t\t\t\tthis._cachedIndexAttr = new BufferAttribute( array, 1, false );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdereferenceIndex( geometry, indirectBuffer, this._cachedIndexAttr );\n\t\t\tthis.index.updateFrom( this._cachedIndexAttr );\n\n\t\t} else {\n\n\t\t\tthis.index.updateFrom( geometry.index );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tconst { index, position, bvhBounds, bvhContents } = this;\n\n\t\tif ( index ) index.dispose();\n\t\tif ( position ) position.dispose();\n\t\tif ( bvhBounds ) bvhBounds.dispose();\n\t\tif ( bvhContents ) bvhContents.dispose();\n\n\t}\n\n}\n\nfunction dereferenceIndex( geometry, indirectBuffer, target ) {\n\n\tconst unpacked = target.array;\n\tconst indexArray = geometry.index ? geometry.index.array : null;\n\tfor ( let i = 0, l = indirectBuffer.length; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst v3 = 3 * indirectBuffer[ i ];\n\t\tfor ( let c = 0; c < 3; c ++ ) {\n\n\t\t\tunpacked[ i3 + c ] = indexArray ? indexArray[ v3 + c ] : v3 + c;\n\n\t\t}\n\n\t}\n\n}\n\nfunction bvhToTextures( bvh, boundsTexture, contentsTexture ) {\n\n\tconst roots = bvh._roots;\n\n\tif ( roots.length !== 1 ) {\n\n\t\tthrow new Error( 'MeshBVHUniformStruct: Multi-root BVHs not supported.' );\n\n\t}\n\n\tconst root = roots[ 0 ];\n\tconst uint16Array = new Uint16Array( root );\n\tconst uint32Array = new Uint32Array( root );\n\tconst float32Array = new Float32Array( root );\n\n\t// Both bounds need two elements per node so compute the height so it's twice as long as\n\t// the width so we can expand the row by two and still have a square texture\n\tconst nodeCount = root.byteLength / BYTES_PER_NODE;\n\tconst boundsDimension = 2 * Math.ceil( Math.sqrt( nodeCount / 2 ) );\n\tconst boundsArray = new Float32Array( 4 * boundsDimension * boundsDimension );\n\n\tconst contentsDimension = Math.ceil( Math.sqrt( nodeCount ) );\n\tconst contentsArray = new Uint32Array( 2 * contentsDimension * contentsDimension );\n\n\tfor ( let i = 0; i < nodeCount; i ++ ) {\n\n\t\tconst nodeIndex32 = i * BYTES_PER_NODE / 4;\n\t\tconst nodeIndex16 = nodeIndex32 * 2;\n\t\tconst boundsIndex = BOUNDING_DATA_INDEX( nodeIndex32 );\n\t\tfor ( let b = 0; b < 3; b ++ ) {\n\n\t\t\tboundsArray[ 8 * i + 0 + b ] = float32Array[ boundsIndex + 0 + b ];\n\t\t\tboundsArray[ 8 * i + 4 + b ] = float32Array[ boundsIndex + 3 + b ];\n\n\t\t}\n\n\t\tif ( IS_LEAF( nodeIndex16, uint16Array ) ) {\n\n\t\t\tconst count = COUNT( nodeIndex16, uint16Array );\n\t\t\tconst offset = OFFSET( nodeIndex32, uint32Array );\n\n\t\t\tconst mergedLeafCount = 0xffff0000 | count;\n\t\t\tcontentsArray[ i * 2 + 0 ] = mergedLeafCount;\n\t\t\tcontentsArray[ i * 2 + 1 ] = offset;\n\n\t\t} else {\n\n\t\t\tconst rightIndex = 4 * RIGHT_NODE( nodeIndex32, uint32Array ) / BYTES_PER_NODE;\n\t\t\tconst splitAxis = SPLIT_AXIS( nodeIndex32, uint32Array );\n\n\t\t\tcontentsArray[ i * 2 + 0 ] = splitAxis;\n\t\t\tcontentsArray[ i * 2 + 1 ] = rightIndex;\n\n\t\t}\n\n\t}\n\n\tboundsTexture.image.data = boundsArray;\n\tboundsTexture.image.width = boundsDimension;\n\tboundsTexture.image.height = boundsDimension;\n\tboundsTexture.format = RGBAFormat;\n\tboundsTexture.type = FloatType;\n\tboundsTexture.internalFormat = 'RGBA32F';\n\tboundsTexture.minFilter = NearestFilter;\n\tboundsTexture.magFilter = NearestFilter;\n\tboundsTexture.generateMipmaps = false;\n\tboundsTexture.needsUpdate = true;\n\tboundsTexture.dispose();\n\n\tcontentsTexture.image.data = contentsArray;\n\tcontentsTexture.image.width = contentsDimension;\n\tcontentsTexture.image.height = contentsDimension;\n\tcontentsTexture.format = RGIntegerFormat;\n\tcontentsTexture.type = UnsignedIntType;\n\tcontentsTexture.internalFormat = 'RG32UI';\n\tcontentsTexture.minFilter = NearestFilter;\n\tcontentsTexture.magFilter = NearestFilter;\n\tcontentsTexture.generateMipmaps = false;\n\tcontentsTexture.needsUpdate = true;\n\tcontentsTexture.dispose();\n\n}\n", "import { BufferAttribute, BufferGeometry, Vector3, Vector4, Matrix4, Matrix3 } from 'three';\n\nconst _positionVector = /*@__PURE__*/ new Vector3();\nconst _normalVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector = /*@__PURE__*/ new Vector3();\nconst _tangentVector4 = /*@__PURE__*/ new Vector4();\n\nconst _morphVector = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\n\n// Confirms that the two provided attributes are compatible\nfunction validateAttributes( attr1, attr2 ) {\n\n\tif ( ! attr1 && ! attr2 ) {\n\n\t\treturn;\n\n\t}\n\n\tconst sameCount = attr1.count === attr2.count;\n\tconst sameNormalized = attr1.normalized === attr2.normalized;\n\tconst sameType = attr1.array.constructor === attr2.array.constructor;\n\tconst sameItemSize = attr1.itemSize === attr2.itemSize;\n\n\tif ( ! sameCount || ! sameNormalized || ! sameType || ! sameItemSize ) {\n\n\t\tthrow new Error();\n\n\t}\n\n}\n\n// Clones the given attribute with a new compatible buffer attribute but no data\nfunction createAttributeClone( attr, countOverride = null ) {\n\n\tconst cons = attr.array.constructor;\n\tconst normalized = attr.normalized;\n\tconst itemSize = attr.itemSize;\n\tconst count = countOverride === null ? attr.count : countOverride;\n\n\treturn new BufferAttribute( new cons( itemSize * count ), itemSize, normalized );\n\n}\n\n// target offset is the number of elements in the target buffer stride to skip before copying the\n// attributes contents in to.\nfunction copyAttributeContents( attr, target, targetOffset = 0 ) {\n\n\tif ( attr.isInterleavedBufferAttribute ) {\n\n\t\tconst itemSize = attr.itemSize;\n\t\tfor ( let i = 0, l = attr.count; i < l; i ++ ) {\n\n\t\t\tconst io = i + targetOffset;\n\t\t\ttarget.setX( io, attr.getX( i ) );\n\t\t\tif ( itemSize >= 2 ) target.setY( io, attr.getY( i ) );\n\t\t\tif ( itemSize >= 3 ) target.setZ( io, attr.getZ( i ) );\n\t\t\tif ( itemSize >= 4 ) target.setW( io, attr.getW( i ) );\n\n\t\t}\n\n\t} else {\n\n\t\tconst array = target.array;\n\t\tconst cons = array.constructor;\n\t\tconst byteOffset = array.BYTES_PER_ELEMENT * attr.itemSize * targetOffset;\n\t\tconst temp = new cons( array.buffer, byteOffset, attr.array.length );\n\t\ttemp.set( attr.array );\n\n\t}\n\n}\n\n// Adds the \"matrix\" multiplied by \"scale\" to \"target\"\nfunction addScaledMatrix( target, matrix, scale ) {\n\n\tconst targetArray = target.elements;\n\tconst matrixArray = matrix.elements;\n\tfor ( let i = 0, l = matrixArray.length; i < l; i ++ ) {\n\n\t\ttargetArray[ i ] += matrixArray[ i ] * scale;\n\n\t}\n\n}\n\n// A version of \"SkinnedMesh.boneTransform\" for normals\nfunction boneNormalTransform( mesh, index, target ) {\n\n\tconst skeleton = mesh.skeleton;\n\tconst geometry = mesh.geometry;\n\tconst bones = skeleton.bones;\n\tconst boneInverses = skeleton.boneInverses;\n\n\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t_matrix.elements.fill( 0 );\n\n\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\tif ( weight !== 0 ) {\n\n\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\t\t\t_boneMatrix.multiplyMatrices( bones[ boneIndex ].matrixWorld, boneInverses[ boneIndex ] );\n\n\t\t\taddScaledMatrix( _matrix, _boneMatrix, weight );\n\n\t\t}\n\n\t}\n\n\t_matrix.multiply( mesh.bindMatrix ).premultiply( mesh.bindMatrixInverse );\n\ttarget.transformDirection( _matrix );\n\n\treturn target;\n\n}\n\n// Applies the morph target data to the target vector\nfunction applyMorphTarget( morphData, morphInfluences, morphTargetsRelative, i, target ) {\n\n\t_morphVector.set( 0, 0, 0 );\n\tfor ( let j = 0, jl = morphData.length; j < jl; j ++ ) {\n\n\t\tconst influence = morphInfluences[ j ];\n\t\tconst morphAttribute = morphData[ j ];\n\n\t\tif ( influence === 0 ) continue;\n\n\t\t_temp.fromBufferAttribute( morphAttribute, i );\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\t_morphVector.addScaledVector( _temp, influence );\n\n\t\t} else {\n\n\t\t\t_morphVector.addScaledVector( _temp.sub( target ), influence );\n\n\t\t}\n\n\t}\n\n\ttarget.add( _morphVector );\n\n}\n\n// Modified version of BufferGeometryUtils.mergeBufferGeometries that ignores morph targets and updates a attributes in place\nfunction mergeBufferGeometries( geometries, options = { useGroups: false, updateIndex: false, skipAttributes: [] }, targetGeometry = new BufferGeometry() ) {\n\n\tconst isIndexed = geometries[ 0 ].index !== null;\n\tconst { useGroups = false, updateIndex = false, skipAttributes = [] } = options;\n\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\n\tconst attributes = {};\n\n\tlet offset = 0;\n\n\ttargetGeometry.clearGroups();\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\tconst geometry = geometries[ i ];\n\t\tlet attributesCount = 0;\n\n\t\t// ensure that all geometries are indexed, or none\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\n\n\t\t}\n\n\t\t// gather attributes, exit early if they're different\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tif ( ! attributesUsed.has( name ) ) {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\n\n\t\t\t}\n\n\t\t\tif ( attributes[ name ] === undefined ) {\n\n\t\t\t\tattributes[ name ] = [];\n\n\t\t\t}\n\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\n\t\t\tattributesCount ++;\n\n\t\t}\n\n\t\t// ensure geometries have the same number of attributes\n\t\tif ( attributesCount !== attributesUsed.size ) {\n\n\t\t\tthrow new Error( 'StaticGeometryGenerator: Make sure all geometries have the same number of attributes.' );\n\n\t\t}\n\n\t\tif ( useGroups ) {\n\n\t\t\tlet count;\n\t\t\tif ( isIndexed ) {\n\n\t\t\t\tcount = geometry.index.count;\n\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\n\n\t\t\t\tcount = geometry.attributes.position.count;\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'StaticGeometryGenerator: The geometry must have either an index or a position attribute' );\n\n\t\t\t}\n\n\t\t\ttargetGeometry.addGroup( offset, count, i );\n\t\t\toffset += count;\n\n\t\t}\n\n\t}\n\n\t// merge indices\n\tif ( isIndexed ) {\n\n\t\tlet forceUpdateIndex = false;\n\t\tif ( ! targetGeometry.index ) {\n\n\t\t\tlet indexCount = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tindexCount += geometries[ i ].index.count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setIndex( new BufferAttribute( new Uint32Array( indexCount ), 1, false ) );\n\t\t\tforceUpdateIndex = true;\n\n\t\t}\n\n\t\tif ( updateIndex || forceUpdateIndex ) {\n\n\t\t\tconst targetIndex = targetGeometry.index;\n\t\t\tlet targetOffset = 0;\n\t\t\tlet indexOffset = 0;\n\t\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\n\n\t\t\t\tconst geometry = geometries[ i ];\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tif ( skipAttributes[ i ] !== true ) {\n\n\t\t\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\n\n\t\t\t\t\t\ttargetIndex.setX( targetOffset, index.getX( j ) + indexOffset );\n\t\t\t\t\t\ttargetOffset ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tindexOffset += geometry.attributes.position.count;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// merge attributes\n\tfor ( const name in attributes ) {\n\n\t\tconst attrList = attributes[ name ];\n\t\tif ( ! ( name in targetGeometry.attributes ) ) {\n\n\t\t\tlet count = 0;\n\t\t\tfor ( const key in attrList ) {\n\n\t\t\t\tcount += attrList[ key ].count;\n\n\t\t\t}\n\n\t\t\ttargetGeometry.setAttribute( name, createAttributeClone( attributes[ name ][ 0 ], count ) );\n\n\t\t}\n\n\t\tconst targetAttribute = targetGeometry.attributes[ name ];\n\t\tlet offset = 0;\n\t\tfor ( let i = 0, l = attrList.length; i < l; i ++ ) {\n\n\t\t\tconst attr = attrList[ i ];\n\t\t\tif ( skipAttributes[ i ] !== true ) {\n\n\t\t\t\tcopyAttributeContents( attr, targetAttribute, offset );\n\n\t\t\t}\n\n\t\t\toffset += attr.count;\n\n\t\t}\n\n\t}\n\n\treturn targetGeometry;\n\n}\n\nfunction checkTypedArrayEquality( a, b ) {\n\n\tif ( a === null || b === null ) {\n\n\t\treturn a === b;\n\n\t}\n\n\tif ( a.length !== b.length ) {\n\n\t\treturn false;\n\n\t}\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction invertGeometry( geometry ) {\n\n\tconst { index, attributes } = geometry;\n\tif ( index ) {\n\n\t\tfor ( let i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\tconst v0 = index.getX( i );\n\t\t\tconst v2 = index.getX( i + 2 );\n\t\t\tindex.setX( i, v2 );\n\t\t\tindex.setX( i + 2, v0 );\n\n\t\t}\n\n\t} else {\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attr = attributes[ key ];\n\t\t\tconst itemSize = attr.itemSize;\n\t\t\tfor ( let i = 0, l = attr.count; i < l; i += 3 ) {\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tconst v0 = attr.getComponent( i, j );\n\t\t\t\t\tconst v2 = attr.getComponent( i + 2, j );\n\t\t\t\t\tattr.setComponent( i, j, v2 );\n\t\t\t\t\tattr.setComponent( i + 2, j, v0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn geometry;\n\n\n}\n\n// Checks whether the geometry changed between this and last evaluation\nclass GeometryDiff {\n\n\tconstructor( mesh ) {\n\n\t\tthis.matrixWorld = new Matrix4();\n\t\tthis.geometryHash = null;\n\t\tthis.boneMatrices = null;\n\t\tthis.primitiveCount = - 1;\n\t\tthis.mesh = mesh;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.mesh;\n\t\tconst geometry = mesh.geometry;\n\t\tconst skeleton = mesh.skeleton;\n\t\tconst primitiveCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\t\tthis.matrixWorld.copy( mesh.matrixWorld );\n\t\tthis.geometryHash = geometry.attributes.position.version;\n\t\tthis.primitiveCount = primitiveCount;\n\n\t\tif ( skeleton ) {\n\n\t\t\t// ensure the bone matrix array is updated to the appropriate length\n\t\t\tif ( ! skeleton.boneTexture ) {\n\n\t\t\t\tskeleton.computeBoneTexture();\n\n\t\t\t}\n\n\t\t\tskeleton.update();\n\n\t\t\t// copy data if possible otherwise clone it\n\t\t\tconst boneMatrices = skeleton.boneMatrices;\n\t\t\tif ( ! this.boneMatrices || this.boneMatrices.length !== boneMatrices.length ) {\n\n\t\t\t\tthis.boneMatrices = boneMatrices.slice();\n\n\t\t\t} else {\n\n\t\t\t\tthis.boneMatrices.set( boneMatrices );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boneMatrices = null;\n\n\t\t}\n\n\t}\n\n\tdidChange() {\n\n\t\tconst mesh = this.mesh;\n\t\tconst geometry = mesh.geometry;\n\t\tconst primitiveCount = ( geometry.index ? geometry.index.count : geometry.attributes.position.count ) / 3;\n\t\tconst identical =\n\t\t\tthis.matrixWorld.equals( mesh.matrixWorld ) &&\n\t\t\tthis.geometryHash === geometry.attributes.position.version &&\n\t\t\tcheckTypedArrayEquality( mesh.skeleton && mesh.skeleton.boneMatrices || null, this.boneMatrices ) &&\n\t\t\tthis.primitiveCount === primitiveCount;\n\n\t\treturn ! identical;\n\n\t}\n\n}\n\nexport class StaticGeometryGenerator {\n\n\tconstructor( meshes ) {\n\n\t\tif ( ! Array.isArray( meshes ) ) {\n\n\t\t\tmeshes = [ meshes ];\n\n\t\t}\n\n\t\tconst finalMeshes = [];\n\t\tmeshes.forEach( object => {\n\n\t\t\tobject.traverseVisible( c => {\n\n\t\t\t\tif ( c.isMesh ) {\n\n\t\t\t\t\tfinalMeshes.push( c );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t\tthis.meshes = finalMeshes;\n\t\tthis.useGroups = true;\n\t\tthis.applyWorldTransforms = true;\n\t\tthis.attributes = [ 'position', 'normal', 'color', 'tangent', 'uv', 'uv2' ];\n\t\tthis._intermediateGeometry = new Array( finalMeshes.length ).fill().map( () => new BufferGeometry() );\n\t\tthis._diffMap = new WeakMap();\n\n\t}\n\n\tgetMaterials() {\n\n\t\tconst materials = [];\n\t\tthis.meshes.forEach( mesh => {\n\n\t\t\tif ( Array.isArray( mesh.material ) ) {\n\n\t\t\t\tmaterials.push( ...mesh.material );\n\n\t\t\t} else {\n\n\t\t\t\tmaterials.push( mesh.material );\n\n\t\t\t}\n\n\t\t} );\n\t\treturn materials;\n\n\t}\n\n\tgenerate( targetGeometry = new BufferGeometry() ) {\n\n\t\t// track which attributes have been updated and which to skip to avoid unnecessary attribute copies\n\t\tlet skipAttributes = [];\n\t\tconst { meshes, useGroups, _intermediateGeometry, _diffMap } = this;\n\t\tfor ( let i = 0, l = meshes.length; i < l; i ++ ) {\n\n\t\t\tconst mesh = meshes[ i ];\n\t\t\tconst geom = _intermediateGeometry[ i ];\n\t\t\tconst diff = _diffMap.get( mesh );\n\t\t\tif ( ! diff || diff.didChange( mesh ) ) {\n\n\t\t\t\tthis._convertToStaticGeometry( mesh, geom );\n\t\t\t\tskipAttributes.push( false );\n\n\t\t\t\tif ( ! diff ) {\n\n\t\t\t\t\t_diffMap.set( mesh, new GeometryDiff( mesh ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdiff.update();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tskipAttributes.push( true );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( _intermediateGeometry.length === 0 ) {\n\n\t\t\t// if there are no geometries then just create a fake empty geometry to provide\n\t\t\ttargetGeometry.setIndex( null );\n\n\t\t\t// remove all geometry\n\t\t\tconst attrs = targetGeometry.attributes;\n\t\t\tfor ( const key in attrs ) {\n\n\t\t\t\ttargetGeometry.deleteAttribute( key );\n\n\t\t\t}\n\n\t\t\t// create dummy attributes\n\t\t\tfor ( const key in this.attributes ) {\n\n\t\t\t\ttargetGeometry.setAttribute( this.attributes[ key ], new BufferAttribute( new Float32Array( 0 ), 4, false ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmergeBufferGeometries( _intermediateGeometry, { useGroups, skipAttributes }, targetGeometry );\n\n\t\t}\n\n\t\tfor ( const key in targetGeometry.attributes ) {\n\n\t\t\ttargetGeometry.attributes[ key ].needsUpdate = true;\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n\t_convertToStaticGeometry( mesh, targetGeometry = new BufferGeometry() ) {\n\n\t\tconst geometry = mesh.geometry;\n\t\tconst applyWorldTransforms = this.applyWorldTransforms;\n\t\tconst includeNormal = this.attributes.includes( 'normal' );\n\t\tconst includeTangent = this.attributes.includes( 'tangent' );\n\t\tconst attributes = geometry.attributes;\n\t\tconst targetAttributes = targetGeometry.attributes;\n\n\t\t// initialize the attributes if they don't exist\n\t\tif ( ! targetGeometry.index && geometry.index ) {\n\n\t\t\ttargetGeometry.index = geometry.index.clone();\n\n\t\t}\n\n\t\tif ( ! targetAttributes.position ) {\n\n\t\t\ttargetGeometry.setAttribute( 'position', createAttributeClone( attributes.position ) );\n\n\t\t}\n\n\t\tif ( includeNormal && ! targetAttributes.normal && attributes.normal ) {\n\n\t\t\ttargetGeometry.setAttribute( 'normal', createAttributeClone( attributes.normal ) );\n\n\t\t}\n\n\t\tif ( includeTangent && ! targetAttributes.tangent && attributes.tangent ) {\n\n\t\t\ttargetGeometry.setAttribute( 'tangent', createAttributeClone( attributes.tangent ) );\n\n\t\t}\n\n\t\t// ensure the attributes are consistent\n\t\tvalidateAttributes( geometry.index, targetGeometry.index );\n\t\tvalidateAttributes( attributes.position, targetAttributes.position );\n\n\t\tif ( includeNormal ) {\n\n\t\t\tvalidateAttributes( attributes.normal, targetAttributes.normal );\n\n\t\t}\n\n\t\tif ( includeTangent ) {\n\n\t\t\tvalidateAttributes( attributes.tangent, targetAttributes.tangent );\n\n\t\t}\n\n\t\t// generate transformed vertex attribute data\n\t\tconst position = attributes.position;\n\t\tconst normal = includeNormal ? attributes.normal : null;\n\t\tconst tangent = includeTangent ? attributes.tangent : null;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphNormal = geometry.morphAttributes.normal;\n\t\tconst morphTangent = geometry.morphAttributes.tangent;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\tconst morphInfluences = mesh.morphTargetInfluences;\n\t\tconst normalMatrix = new Matrix3();\n\t\tnormalMatrix.getNormalMatrix( mesh.matrixWorld );\n\n\t\t// copy the index\n\t\tif ( geometry.index ) {\n\n\t\t\ttargetGeometry.index.array.set( geometry.index.array );\n\n\t\t}\n\n\t\t// copy and apply other attributes\n\t\tfor ( let i = 0, l = attributes.position.count; i < l; i ++ ) {\n\n\t\t\t_positionVector.fromBufferAttribute( position, i );\n\t\t\tif ( normal ) {\n\n\t\t\t\t_normalVector.fromBufferAttribute( normal, i );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\t_tangentVector4.fromBufferAttribute( tangent, i );\n\t\t\t\t_tangentVector.fromBufferAttribute( tangent, i );\n\n\t\t\t}\n\n\t\t\t// apply morph target transform\n\t\t\tif ( morphInfluences ) {\n\n\t\t\t\tif ( morphPosition ) {\n\n\t\t\t\t\tapplyMorphTarget( morphPosition, morphInfluences, morphTargetsRelative, i, _positionVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphNormal ) {\n\n\t\t\t\t\tapplyMorphTarget( morphNormal, morphInfluences, morphTargetsRelative, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( morphTangent ) {\n\n\t\t\t\t\tapplyMorphTarget( morphTangent, morphInfluences, morphTargetsRelative, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// apply bone transform\n\t\t\tif ( mesh.isSkinnedMesh ) {\n\n\t\t\t\tmesh.applyBoneTransform( i, _positionVector );\n\t\t\t\tif ( normal ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _normalVector );\n\n\t\t\t\t}\n\n\t\t\t\tif ( tangent ) {\n\n\t\t\t\t\tboneNormalTransform( mesh, i, _tangentVector );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// update the vectors of the attributes\n\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t_positionVector.applyMatrix4( mesh.matrixWorld );\n\n\t\t\t}\n\n\t\t\ttargetAttributes.position.setXYZ( i, _positionVector.x, _positionVector.y, _positionVector.z );\n\n\t\t\tif ( normal ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_normalVector.applyNormalMatrix( normalMatrix );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.normal.setXYZ( i, _normalVector.x, _normalVector.y, _normalVector.z );\n\n\t\t\t}\n\n\t\t\tif ( tangent ) {\n\n\t\t\t\tif ( applyWorldTransforms ) {\n\n\t\t\t\t\t_tangentVector.transformDirection( mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\ttargetAttributes.tangent.setXYZW( i, _tangentVector.x, _tangentVector.y, _tangentVector.z, _tangentVector4.w );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// copy other attributes over\n\t\tfor ( const i in this.attributes ) {\n\n\t\t\tconst key = this.attributes[ i ];\n\t\t\tif ( key === 'position' || key === 'tangent' || key === 'normal' || ! ( key in attributes ) ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! targetAttributes[ key ] ) {\n\n\t\t\t\ttargetGeometry.setAttribute( key, createAttributeClone( attributes[ key ] ) );\n\n\t\t\t}\n\n\t\t\tvalidateAttributes( attributes[ key ], targetAttributes[ key ] );\n\t\t\tcopyAttributeContents( attributes[ key ], targetAttributes[ key ] );\n\n\t\t}\n\n\t\tif ( mesh.matrixWorld.determinant() < 0 ) {\n\n\t\t\tinvertGeometry( targetGeometry );\n\n\t\t}\n\n\t\treturn targetGeometry;\n\n\t}\n\n}\n", "export * from './glsl/common_functions.glsl.js';\nexport * from './glsl/bvh_distance_functions.glsl.js';\nexport * from './glsl/bvh_ray_functions.glsl.js';\nexport * from './glsl/bvh_struct_definitions.glsl.js';\n", "export const common_functions = /* glsl */`\n\n// A stack of uint32 indices can can store the indices for\n// a perfectly balanced tree with a depth up to 31. Lower stack\n// depth gets higher performance.\n//\n// However not all trees are balanced. Best value to set this to\n// is the trees max depth.\n#ifndef BVH_STACK_DEPTH\n#define BVH_STACK_DEPTH 60\n#endif\n\n#ifndef INFINITY\n#define INFINITY 1e20\n#endif\n\n// Utilities\nuvec4 uTexelFetch1D( usampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nivec4 iTexelFetch1D( isampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 texelFetch1D( sampler2D tex, uint index ) {\n\n\tuint width = uint( textureSize( tex, 0 ).x );\n\tuvec2 uv;\n\tuv.x = index % width;\n\tuv.y = index / width;\n\n\treturn texelFetch( tex, ivec2( uv ), 0 );\n\n}\n\nvec4 textureSampleBarycoord( sampler2D tex, vec3 barycoord, uvec3 faceIndices ) {\n\n\treturn\n\t\tbarycoord.x * texelFetch1D( tex, faceIndices.x ) +\n\t\tbarycoord.y * texelFetch1D( tex, faceIndices.y ) +\n\t\tbarycoord.z * texelFetch1D( tex, faceIndices.z );\n\n}\n\nvoid ndcToCameraRay(\n\tvec2 coord, mat4 cameraWorld, mat4 invProjectionMatrix,\n\tout vec3 rayOrigin, out vec3 rayDirection\n) {\n\n\t// get camera look direction and near plane for camera clipping\n\tvec4 lookDirection = cameraWorld * vec4( 0.0, 0.0, - 1.0, 0.0 );\n\tvec4 nearVector = invProjectionMatrix * vec4( 0.0, 0.0, - 1.0, 1.0 );\n\tfloat near = abs( nearVector.z / nearVector.w );\n\n\t// get the camera direction and position from camera matrices\n\tvec4 origin = cameraWorld * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec4 direction = invProjectionMatrix * vec4( coord, 0.5, 1.0 );\n\tdirection /= direction.w;\n\tdirection = cameraWorld * direction - origin;\n\n\t// slide the origin along the ray until it sits at the near clip plane position\n\torigin.xyz += direction.xyz * near / dot( direction, lookDirection );\n\n\trayOrigin = origin.xyz;\n\trayDirection = direction.xyz;\n\n}\n`;\n", "// Distance to Point\nexport const bvh_distance_functions = /* glsl */`\n\nfloat dot2( vec3 v ) {\n\n\treturn dot( v, v );\n\n}\n\n// https://www.shadertoy.com/view/ttfGWl\nvec3 closestPointToTriangle( vec3 p, vec3 v0, vec3 v1, vec3 v2, out vec3 barycoord ) {\n\n    vec3 v10 = v1 - v0;\n    vec3 v21 = v2 - v1;\n    vec3 v02 = v0 - v2;\n\n\tvec3 p0 = p - v0;\n\tvec3 p1 = p - v1;\n\tvec3 p2 = p - v2;\n\n    vec3 nor = cross( v10, v02 );\n\n    // method 2, in barycentric space\n    vec3  q = cross( nor, p0 );\n    float d = 1.0 / dot2( nor );\n    float u = d * dot( q, v02 );\n    float v = d * dot( q, v10 );\n    float w = 1.0 - u - v;\n\n\tif( u < 0.0 ) {\n\n\t\tw = clamp( dot( p2, v02 ) / dot2( v02 ), 0.0, 1.0 );\n\t\tu = 0.0;\n\t\tv = 1.0 - w;\n\n\t} else if( v < 0.0 ) {\n\n\t\tu = clamp( dot( p0, v10 ) / dot2( v10 ), 0.0, 1.0 );\n\t\tv = 0.0;\n\t\tw = 1.0 - u;\n\n\t} else if( w < 0.0 ) {\n\n\t\tv = clamp( dot( p1, v21 ) / dot2( v21 ), 0.0, 1.0 );\n\t\tw = 0.0;\n\t\tu = 1.0-v;\n\n\t}\n\n\tbarycoord = vec3( u, v, w );\n    return u * v1 + v * v2 + w * v0;\n\n}\n\nfloat distanceToTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// point and cut off range\n\tvec3 point, float closestDistanceSquared,\n\n\t// outputs\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord, inout float side, inout vec3 outPoint\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\t// get the closest point and barycoord\n\t\tvec3 closestPoint = closestPointToTriangle( point, a, b, c, localBarycoord );\n\t\tvec3 delta = point - closestPoint;\n\t\tfloat sqDist = dot2( delta );\n\t\tif ( sqDist < closestDistanceSquared ) {\n\n\t\t\t// set the output results\n\t\t\tclosestDistanceSquared = sqDist;\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = normalize( cross( a - b, b - c ) );\n\t\t\tbarycoord = localBarycoord;\n\t\t\toutPoint = closestPoint;\n\t\t\tside = sign( dot( faceNormal, delta ) );\n\n\t\t}\n\n\t}\n\n\treturn closestDistanceSquared;\n\n}\n\nfloat distanceSqToBounds( vec3 point, vec3 boundsMin, vec3 boundsMax ) {\n\n\tvec3 clampedPoint = clamp( point, boundsMin, boundsMax );\n\tvec3 delta = point - clampedPoint;\n\treturn dot( delta, delta );\n\n}\n\nfloat distanceSqToBVHNodeBoundsPoint( vec3 point, sampler2D bvhBounds, uint currNodeIndex ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn distanceSqToBounds( point, boundsMin, boundsMax );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\\\n\tbvhClosestPointToPoint(\\\n\t\tbvh,\\\n\t\tpoint, faceIndices, faceNormal, barycoord, side, outPoint\\\n\t)\\\n\t_bvhClosestPointToPoint(\\\n\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\\\n\t\tpoint, faceIndices, faceNormal, barycoord, side, outPoint\\\n\t)\n\nfloat _bvhClosestPointToPoint(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// point to check\n\tvec3 point,\n\n\t// output variables\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout vec3 outPoint\n ) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat closestDistanceSquared = pow( 100000.0, 2.0 );\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, currNodeIndex );\n\t\tif ( boundsHitDistance > closestDistanceSquared ) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\t\t\tclosestDistanceSquared = distanceToTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count, point, closestDistanceSquared,\n\n\t\t\t\t// outputs\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, outPoint\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\t\t\tbool leftToRight = distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, leftIndex ) < distanceSqToBVHNodeBoundsPoint( point, bvh_bvhBounds, rightIndex );//rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn sqrt( closestDistanceSquared );\n\n}\n`;\n", "export const bvh_ray_functions = /* glsl */`\n\n#ifndef TRI_INTERSECT_EPSILON\n#define TRI_INTERSECT_EPSILON 1e-5\n#endif\n\n// Raycasting\nbool intersectsBounds( vec3 rayOrigin, vec3 rayDirection, vec3 boundsMin, vec3 boundsMax, out float dist ) {\n\n\t// https://www.reddit.com/r/opengl/comments/8ntzz5/fast_glsl_ray_box_intersection/\n\t// https://tavianator.com/2011/ray_box.html\n\tvec3 invDir = 1.0 / rayDirection;\n\n\t// find intersection distances for each plane\n\tvec3 tMinPlane = invDir * ( boundsMin - rayOrigin );\n\tvec3 tMaxPlane = invDir * ( boundsMax - rayOrigin );\n\n\t// get the min and max distances from each intersection\n\tvec3 tMinHit = min( tMaxPlane, tMinPlane );\n\tvec3 tMaxHit = max( tMaxPlane, tMinPlane );\n\n\t// get the furthest hit distance\n\tvec2 t = max( tMinHit.xx, tMinHit.yz );\n\tfloat t0 = max( t.x, t.y );\n\n\t// get the minimum hit distance\n\tt = min( tMaxHit.xx, tMaxHit.yz );\n\tfloat t1 = min( t.x, t.y );\n\n\t// set distance to 0.0 if the ray starts inside the box\n\tdist = max( t0, 0.0 );\n\n\treturn t1 >= dist;\n\n}\n\nbool intersectsTriangle(\n\tvec3 rayOrigin, vec3 rayDirection, vec3 a, vec3 b, vec3 c,\n\tout vec3 barycoord, out vec3 norm, out float dist, out float side\n) {\n\n\t// https://stackoverflow.com/questions/42740765/intersection-between-line-and-triangle-in-3d\n\tvec3 edge1 = b - a;\n\tvec3 edge2 = c - a;\n\tnorm = cross( edge1, edge2 );\n\n\tfloat det = - dot( rayDirection, norm );\n\tfloat invdet = 1.0 / det;\n\n\tvec3 AO = rayOrigin - a;\n\tvec3 DAO = cross( AO, rayDirection );\n\n\tvec4 uvt;\n\tuvt.x = dot( edge2, DAO ) * invdet;\n\tuvt.y = - dot( edge1, DAO ) * invdet;\n\tuvt.z = dot( AO, norm ) * invdet;\n\tuvt.w = 1.0 - uvt.x - uvt.y;\n\n\t// set the hit information\n\tbarycoord = uvt.wxy; // arranged in A, B, C order\n\tdist = uvt.z;\n\tside = sign( det );\n\tnorm = side * normalize( norm );\n\n\t// add an epsilon to avoid misses between triangles\n\tuvt += vec4( TRI_INTERSECT_EPSILON );\n\n\treturn all( greaterThanEqual( uvt, vec4( 0.0 ) ) );\n\n}\n\nbool intersectTriangles(\n\t// geometry info and triangle range\n\tsampler2D positionAttr, usampler2D indexAttr, uint offset, uint count,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// outputs\n\tinout float minDistance, inout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\tbool found = false;\n\tvec3 localBarycoord, localNormal;\n\tfloat localDist, localSide;\n\tfor ( uint i = offset, l = offset + count; i < l; i ++ ) {\n\n\t\tuvec3 indices = uTexelFetch1D( indexAttr, i ).xyz;\n\t\tvec3 a = texelFetch1D( positionAttr, indices.x ).rgb;\n\t\tvec3 b = texelFetch1D( positionAttr, indices.y ).rgb;\n\t\tvec3 c = texelFetch1D( positionAttr, indices.z ).rgb;\n\n\t\tif (\n\t\t\tintersectsTriangle( rayOrigin, rayDirection, a, b, c, localBarycoord, localNormal, localDist, localSide )\n\t\t\t&& localDist < minDistance\n\t\t) {\n\n\t\t\tfound = true;\n\t\t\tminDistance = localDist;\n\n\t\t\tfaceIndices = uvec4( indices.xyz, i );\n\t\t\tfaceNormal = localNormal;\n\n\t\t\tside = localSide;\n\t\t\tbarycoord = localBarycoord;\n\t\t\tdist = localDist;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n\nbool intersectsBVHNodeBounds( vec3 rayOrigin, vec3 rayDirection, sampler2D bvhBounds, uint currNodeIndex, out float dist ) {\n\n\tuint cni2 = currNodeIndex * 2u;\n\tvec3 boundsMin = texelFetch1D( bvhBounds, cni2 ).xyz;\n\tvec3 boundsMax = texelFetch1D( bvhBounds, cni2 + 1u ).xyz;\n\treturn intersectsBounds( rayOrigin, rayDirection, boundsMin, boundsMax, dist );\n\n}\n\n// use a macro to hide the fact that we need to expand the struct into separate fields\n#define\\\n\tbvhIntersectFirstHit(\\\n\t\tbvh,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\\\n\t_bvhIntersectFirstHit(\\\n\t\tbvh.position, bvh.index, bvh.bvhBounds, bvh.bvhContents,\\\n\t\trayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist\\\n\t)\n\nbool _bvhIntersectFirstHit(\n\t// bvh info\n\tsampler2D bvh_position, usampler2D bvh_index, sampler2D bvh_bvhBounds, usampler2D bvh_bvhContents,\n\n\t// ray\n\tvec3 rayOrigin, vec3 rayDirection,\n\n\t// output variables split into separate variables due to output precision\n\tinout uvec4 faceIndices, inout vec3 faceNormal, inout vec3 barycoord,\n\tinout float side, inout float dist\n) {\n\n\t// stack needs to be twice as long as the deepest tree we expect because\n\t// we push both the left and right child onto the stack every traversal\n\tint ptr = 0;\n\tuint stack[ BVH_STACK_DEPTH ];\n\tstack[ 0 ] = 0u;\n\n\tfloat triangleDistance = INFINITY;\n\tbool found = false;\n\twhile ( ptr > - 1 && ptr < BVH_STACK_DEPTH ) {\n\n\t\tuint currNodeIndex = stack[ ptr ];\n\t\tptr --;\n\n\t\t// check if we intersect the current bounds\n\t\tfloat boundsHitDistance;\n\t\tif (\n\t\t\t! intersectsBVHNodeBounds( rayOrigin, rayDirection, bvh_bvhBounds, currNodeIndex, boundsHitDistance )\n\t\t\t|| boundsHitDistance > triangleDistance\n\t\t) {\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tuvec2 boundsInfo = uTexelFetch1D( bvh_bvhContents, currNodeIndex ).xy;\n\t\tbool isLeaf = bool( boundsInfo.x & 0xffff0000u );\n\n\t\tif ( isLeaf ) {\n\n\t\t\tuint count = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint offset = boundsInfo.y;\n\n\t\t\tfound = intersectTriangles(\n\t\t\t\tbvh_position, bvh_index, offset, count,\n\t\t\t\trayOrigin, rayDirection, triangleDistance,\n\t\t\t\tfaceIndices, faceNormal, barycoord, side, dist\n\t\t\t) || found;\n\n\t\t} else {\n\n\t\t\tuint leftIndex = currNodeIndex + 1u;\n\t\t\tuint splitAxis = boundsInfo.x & 0x0000ffffu;\n\t\t\tuint rightIndex = boundsInfo.y;\n\n\t\t\tbool leftToRight = rayDirection[ splitAxis ] >= 0.0;\n\t\t\tuint c1 = leftToRight ? leftIndex : rightIndex;\n\t\t\tuint c2 = leftToRight ? rightIndex : leftIndex;\n\n\t\t\t// set c2 in the stack so we traverse it later. We need to keep track of a pointer in\n\t\t\t// the stack while we traverse. The second pointer added is the one that will be\n\t\t\t// traversed first\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c2;\n\n\t\t\tptr ++;\n\t\t\tstack[ ptr ] = c1;\n\n\t\t}\n\n\t}\n\n\treturn found;\n\n}\n`;\n", "// Note that a struct cannot be used for the hit record including faceIndices, faceNormal, barycoord,\n// side, and dist because on some mobile GPUS (such as Adreno) numbers are afforded less precision specifically\n// when in a struct leading to inaccurate hit results. See KhronosGroup/WebGL#3351 for more details.\nexport const bvh_struct_definitions = /* glsl */`\nstruct BVH {\n\n\tusampler2D index;\n\tsampler2D position;\n\n\tsampler2D bvhBounds;\n\tusampler2D bvhContents;\n\n};\n`;\n", "export { MeshBVH } from './core/MeshBVH.js';\nexport { MeshBVHHelper } from './objects/MeshBVHHelper.js';\nexport { CENTER, AVERAGE, SAH, NOT_INTERSECTED, INTERSECTED, CONTAINED } from './core/Constants.js';\nexport { getBVHExtremes, estimateMemoryInBytes, getJSONStructure, validateBounds } from './debug/Debug.js';\nexport * from './utils/ExtensionUtilities.js';\nexport { getTriangleHitPointInfo } from './utils/TriangleUtilities.js';\nexport * from './math/ExtendedTriangle.js';\nexport * from './math/OrientedBox.js';\nexport * from './gpu/MeshBVHUniformStruct.js';\nexport * from './gpu/VertexAttributeTexture.js';\nexport * from './utils/StaticGeometryGenerator.js';\nexport * as BVHShaderGLSL from './gpu/BVHShaderGLSL.js';\n\n// backwards compatibility\nimport * as BVHShaderGLSL from './gpu/BVHShaderGLSL.js';\nexport const shaderStructs = BVHShaderGLSL.bvh_struct_definitions;\nexport const shaderDistanceFunction = BVHShaderGLSL.bvh_distance_functions;\nexport const shaderIntersectFunction = `\n\t${ BVHShaderGLSL.common_functions }\n\t${ BVHShaderGLSL.bvh_ray_functions }\n`;\n", "import * as React from 'react';\n\n/* eslint-disable react-hooks/rules-of-hooks */\nfunction useContextBridge(...contexts) {\n  const cRef = React.useRef([]);\n  cRef.current = contexts.map(context => React.useContext(context));\n  return React.useMemo(() => ({\n    children\n  }) => contexts.reduceRight((acc, Context, i) => /*#__PURE__*/React.createElement(Context.Provider, {\n    value: cRef.current[i],\n    children: acc\n  }), children\n  /*\n   * done this way in reference to:\n   * https://github.com/DefinitelyTyped/DefinitelyTyped/issues/44572#issuecomment-625878049\n   * https://github.com/microsoft/TypeScript/issues/14729\n   */), []);\n}\n\nexport { useContextBridge };\n", "import * as React from 'react';\nimport { Object3D, AnimationMixer } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nfunction useAnimations(clips, root) {\n  const ref = React.useRef();\n  const [actualRef] = React.useState(() => root ? root instanceof Object3D ? {\n    current: root\n  } : root : ref);\n  const [mixer] = React.useState(() => new AnimationMixer(undefined));\n  React.useLayoutEffect(() => {\n    if (root) actualRef.current = root instanceof Object3D ? root : root.current;\n    mixer._root = actualRef.current;\n  });\n  const lazyActions = React.useRef({});\n  const api = React.useMemo(() => {\n    const actions = {};\n    clips.forEach(clip => Object.defineProperty(actions, clip.name, {\n      enumerable: true,\n      get() {\n        if (actualRef.current) {\n          return lazyActions.current[clip.name] || (lazyActions.current[clip.name] = mixer.clipAction(clip, actualRef.current));\n        }\n      },\n      configurable: true\n    }));\n    return {\n      ref: actualRef,\n      clips,\n      actions,\n      names: clips.map(c => c.name),\n      mixer\n    };\n  }, [clips]);\n  useFrame((state, delta) => mixer.update(delta));\n  React.useEffect(() => {\n    const currentRoot = actualRef.current;\n    return () => {\n      // Clean up only when clips change, wipe out lazy actions and uncache clips\n      lazyActions.current = {};\n      mixer.stopAllAction();\n      Object.values(api.actions).forEach(action => {\n        if (currentRoot) {\n          mixer.uncacheAction(action, currentRoot);\n        }\n      });\n    };\n  }, [clips]);\n  return api;\n}\n\nexport { useAnimations };\n", "import * as React from 'react';\nimport { addEffect, addAfterEffect } from '@react-three/fiber';\n\nfunction useIntersect(onChange) {\n  const ref = React.useRef(null);\n  const check = React.useRef(false);\n  const temp = React.useRef(false);\n  const callback = React.useRef(onChange);\n  React.useLayoutEffect(() => void (callback.current = onChange), [onChange]);\n  React.useEffect(() => {\n    const obj = ref.current;\n    if (obj) {\n      // Stamp out frustum check pre-emptively\n      const unsub1 = addEffect(() => {\n        check.current = false;\n        return true;\n      });\n      // If the object is inside the frustum three will call onRender\n      const oldOnRender = obj.onBeforeRender;\n      obj.onBeforeRender = () => check.current = true;\n      // Compare the check value against the temp value, if it differs set state\n      const unsub2 = addAfterEffect(() => {\n        if (check.current !== temp.current) callback.current == null || callback.current(temp.current = check.current);\n        return true;\n      });\n      return () => {\n        obj.onBeforeRender = oldOnRender;\n        unsub1();\n        unsub2();\n      };\n    }\n  }, []);\n  return ref;\n}\n\nexport { useIntersect };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { applyProps } from '@react-three/fiber';\n\n// credits for the box-projecting shader code go to codercat (https://codercat.tk)\n// and @0beqz https://gist.github.com/0beqz/8d51b4ae16d68021a09fb504af708fca\n\nconst worldposReplace = /* glsl */`\n#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n  vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n  #ifdef BOX_PROJECTED_ENV_MAP\n    vWorldPosition = worldPosition.xyz;\n  #endif\n#endif\n`;\nconst boxProjectDefinitions = /*glsl */`\n#ifdef BOX_PROJECTED_ENV_MAP\n  uniform vec3 envMapSize;\n  uniform vec3 envMapPosition;\n  varying vec3 vWorldPosition;\n    \n  vec3 parallaxCorrectNormal( vec3 v, vec3 cubeSize, vec3 cubePos ) {\n    vec3 nDir = normalize( v );\n    vec3 rbmax = ( .5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n    vec3 rbmin = ( -.5 * cubeSize + cubePos - vWorldPosition ) / nDir;\n    vec3 rbminmax;\n    rbminmax.x = ( nDir.x > 0. ) ? rbmax.x : rbmin.x;\n    rbminmax.y = ( nDir.y > 0. ) ? rbmax.y : rbmin.y;\n    rbminmax.z = ( nDir.z > 0. ) ? rbmax.z : rbmin.z;\n    float correction = min( min( rbminmax.x, rbminmax.y ), rbminmax.z );\n    vec3 boxIntersection = vWorldPosition + nDir * correction;    \n    return boxIntersection - cubePos;\n  }\n#endif\n`;\n\n// will be inserted after \"vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\"\nconst getIBLIrradiance_patch = /* glsl */`\n#ifdef BOX_PROJECTED_ENV_MAP\n  worldNormal = parallaxCorrectNormal( worldNormal, envMapSize, envMapPosition );\n#endif\n`;\n\n// will be inserted after \"reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\"\nconst getIBLRadiance_patch = /* glsl */`\n#ifdef BOX_PROJECTED_ENV_MAP\n  reflectVec = parallaxCorrectNormal( reflectVec, envMapSize, envMapPosition );\n#endif\n`;\n\n// FIXME Replace with `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n\nfunction boxProjectedEnvMap(shader, envMapPosition, envMapSize) {\n  // defines\n  shader.defines.BOX_PROJECTED_ENV_MAP = true;\n  // uniforms\n  shader.uniforms.envMapPosition = {\n    value: envMapPosition\n  };\n  shader.uniforms.envMapSize = {\n    value: envMapSize\n  };\n  // vertex shader\n  shader.vertexShader = `\n  varying vec3 vWorldPosition;\n  ${shader.vertexShader.replace('#include <worldpos_vertex>', worldposReplace)}`;\n  // fragment shader\n  shader.fragmentShader = `\n    ${boxProjectDefinitions}\n    ${shader.fragmentShader.replace('#include <envmap_physical_pars_fragment>', THREE.ShaderChunk.envmap_physical_pars_fragment).replace('vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );', `vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n         ${getIBLIrradiance_patch}\n         `).replace('reflectVec = inverseTransformDirection( reflectVec, viewMatrix );', `reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n         ${getIBLRadiance_patch}\n        `)}`;\n}\nfunction useBoxProjectedEnv(position = new THREE.Vector3(), size = new THREE.Vector3()) {\n  const [config] = React.useState(() => ({\n    position: new THREE.Vector3(),\n    size: new THREE.Vector3()\n  }));\n  applyProps(config, {\n    position,\n    size\n  });\n  const ref = React.useRef(null);\n  const spread = React.useMemo(() => ({\n    ref,\n    onBeforeCompile: shader => boxProjectedEnvMap(shader, config.position, config.size),\n    customProgramCacheKey: () => JSON.stringify(config.position.toArray()) + JSON.stringify(config.size.toArray())\n  }), [...config.position.toArray(), ...config.size.toArray()]);\n  React.useLayoutEffect(() => void (ref.current.needsUpdate = true), [config]);\n  return spread;\n}\n\nexport { useBoxProjectedEnv };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nconst boundingBox = /* @__PURE__ */new THREE.Box3();\nconst boundingBoxSize = /* @__PURE__ */new THREE.Vector3();\nconst BBAnchor = ({\n  anchor,\n  ...props\n}) => {\n  const ref = React.useRef(null);\n  const parentRef = React.useRef(null);\n\n  // Reattach group created by this component to the parent's parent,\n  // so it becomes a sibling of its initial parent.\n  // We do that so the children have no impact on a bounding box of a parent.\n  React.useEffect(() => {\n    var _ref$current;\n    if ((_ref$current = ref.current) != null && (_ref$current = _ref$current.parent) != null && _ref$current.parent) {\n      parentRef.current = ref.current.parent;\n      ref.current.parent.parent.add(ref.current);\n    }\n  }, []);\n  useFrame(() => {\n    if (parentRef.current) {\n      boundingBox.setFromObject(parentRef.current);\n      boundingBox.getSize(boundingBoxSize);\n      ref.current.position.set(parentRef.current.position.x + boundingBoxSize.x * (Array.isArray(anchor) ? anchor[0] : anchor.x) / 2, parentRef.current.position.y + boundingBoxSize.y * (Array.isArray(anchor) ? anchor[1] : anchor.y) / 2, parentRef.current.position.z + boundingBoxSize.z * (Array.isArray(anchor) ? anchor[2] : anchor.z) / 2);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n};\n\nexport { BBAnchor };\n", "import * as React from 'react';\nimport { useMemo, useCallback } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Texture } from 'three';\n\n// smooth new sample (measurement) based on previous sample (current)\nfunction smoothAverage(current, measurement, smoothing = 0.9) {\n  return measurement * smoothing + current * (1.0 - smoothing);\n}\n\n// default ease\nconst easeCircleOut = x => Math.sqrt(1 - Math.pow(x - 1, 2));\nclass TrailTextureImpl {\n  constructor({\n    size = 256,\n    maxAge = 750,\n    radius = 0.3,\n    intensity = 0.2,\n    interpolate = 0,\n    smoothing = 0,\n    minForce = 0.3,\n    blend = 'screen',\n    // source-over is canvas default. Others are slower\n    ease = easeCircleOut\n  } = {}) {\n    this.size = size;\n    this.maxAge = maxAge;\n    this.radius = radius;\n    this.intensity = intensity;\n    this.ease = ease;\n    this.interpolate = interpolate;\n    this.smoothing = smoothing;\n    this.minForce = minForce;\n    this.blend = blend;\n    this.trail = [];\n    this.force = 0;\n    this.initTexture();\n  }\n  initTexture() {\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = this.size;\n    const ctx = this.canvas.getContext('2d');\n    if (ctx === null) {\n      throw new Error('2D not available');\n    }\n    this.ctx = ctx;\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    this.texture = new Texture(this.canvas);\n    this.canvas.id = 'touchTexture';\n    this.canvas.style.width = this.canvas.style.height = `${this.canvas.width}px`;\n  }\n  update(delta) {\n    this.clear();\n\n    // age points\n    this.trail.forEach((point, i) => {\n      point.age += delta * 1000;\n      // remove old\n      if (point.age > this.maxAge) {\n        this.trail.splice(i, 1);\n      }\n    });\n\n    // reset force when empty (when smoothing)\n    if (!this.trail.length) this.force = 0;\n    this.trail.forEach(point => {\n      this.drawTouch(point);\n    });\n    this.texture.needsUpdate = true;\n  }\n  clear() {\n    this.ctx.globalCompositeOperation = 'source-over';\n    this.ctx.fillStyle = 'black';\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n  addTouch(point) {\n    const last = this.trail[this.trail.length - 1];\n    if (last) {\n      const dx = last.x - point.x;\n      const dy = last.y - point.y;\n      const dd = dx * dx + dy * dy;\n      const force = Math.max(this.minForce, Math.min(dd * 10000, 1));\n      this.force = smoothAverage(force, this.force, this.smoothing);\n      if (!!this.interpolate) {\n        const lines = Math.ceil(dd / Math.pow(this.radius * 0.5 / this.interpolate, 2));\n        if (lines > 1) {\n          for (let i = 1; i < lines; i++) {\n            this.trail.push({\n              x: last.x - dx / lines * i,\n              y: last.y - dy / lines * i,\n              age: 0,\n              force\n            });\n          }\n        }\n      }\n    }\n    this.trail.push({\n      x: point.x,\n      y: point.y,\n      age: 0,\n      force: this.force\n    });\n  }\n  drawTouch(point) {\n    const pos = {\n      x: point.x * this.size,\n      y: (1 - point.y) * this.size\n    };\n    let intensity = 1;\n    if (point.age < this.maxAge * 0.3) {\n      intensity = this.ease(point.age / (this.maxAge * 0.3));\n    } else {\n      intensity = this.ease(1 - (point.age - this.maxAge * 0.3) / (this.maxAge * 0.7));\n    }\n    intensity *= point.force;\n\n    // apply blending\n    this.ctx.globalCompositeOperation = this.blend;\n    const radius = this.size * this.radius * intensity;\n    const grd = this.ctx.createRadialGradient(pos.x, pos.y, Math.max(0, radius * 0.25), pos.x, pos.y, Math.max(0, radius));\n    grd.addColorStop(0, `rgba(255, 255, 255, ${this.intensity})`);\n    grd.addColorStop(1, `rgba(0, 0, 0, 0.0)`);\n    this.ctx.beginPath();\n    this.ctx.fillStyle = grd;\n    this.ctx.arc(pos.x, pos.y, Math.max(0, radius), 0, Math.PI * 2);\n    this.ctx.fill();\n  }\n}\nfunction useTrailTexture(config = {}) {\n  const {\n    size,\n    maxAge,\n    radius,\n    intensity,\n    interpolate,\n    smoothing,\n    minForce,\n    blend,\n    ease\n  } = config;\n  const trail = useMemo(() => new TrailTextureImpl(config), [size, maxAge, radius, intensity, interpolate, smoothing, minForce, blend, ease]);\n  useFrame((_, delta) => void trail.update(delta));\n  const onMove = useCallback(e => trail.addTouch(e.uv), [trail]);\n  return [trail.texture, onMove];\n}\n\n//\n\nconst TrailTexture = ({\n  children,\n  ...config\n}) => {\n  const ret = useTrailTexture(config);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(ret));\n};\n\nexport { TrailTexture, useTrailTexture };\n", "import * as React from 'react';\nimport { Text3D } from './Text3D.js';\nimport { Center } from './Center.js';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\n/**\n * A simple counter example component. Click to increment, meta-click to decrement.\n */\nconst Example = /* @__PURE__ */React.forwardRef(({\n  font,\n  color = '#cbcbcb',\n  bevelSize = 0.04,\n  debug = false,\n  children,\n  ...props\n}, fref) => {\n  const [counter, setCounter] = React.useState(0);\n  const incr = React.useCallback((x = 1) => setCounter(counter + x), [counter]);\n  const decr = React.useCallback((x = 1) => setCounter(counter - x), [counter]);\n\n  // ref-API\n  const api = React.useMemo(() => ({\n    incr,\n    decr\n  }), [incr, decr]);\n  React.useImperativeHandle(fref, () => api, [api]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: null\n  }, /*#__PURE__*/React.createElement(Center, {\n    top: true,\n    cacheKey: JSON.stringify({\n      counter,\n      font\n    })\n  }, /*#__PURE__*/React.createElement(Text3D, {\n    bevelEnabled: true,\n    bevelSize: bevelSize,\n    font: font\n  }, debug ? /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }) : /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    color: color\n  }), counter))), children);\n});\n\nexport { Example };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, Vector3, Sphere } from 'three';\nimport * as React from 'react';\n\nconst Center = /* @__PURE__ */React.forwardRef(function Center({\n  children,\n  disable,\n  disableX,\n  disableY,\n  disableZ,\n  left,\n  right,\n  top,\n  bottom,\n  front,\n  back,\n  onCentered,\n  precise = true,\n  cacheKey = 0,\n  ...props\n}, fRef) {\n  const ref = React.useRef(null);\n  const outer = React.useRef(null);\n  const inner = React.useRef(null);\n  React.useLayoutEffect(() => {\n    outer.current.matrixWorld.identity();\n    const box3 = new Box3().setFromObject(inner.current, precise);\n    const center = new Vector3();\n    const sphere = new Sphere();\n    const width = box3.max.x - box3.min.x;\n    const height = box3.max.y - box3.min.y;\n    const depth = box3.max.z - box3.min.z;\n    box3.getCenter(center);\n    box3.getBoundingSphere(sphere);\n    const vAlign = top ? height / 2 : bottom ? -height / 2 : 0;\n    const hAlign = left ? -width / 2 : right ? width / 2 : 0;\n    const dAlign = front ? depth / 2 : back ? -depth / 2 : 0;\n    outer.current.position.set(disable || disableX ? 0 : -center.x + hAlign, disable || disableY ? 0 : -center.y + vAlign, disable || disableZ ? 0 : -center.z + dAlign);\n\n    // Only fire onCentered if the bounding box has changed\n    if (typeof onCentered !== 'undefined') {\n      onCentered({\n        parent: ref.current.parent,\n        container: ref.current,\n        width,\n        height,\n        depth,\n        boundingBox: box3,\n        boundingSphere: sphere,\n        center: center,\n        verticalAlignment: vAlign,\n        horizontalAlignment: hAlign,\n        depthAlignment: dAlign\n      });\n    }\n  }, [cacheKey, onCentered, top, left, front, disable, disableX, disableY, disableZ, precise, right, bottom, back]);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)));\n});\n\nexport { Center };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\nimport { Instances, Instance } from './Instances.js';\nimport { Billboard } from './Billboard.js';\nimport { useSpriteLoader, getFirstFrame } from './useSpriteLoader.js';\n\n// Frame-related types\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction useSpriteAnimator() {\n  return React.useContext(context);\n}\n\n// Type guard for SpriteData\nfunction isSpriteData(data) {\n  return data !== null && 'meta' in data && 'frames' in data;\n}\nconst geometry = /* @__PURE__ */new THREE.PlaneGeometry(1, 1);\nconst SpriteAnimator = /* @__PURE__ */React.forwardRef(({\n  startFrame = 0,\n  endFrame,\n  fps = 30,\n  frameName = '',\n  textureDataURL,\n  textureImageURL,\n  loop = false,\n  numberOfFrames = 1,\n  autoPlay = true,\n  animationNames,\n  onStart,\n  onEnd,\n  onLoopEnd,\n  onFrame,\n  play,\n  pause = false,\n  flipX = false,\n  alphaTest = 0.0,\n  children,\n  asSprite = false,\n  offset,\n  playBackwards = false,\n  resetOnEnd = false,\n  maxItems = 1,\n  instanceItems = [[0, 0, 0]],\n  spriteDataset,\n  canvasRenderingContext2DSettings,\n  roundFramePosition = false,\n  meshProps = {},\n  ...props\n}, fref) => {\n  const ref = React.useRef(new THREE.Group());\n  const spriteData = React.useRef(null);\n  const matRef = React.useRef(null);\n  const spriteRef = React.useRef(null);\n  const timerOffset = React.useRef(window.performance.now());\n  const currentFrame = React.useRef(startFrame);\n  const currentFrameName = React.useRef(frameName);\n  const fpsInterval = fps > 0 ? 1000 / fps : 0;\n  const [spriteTexture, setSpriteTexture] = React.useState(new THREE.Texture());\n  const totalFrames = React.useRef(0);\n  const [aspect, setAspect] = React.useState(new THREE.Vector3(1, 1, 1));\n  const flipOffset = flipX ? -1 : 1;\n  const pauseRef = React.useRef(pause);\n  const pos = React.useRef(offset);\n  const softEnd = React.useRef(false);\n  const {\n    spriteObj,\n    loadJsonAndTexture\n  } = useSpriteLoader(null, null, animationNames, numberOfFrames, undefined, canvasRenderingContext2DSettings);\n  const frameNameRef = React.useRef(frameName);\n\n  // lite version for pre-loaded assets\n  const parseSpriteDataLite = React.useCallback((textureData, data) => {\n    if (data === null) {\n      if (numberOfFrames) {\n        //get size from texture\n\n        totalFrames.current = numberOfFrames;\n        if (playBackwards) {\n          currentFrame.current = numberOfFrames - 1;\n        }\n        spriteData.current = data;\n      }\n    } else {\n      var _spriteData$current$f, _spriteData$current;\n      spriteData.current = data;\n      if (spriteData.current && Array.isArray(spriteData.current.frames)) {\n        totalFrames.current = spriteData.current.frames.length;\n      } else if (spriteData.current && typeof spriteData.current === 'object' && frameNameRef.current) {\n        totalFrames.current = spriteData.current.frames[frameNameRef.current].length;\n      } else {\n        totalFrames.current = 0;\n      }\n      if (playBackwards) {\n        currentFrame.current = totalFrames.current - 1;\n      }\n      const {\n        w,\n        h\n      } = getFirstFrame((_spriteData$current$f = (_spriteData$current = spriteData.current) == null ? void 0 : _spriteData$current.frames) !== null && _spriteData$current$f !== void 0 ? _spriteData$current$f : [], frameNameRef.current).sourceSize;\n      const aspect = calculateAspectRatio(w, h);\n      setAspect(aspect);\n      if (matRef.current) {\n        matRef.current.map = textureData;\n      }\n    }\n    setSpriteTexture(textureData);\n  }, [numberOfFrames, playBackwards]);\n\n  // modify the sprite material after json is parsed and state updated\n  const modifySpritePosition = React.useCallback(() => {\n    if (!spriteData.current) return;\n    const {\n      meta: {\n        size: metaInfo\n      },\n      frames\n    } = spriteData.current;\n    const {\n      w: frameW,\n      h: frameH\n    } = Array.isArray(frames) ? frames[0].sourceSize : frameName ? frames[frameName] ? frames[frameName][0].sourceSize : {\n      w: 0,\n      h: 0\n    } : {\n      w: 0,\n      h: 0\n    };\n    if (matRef.current && matRef.current.map) {\n      matRef.current.map.wrapS = matRef.current.map.wrapT = THREE.RepeatWrapping;\n      matRef.current.map.center.set(0, 0);\n      matRef.current.map.repeat.set(1 * flipOffset / (metaInfo.w / frameW), 1 / (metaInfo.h / frameH));\n    }\n    //const framesH = (metaInfo.w - 1) / frameW\n    const framesV = (metaInfo.h - 1) / frameH;\n    const frameOffsetY = 1 / framesV;\n    if (matRef.current && matRef.current.map) {\n      matRef.current.map.offset.x = 0.0; //-matRef.current.map.repeat.x\n      matRef.current.map.offset.y = 1 - frameOffsetY;\n    }\n    if (onStart) {\n      onStart({\n        currentFrameName: frameName !== null && frameName !== void 0 ? frameName : '',\n        currentFrame: currentFrame.current\n      });\n    }\n  }, [flipOffset, frameName, onStart]);\n  const state = React.useMemo(() => ({\n    current: pos.current,\n    offset: pos.current,\n    imageUrl: textureImageURL,\n    hasEnded: false,\n    ref: fref\n  }), [textureImageURL, fref]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    pos.current = offset;\n  }, [offset]);\n  const calculateAspectRatio = (width, height) => {\n    var _spriteRef$current;\n    const ret = new THREE.Vector3();\n    const aspectRatio = height / width;\n    ret.set(1, aspectRatio, 1);\n    (_spriteRef$current = spriteRef.current) == null || _spriteRef$current.scale.copy(ret);\n    return ret;\n  };\n\n  // initial loads\n  React.useEffect(() => {\n    if (spriteDataset) {\n      var _spriteDataset$sprite;\n      parseSpriteDataLite(spriteDataset == null || (_spriteDataset$sprite = spriteDataset.spriteTexture) == null ? void 0 : _spriteDataset$sprite.clone(), spriteDataset.spriteData);\n    } else {\n      if (textureImageURL && textureDataURL) {\n        loadJsonAndTexture(textureImageURL, textureDataURL);\n      }\n    }\n  }, [loadJsonAndTexture, spriteDataset, textureDataURL, textureImageURL, parseSpriteDataLite]);\n  React.useEffect(() => {\n    if (spriteObj) {\n      var _spriteObj$spriteText;\n      parseSpriteDataLite(spriteObj == null || (_spriteObj$spriteText = spriteObj.spriteTexture) == null ? void 0 : _spriteObj$spriteText.clone(), spriteObj == null ? void 0 : spriteObj.spriteData);\n    }\n  }, [spriteObj, parseSpriteDataLite]);\n\n  // support backwards play\n  React.useEffect(() => {\n    state.hasEnded = false;\n    if (spriteData.current && playBackwards === true) {\n      var _ref;\n      currentFrame.current = ((_ref = spriteData.current.frames.length) !== null && _ref !== void 0 ? _ref : 0) - 1;\n    } else {\n      currentFrame.current = 0;\n    }\n  }, [playBackwards, state]);\n  React.useLayoutEffect(() => {\n    modifySpritePosition();\n  }, [spriteTexture, flipX, modifySpritePosition]);\n  React.useEffect(() => {\n    if (autoPlay) {\n      pauseRef.current = false;\n    }\n  }, [autoPlay]);\n  React.useLayoutEffect(() => {\n    if (currentFrameName.current !== frameName && frameName) {\n      currentFrame.current = 0;\n      currentFrameName.current = frameName;\n      state.hasEnded = false;\n      if (fpsInterval <= 0) {\n        currentFrame.current = endFrame || startFrame || 0;\n      }\n      // modifySpritePosition()\n      if (spriteData.current) {\n        const {\n          w,\n          h\n        } = getFirstFrame(spriteData.current.frames, frameName).sourceSize;\n        const _aspect = calculateAspectRatio(w, h);\n        setAspect(_aspect);\n      }\n    }\n  }, [frameName, fpsInterval, state, endFrame, startFrame]);\n\n  // run the animation on each frame\n  const runAnimation = () => {\n    if (!isSpriteData(spriteData.current)) return;\n    const {\n      meta: {\n        size: metaInfo\n      },\n      frames\n    } = spriteData.current;\n    const {\n      w: frameW,\n      h: frameH\n    } = getFirstFrame(frames, frameName).sourceSize;\n    const spriteFrames = Array.isArray(frames) ? frames : frameName ? frames[frameName] : [];\n    const _endFrame = endFrame || spriteFrames.length - 1;\n    var _offset = offset === undefined ? state.current : offset;\n    if (fpsInterval <= 0) {\n      currentFrame.current = endFrame || startFrame || 0;\n      calculateFinalPosition(frameW, frameH, metaInfo, spriteFrames);\n      return;\n    }\n    const now = window.performance.now();\n    const diff = now - timerOffset.current;\n    if (diff <= fpsInterval) return;\n\n    // conditionals to support backwards play\n    var endCondition = playBackwards ? currentFrame.current < 0 : currentFrame.current > _endFrame;\n    var onStartCondition = playBackwards ? currentFrame.current === _endFrame : currentFrame.current === 0;\n    var manualProgressEndCondition = playBackwards ? currentFrame.current < 0 : currentFrame.current >= _endFrame;\n    if (endCondition) {\n      currentFrame.current = loop ? startFrame !== null && startFrame !== void 0 ? startFrame : 0 : 0;\n      if (playBackwards) {\n        currentFrame.current = _endFrame;\n      }\n      if (loop) {\n        onLoopEnd == null || onLoopEnd({\n          currentFrameName: frameName !== null && frameName !== void 0 ? frameName : '',\n          currentFrame: currentFrame.current\n        });\n      } else {\n        onEnd == null || onEnd({\n          currentFrameName: frameName !== null && frameName !== void 0 ? frameName : '',\n          currentFrame: currentFrame.current\n        });\n        state.hasEnded = !resetOnEnd;\n        if (resetOnEnd) {\n          pauseRef.current = true;\n          //calculateFinalPosition(frameW, frameH, metaInfo, spriteFrames)\n        }\n      }\n      if (!loop) return;\n    } else if (onStartCondition) {\n      onStart == null || onStart({\n        currentFrameName: frameName !== null && frameName !== void 0 ? frameName : '',\n        currentFrame: currentFrame.current\n      });\n    }\n\n    // for manual update\n    if (_offset !== undefined && manualProgressEndCondition) {\n      if (softEnd.current === false) {\n        onEnd == null || onEnd({\n          currentFrameName: frameName !== null && frameName !== void 0 ? frameName : '',\n          currentFrame: currentFrame.current\n        });\n        softEnd.current = true;\n      }\n    } else {\n      // same for start?\n      softEnd.current = false;\n    }\n\n    // clock to limit fps\n    if (diff <= fpsInterval) return;\n    timerOffset.current = now - diff % fpsInterval;\n    calculateFinalPosition(frameW, frameH, metaInfo, spriteFrames);\n  };\n  const calculateFinalPosition = (frameW, frameH, metaInfo, spriteFrames) => {\n    // get the manual update offset to find the next frame\n    var _offset = offset === undefined ? state.current : offset;\n    const targetFrame = currentFrame.current;\n    let finalValX = 0;\n    let finalValY = 0;\n    calculateAspectRatio(frameW, frameH);\n    const framesH = roundFramePosition ? Math.round((metaInfo.w - 1) / frameW) : (metaInfo.w - 1) / frameW;\n    const framesV = roundFramePosition ? Math.round((metaInfo.h - 1) / frameH) : (metaInfo.h - 1) / frameH;\n    if (!spriteFrames[targetFrame]) {\n      return;\n    }\n    const {\n      frame: {\n        x: frameX,\n        y: frameY\n      },\n      sourceSize: {\n        w: originalSizeX,\n        h: originalSizeY\n      }\n    } = spriteFrames[targetFrame];\n    const frameOffsetX = 1 / framesH;\n    const frameOffsetY = 1 / framesV;\n    if (matRef.current && matRef.current.map) {\n      finalValX = flipOffset > 0 ? frameOffsetX * (frameX / originalSizeX) : frameOffsetX * (frameX / originalSizeX) - matRef.current.map.repeat.x;\n      finalValY = Math.abs(1 - frameOffsetY) - frameOffsetY * (frameY / originalSizeY);\n      matRef.current.map.offset.x = finalValX;\n      matRef.current.map.offset.y = finalValY;\n    }\n\n    // if manual update is active\n    if (_offset !== undefined && _offset !== null) {\n      // Calculate the frame index, based on offset given from the provider\n      let frameIndex = Math.floor(_offset * spriteFrames.length);\n\n      // Ensure the frame index is within the valid range\n      frameIndex = Math.max(0, Math.min(frameIndex, spriteFrames.length - 1));\n      if (isNaN(frameIndex)) {\n        frameIndex = 0; //fallback\n      }\n      currentFrame.current = frameIndex;\n    } else {\n      // auto update\n      if (playBackwards) {\n        currentFrame.current -= 1;\n      } else {\n        currentFrame.current += 1;\n      }\n    }\n  };\n\n  // *** Warning! It runs on every frame! ***\n  useFrame((_state, _delta) => {\n    var _spriteData$current2, _matRef$current;\n    if (!((_spriteData$current2 = spriteData.current) != null && _spriteData$current2.frames) || !((_matRef$current = matRef.current) != null && _matRef$current.map)) {\n      return;\n    }\n    if (pauseRef.current) {\n      return;\n    }\n    if (!state.hasEnded && (autoPlay || play)) {\n      runAnimation();\n      onFrame == null || onFrame({\n        currentFrameName: currentFrameName.current,\n        currentFrame: currentFrame.current\n      });\n    }\n  });\n  function multiplyScale(initialScale = new THREE.Vector3(1, 1, 1), newScale = 1) {\n    if (typeof newScale === 'number') return initialScale.multiplyScalar(newScale);\n    if (Array.isArray(newScale)) return initialScale.multiply(new THREE.Vector3(...newScale));\n    if (newScale instanceof THREE.Vector3) return initialScale.multiply(newScale);\n  }\n  return /*#__PURE__*/React.createElement(\"group\", _extends({}, props, {\n    ref: ref,\n    scale: multiplyScale(aspect, props.scale)\n  }), /*#__PURE__*/React.createElement(context.Provider, {\n    value: state\n  }, asSprite && /*#__PURE__*/React.createElement(Billboard, null, /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: spriteRef,\n    scale: 1.0,\n    geometry: geometry\n  }, meshProps), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    premultipliedAlpha: false,\n    toneMapped: false,\n    side: THREE.DoubleSide,\n    ref: matRef,\n    map: spriteTexture,\n    transparent: true,\n    alphaTest: alphaTest !== null && alphaTest !== void 0 ? alphaTest : 0.0\n  }))), !asSprite && /*#__PURE__*/React.createElement(Instances, _extends({\n    geometry: geometry,\n    limit: maxItems !== null && maxItems !== void 0 ? maxItems : 1\n  }, meshProps), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    premultipliedAlpha: false,\n    toneMapped: false,\n    side: THREE.DoubleSide,\n    ref: matRef,\n    map: spriteTexture,\n    transparent: true,\n    alphaTest: alphaTest !== null && alphaTest !== void 0 ? alphaTest : 0.0\n  }), (instanceItems !== null && instanceItems !== void 0 ? instanceItems : [0]).map((item, index) => /*#__PURE__*/React.createElement(Instance, _extends({\n    key: index,\n    ref: (instanceItems == null ? void 0 : instanceItems.length) === 1 ? spriteRef : null,\n    position: item,\n    scale: 1.0\n  }, meshProps)))), children));\n});\n\nexport { SpriteAnimator, useSpriteAnimator };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport Composer from 'react-composer';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nfunction isFunctionChild(value) {\n  return typeof value === 'function';\n}\nconst _instanceLocalMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceWorldMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _instanceIntersects = [];\nconst _mesh = /* @__PURE__ */new THREE.Mesh();\nclass PositionMesh extends THREE.Group {\n  constructor() {\n    super();\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n\n  // And this will allow the virtual instance to receive events\n  raycast(raycaster, intersects) {\n    const parent = this.instance.current;\n    if (!parent) return;\n    if (!parent.geometry || !parent.material) return;\n    _mesh.geometry = parent.geometry;\n    const matrixWorld = parent.matrixWorld;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.count) return;\n    // calculate the world matrix for each instance\n    parent.getMatrixAt(instanceId, _instanceLocalMatrix);\n    _instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix);\n    // the mesh represents this single instance\n    _mesh.matrixWorld = _instanceWorldMatrix;\n    // raycast side according to instance material\n    if (parent.material instanceof THREE.Material) _mesh.material.side = parent.material.side;else _mesh.material.side = parent.material[0].side;\n    _mesh.raycast(raycaster, _instanceIntersects);\n    // process the result of raycast\n    for (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n      const intersect = _instanceIntersects[i];\n      intersect.instanceId = instanceId;\n      intersect.object = this;\n      intersects.push(intersect);\n    }\n    _instanceIntersects.length = 0;\n  }\n}\nconst globalContext = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst instanceMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst tempMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst translation = /* @__PURE__ */new THREE.Vector3();\nconst rotation = /* @__PURE__ */new THREE.Quaternion();\nconst scale = /* @__PURE__ */new THREE.Vector3();\nconst isInstancedBufferAttribute = attr => attr.isInstancedBufferAttribute;\nconst Instance = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionMesh\n  }), []);\n  const group = React.useRef();\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionMesh\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\nconst Instances = /* @__PURE__ */React.forwardRef(({\n  context,\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    localContext,\n    instance\n  }] = React.useState(() => {\n    const localContext = /*#__PURE__*/React.createContext(null);\n    return {\n      localContext,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: localContext\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n    for (let i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let iterations = 0;\n  let count = 0;\n  const attributes = React.useRef([]);\n  React.useLayoutEffect(() => {\n    attributes.current = Object.entries(parentRef.current.geometry.attributes).filter(([_name, value]) => isInstancedBufferAttribute(value));\n  });\n  useFrame(() => {\n    if (frames === Infinity || iterations < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n      count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n      parentRef.current.count = count;\n      setUpdateRange(parentRef.current.instanceMatrix, {\n        offset: 0,\n        count: count * 16\n      });\n      setUpdateRange(parentRef.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i].current;\n        // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n        instance.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n        instanceMatrix.toArray(matrices, i * 16);\n        parentRef.current.instanceMatrix.needsUpdate = true;\n        instance.color.toArray(colors, i * 3);\n        parentRef.current.instanceColor.needsUpdate = true;\n      }\n      iterations++;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    userData: {\n      instances,\n      limit,\n      frames\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    args: [null, null, 0],\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), isFunctionChild(children) ? /*#__PURE__*/React.createElement(localContext.Provider, {\n    value: api\n  }, children(instance)) : context ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\nconst Merged = /* @__PURE__ */React.forwardRef(function Merged({\n  meshes,\n  children,\n  ...props\n}, ref) {\n  const isArray = Array.isArray(meshes);\n  // Filter out meshes from collections, which may contain non-meshes\n  if (!isArray) for (const key of Object.keys(meshes)) if (!meshes[key].isMesh) delete meshes[key];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      key: geometry.uuid,\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).filter(key => meshes[key].isMesh).reduce((acc, key, i) => ({\n    ...acc,\n    [key]: args[i]\n  }), {}))));\n});\n\n/** Idea and implementation for global instances and instanced attributes by\n/*  Matias Gonzalez Fernandez https://x.com/matiNotFound\n/*  and Paul Henschel https://x.com/0xca0a\n*/\nfunction createInstances() {\n  const context = /*#__PURE__*/React.createContext(null);\n  return [/*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instances, _extends({\n    ref: fref,\n    context: context\n  }, props))), /*#__PURE__*/React.forwardRef((props, fref) => /*#__PURE__*/React.createElement(Instance, _extends({\n    ref: fref,\n    context: context\n  }, props)))];\n}\nconst InstancedAttribute = /*#__PURE__*/React.forwardRef(({\n  name,\n  defaultValue,\n  normalized,\n  usage = THREE.DynamicDrawUsage\n}, fref) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    const parent = ref.current.__r3f.parent;\n    parent.geometry.attributes[name] = ref.current;\n    const value = Array.isArray(defaultValue) ? defaultValue : [defaultValue];\n    const array = Array.from({\n      length: parent.userData.limit\n    }, () => value).flat();\n    ref.current.array = new Float32Array(array);\n    ref.current.itemSize = value.length;\n    ref.current.count = array.length / ref.current.itemSize;\n    return () => {\n      delete parent.geometry.attributes[name];\n    };\n  }, [name]);\n  let iterations = 0;\n  useFrame(() => {\n    const parent = ref.current.__r3f.parent;\n    if (parent.userData.frames === Infinity || iterations < parent.userData.frames) {\n      for (let i = 0; i < parent.userData.instances.length; i++) {\n        const instance = parent.userData.instances[i].current;\n        const value = instance[name];\n        if (value !== undefined) {\n          ref.current.set(Array.isArray(value) ? value : typeof value.toArray === 'function' ? value.toArray() : [value], i * ref.current.itemSize);\n          ref.current.needsUpdate = true;\n        }\n      }\n      iterations++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    ref: ref,\n    usage: usage,\n    normalized: normalized\n  });\n});\n\nexport { Instance, InstancedAttribute, Instances, Merged, PositionMesh, createInstances };\n", "import { cloneElement } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Composer(props) {\n  return renderRecursive(props.children, props.components);\n}\n\nComposer.propTypes = {\n  children: PropTypes.func.isRequired,\n  components: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.element, PropTypes.func])).isRequired\n};\n\n/**\n * Recursively build up elements from props.components and accumulate `results` along the way.\n * @param {function} render\n * @param {Array.<ReactElement|Function>} remaining\n * @param {Array} [results]\n * @returns {ReactElement}\n */\nfunction renderRecursive(render, remaining, results) {\n  results = results || [];\n  // Once components is exhausted, we can render out the results array.\n  if (!remaining[0]) {\n    return render(results);\n  }\n\n  // Continue recursion for remaining items.\n  // results.concat([value]) ensures [...results, value] instead of [...results, ...value]\n  function nextRender(value) {\n    return renderRecursive(render, remaining.slice(1), results.concat([value]));\n  }\n\n  // Each props.components entry is either an element or function [element factory]\n  return typeof remaining[0] === 'function' ? // When it is a function, produce an element by invoking it with \"render component values\".\n  remaining[0]({ results: results, render: nextRender }) : // When it is an element, enhance the element's props with the render prop.\n  cloneElement(remaining[0], { children: nextRender });\n}", "/**\n * Sets `BufferAttribute.updateRange` since r159.\n */\nconst setUpdateRange = (attribute, updateRange) => {\n  if ('updateRanges' in attribute) {\n    // r159\n    // @ts-ignore\n    attribute.updateRanges[0] = updateRange;\n  } else {\n    attribute.updateRange = updateRange;\n  }\n};\nconst LinearEncoding = 3000;\nconst sRGBEncoding = 3001;\n\n/**\n * TextureEncoding was deprecated in r152, and removed in r162.\n */\n\nexport { LinearEncoding, sRGBEncoding, setUpdateRange };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { createPortal } from '@react-three/fiber';\nimport { Flow } from 'three-stdlib';\n\nconst CurveModifier = /* @__PURE__ */React.forwardRef(({\n  children,\n  curve\n}, ref) => {\n  const [scene] = React.useState(() => new THREE.Scene());\n  const [obj, set] = React.useState();\n  const modifier = React.useRef(null);\n  React.useLayoutEffect(() => {\n    modifier.current = new Flow(scene.children[0]);\n    set(modifier.current.object3D);\n  }, [children]);\n  React.useEffect(() => {\n    var _modifier$current;\n    if (curve) (_modifier$current = modifier.current) == null || _modifier$current.updateCurve(0, curve);\n  }, [curve]);\n  React.useImperativeHandle(ref, () => modifier.current);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(children, scene), obj && /*#__PURE__*/React.createElement(\"primitive\", {\n    object: obj\n  }));\n});\n\nexport { CurveModifier };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float radius;\n      uniform float distort;\n      ${distort}\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `\n        float updateTime = time / 50.0;\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\n        `);\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get distort() {\n    return this._distort.value;\n  }\n  set distort(v) {\n    this._distort.value = v;\n  }\n  get radius() {\n    return this._radius.value;\n  }\n  set radius(v) {\n    this._radius.value = v;\n  }\n}\nconst MeshDistortMaterial = /* @__PURE__ */React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.elapsedTime * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n", "var distort = \"#define GLSLIFY 1\\nvec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}\"; // eslint-disable-line\n\nexport { distort as default };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { MeshStandardMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nclass WobbleMaterialImpl extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._factor = {\n      value: 1\n    };\n  }\n\n  // FIXME Use `THREE.WebGLProgramParametersWithUniforms` type when able to target @types/three@0.160.0\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.factor = this._factor;\n    shader.vertexShader = `\n      uniform float time;\n      uniform float factor;\n      ${shader.vertexShader}\n    `;\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', `float theta = sin( time + position.y ) / 2.0 * factor;\n        float c = cos( theta );\n        float s = sin( theta );\n        mat3 m = mat3( c, 0, s, 0, 1, 0, -s, 0, c );\n        vec3 transformed = vec3( position ) * m;\n        vNormal = vNormal * m;`);\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get factor() {\n    return this._factor.value;\n  }\n  set factor(v) {\n    this._factor.value = v;\n  }\n}\nconst MeshWobbleMaterial = /* @__PURE__ */React.forwardRef(({\n  speed = 1,\n  ...props\n}, ref) => {\n  const [material] = React.useState(() => new WobbleMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.elapsedTime * speed));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshWobbleMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, LinearFilter, HalfFloatType } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial as MeshReflectorMaterial$1 } from '../materials/MeshReflectorMaterial.js';\n\nconst MeshReflectorMaterial = /* @__PURE__ */React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 1,\n  resolution = 256,\n  blur = [0, 0],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  reflectorOffset = 0,\n  ...props\n}, ref) => {\n  extend({\n    MeshReflectorMaterialImpl: MeshReflectorMaterial$1\n  });\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const materialRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => materialRef.current, []);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    var _materialRef$current;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current = materialRef.current) == null ? void 0 : _materialRef$current.__r3f.parent);\n    if (!parent) return;\n    reflectorWorldPosition.setFromMatrixPosition(parent.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(parent.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    reflectorWorldPosition.addScaledVector(normal, reflectorOffset);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n    // Avoid rendering when reflector is facing away\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n    // Update the texture matrix\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(parent.matrixWorld);\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n    // Calculate the scaled plane vector\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q));\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, [camera, reflectorOffset]);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      type: HalfFloatType\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    var _materialRef$current2;\n    // TODO: As of R3f 7-8 this should be __r3f.parent\n    const parent = materialRef.current.parent || ((_materialRef$current2 = materialRef.current) == null ? void 0 : _materialRef$current2.__r3f.parent);\n    if (!parent) return;\n    parent.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    parent.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"meshReflectorMaterialImpl\", _extends({\n    attach: \"material\"\n    // Defines can't be updated dynamically, so we need to recreate the material\n    ,\n    key: 'key' + reflectorProps['defines-USE_BLUR'] + reflectorProps['defines-USE_DEPTH'] + reflectorProps['defines-USE_DISTORTION'],\n    ref: materialRef\n  }, reflectorProps, props));\n});\n\nexport { MeshReflectorMaterial };\n", "import * as THREE from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass ConvolutionMaterial extends THREE.ShaderMaterial {\n  constructor(texelSize = new THREE.Vector2()) {\n    super({\n      uniforms: {\n        inputBuffer: new THREE.Uniform(null),\n        depthBuffer: new THREE.Uniform(null),\n        resolution: new THREE.Uniform(new THREE.Vector2()),\n        texelSize: new THREE.Uniform(new THREE.Vector2()),\n        halfTexelSize: new THREE.Uniform(new THREE.Vector2()),\n        kernel: new THREE.Uniform(0.0),\n        scale: new THREE.Uniform(1.0),\n        cameraNear: new THREE.Uniform(0.0),\n        cameraFar: new THREE.Uniform(1.0),\n        minDepthThreshold: new THREE.Uniform(0.0),\n        maxDepthThreshold: new THREE.Uniform(1.0),\n        depthScale: new THREE.Uniform(0.0),\n        depthToBlurRatioBias: new THREE.Uniform(0.25)\n      },\n      fragmentShader: `#include <common>\n        #include <dithering_pars_fragment>      \n        uniform sampler2D inputBuffer;\n        uniform sampler2D depthBuffer;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          float depthFactor = 0.0;\n          \n          #ifdef USE_DEPTH\n            vec4 depth = texture2D(depthBuffer, vUv);\n            depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n            depthFactor *= depthScale;\n            depthFactor = max(0.0, min(1.0, depthFactor + 0.25));\n          #endif\n          \n          vec4 sum = texture2D(inputBuffer, mix(vUv0, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv1, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv2, vUv, depthFactor));\n          sum += texture2D(inputBuffer, mix(vUv3, vUv, depthFactor));\n          gl_FragColor = sum * 0.25 ;\n\n          #include <dithering_fragment>\n          #include <tonemapping_fragment>\n          #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n        }`,\n      vertexShader: `uniform vec2 texelSize;\n        uniform vec2 halfTexelSize;\n        uniform float kernel;\n        uniform float scale;\n        varying vec2 vUv;\n        varying vec2 vUv0;\n        varying vec2 vUv1;\n        varying vec2 vUv2;\n        varying vec2 vUv3;\n\n        void main() {\n          vec2 uv = position.xy * 0.5 + 0.5;\n          vUv = uv;\n\n          vec2 dUv = (texelSize * vec2(kernel) + halfTexelSize) * scale;\n          vUv0 = vec2(uv.x - dUv.x, uv.y + dUv.y);\n          vUv1 = vec2(uv.x + dUv.x, uv.y + dUv.y);\n          vUv2 = vec2(uv.x + dUv.x, uv.y - dUv.y);\n          vUv3 = vec2(uv.x - dUv.x, uv.y - dUv.y);\n\n          gl_Position = vec4(position.xy, 1.0, 1.0);\n        }`,\n      blending: THREE.NoBlending,\n      depthWrite: false,\n      depthTest: false\n    });\n    this.toneMapped = false;\n    this.setTexelSize(texelSize.x, texelSize.y);\n    this.kernel = new Float32Array([0.0, 1.0, 2.0, 2.0, 3.0]);\n  }\n  setTexelSize(x, y) {\n    this.uniforms.texelSize.value.set(x, y);\n    this.uniforms.halfTexelSize.value.set(x, y).multiplyScalar(0.5);\n  }\n  setResolution(resolution) {\n    this.uniforms.resolution.value.copy(resolution);\n  }\n}\n\nexport { ConvolutionMaterial };\n", "import { WebGLRenderTarget, LinearFilter, HalfFloatType, Vector2, Scene, Camera, BufferGeometry, BufferAttribute, Mesh } from 'three';\nimport { ConvolutionMaterial } from './ConvolutionMaterial.js';\n\nclass BlurPass {\n  constructor({\n    gl,\n    resolution,\n    width = 500,\n    height = 500,\n    minDepthThreshold = 0,\n    maxDepthThreshold = 1,\n    depthScale = 0,\n    depthToBlurRatioBias = 0.25\n  }) {\n    this.renderToScreen = false;\n    this.renderTargetA = new WebGLRenderTarget(resolution, resolution, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      stencilBuffer: false,\n      depthBuffer: false,\n      type: HalfFloatType\n    });\n    this.renderTargetB = this.renderTargetA.clone();\n    this.convolutionMaterial = new ConvolutionMaterial();\n    this.convolutionMaterial.setTexelSize(1.0 / width, 1.0 / height);\n    this.convolutionMaterial.setResolution(new Vector2(width, height));\n    this.scene = new Scene();\n    // @ts-expect-error fixed in r154\n    this.camera = new Camera();\n    this.convolutionMaterial.uniforms.minDepthThreshold.value = minDepthThreshold;\n    this.convolutionMaterial.uniforms.maxDepthThreshold.value = maxDepthThreshold;\n    this.convolutionMaterial.uniforms.depthScale.value = depthScale;\n    this.convolutionMaterial.uniforms.depthToBlurRatioBias.value = depthToBlurRatioBias;\n    this.convolutionMaterial.defines.USE_DEPTH = depthScale > 0;\n    const vertices = new Float32Array([-1, -1, 0, 3, -1, 0, -1, 3, 0]);\n    const uvs = new Float32Array([0, 0, 2, 0, 0, 2]);\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new BufferAttribute(vertices, 3));\n    geometry.setAttribute('uv', new BufferAttribute(uvs, 2));\n    this.screen = new Mesh(geometry, this.convolutionMaterial);\n    this.screen.frustumCulled = false;\n    this.scene.add(this.screen);\n  }\n  render(renderer, inputBuffer, outputBuffer) {\n    const scene = this.scene;\n    const camera = this.camera;\n    const renderTargetA = this.renderTargetA;\n    const renderTargetB = this.renderTargetB;\n    let material = this.convolutionMaterial;\n    let uniforms = material.uniforms;\n    uniforms.depthBuffer.value = inputBuffer.depthTexture;\n    const kernel = material.kernel;\n    let lastRT = inputBuffer;\n    let destRT;\n    let i, l;\n    // Apply the multi-pass blur.\n    for (i = 0, l = kernel.length - 1; i < l; ++i) {\n      // Alternate between targets.\n      destRT = (i & 1) === 0 ? renderTargetA : renderTargetB;\n      uniforms.kernel.value = kernel[i];\n      uniforms.inputBuffer.value = lastRT.texture;\n      renderer.setRenderTarget(destRT);\n      renderer.render(scene, camera);\n      lastRT = destRT;\n    }\n    uniforms.kernel.value = kernel[i];\n    uniforms.inputBuffer.value = lastRT.texture;\n    renderer.setRenderTarget(this.renderToScreen ? null : outputBuffer);\n    renderer.render(scene, camera);\n  }\n}\n\nexport { BlurPass };\n", "import { MeshStandardMaterial } from 'three';\n\nclass MeshReflectorMaterial extends MeshStandardMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    this._tDepth = {\n      value: null\n    };\n    this._distortionMap = {\n      value: null\n    };\n    this._tDiffuse = {\n      value: null\n    };\n    this._tDiffuseBlur = {\n      value: null\n    };\n    this._textureMatrix = {\n      value: null\n    };\n    this._hasBlur = {\n      value: false\n    };\n    this._mirror = {\n      value: 0.0\n    };\n    this._mixBlur = {\n      value: 0.0\n    };\n    this._blurStrength = {\n      value: 0.5\n    };\n    this._minDepthThreshold = {\n      value: 0.9\n    };\n    this._maxDepthThreshold = {\n      value: 1\n    };\n    this._depthScale = {\n      value: 0\n    };\n    this._depthToBlurRatioBias = {\n      value: 0.25\n    };\n    this._distortion = {\n      value: 1\n    };\n    this._mixContrast = {\n      value: 1.0\n    };\n    this.setValues(parameters);\n  }\n  onBeforeCompile(shader) {\n    var _shader$defines;\n    if (!((_shader$defines = shader.defines) != null && _shader$defines.USE_UV)) {\n      shader.defines.USE_UV = '';\n    }\n    shader.uniforms.hasBlur = this._hasBlur;\n    shader.uniforms.tDiffuse = this._tDiffuse;\n    shader.uniforms.tDepth = this._tDepth;\n    shader.uniforms.distortionMap = this._distortionMap;\n    shader.uniforms.tDiffuseBlur = this._tDiffuseBlur;\n    shader.uniforms.textureMatrix = this._textureMatrix;\n    shader.uniforms.mirror = this._mirror;\n    shader.uniforms.mixBlur = this._mixBlur;\n    shader.uniforms.mixStrength = this._blurStrength;\n    shader.uniforms.minDepthThreshold = this._minDepthThreshold;\n    shader.uniforms.maxDepthThreshold = this._maxDepthThreshold;\n    shader.uniforms.depthScale = this._depthScale;\n    shader.uniforms.depthToBlurRatioBias = this._depthToBlurRatioBias;\n    shader.uniforms.distortion = this._distortion;\n    shader.uniforms.mixContrast = this._mixContrast;\n    shader.vertexShader = `\n        uniform mat4 textureMatrix;\n        varying vec4 my_vUv;\n      ${shader.vertexShader}`;\n    shader.vertexShader = shader.vertexShader.replace('#include <project_vertex>', `#include <project_vertex>\n        my_vUv = textureMatrix * vec4( position, 1.0 );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );`);\n    shader.fragmentShader = `\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDiffuseBlur;\n        uniform sampler2D tDepth;\n        uniform sampler2D distortionMap;\n        uniform float distortion;\n        uniform float cameraNear;\n\t\t\t  uniform float cameraFar;\n        uniform bool hasBlur;\n        uniform float mixBlur;\n        uniform float mirror;\n        uniform float mixStrength;\n        uniform float minDepthThreshold;\n        uniform float maxDepthThreshold;\n        uniform float mixContrast;\n        uniform float depthScale;\n        uniform float depthToBlurRatioBias;\n        varying vec4 my_vUv;\n        ${shader.fragmentShader}`;\n    shader.fragmentShader = shader.fragmentShader.replace('#include <emissivemap_fragment>', `#include <emissivemap_fragment>\n\n      float distortionFactor = 0.0;\n      #ifdef USE_DISTORTION\n        distortionFactor = texture2D(distortionMap, vUv).r * distortion;\n      #endif\n\n      vec4 new_vUv = my_vUv;\n      new_vUv.x += distortionFactor;\n      new_vUv.y += distortionFactor;\n\n      vec4 base = texture2DProj(tDiffuse, new_vUv);\n      vec4 blur = texture2DProj(tDiffuseBlur, new_vUv);\n\n      vec4 merge = base;\n\n      #ifdef USE_NORMALMAP\n        vec2 normal_uv = vec2(0.0);\n        vec4 normalColor = texture2D(normalMap, vUv * normalScale);\n        vec3 my_normal = normalize( vec3( normalColor.r * 2.0 - 1.0, normalColor.b,  normalColor.g * 2.0 - 1.0 ) );\n        vec3 coord = new_vUv.xyz / new_vUv.w;\n        normal_uv = coord.xy + coord.z * my_normal.xz * 0.05;\n        vec4 base_normal = texture2D(tDiffuse, normal_uv);\n        vec4 blur_normal = texture2D(tDiffuseBlur, normal_uv);\n        merge = base_normal;\n        blur = blur_normal;\n      #endif\n\n      float depthFactor = 0.0001;\n      float blurFactor = 0.0;\n\n      #ifdef USE_DEPTH\n        vec4 depth = texture2DProj(tDepth, new_vUv);\n        depthFactor = smoothstep(minDepthThreshold, maxDepthThreshold, 1.0-(depth.r * depth.a));\n        depthFactor *= depthScale;\n        depthFactor = max(0.0001, min(1.0, depthFactor));\n\n        #ifdef USE_BLUR\n          blur = blur * min(1.0, depthFactor + depthToBlurRatioBias);\n          merge = merge * min(1.0, depthFactor + 0.5);\n        #else\n          merge = merge * depthFactor;\n        #endif\n\n      #endif\n\n      float reflectorRoughnessFactor = roughness;\n      #ifdef USE_ROUGHNESSMAP\n        vec4 reflectorTexelRoughness = texture2D( roughnessMap, vUv );\n        reflectorRoughnessFactor *= reflectorTexelRoughness.g;\n      #endif\n\n      #ifdef USE_BLUR\n        blurFactor = min(1.0, mixBlur * reflectorRoughnessFactor);\n        merge = mix(merge, blur, blurFactor);\n      #endif\n\n      vec4 newMerge = vec4(0.0, 0.0, 0.0, 1.0);\n      newMerge.r = (merge.r - 0.5) * mixContrast + 0.5;\n      newMerge.g = (merge.g - 0.5) * mixContrast + 0.5;\n      newMerge.b = (merge.b - 0.5) * mixContrast + 0.5;\n\n      diffuseColor.rgb = diffuseColor.rgb * ((1.0 - min(1.0, mirror)) + newMerge.rgb * mixStrength);\n      `);\n  }\n  get tDiffuse() {\n    return this._tDiffuse.value;\n  }\n  set tDiffuse(v) {\n    this._tDiffuse.value = v;\n  }\n  get tDepth() {\n    return this._tDepth.value;\n  }\n  set tDepth(v) {\n    this._tDepth.value = v;\n  }\n  get distortionMap() {\n    return this._distortionMap.value;\n  }\n  set distortionMap(v) {\n    this._distortionMap.value = v;\n  }\n  get tDiffuseBlur() {\n    return this._tDiffuseBlur.value;\n  }\n  set tDiffuseBlur(v) {\n    this._tDiffuseBlur.value = v;\n  }\n  get textureMatrix() {\n    return this._textureMatrix.value;\n  }\n  set textureMatrix(v) {\n    this._textureMatrix.value = v;\n  }\n  get hasBlur() {\n    return this._hasBlur.value;\n  }\n  set hasBlur(v) {\n    this._hasBlur.value = v;\n  }\n  get mirror() {\n    return this._mirror.value;\n  }\n  set mirror(v) {\n    this._mirror.value = v;\n  }\n  get mixBlur() {\n    return this._mixBlur.value;\n  }\n  set mixBlur(v) {\n    this._mixBlur.value = v;\n  }\n  get mixStrength() {\n    return this._blurStrength.value;\n  }\n  set mixStrength(v) {\n    this._blurStrength.value = v;\n  }\n  get minDepthThreshold() {\n    return this._minDepthThreshold.value;\n  }\n  set minDepthThreshold(v) {\n    this._minDepthThreshold.value = v;\n  }\n  get maxDepthThreshold() {\n    return this._maxDepthThreshold.value;\n  }\n  set maxDepthThreshold(v) {\n    this._maxDepthThreshold.value = v;\n  }\n  get depthScale() {\n    return this._depthScale.value;\n  }\n  set depthScale(v) {\n    this._depthScale.value = v;\n  }\n  get depthToBlurRatioBias() {\n    return this._depthToBlurRatioBias.value;\n  }\n  set depthToBlurRatioBias(v) {\n    this._depthToBlurRatioBias.value = v;\n  }\n  get distortion() {\n    return this._distortion.value;\n  }\n  set distortion(v) {\n    this._distortion.value = v;\n  }\n  get mixContrast() {\n    return this._mixContrast.value;\n  }\n  set mixContrast(v) {\n    this._mixContrast.value = v;\n  }\n}\n\nexport { MeshReflectorMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useRef, useMemo, useLayoutEffect } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { MeshBVHUniformStruct, MeshBVH, SAH } from 'three-mesh-bvh';\nimport { MeshRefractionMaterial as MeshRefractionMaterial$1 } from '../materials/MeshRefractionMaterial.js';\n\nconst isCubeTexture = def => def && def.isCubeTexture;\nfunction MeshRefractionMaterial({\n  aberrationStrength = 0,\n  fastChroma = true,\n  envMap,\n  ...props\n}) {\n  extend({\n    MeshRefractionMaterial: MeshRefractionMaterial$1\n  });\n  const material = useRef();\n  const {\n    size\n  } = useThree();\n  const defines = useMemo(() => {\n    var _ref, _envMap$image$;\n    const temp = {};\n    // Sampler2D and SamplerCube need different defines\n    const isCubeMap = isCubeTexture(envMap);\n    const w = (_ref = isCubeMap ? (_envMap$image$ = envMap.image[0]) == null ? void 0 : _envMap$image$.width : envMap.image.width) !== null && _ref !== void 0 ? _ref : 1024;\n    const cubeSize = w / 4;\n    const _lodMax = Math.floor(Math.log2(cubeSize));\n    const _cubeSize = Math.pow(2, _lodMax);\n    const width = 3 * Math.max(_cubeSize, 16 * 7);\n    const height = 4 * _cubeSize;\n    if (isCubeMap) temp.ENVMAP_TYPE_CUBEM = '';\n    temp.CUBEUV_TEXEL_WIDTH = `${1.0 / width}`;\n    temp.CUBEUV_TEXEL_HEIGHT = `${1.0 / height}`;\n    temp.CUBEUV_MAX_MIP = `${_lodMax}.0`;\n    // Add defines from chromatic aberration\n    if (aberrationStrength > 0) temp.CHROMATIC_ABERRATIONS = '';\n    if (fastChroma) temp.FAST_CHROMA = '';\n    return temp;\n  }, [aberrationStrength, fastChroma]);\n  useLayoutEffect(() => {\n    var _material$current;\n    // Get the geometry of this materials parent\n    const geometry = (_material$current = material.current) == null || (_material$current = _material$current.__r3f) == null || (_material$current = _material$current.parent) == null ? void 0 : _material$current.geometry;\n    // Update the BVH\n    if (geometry) {\n      material.current.bvh = new MeshBVHUniformStruct();\n      material.current.bvh.updateFrom(new MeshBVH(geometry.clone().toNonIndexed(), {\n        strategy: SAH\n      }));\n    }\n  }, []);\n  useFrame(({\n    camera\n  }) => {\n    material.current.viewMatrixInverse = camera.matrixWorld;\n    material.current.projectionMatrixInverse = camera.projectionMatrixInverse;\n  });\n  return /*#__PURE__*/React.createElement(\"meshRefractionMaterial\", _extends({\n    // @ts-ignore\n    key: JSON.stringify(defines)\n    // @ts-ignore\n    ,\n    defines: defines,\n    ref: material,\n    resolution: [size.width, size.height],\n    aberrationStrength: aberrationStrength,\n    envMap: envMap\n  }, props));\n}\n\nexport { MeshRefractionMaterial };\n", "import * as THREE from 'three';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\nimport { shaderStructs, shaderIntersectFunction, MeshBVHUniformStruct } from 'three-mesh-bvh';\nimport { version } from '../helpers/constants.js';\n\n// Author: N8Programs\nconst MeshRefractionMaterial = /* @__PURE__ */shaderMaterial({\n  envMap: null,\n  bounces: 3,\n  ior: 2.4,\n  correctMips: true,\n  aberrationStrength: 0.01,\n  fresnel: 0,\n  bvh: /* @__PURE__ */new MeshBVHUniformStruct(),\n  color: /* @__PURE__ */new THREE.Color('white'),\n  opacity: 1,\n  resolution: /* @__PURE__ */new THREE.Vector2(),\n  viewMatrixInverse: /* @__PURE__ */new THREE.Matrix4(),\n  projectionMatrixInverse: /* @__PURE__ */new THREE.Matrix4()\n}, /*glsl*/`\n  uniform mat4 viewMatrixInverse;\n\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n  varying mat4 vModelMatrixInverse;\n\n  #include <color_pars_vertex>\n\n  void main() {\n    #include <color_vertex>\n\n    vec4 transformedNormal = vec4(normal, 0.0);\n    vec4 transformedPosition = vec4(position, 1.0);\n    #ifdef USE_INSTANCING\n      transformedNormal = instanceMatrix * transformedNormal;\n      transformedPosition = instanceMatrix * transformedPosition;\n    #endif\n\n    #ifdef USE_INSTANCING\n      vModelMatrixInverse = inverse(modelMatrix * instanceMatrix);\n    #else\n      vModelMatrixInverse = inverse(modelMatrix);\n    #endif\n\n    vWorldPosition = (modelMatrix * transformedPosition).xyz;\n    vNormal = normalize((viewMatrixInverse * vec4(normalMatrix * transformedNormal.xyz, 0.0)).xyz);\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * transformedPosition;\n  }`, /*glsl*/`\n  #define ENVMAP_TYPE_CUBE_UV\n  precision highp isampler2D;\n  precision highp usampler2D;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n  varying mat4 vModelMatrixInverse;\n\n  #include <color_pars_fragment>\n\n  #ifdef ENVMAP_TYPE_CUBEM\n    uniform samplerCube envMap;\n  #else\n    uniform sampler2D envMap;\n  #endif\n\n  uniform float bounces;\n  ${shaderStructs}\n  ${shaderIntersectFunction}\n  uniform BVH bvh;\n  uniform float ior;\n  uniform bool correctMips;\n  uniform vec2 resolution;\n  uniform float fresnel;\n  uniform mat4 modelMatrix;\n  uniform mat4 projectionMatrixInverse;\n  uniform mat4 viewMatrixInverse;\n  uniform float aberrationStrength;\n  uniform vec3 color;\n  uniform float opacity;\n\n  float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n    return pow( 1.0 + dot( viewDirection, worldNormal), 10.0 );\n  }\n\n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 normal, float ior, mat4 modelMatrixInverse) {\n    vec3 rayOrigin = ro;\n    vec3 rayDirection = rd;\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\n    rayOrigin = vWorldPosition + rayDirection * 0.001;\n    rayOrigin = (modelMatrixInverse * vec4(rayOrigin, 1.0)).xyz;\n    rayDirection = normalize((modelMatrixInverse * vec4(rayDirection, 0.0)).xyz);\n    for(float i = 0.0; i < bounces; i++) {\n      uvec4 faceIndices = uvec4( 0u );\n      vec3 faceNormal = vec3( 0.0, 0.0, 1.0 );\n      vec3 barycoord = vec3( 0.0 );\n      float side = 1.0;\n      float dist = 0.0;\n      bvhIntersectFirstHit( bvh, rayOrigin, rayDirection, faceIndices, faceNormal, barycoord, side, dist );\n      vec3 hitPos = rayOrigin + rayDirection * max(dist - 0.001, 0.0);\n      vec3 tempDir = refract(rayDirection, faceNormal, ior);\n      if (length(tempDir) != 0.0) {\n        rayDirection = tempDir;\n        break;\n      }\n      rayDirection = reflect(rayDirection, faceNormal);\n      rayOrigin = hitPos + rayDirection * 0.01;\n    }\n    rayDirection = normalize((modelMatrix * vec4(rayDirection, 0.0)).xyz);\n    return rayDirection;\n  }\n\n  #include <common>\n  #include <cube_uv_reflection_fragment>\n\n  #ifdef ENVMAP_TYPE_CUBEM\n    vec4 textureGradient(samplerCube envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      return textureGrad(envMap, rayDirection, dFdx(correctMips ? directionCamPerfect: rayDirection), dFdy(correctMips ? directionCamPerfect: rayDirection));\n    }\n  #else\n    vec4 textureGradient(sampler2D envMap, vec3 rayDirection, vec3 directionCamPerfect) {\n      vec2 uvv = equirectUv( rayDirection );\n      vec2 smoothUv = equirectUv( directionCamPerfect );\n      return textureGrad(envMap, uvv, dFdx(correctMips ? smoothUv : uvv), dFdy(correctMips ? smoothUv : uvv));\n    }\n  #endif\n\n  void main() {\n    vec2 uv = gl_FragCoord.xy / resolution;\n    vec3 directionCamPerfect = (projectionMatrixInverse * vec4(uv * 2.0 - 1.0, 0.0, 1.0)).xyz;\n    directionCamPerfect = (viewMatrixInverse * vec4(directionCamPerfect, 0.0)).xyz;\n    directionCamPerfect = normalize(directionCamPerfect);\n    vec3 normal = vNormal;\n    vec3 rayOrigin = cameraPosition;\n    vec3 rayDirection = normalize(vWorldPosition - cameraPosition);\n\n    vec4 diffuseColor = vec4(color, opacity);\n    #include <color_fragment>\n\n    #ifdef CHROMATIC_ABERRATIONS\n      vec3 rayDirectionG = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n      #ifdef FAST_CHROMA\n        vec3 rayDirectionR = normalize(rayDirectionG + 1.0 * vec3(aberrationStrength / 2.0));\n        vec3 rayDirectionB = normalize(rayDirectionG - 1.0 * vec3(aberrationStrength / 2.0));\n      #else\n        vec3 rayDirectionR = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 - aberrationStrength), 1.0), vModelMatrixInverse);\n        vec3 rayDirectionB = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior * (1.0 + aberrationStrength), 1.0), vModelMatrixInverse);\n      #endif\n      float finalColorR = textureGradient(envMap, rayDirectionR, directionCamPerfect).r;\n      float finalColorG = textureGradient(envMap, rayDirectionG, directionCamPerfect).g;\n      float finalColorB = textureGradient(envMap, rayDirectionB, directionCamPerfect).b;\n      diffuseColor.rgb *= vec3(finalColorR, finalColorG, finalColorB);\n    #else\n      rayDirection = totalInternalReflection(rayOrigin, rayDirection, normal, max(ior, 1.0), vModelMatrixInverse);\n      diffuseColor.rgb *= textureGradient(envMap, rayDirection, directionCamPerfect).rgb;\n    #endif\n\n    vec3 viewDirection = normalize(vWorldPosition - cameraPosition);\n    float nFresnel = fresnelFunc(viewDirection, normal) * fresnel;\n    gl_FragColor = vec4(mix(diffuseColor.rgb, vec3(1.0), nFresnel), diffuseColor.a);\n\n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n  }`);\n\nexport { MeshRefractionMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\n\nclass MeshTransmissionMaterialImpl extends THREE.MeshPhysicalMaterial {\n  constructor(samples = 6, transmissionSampler = false) {\n    super();\n    this.uniforms = {\n      chromaticAberration: {\n        value: 0.05\n      },\n      // Transmission must always be 0, unless transmissionSampler is being used\n      transmission: {\n        value: 0\n      },\n      // Instead a workaround is used, see below for reasons why\n      _transmission: {\n        value: 1\n      },\n      transmissionMap: {\n        value: null\n      },\n      // Roughness is 1 in THREE.MeshPhysicalMaterial but it makes little sense in a transmission material\n      roughness: {\n        value: 0\n      },\n      thickness: {\n        value: 0\n      },\n      thicknessMap: {\n        value: null\n      },\n      attenuationDistance: {\n        value: Infinity\n      },\n      attenuationColor: {\n        value: new THREE.Color('white')\n      },\n      anisotropicBlur: {\n        value: 0.1\n      },\n      time: {\n        value: 0\n      },\n      distortion: {\n        value: 0.0\n      },\n      distortionScale: {\n        value: 0.5\n      },\n      temporalDistortion: {\n        value: 0.0\n      },\n      buffer: {\n        value: null\n      }\n    };\n    this.onBeforeCompile = shader => {\n      shader.uniforms = {\n        ...shader.uniforms,\n        ...this.uniforms\n      };\n\n      // Fix for r153-r156 anisotropy chunks\n      // https://github.com/mrdoob/three.js/pull/26716\n      if (this.anisotropy > 0) shader.defines.USE_ANISOTROPY = '';\n\n      // If the transmission sampler is active inject a flag\n      if (transmissionSampler) shader.defines.USE_SAMPLER = '';\n      // Otherwise we do use use .transmission and must therefore force USE_TRANSMISSION\n      // because threejs won't inject it for us\n      else shader.defines.USE_TRANSMISSION = '';\n\n      // Head\n      shader.fragmentShader = /*glsl*/`\n      uniform float chromaticAberration;         \n      uniform float anisotropicBlur;      \n      uniform float time;\n      uniform float distortion;\n      uniform float distortionScale;\n      uniform float temporalDistortion;\n      uniform sampler2D buffer;\n\n      vec3 random3(vec3 c) {\n        float j = 4096.0*sin(dot(c,vec3(17.0, 59.4, 15.0)));\n        vec3 r;\n        r.z = fract(512.0*j);\n        j *= .125;\n        r.x = fract(512.0*j);\n        j *= .125;\n        r.y = fract(512.0*j);\n        return r-0.5;\n      }\n\n      uint hash( uint x ) {\n        x += ( x << 10u );\n        x ^= ( x >>  6u );\n        x += ( x <<  3u );\n        x ^= ( x >> 11u );\n        x += ( x << 15u );\n        return x;\n      }\n\n      // Compound versions of the hashing algorithm I whipped together.\n      uint hash( uvec2 v ) { return hash( v.x ^ hash(v.y)                         ); }\n      uint hash( uvec3 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z)             ); }\n      uint hash( uvec4 v ) { return hash( v.x ^ hash(v.y) ^ hash(v.z) ^ hash(v.w) ); }\n\n      // Construct a float with half-open range [0:1] using low 23 bits.\n      // All zeroes yields 0.0, all ones yields the next smallest representable value below 1.0.\n      float floatConstruct( uint m ) {\n        const uint ieeeMantissa = 0x007FFFFFu; // binary32 mantissa bitmask\n        const uint ieeeOne      = 0x3F800000u; // 1.0 in IEEE binary32\n        m &= ieeeMantissa;                     // Keep only mantissa bits (fractional part)\n        m |= ieeeOne;                          // Add fractional part to 1.0\n        float  f = uintBitsToFloat( m );       // Range [1:2]\n        return f - 1.0;                        // Range [0:1]\n      }\n\n      // Pseudo-random value in half-open range [0:1].\n      float randomBase( float x ) { return floatConstruct(hash(floatBitsToUint(x))); }\n      float randomBase( vec2  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float randomBase( vec3  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float randomBase( vec4  v ) { return floatConstruct(hash(floatBitsToUint(v))); }\n      float rand(float seed) {\n        float result = randomBase(vec3(gl_FragCoord.xy, seed));\n        return result;\n      }\n\n      const float F3 =  0.3333333;\n      const float G3 =  0.1666667;\n\n      float snoise(vec3 p) {\n        vec3 s = floor(p + dot(p, vec3(F3)));\n        vec3 x = p - s + dot(s, vec3(G3));\n        vec3 e = step(vec3(0.0), x - x.yzx);\n        vec3 i1 = e*(1.0 - e.zxy);\n        vec3 i2 = 1.0 - e.zxy*(1.0 - e);\n        vec3 x1 = x - i1 + G3;\n        vec3 x2 = x - i2 + 2.0*G3;\n        vec3 x3 = x - 1.0 + 3.0*G3;\n        vec4 w, d;\n        w.x = dot(x, x);\n        w.y = dot(x1, x1);\n        w.z = dot(x2, x2);\n        w.w = dot(x3, x3);\n        w = max(0.6 - w, 0.0);\n        d.x = dot(random3(s), x);\n        d.y = dot(random3(s + i1), x1);\n        d.z = dot(random3(s + i2), x2);\n        d.w = dot(random3(s + 1.0), x3);\n        w *= w;\n        w *= w;\n        d *= w;\n        return dot(d, vec4(52.0));\n      }\n\n      float snoiseFractal(vec3 m) {\n        return 0.5333333* snoise(m)\n              +0.2666667* snoise(2.0*m)\n              +0.1333333* snoise(4.0*m)\n              +0.0666667* snoise(8.0*m);\n      }\\n` + shader.fragmentShader;\n\n      // Remove transmission\n      shader.fragmentShader = shader.fragmentShader.replace('#include <transmission_pars_fragment>', /*glsl*/`\n        #ifdef USE_TRANSMISSION\n          // Transmission code is based on glTF-Sampler-Viewer\n          // https://github.com/KhronosGroup/glTF-Sample-Viewer\n          uniform float _transmission;\n          uniform float thickness;\n          uniform float attenuationDistance;\n          uniform vec3 attenuationColor;\n          #ifdef USE_TRANSMISSIONMAP\n            uniform sampler2D transmissionMap;\n          #endif\n          #ifdef USE_THICKNESSMAP\n            uniform sampler2D thicknessMap;\n          #endif\n          uniform vec2 transmissionSamplerSize;\n          uniform sampler2D transmissionSamplerMap;\n          uniform mat4 modelMatrix;\n          uniform mat4 projectionMatrix;\n          varying vec3 vWorldPosition;\n          vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n            // Direction of refracted light.\n            vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n            // Compute rotation-independant scaling of the model matrix.\n            vec3 modelScale;\n            modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n            modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n            modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n            // The thickness is specified in local space.\n            return normalize( refractionVector ) * thickness * modelScale;\n          }\n          float applyIorToRoughness( const in float roughness, const in float ior ) {\n            // Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and\n            // an IOR of 1.5 results in the default amount of microfacet refraction.\n            return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n          }\n          vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n            float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );            \n            #ifdef USE_SAMPLER\n              #ifdef texture2DLodEXT\n                return texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod);\n              #else\n                return texture2D(transmissionSamplerMap, fragCoord.xy, framebufferLod);\n              #endif\n            #else\n              return texture2D(buffer, fragCoord.xy);\n            #endif\n          }\n          vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n            if ( isinf( attenuationDistance ) ) {\n              // Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.\n              return radiance;\n            } else {\n              // Compute light attenuation using Beer's law.\n              vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n              vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law\n              return transmittance * radiance;\n            }\n          }\n          vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n            const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n            const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n            const in vec3 attenuationColor, const in float attenuationDistance ) {\n            vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n            vec3 refractedRayExit = position + transmissionRay;\n            // Project refracted vector on the framebuffer, while mapping to normalized device coordinates.\n            vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n            vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n            refractionCoords += 1.0;\n            refractionCoords /= 2.0;\n            // Sample framebuffer to get pixel the refracted ray hits.\n            vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n            vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n            // Get the specular component.\n            vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n            return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n          }\n        #endif\\n`);\n\n      // Add refraction\n      shader.fragmentShader = shader.fragmentShader.replace('#include <transmission_fragment>', /*glsl*/`  \n        // Improve the refraction to use the world pos\n        material.transmission = _transmission;\n        material.transmissionAlpha = 1.0;\n        material.thickness = thickness;\n        material.attenuationDistance = attenuationDistance;\n        material.attenuationColor = attenuationColor;\n        #ifdef USE_TRANSMISSIONMAP\n          material.transmission *= texture2D( transmissionMap, vUv ).r;\n        #endif\n        #ifdef USE_THICKNESSMAP\n          material.thickness *= texture2D( thicknessMap, vUv ).g;\n        #endif\n        \n        vec3 pos = vWorldPosition;\n        float runningSeed = 0.0;\n        vec3 v = normalize( cameraPosition - pos );\n        vec3 n = inverseTransformDirection( normal, viewMatrix );\n        vec3 transmission = vec3(0.0);\n        float transmissionR, transmissionB, transmissionG;\n        float randomCoords = rand(runningSeed++);\n        float thickness_smear = thickness * max(pow(roughnessFactor, 0.33), anisotropicBlur);\n        vec3 distortionNormal = vec3(0.0);\n        vec3 temporalOffset = vec3(time, -time, -time) * temporalDistortion;\n        if (distortion > 0.0) {\n          distortionNormal = distortion * vec3(snoiseFractal(vec3((pos * distortionScale + temporalOffset))), snoiseFractal(vec3(pos.zxy * distortionScale - temporalOffset)), snoiseFractal(vec3(pos.yxz * distortionScale + temporalOffset)));\n        }\n        for (float i = 0.0; i < ${samples}.0; i ++) {\n          vec3 sampleNorm = normalize(n + roughnessFactor * roughnessFactor * 2.0 * normalize(vec3(rand(runningSeed++) - 0.5, rand(runningSeed++) - 0.5, rand(runningSeed++) - 0.5)) * pow(rand(runningSeed++), 0.33) + distortionNormal);\n          transmissionR = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness  + thickness_smear * (i + randomCoords) / float(${samples}),\n            material.attenuationColor, material.attenuationDistance\n          ).r;\n          transmissionG = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior  * (1.0 + chromaticAberration * (i + randomCoords) / float(${samples})) , material.thickness + thickness_smear * (i + randomCoords) / float(${samples}),\n            material.attenuationColor, material.attenuationDistance\n          ).g;\n          transmissionB = getIBLVolumeRefraction(\n            sampleNorm, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n            pos, modelMatrix, viewMatrix, projectionMatrix, material.ior * (1.0 + 2.0 * chromaticAberration * (i + randomCoords) / float(${samples})), material.thickness + thickness_smear * (i + randomCoords) / float(${samples}),\n            material.attenuationColor, material.attenuationDistance\n          ).b;\n          transmission.r += transmissionR;\n          transmission.g += transmissionG;\n          transmission.b += transmissionB;\n        }\n        transmission /= ${samples}.0;\n        totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\\n`);\n    };\n    Object.keys(this.uniforms).forEach(name => Object.defineProperty(this, name, {\n      get: () => this.uniforms[name].value,\n      set: v => this.uniforms[name].value = v\n    }));\n  }\n}\nconst MeshTransmissionMaterial = /* @__PURE__ */React.forwardRef(({\n  buffer,\n  transmissionSampler = false,\n  backside = false,\n  side = THREE.FrontSide,\n  transmission = 1,\n  thickness = 0,\n  backsideThickness = 0,\n  backsideEnvMapIntensity = 1,\n  samples = 10,\n  resolution,\n  backsideResolution,\n  background,\n  anisotropy,\n  anisotropicBlur,\n  ...props\n}, fref) => {\n  extend({\n    MeshTransmissionMaterial: MeshTransmissionMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const [discardMaterial] = React.useState(() => new DiscardMaterial());\n  const fboBack = useFBO(backsideResolution || resolution);\n  const fboMain = useFBO(resolution);\n  let oldBg;\n  let oldEnvMapIntensity;\n  let oldTone;\n  let parent;\n  useFrame(state => {\n    ref.current.time = state.clock.elapsedTime;\n    // Render only if the buffer matches the built-in and no transmission sampler is set\n    if (ref.current.buffer === fboMain.texture && !transmissionSampler) {\n      parent = ref.current.__r3f.parent;\n      if (parent) {\n        // Save defaults\n        oldTone = state.gl.toneMapping;\n        oldBg = state.scene.background;\n        oldEnvMapIntensity = ref.current.envMapIntensity;\n\n        // Switch off tonemapping lest it double tone maps\n        // Save the current background and set the HDR as the new BG\n        // Use discardmaterial, the parent will be invisible, but it's shadows will still be cast\n        state.gl.toneMapping = THREE.NoToneMapping;\n        if (background) state.scene.background = background;\n        parent.material = discardMaterial;\n        if (backside) {\n          // Render into the backside buffer\n          state.gl.setRenderTarget(fboBack);\n          state.gl.render(state.scene, state.camera);\n          // And now prepare the material for the main render using the backside buffer\n          parent.material = ref.current;\n          parent.material.buffer = fboBack.texture;\n          parent.material.thickness = backsideThickness;\n          parent.material.side = THREE.BackSide;\n          parent.material.envMapIntensity = backsideEnvMapIntensity;\n        }\n\n        // Render into the main buffer\n        state.gl.setRenderTarget(fboMain);\n        state.gl.render(state.scene, state.camera);\n        parent.material = ref.current;\n        parent.material.thickness = thickness;\n        parent.material.side = side;\n        parent.material.buffer = fboMain.texture;\n        parent.material.envMapIntensity = oldEnvMapIntensity;\n\n        // Set old state back\n        state.scene.background = oldBg;\n        state.gl.setRenderTarget(null);\n        state.gl.toneMapping = oldTone;\n      }\n    }\n  });\n\n  // Forward ref\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"meshTransmissionMaterial\", _extends({\n    // Samples must re-compile the shader so we memoize it\n    args: [samples, transmissionSampler],\n    ref: ref\n  }, props, {\n    buffer: buffer || fboMain.texture\n    // @ts-ignore\n    ,\n    _transmission: transmission\n    // In order for this to not incur extra cost \"transmission\" must be set to 0 and treated as a reserved prop.\n    // This is because THREE.WebGLRenderer will check for transmission > 0 and execute extra renders.\n    // The exception is when transmissionSampler is set, in which case we are using three's built in sampler.\n    ,\n    anisotropicBlur: anisotropicBlur !== null && anisotropicBlur !== void 0 ? anisotropicBlur : anisotropy,\n    transmission: transmissionSampler ? transmission : 0,\n    thickness: thickness,\n    side: side\n  }));\n});\n\nexport { MeshTransmissionMaterial };\n", "import { shaderMaterial } from '../core/shaderMaterial.js';\n\nconst DiscardMaterial = /* @__PURE__ */shaderMaterial({}, 'void main() { }', 'void main() { gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0); discard;  }');\n\nexport { DiscardMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { extend } from '@react-three/fiber';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\n\nconst MeshDiscardMaterial = /* @__PURE__ */React.forwardRef((props, fref) => {\n  extend({\n    DiscardMaterialImpl: DiscardMaterial\n  });\n  return /*#__PURE__*/React.createElement(\"discardMaterialImpl\", _extends({\n    ref: fref\n  }, props));\n});\n\nexport { MeshDiscardMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\n\nfunction MultiMaterial(props) {\n  const group = React.useRef(null);\n  React.useLayoutEffect(() => {\n    var _group$current;\n    const parent = (_group$current = group.current) == null ? void 0 : _group$current.parent;\n    const geometry = parent == null ? void 0 : parent.geometry;\n    if (geometry) {\n      const oldMaterial = parent.material;\n      parent.material = group.current.__r3f.objects;\n      const oldGroups = [...geometry.groups];\n      geometry.clearGroups();\n      parent.material.forEach((material, index) => {\n        if (index < parent.material.length - 1) material.depthWrite = false;\n        geometry.addGroup(0, Infinity, index);\n      });\n      return () => {\n        parent.material = oldMaterial;\n        geometry.groups = oldGroups;\n      };\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: group\n  }, props));\n}\n\nexport { MultiMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { version } from '../helpers/constants.js';\n\nconst opaque_fragment = version >= 154 ? 'opaque_fragment' : 'output_fragment';\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n    this.onBeforeCompile = (shader, renderer) => {\n      const {\n        isWebGL2\n      } = renderer.capabilities;\n      shader.fragmentShader = shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `\n        ${!isWebGL2 ? `#extension GL_OES_standard_derivatives : enable\\n#include <${opaque_fragment}>` : `#include <${opaque_fragment}>`}\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n      `);\n    };\n  }\n}\nconst PointMaterial = /* @__PURE__ */React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\n\n/*  Integration and compilation: @N8Programs\n    Inspired by:\n     https://github.com/mrdoob/three.js/blob/dev/examples/webgl_shadowmap_pcss.html\n     https://developer.nvidia.com/gpugems/gpugems2/part-ii-shading-lighting-and-shadows/chapter-17-efficient-soft-edged-shadows-using\n     https://developer.download.nvidia.com/whitepapers/2008/PCSS_Integration.pdf\n     https://github.com/mrdoob/three.js/blob/master/examples/webgl_shadowmap_pcss.html [spidersharma03]\n     https://spline.design/\n   Concept:\n     https://www.gamedev.net/tutorials/programming/graphics/contact-hardening-soft-shadows-made-fast-r4906/\n   Vogel Disk Implementation:\n     https://www.shadertoy.com/view/4l3yRM [ashalah]\n   High-Frequency Noise Implementation:\n     https://www.shadertoy.com/view/tt3fDH [spawner64]\n*/\nconst pcss = ({\n  focus = 0,\n  size = 25,\n  samples = 10\n} = {}) => `\n#define PENUMBRA_FILTER_SIZE float(${size})\n#define RGB_NOISE_FUNCTION(uv) (randRGB(uv))\nvec3 randRGB(vec2 uv) {\n  return vec3(\n    fract(sin(dot(uv, vec2(12.75613, 38.12123))) * 13234.76575),\n    fract(sin(dot(uv, vec2(19.45531, 58.46547))) * 43678.23431),\n    fract(sin(dot(uv, vec2(23.67817, 78.23121))) * 93567.23423)\n  );\n}\n\nvec3 lowPassRandRGB(vec2 uv) {\n  // 3x3 convolution (average)\n  // can be implemented as separable with an extra buffer for a total of 6 samples instead of 9\n  vec3 result = vec3(0);\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0, -1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0,  0.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(-1.0, +1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0, -1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0,  0.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2( 0.0, +1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0, -1.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0,  0.0));\n  result += RGB_NOISE_FUNCTION(uv + vec2(+1.0, +1.0));\n  result *= 0.111111111; // 1.0 / 9.0\n  return result;\n}\nvec3 highPassRandRGB(vec2 uv) {\n  // by subtracting the low-pass signal from the original signal, we're being left with the high-pass signal\n  // hp(x) = x - lp(x)\n  return RGB_NOISE_FUNCTION(uv) - lowPassRandRGB(uv) + 0.5;\n}\n\n\nvec2 vogelDiskSample(int sampleIndex, int sampleCount, float angle) {\n  const float goldenAngle = 2.399963f; // radians\n  float r = sqrt(float(sampleIndex) + 0.5f) / sqrt(float(sampleCount));\n  float theta = float(sampleIndex) * goldenAngle + angle;\n  float sine = sin(theta);\n  float cosine = cos(theta);\n  return vec2(cosine, sine) * r;\n}\nfloat penumbraSize( const in float zReceiver, const in float zBlocker ) { // Parallel plane estimation\n  return (zReceiver - zBlocker) / zBlocker;\n}\nfloat findBlocker(sampler2D shadowMap, vec2 uv, float compare, float angle) {\n  float texelSize = 1.0 / float(textureSize(shadowMap, 0).x);\n  float blockerDepthSum = float(${focus});\n  float blockers = 0.0;\n\n  int j = 0;\n  vec2 offset = vec2(0.);\n  float depth = 0.;\n\n  #pragma unroll_loop_start\n  for(int i = 0; i < ${samples}; i ++) {\n    offset = (vogelDiskSample(j, ${samples}, angle) * texelSize) * 2.0 * PENUMBRA_FILTER_SIZE;\n    depth = unpackRGBAToDepth( texture2D( shadowMap, uv + offset));\n    if (depth < compare) {\n      blockerDepthSum += depth;\n      blockers++;\n    }\n    j++;\n  }\n  #pragma unroll_loop_end\n\n  if (blockers > 0.0) {\n    return blockerDepthSum / blockers;\n  }\n  return -1.0;\n}\n\n        \nfloat vogelFilter(sampler2D shadowMap, vec2 uv, float zReceiver, float filterRadius, float angle) {\n  float texelSize = 1.0 / float(textureSize(shadowMap, 0).x);\n  float shadow = 0.0f;\n  int j = 0;\n  vec2 vogelSample = vec2(0.0);\n  vec2 offset = vec2(0.0);\n  #pragma unroll_loop_start\n  for (int i = 0; i < ${samples}; i++) {\n    vogelSample = vogelDiskSample(j, ${samples}, angle) * texelSize;\n    offset = vogelSample * (1.0 + filterRadius * float(${size}));\n    shadow += step( zReceiver, unpackRGBAToDepth( texture2D( shadowMap, uv + offset ) ) );\n    j++;\n  }\n  #pragma unroll_loop_end\n  return shadow * 1.0 / ${samples}.0;\n}\n\nfloat PCSS (sampler2D shadowMap, vec4 coords) {\n  vec2 uv = coords.xy;\n  float zReceiver = coords.z; // Assumed to be eye-space z in this code\n  float angle = highPassRandRGB(gl_FragCoord.xy).r * PI2;\n  float avgBlockerDepth = findBlocker(shadowMap, uv, zReceiver, angle);\n  if (avgBlockerDepth == -1.0) {\n    return 1.0;\n  }\n  float penumbraRatio = penumbraSize(zReceiver, avgBlockerDepth);\n  return vogelFilter(shadowMap, uv, zReceiver, 1.25 * penumbraRatio, angle);\n}`;\nfunction reset(gl, scene, camera) {\n  scene.traverse(object => {\n    if (object.material) {\n      gl.properties.remove(object.material);\n      object.material.dispose == null || object.material.dispose();\n    }\n  });\n  gl.info.programs.length = 0;\n  gl.compile(scene, camera);\n}\nfunction SoftShadows({\n  focus = 0,\n  samples = 10,\n  size = 25\n}) {\n  const gl = useThree(state => state.gl);\n  const scene = useThree(state => state.scene);\n  const camera = useThree(state => state.camera);\n  React.useEffect(() => {\n    const original = THREE.ShaderChunk.shadowmap_pars_fragment;\n    THREE.ShaderChunk.shadowmap_pars_fragment = THREE.ShaderChunk.shadowmap_pars_fragment.replace('#ifdef USE_SHADOWMAP', '#ifdef USE_SHADOWMAP\\n' + pcss({\n      size,\n      samples,\n      focus\n    })).replace('#if defined( SHADOWMAP_TYPE_PCF )', '\\nreturn PCSS(shadowMap, shadowCoord);\\n#if defined( SHADOWMAP_TYPE_PCF )');\n    reset(gl, scene, camera);\n    return () => {\n      THREE.ShaderChunk.shadowmap_pars_fragment = original;\n      reset(gl, scene, camera);\n    };\n  }, [focus, size, samples]);\n  return null;\n}\n\nexport { SoftShadows };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nfunction create(type, effect) {\n  const El = type + 'Geometry';\n  return /*#__PURE__*/React.forwardRef(({\n    args,\n    children,\n    ...props\n  }, fref) => {\n    const ref = React.useRef(null);\n    React.useImperativeHandle(fref, () => ref.current);\n    React.useLayoutEffect(() => void (effect == null ? void 0 : effect(ref.current)));\n    return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, props), /*#__PURE__*/React.createElement(El, {\n      attach: \"geometry\",\n      args: args\n    }), children);\n  });\n}\nconst Box = /* @__PURE__ */create('box');\nconst Circle = /* @__PURE__ */create('circle');\nconst Cone = /* @__PURE__ */create('cone');\nconst Cylinder = /* @__PURE__ */create('cylinder');\nconst Sphere = /* @__PURE__ */create('sphere');\nconst Plane = /* @__PURE__ */create('plane');\nconst Tube = /* @__PURE__ */create('tube');\nconst Torus = /* @__PURE__ */create('torus');\nconst TorusKnot = /* @__PURE__ */create('torusKnot');\nconst Tetrahedron = /* @__PURE__ */create('tetrahedron');\nconst Ring = /* @__PURE__ */create('ring');\nconst Polyhedron = /* @__PURE__ */create('polyhedron');\nconst Icosahedron = /* @__PURE__ */create('icosahedron');\nconst Octahedron = /* @__PURE__ */create('octahedron');\nconst Dodecahedron = /* @__PURE__ */create('dodecahedron');\nconst Extrude = /* @__PURE__ */create('extrude');\nconst Lathe = /* @__PURE__ */create('lathe');\nconst Capsule = /* @__PURE__ */create('capsule');\nconst Shape = /* @__PURE__ */create('shape', ({\n  geometry\n}) => {\n  // Calculate UVs (by https://discourse.threejs.org/u/prisoner849)\n  // https://discourse.threejs.org/t/custom-shape-in-image-not-working/49348/10\n  const pos = geometry.attributes.position;\n  const b3 = new THREE.Box3().setFromBufferAttribute(pos);\n  const b3size = new THREE.Vector3();\n  b3.getSize(b3size);\n  const uv = [];\n  let x = 0,\n    y = 0,\n    u = 0,\n    v = 0;\n  for (let i = 0; i < pos.count; i++) {\n    x = pos.getX(i);\n    y = pos.getY(i);\n    u = (x - b3.min.x) / b3size.x;\n    v = (y - b3.min.y) / b3size.y;\n    uv.push(u, v);\n  }\n  geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uv, 2));\n});\n\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Shape, Sphere, Tetrahedron, Torus, TorusKnot, Tube };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Shape } from 'three';\nimport { toCreasedNormals } from 'three-stdlib';\n\nconst eps = 0.00001;\nfunction createShape(width, height, radius0) {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(eps, height - radius * 2, eps, Math.PI, Math.PI / 2, true);\n  shape.absarc(width - radius * 2, height - radius * 2, eps, Math.PI / 2, 0, true);\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n  return shape;\n}\nconst RoundedBox = /* @__PURE__ */React.forwardRef(function RoundedBox({\n  args: [width = 1, height = 1, depth = 1] = [],\n  radius = 0.05,\n  steps = 1,\n  smoothness = 4,\n  bevelSegments = 4,\n  creaseAngle = 0.4,\n  children,\n  ...rest\n}, ref) {\n  const shape = React.useMemo(() => createShape(width, height, radius), [width, height, radius]);\n  const params = React.useMemo(() => ({\n    depth: depth - radius * 2,\n    bevelEnabled: true,\n    bevelSegments: bevelSegments * 2,\n    steps,\n    bevelSize: radius - eps,\n    bevelThickness: radius,\n    curveSegments: smoothness\n  }), [depth, radius, smoothness]);\n  const geomRef = React.useRef(null);\n  React.useLayoutEffect(() => {\n    if (geomRef.current) {\n      geomRef.current.center();\n      toCreasedNormals(geomRef.current, creaseAngle);\n    }\n  }, [shape, params]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref\n  }, rest), /*#__PURE__*/React.createElement(\"extrudeGeometry\", {\n    ref: geomRef,\n    args: [shape, params]\n  }), children);\n});\n\nexport { RoundedBox };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nfunction createScreenQuadGeometry() {\n  const geometry = new THREE.BufferGeometry();\n  const vertices = new Float32Array([-1, -1, 3, -1, -1, 3]);\n  geometry.boundingSphere = new THREE.Sphere();\n  geometry.boundingSphere.set(new THREE.Vector3(), Infinity);\n  geometry.setAttribute('position', new THREE.BufferAttribute(vertices, 2));\n  return geometry;\n}\nconst ScreenQuad = /* @__PURE__ */React.forwardRef(function ScreenQuad({\n  children,\n  ...restProps\n}, ref) {\n  const geometry = React.useMemo(createScreenQuadGeometry, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    geometry: geometry,\n    frustumCulled: false\n  }, restProps), children);\n});\n\nexport { ScreenQuad };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nconst Resize = /* @__PURE__ */React.forwardRef(({\n  children,\n  width,\n  height,\n  depth,\n  box3,\n  precise = true,\n  ...props\n}, fRef) => {\n  const ref = React.useRef(null);\n  const outer = React.useRef(null);\n  const inner = React.useRef(null);\n  React.useLayoutEffect(() => {\n    outer.current.matrixWorld.identity();\n    let box = box3 || new THREE.Box3().setFromObject(inner.current, precise);\n    const w = box.max.x - box.min.x;\n    const h = box.max.y - box.min.y;\n    const d = box.max.z - box.min.z;\n    let dimension = Math.max(w, h, d);\n    if (width) dimension = w;\n    if (height) dimension = h;\n    if (depth) dimension = d;\n    outer.current.scale.setScalar(1 / dimension);\n  }, [width, height, depth, box3, precise]);\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)));\n});\n\nexport { Resize };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nvar AnimationState = /*#__PURE__*/function (AnimationState) {\n  AnimationState[AnimationState[\"NONE\"] = 0] = \"NONE\";\n  AnimationState[AnimationState[\"START\"] = 1] = \"START\";\n  AnimationState[AnimationState[\"ACTIVE\"] = 2] = \"ACTIVE\";\n  return AnimationState;\n}(AnimationState || {});\nconst isOrthographic = def => def && def.isOrthographicCamera;\nconst isBox3 = def => def && def.isBox3;\nconst interpolateFuncDefault = t => {\n  // Imitates the previously used THREE.MathUtils.damp\n  return 1 - Math.exp(-5 * t) + 0.007 * t;\n};\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  maxDuration = 1.0,\n  margin = 1.2,\n  observe,\n  fit,\n  clip,\n  interpolateFunc = interpolateFuncDefault,\n  onFit\n}) {\n  const ref = React.useRef(null);\n  const {\n    camera,\n    size,\n    invalidate\n  } = useThree();\n  const controls = useThree(state => state.controls);\n  const onFitRef = React.useRef(onFit);\n  onFitRef.current = onFit;\n  const origin = React.useRef({\n    camPos: new THREE.Vector3(),\n    camRot: new THREE.Quaternion(),\n    camZoom: 1\n  });\n  const goal = React.useRef({\n    camPos: undefined,\n    camRot: undefined,\n    camZoom: undefined,\n    camUp: undefined,\n    target: undefined\n  });\n  const animationState = React.useRef(AnimationState.NONE);\n  const t = React.useRef(0); // represent animation state from 0 to 1\n\n  const [box] = React.useState(() => new THREE.Box3());\n  const api = React.useMemo(() => {\n    function getSize() {\n      const boxSize = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(boxSize.x, boxSize.y, boxSize.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        box,\n        size: boxSize,\n        center,\n        distance\n      };\n    }\n    return {\n      getSize,\n      refresh(object) {\n        if (isBox3(object)) box.copy(object);else {\n          const target = object || ref.current;\n          if (!target) return this;\n          target.updateWorldMatrix(true, true);\n          box.setFromObject(target);\n        }\n        if (box.isEmpty()) {\n          const max = camera.position.length() || 10;\n          box.setFromCenterAndSize(new THREE.Vector3(), new THREE.Vector3(max, max, max));\n        }\n        origin.current.camPos.copy(camera.position);\n        origin.current.camRot.copy(camera.quaternion);\n        isOrthographic(camera) && (origin.current.camZoom = camera.zoom);\n        goal.current.camPos = undefined;\n        goal.current.camRot = undefined;\n        goal.current.camZoom = undefined;\n        goal.current.camUp = undefined;\n        goal.current.target = undefined;\n        return this;\n      },\n      reset() {\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = camera.position.clone().sub(center).normalize();\n        goal.current.camPos = center.clone().addScaledVector(direction, distance);\n        goal.current.target = center.clone();\n        const mCamRot = new THREE.Matrix4().lookAt(goal.current.camPos, goal.current.target, camera.up);\n        goal.current.camRot = new THREE.Quaternion().setFromRotationMatrix(mCamRot);\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        return this;\n      },\n      moveTo(position) {\n        goal.current.camPos = Array.isArray(position) ? new THREE.Vector3(...position) : position.clone();\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        return this;\n      },\n      lookAt({\n        target,\n        up\n      }) {\n        goal.current.target = Array.isArray(target) ? new THREE.Vector3(...target) : target.clone();\n        if (up) {\n          goal.current.camUp = Array.isArray(up) ? new THREE.Vector3(...up) : up.clone();\n        } else {\n          goal.current.camUp = camera.up.clone();\n        }\n        const mCamRot = new THREE.Matrix4().lookAt(goal.current.camPos || camera.position, goal.current.target, goal.current.camUp);\n        goal.current.camRot = new THREE.Quaternion().setFromRotationMatrix(mCamRot);\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        return this;\n      },\n      /**\n       * @deprecated Use moveTo and lookAt instead\n       */\n      to({\n        position,\n        target\n      }) {\n        return this.moveTo(position).lookAt({\n          target\n        });\n      },\n      fit() {\n        if (!isOrthographic(camera)) {\n          // For non-orthographic cameras, fit should behave exactly like reset\n          return this.reset();\n        }\n\n        // For orthographic cameras, fit should only modify the zoom value\n        let maxHeight = 0,\n          maxWidth = 0;\n        const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)];\n\n        // Transform the center and each corner to camera space\n        const pos = goal.current.camPos || camera.position;\n        const target = goal.current.target || (controls == null ? void 0 : controls.target);\n        const up = goal.current.camUp || camera.up;\n        const mCamWInv = target ? new THREE.Matrix4().lookAt(pos, target, up).setPosition(pos).invert() : camera.matrixWorldInverse;\n        for (const v of vertices) {\n          v.applyMatrix4(mCamWInv);\n          maxHeight = Math.max(maxHeight, Math.abs(v.y));\n          maxWidth = Math.max(maxWidth, Math.abs(v.x));\n        }\n        maxHeight *= 2;\n        maxWidth *= 2;\n        const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n        const zoomForWidth = (camera.right - camera.left) / maxWidth;\n        goal.current.camZoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n        animationState.current = AnimationState.START;\n        t.current = 0;\n        onFitRef.current && onFitRef.current(this.getSize());\n        return this;\n      },\n      clip() {\n        const {\n          distance\n        } = getSize();\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) {\n          controls.maxDistance = distance * 10;\n          controls.update();\n        }\n        invalidate();\n        return this;\n      }\n    };\n  }, [box, camera, controls, margin, invalidate]);\n  React.useLayoutEffect(() => {\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = () => {\n        if (controls && goal.current.target && animationState.current !== AnimationState.NONE) {\n          const front = new THREE.Vector3().setFromMatrixColumn(camera.matrix, 2);\n          const d0 = origin.current.camPos.distanceTo(controls.target);\n          const d1 = (goal.current.camPos || origin.current.camPos).distanceTo(goal.current.target);\n          const d = (1 - t.current) * d0 + t.current * d1;\n          controls.target.copy(camera.position).addScaledVector(front, -d);\n          controls.update();\n        }\n        animationState.current = AnimationState.NONE;\n      };\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [controls]);\n\n  // Scale pointer on window resize\n  const count = React.useRef(0);\n  React.useLayoutEffect(() => {\n    if (observe || count.current++ === 0) {\n      api.refresh();\n      if (fit) api.reset().fit();\n      if (clip) api.clip();\n    }\n  }, [size, clip, fit, observe, camera, controls]);\n  useFrame((state, delta) => {\n    // This [additional animation step START] is needed to guarantee that delta used in animation isn't absurdly high (2-3 seconds) which is actually possible if rendering happens on demand...\n    if (animationState.current === AnimationState.START) {\n      animationState.current = AnimationState.ACTIVE;\n      invalidate();\n    } else if (animationState.current === AnimationState.ACTIVE) {\n      t.current += delta / maxDuration;\n      if (t.current >= 1) {\n        goal.current.camPos && camera.position.copy(goal.current.camPos);\n        goal.current.camRot && camera.quaternion.copy(goal.current.camRot);\n        goal.current.camUp && camera.up.copy(goal.current.camUp);\n        goal.current.camZoom && isOrthographic(camera) && (camera.zoom = goal.current.camZoom);\n        camera.updateMatrixWorld();\n        camera.updateProjectionMatrix();\n        if (controls && goal.current.target) {\n          controls.target.copy(goal.current.target);\n          controls.update();\n        }\n        animationState.current = AnimationState.NONE;\n      } else {\n        const k = interpolateFunc(t.current);\n        goal.current.camPos && camera.position.lerpVectors(origin.current.camPos, goal.current.camPos, k);\n        goal.current.camRot && camera.quaternion.slerpQuaternions(origin.current.camRot, goal.current.camRot, k);\n        goal.current.camUp && camera.up.set(0, 1, 0).applyQuaternion(camera.quaternion);\n        goal.current.camZoom && isOrthographic(camera) && (camera.zoom = (1 - k) * origin.current.camZoom + k * goal.current.camZoom);\n        camera.updateMatrixWorld();\n        camera.updateProjectionMatrix();\n      }\n      invalidate();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n", "import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\n\nconst CameraShake = /* @__PURE__ */React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 0.1,\n  pitchFrequency = 0.1,\n  rollFrequency = 0.1\n}, ref) => {\n  const camera = useThree(state => state.camera);\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    if (defaultControls) {\n      const callback = () => void (initialRotation.current = camera.rotation.clone());\n      defaultControls.addEventListener('change', callback);\n      callback();\n      return () => void defaultControls.removeEventListener('change', callback);\n    }\n  }, [camera, defaultControls]);\n  useFrame((state, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(state.clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(state.clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(state.clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\n\nexport { CameraShake };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport * as THREE from 'three';\n\nconst Float = /* @__PURE__ */React.forwardRef(({\n  children,\n  enabled = true,\n  speed = 1,\n  rotationIntensity = 1,\n  floatIntensity = 1,\n  floatingRange = [-0.1, 0.1],\n  autoInvalidate = false,\n  ...props\n}, forwardRef) => {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  const offset = React.useRef(Math.random() * 10000);\n  useFrame(state => {\n    var _floatingRange$, _floatingRange$2;\n    if (!enabled || speed === 0) return;\n    if (autoInvalidate) state.invalidate();\n    const t = offset.current + state.clock.elapsedTime;\n    ref.current.rotation.x = Math.cos(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.y = Math.sin(t / 4 * speed) / 8 * rotationIntensity;\n    ref.current.rotation.z = Math.sin(t / 4 * speed) / 20 * rotationIntensity;\n    let yPosition = Math.sin(t / 4 * speed) / 10;\n    yPosition = THREE.MathUtils.mapLinear(yPosition, -0.1, 0.1, (_floatingRange$ = floatingRange == null ? void 0 : floatingRange[0]) !== null && _floatingRange$ !== void 0 ? _floatingRange$ : -0.1, (_floatingRange$2 = floatingRange == null ? void 0 : floatingRange[1]) !== null && _floatingRange$2 !== void 0 ? _floatingRange$2 : 0.1);\n    ref.current.position.y = yPosition * floatIntensity;\n    ref.current.updateMatrix();\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrixAutoUpdate: false\n  }, children));\n});\n\nexport { Float };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Environment } from './Environment.js';\nimport { ContactShadows } from './ContactShadows.js';\nimport { Center } from './Center.js';\nimport { AccumulativeShadows, RandomizedLight } from './AccumulativeShadows.js';\nimport { Bounds, useBounds } from './Bounds.js';\n\nconst presets = {\n  rembrandt: {\n    main: [1, 2, 1],\n    fill: [-2, -0.5, -2]\n  },\n  portrait: {\n    main: [-1, 2, 0.5],\n    fill: [-1, 0.5, -1.5]\n  },\n  upfront: {\n    main: [0, 2, 1],\n    fill: [-1, 0.5, -1.5]\n  },\n  soft: {\n    main: [-2, 4, 4],\n    fill: [-1, 0.5, -1.5]\n  }\n};\nfunction Refit({\n  radius,\n  adjustCamera\n}) {\n  const api = useBounds();\n  React.useEffect(() => {\n    if (adjustCamera) api.refresh().clip().fit();\n  }, [radius, adjustCamera]);\n  return null;\n}\nfunction Stage({\n  children,\n  center,\n  adjustCamera = true,\n  intensity = 0.5,\n  shadows = 'contact',\n  environment = 'city',\n  preset = 'rembrandt',\n  ...props\n}) {\n  var _bias, _normalBias, _size, _offset, _amount, _radius, _ambient, _intensity;\n  const config = typeof preset === 'string' ? presets[preset] : preset;\n  const [{\n    radius,\n    height\n  }, set] = React.useState({\n    radius: 0,\n    width: 0,\n    height: 0,\n    depth: 0\n  });\n  const shadowBias = (_bias = shadows == null ? void 0 : shadows.bias) !== null && _bias !== void 0 ? _bias : -0.0001;\n  const normalBias = (_normalBias = shadows == null ? void 0 : shadows.normalBias) !== null && _normalBias !== void 0 ? _normalBias : 0;\n  const shadowSize = (_size = shadows == null ? void 0 : shadows.size) !== null && _size !== void 0 ? _size : 1024;\n  const shadowOffset = (_offset = shadows == null ? void 0 : shadows.offset) !== null && _offset !== void 0 ? _offset : 0;\n  const contactShadow = shadows === 'contact' || (shadows == null ? void 0 : shadows.type) === 'contact';\n  const accumulativeShadow = shadows === 'accumulative' || (shadows == null ? void 0 : shadows.type) === 'accumulative';\n  const shadowSpread = {\n    ...(typeof shadows === 'object' ? shadows : {})\n  };\n  const environmentProps = !environment ? null : typeof environment === 'string' ? {\n    preset: environment\n  } : environment;\n  const onCentered = React.useCallback(props => {\n    const {\n      width,\n      height,\n      depth,\n      boundingSphere\n    } = props;\n    set({\n      radius: boundingSphere.radius,\n      width,\n      height,\n      depth\n    });\n    if (center != null && center.onCentered) center.onCentered(props);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    intensity: intensity / 3\n  }), /*#__PURE__*/React.createElement(\"spotLight\", {\n    penumbra: 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    intensity: intensity * 2,\n    castShadow: !!shadows,\n    \"shadow-bias\": shadowBias,\n    \"shadow-normalBias\": normalBias,\n    \"shadow-mapSize\": shadowSize\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [config.fill[0] * radius, config.fill[1] * radius, config.fill[2] * radius],\n    intensity: intensity\n  }), /*#__PURE__*/React.createElement(Bounds, _extends({\n    fit: !!adjustCamera,\n    clip: !!adjustCamera,\n    margin: Number(adjustCamera),\n    observe: true\n  }, props), /*#__PURE__*/React.createElement(Refit, {\n    radius: radius,\n    adjustCamera: adjustCamera\n  }), /*#__PURE__*/React.createElement(Center, _extends({}, center, {\n    position: [0, shadowOffset / 2, 0],\n    onCentered: onCentered\n  }), children)), /*#__PURE__*/React.createElement(\"group\", {\n    position: [0, -height / 2 - shadowOffset / 2, 0]\n  }, contactShadow && /*#__PURE__*/React.createElement(ContactShadows, _extends({\n    scale: radius * 4,\n    far: radius,\n    blur: 2\n  }, shadowSpread)), accumulativeShadow && /*#__PURE__*/React.createElement(AccumulativeShadows, _extends({\n    temporal: true,\n    frames: 100,\n    alphaTest: 0.9,\n    toneMapped: true,\n    scale: radius * 4\n  }, shadowSpread), /*#__PURE__*/React.createElement(RandomizedLight, {\n    amount: (_amount = shadowSpread.amount) !== null && _amount !== void 0 ? _amount : 8,\n    radius: (_radius = shadowSpread.radius) !== null && _radius !== void 0 ? _radius : radius,\n    ambient: (_ambient = shadowSpread.ambient) !== null && _ambient !== void 0 ? _ambient : 0.5,\n    intensity: (_intensity = shadowSpread.intensity) !== null && _intensity !== void 0 ? _intensity : 1,\n    position: [config.main[0] * radius, config.main[1] * radius, config.main[2] * radius],\n    size: radius * 4,\n    bias: -shadowBias,\n    mapSize: shadowSize\n  }))), environment && /*#__PURE__*/React.createElement(Environment, environmentProps));\n}\n\nexport { Stage };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useThree, useFrame, createPortal, applyProps, extend } from '@react-three/fiber';\nimport { Scene, WebGLCubeRenderTarget, HalfFloatType } from 'three';\nimport { GroundProjectedEnv } from 'three-stdlib';\nimport { useEnvironment } from './useEnvironment.js';\n\nconst isRef = obj => obj.current && obj.current.isScene;\nconst resolveScene = scene => isRef(scene) ? scene.current : scene;\nfunction setEnvProps(background, scene, defaultScene, texture, sceneProps = {}) {\n  var _target$backgroundRot, _target$backgroundRot2, _target$environmentRo, _target$environmentRo2;\n  // defaults\n  sceneProps = {\n    backgroundBlurriness: 0,\n    backgroundIntensity: 1,\n    backgroundRotation: [0, 0, 0],\n    environmentIntensity: 1,\n    environmentRotation: [0, 0, 0],\n    ...sceneProps\n  };\n  const target = resolveScene(scene || defaultScene);\n  const oldbg = target.background;\n  const oldenv = target.environment;\n  const oldSceneProps = {\n    // @ts-ignore\n    backgroundBlurriness: target.backgroundBlurriness,\n    // @ts-ignore\n    backgroundIntensity: target.backgroundIntensity,\n    // @ts-ignore\n    backgroundRotation: (_target$backgroundRot = (_target$backgroundRot2 = target.backgroundRotation) == null || _target$backgroundRot2.clone == null ? void 0 : _target$backgroundRot2.clone()) !== null && _target$backgroundRot !== void 0 ? _target$backgroundRot : [0, 0, 0],\n    // @ts-ignore\n    environmentIntensity: target.environmentIntensity,\n    // @ts-ignore\n    environmentRotation: (_target$environmentRo = (_target$environmentRo2 = target.environmentRotation) == null || _target$environmentRo2.clone == null ? void 0 : _target$environmentRo2.clone()) !== null && _target$environmentRo !== void 0 ? _target$environmentRo : [0, 0, 0]\n  };\n  if (background !== 'only') target.environment = texture;\n  if (background) target.background = texture;\n  applyProps(target, sceneProps);\n  return () => {\n    if (background !== 'only') target.environment = oldenv;\n    if (background) target.background = oldbg;\n    applyProps(target, oldSceneProps);\n  };\n}\nfunction EnvironmentMap({\n  scene,\n  background = false,\n  map,\n  ...config\n}) {\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    if (map) return setEnvProps(background, scene, defaultScene, map, config);\n  });\n  return null;\n}\nfunction EnvironmentCube({\n  background = false,\n  scene,\n  blur,\n  backgroundBlurriness,\n  backgroundIntensity,\n  backgroundRotation,\n  environmentIntensity,\n  environmentRotation,\n  ...rest\n}) {\n  const texture = useEnvironment(rest);\n  const defaultScene = useThree(state => state.scene);\n  React.useLayoutEffect(() => {\n    return setEnvProps(background, scene, defaultScene, texture, {\n      backgroundBlurriness: blur !== null && blur !== void 0 ? blur : backgroundBlurriness,\n      backgroundIntensity,\n      backgroundRotation,\n      environmentIntensity,\n      environmentRotation\n    });\n  });\n  React.useEffect(() => {\n    return () => {\n      texture.dispose();\n    };\n  }, [texture]);\n  return null;\n}\nfunction EnvironmentPortal({\n  children,\n  near = 0.1,\n  far = 1000,\n  resolution = 256,\n  frames = 1,\n  map,\n  background = false,\n  blur,\n  backgroundBlurriness,\n  backgroundIntensity,\n  backgroundRotation,\n  environmentIntensity,\n  environmentRotation,\n  scene,\n  files,\n  path,\n  preset = undefined,\n  extensions\n}) {\n  const gl = useThree(state => state.gl);\n  const defaultScene = useThree(state => state.scene);\n  const camera = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const fbo = React.useMemo(() => {\n    const fbo = new WebGLCubeRenderTarget(resolution);\n    fbo.texture.type = HalfFloatType;\n    return fbo;\n  }, [resolution]);\n  React.useEffect(() => {\n    return () => {\n      fbo.dispose();\n    };\n  }, [fbo]);\n  React.useLayoutEffect(() => {\n    if (frames === 1) {\n      const autoClear = gl.autoClear;\n      gl.autoClear = true;\n      camera.current.update(gl, virtualScene);\n      gl.autoClear = autoClear;\n    }\n    return setEnvProps(background, scene, defaultScene, fbo.texture, {\n      backgroundBlurriness: blur !== null && blur !== void 0 ? blur : backgroundBlurriness,\n      backgroundIntensity,\n      backgroundRotation,\n      environmentIntensity,\n      environmentRotation\n    });\n  }, [children, virtualScene, fbo.texture, scene, defaultScene, background, frames, gl]);\n  let count = 1;\n  useFrame(() => {\n    if (frames === Infinity || count < frames) {\n      const autoClear = gl.autoClear;\n      gl.autoClear = true;\n      camera.current.update(gl, virtualScene);\n      gl.autoClear = autoClear;\n      count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(/*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo]\n  }), files || preset ? /*#__PURE__*/React.createElement(EnvironmentCube, {\n    background: true,\n    files: files,\n    preset: preset,\n    path: path,\n    extensions: extensions\n  }) : map ? /*#__PURE__*/React.createElement(EnvironmentMap, {\n    background: true,\n    map: map,\n    extensions: extensions\n  }) : null), virtualScene));\n}\nfunction EnvironmentGround(props) {\n  var _props$ground, _props$ground2, _scale, _props$ground3;\n  const textureDefault = useEnvironment(props);\n  const texture = props.map || textureDefault;\n  React.useMemo(() => extend({\n    GroundProjectedEnvImpl: GroundProjectedEnv\n  }), []);\n  React.useEffect(() => {\n    return () => {\n      textureDefault.dispose();\n    };\n  }, [textureDefault]);\n  const args = React.useMemo(() => [texture], [texture]);\n  const height = (_props$ground = props.ground) == null ? void 0 : _props$ground.height;\n  const radius = (_props$ground2 = props.ground) == null ? void 0 : _props$ground2.radius;\n  const scale = (_scale = (_props$ground3 = props.ground) == null ? void 0 : _props$ground3.scale) !== null && _scale !== void 0 ? _scale : 1000;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(EnvironmentMap, _extends({}, props, {\n    map: texture\n  })), /*#__PURE__*/React.createElement(\"groundProjectedEnvImpl\", {\n    args: args,\n    scale: scale,\n    height: height,\n    radius: radius\n  }));\n}\nfunction Environment(props) {\n  return props.ground ? /*#__PURE__*/React.createElement(EnvironmentGround, props) : props.map ? /*#__PURE__*/React.createElement(EnvironmentMap, props) : props.children ? /*#__PURE__*/React.createElement(EnvironmentPortal, props) : /*#__PURE__*/React.createElement(EnvironmentCube, props);\n}\n\nexport { Environment, EnvironmentCube, EnvironmentMap, EnvironmentPortal };\n", "const presetsObj = {\n  apartment: 'lebombo_1k.hdr',\n  city: 'potsdamer_platz_1k.hdr',\n  dawn: 'kiara_1_dawn_1k.hdr',\n  forest: 'forest_slope_1k.hdr',\n  lobby: 'st_fagans_interior_1k.hdr',\n  night: 'dikhololo_night_1k.hdr',\n  park: 'rooitou_park_1k.hdr',\n  studio: 'studio_small_03_1k.hdr',\n  sunset: 'venice_sunset_1k.hdr',\n  warehouse: 'empty_warehouse_01_1k.hdr'\n};\n\nexport { presetsObj };\n", "import { useThree, useLoader } from '@react-three/fiber';\nimport { CubeReflectionMapping, EquirectangularReflectionMapping, CubeTextureLoader } from 'three';\nimport { RGBELoader, EXRLoader } from 'three-stdlib';\nimport { HDRJPGLoader, GainMapLoader } from '@monogrid/gainmap-js';\nimport { presetsObj } from '../helpers/environment-assets.js';\nimport { sRGBEncoding, LinearEncoding } from '../helpers/deprecated.js';\nimport { useLayoutEffect } from 'react';\n\nconst CUBEMAP_ROOT = 'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/';\nconst isArray = arr => Array.isArray(arr);\nconst defaultFiles = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'];\nfunction useEnvironment({\n  files = defaultFiles,\n  path = '',\n  preset = undefined,\n  encoding = undefined,\n  extensions\n} = {}) {\n  let loader = null;\n  let multiFile = false;\n  if (preset) {\n    validatePreset(preset);\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n\n  // Everything else\n  multiFile = isArray(files);\n  const {\n    extension,\n    isCubemap\n  } = getExtension(files);\n  loader = getLoader(extension);\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  const gl = useThree(state => state.gl);\n  useLayoutEffect(() => {\n    // Only required for gainmap\n    if (extension !== 'webp' && extension !== 'jpg' && extension !== 'jpeg') return;\n    function clearGainmapTexture() {\n      useLoader.clear(\n      // @ts-expect-error\n      loader, multiFile ? [files] : files);\n    }\n    gl.domElement.addEventListener('webglcontextlost', clearGainmapTexture, {\n      once: true\n    });\n  }, [files, gl.domElement]);\n  const loaderResult = useLoader(\n  // @ts-expect-error\n  loader, multiFile ? [files] : files, loader => {\n    // Gainmap requires a renderer\n    if (extension === 'webp' || extension === 'jpg' || extension === 'jpeg') {\n      loader.setRenderer(gl);\n    }\n    loader.setPath == null || loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n  let texture = multiFile ?\n  // @ts-ignore\n  loaderResult[0] : loaderResult;\n  if (extension === 'jpg' || extension === 'jpeg' || extension === 'webp') {\n    var _renderTarget;\n    texture = (_renderTarget = texture.renderTarget) == null ? void 0 : _renderTarget.texture;\n  }\n  texture.mapping = isCubemap ? CubeReflectionMapping : EquirectangularReflectionMapping;\n  if ('colorSpace' in texture) texture.colorSpace = (encoding !== null && encoding !== void 0 ? encoding : isCubemap) ? 'srgb' : 'srgb-linear';else texture.encoding = (encoding !== null && encoding !== void 0 ? encoding : isCubemap) ? sRGBEncoding : LinearEncoding;\n  return texture;\n}\nconst preloadDefaultOptions = {\n  files: defaultFiles,\n  path: '',\n  preset: undefined,\n  extensions: undefined\n};\nuseEnvironment.preload = preloadOptions => {\n  const options = {\n    ...preloadDefaultOptions,\n    ...preloadOptions\n  };\n  let {\n    files,\n    path = ''\n  } = options;\n  const {\n    preset,\n    extensions\n  } = options;\n  if (preset) {\n    validatePreset(preset);\n    files = presetsObj[preset];\n    path = CUBEMAP_ROOT;\n  }\n  const {\n    extension\n  } = getExtension(files);\n  if (extension === 'webp' || extension === 'jpg' || extension === 'jpeg') {\n    throw new Error('useEnvironment: Preloading gainmaps is not supported');\n  }\n  const loader = getLoader(extension);\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  useLoader.preload(\n  // @ts-expect-error\n  loader, isArray(files) ? [files] : files, loader => {\n    loader.setPath == null || loader.setPath(path);\n    if (extensions) extensions(loader);\n  });\n};\nconst clearDefaultOptins = {\n  files: defaultFiles,\n  preset: undefined\n};\nuseEnvironment.clear = clearOptions => {\n  const options = {\n    ...clearDefaultOptins,\n    ...clearOptions\n  };\n  let {\n    files\n  } = options;\n  const {\n    preset\n  } = options;\n  if (preset) {\n    validatePreset(preset);\n    files = presetsObj[preset];\n  }\n  const {\n    extension\n  } = getExtension(files);\n  const loader = getLoader(extension);\n  if (!loader) throw new Error('useEnvironment: Unrecognized file extension: ' + files);\n  useLoader.clear(\n  // @ts-expect-error\n  loader, isArray(files) ? [files] : files);\n};\nfunction validatePreset(preset) {\n  if (!(preset in presetsObj)) throw new Error('Preset must be one of: ' + Object.keys(presetsObj).join(', '));\n}\nfunction getExtension(files) {\n  var _firstEntry$split$pop;\n  const isCubemap = isArray(files) && files.length === 6;\n  const isGainmap = isArray(files) && files.length === 3 && files.some(file => file.endsWith('json'));\n  const firstEntry = isArray(files) ? files[0] : files;\n\n  // Everything else\n  const extension = isCubemap ? 'cube' : isGainmap ? 'webp' : firstEntry.startsWith('data:application/exr') ? 'exr' : firstEntry.startsWith('data:application/hdr') ? 'hdr' : firstEntry.startsWith('data:image/jpeg') ? 'jpg' : (_firstEntry$split$pop = firstEntry.split('.').pop()) == null || (_firstEntry$split$pop = _firstEntry$split$pop.split('?')) == null || (_firstEntry$split$pop = _firstEntry$split$pop.shift()) == null ? void 0 : _firstEntry$split$pop.toLowerCase();\n  return {\n    extension,\n    isCubemap,\n    isGainmap\n  };\n}\nfunction getLoader(extension) {\n  const loader = extension === 'cube' ? CubeTextureLoader : extension === 'hdr' ? RGBELoader : extension === 'exr' ? EXRLoader : extension === 'jpg' || extension === 'jpeg' ? HDRJPGLoader : extension === 'webp' ? GainMapLoader : null;\n  return loader;\n}\n\nexport { useEnvironment };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { HorizontalBlurShader, VerticalBlurShader } from 'three-stdlib';\n\nconst ContactShadows = /* @__PURE__ */React.forwardRef(({\n  scale = 10,\n  frames = Infinity,\n  opacity = 1,\n  width = 1,\n  height = 1,\n  blur = 1,\n  near = 0,\n  far = 10,\n  resolution = 512,\n  smooth = true,\n  color = '#000000',\n  depthWrite = false,\n  renderOrder,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const scene = useThree(state => state.scene);\n  const gl = useThree(state => state.gl);\n  const shadowCamera = React.useRef(null);\n  width = width * (Array.isArray(scale) ? scale[0] : scale || 1);\n  height = height * (Array.isArray(scale) ? scale[1] : scale || 1);\n  const [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur] = React.useMemo(() => {\n    const renderTarget = new THREE.WebGLRenderTarget(resolution, resolution);\n    const renderTargetBlur = new THREE.WebGLRenderTarget(resolution, resolution);\n    renderTargetBlur.texture.generateMipmaps = renderTarget.texture.generateMipmaps = false;\n    const planeGeometry = new THREE.PlaneGeometry(width, height).rotateX(Math.PI / 2);\n    const blurPlane = new THREE.Mesh(planeGeometry);\n    const depthMaterial = new THREE.MeshDepthMaterial();\n    depthMaterial.depthTest = depthMaterial.depthWrite = false;\n    depthMaterial.onBeforeCompile = shader => {\n      shader.uniforms = {\n        ...shader.uniforms,\n        ucolor: {\n          value: new THREE.Color(color)\n        }\n      };\n      shader.fragmentShader = shader.fragmentShader.replace(`void main() {`,\n      //\n      `uniform vec3 ucolor;\n           void main() {\n          `);\n      shader.fragmentShader = shader.fragmentShader.replace('vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n      // Colorize the shadow, multiply by the falloff so that the center can remain darker\n      'vec4( ucolor * fragCoordZ * 2.0, ( 1.0 - fragCoordZ ) * 1.0 );');\n    };\n    const horizontalBlurMaterial = new THREE.ShaderMaterial(HorizontalBlurShader);\n    const verticalBlurMaterial = new THREE.ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.depthTest = horizontalBlurMaterial.depthTest = false;\n    return [renderTarget, planeGeometry, depthMaterial, blurPlane, horizontalBlurMaterial, verticalBlurMaterial, renderTargetBlur];\n  }, [resolution, width, height, scale, color]);\n  const blurShadows = blur => {\n    blurPlane.visible = true;\n    blurPlane.material = horizontalBlurMaterial;\n    horizontalBlurMaterial.uniforms.tDiffuse.value = renderTarget.texture;\n    horizontalBlurMaterial.uniforms.h.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTargetBlur);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.material = verticalBlurMaterial;\n    verticalBlurMaterial.uniforms.tDiffuse.value = renderTargetBlur.texture;\n    verticalBlurMaterial.uniforms.v.value = blur * 1 / 256;\n    gl.setRenderTarget(renderTarget);\n    gl.render(blurPlane, shadowCamera.current);\n    blurPlane.visible = false;\n  };\n  let count = 0;\n  let initialBackground;\n  let initialOverrideMaterial;\n  useFrame(() => {\n    if (shadowCamera.current && (frames === Infinity || count < frames)) {\n      count++;\n      initialBackground = scene.background;\n      initialOverrideMaterial = scene.overrideMaterial;\n      ref.current.visible = false;\n      scene.background = null;\n      scene.overrideMaterial = depthMaterial;\n      gl.setRenderTarget(renderTarget);\n      gl.render(scene, shadowCamera.current);\n      blurShadows(blur);\n      if (smooth) blurShadows(blur * 0.4);\n      gl.setRenderTarget(null);\n      ref.current.visible = true;\n      scene.overrideMaterial = initialOverrideMaterial;\n      scene.background = initialBackground;\n    }\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    \"rotation-x\": Math.PI / 2\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: renderOrder,\n    geometry: planeGeometry,\n    scale: [1, -1, 1],\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    map: renderTarget.texture,\n    opacity: opacity,\n    depthWrite: depthWrite\n  })), /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: shadowCamera,\n    args: [-width / 2, width / 2, height / 2, -height / 2, near, far]\n  }));\n});\n\nexport { ContactShadows };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { DiscardMaterial } from '../materials/DiscardMaterial.js';\nimport { version } from '../helpers/constants.js';\n\nfunction isLight(object) {\n  return object.isLight;\n}\nfunction isGeometry(object) {\n  return !!object.geometry;\n}\nconst accumulativeContext = /* @__PURE__ */React.createContext(null);\nconst SoftShadowMaterial = /* @__PURE__ */shaderMaterial({\n  color: /* @__PURE__ */new THREE.Color(),\n  blend: 2.0,\n  alphaTest: 0.75,\n  opacity: 0,\n  map: null\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vUv = uv;\n   }`, `varying vec2 vUv;\n   uniform sampler2D map;\n   uniform vec3 color;\n   uniform float opacity;\n   uniform float alphaTest;\n   uniform float blend;\n   void main() {\n     vec4 sampledDiffuseColor = texture2D(map, vUv);\n     gl_FragColor = vec4(color * sampledDiffuseColor.r * blend, max(0.0, (1.0 - (sampledDiffuseColor.r + sampledDiffuseColor.g + sampledDiffuseColor.b) / alphaTest)) * opacity);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst AccumulativeShadows = /* @__PURE__ */React.forwardRef(({\n  children,\n  temporal,\n  frames = 40,\n  limit = Infinity,\n  blend = 20,\n  scale = 10,\n  opacity = 1,\n  alphaTest = 0.75,\n  color = 'black',\n  colorBlend = 2,\n  resolution = 1024,\n  toneMapped = true,\n  ...props\n}, forwardRef) => {\n  extend({\n    SoftShadowMaterial\n  });\n  const gl = useThree(state => state.gl);\n  const scene = useThree(state => state.scene);\n  const camera = useThree(state => state.camera);\n  const invalidate = useThree(state => state.invalidate);\n  const gPlane = React.useRef(null);\n  const gLights = React.useRef(null);\n  const [plm] = React.useState(() => new ProgressiveLightMap(gl, scene, resolution));\n  React.useLayoutEffect(() => {\n    plm.configure(gPlane.current);\n  }, []);\n  const api = React.useMemo(() => ({\n    lights: new Map(),\n    temporal: !!temporal,\n    frames: Math.max(2, frames),\n    blend: Math.max(2, frames === Infinity ? blend : frames),\n    count: 0,\n    getMesh: () => gPlane.current,\n    reset: () => {\n      // Clear buffers, reset opacities, set frame count to 0\n      plm.clear();\n      const material = gPlane.current.material;\n      material.opacity = 0;\n      material.alphaTest = 0;\n      api.count = 0;\n    },\n    update: (frames = 1) => {\n      // Adapt the opacity-blend ratio to the number of frames\n      const material = gPlane.current.material;\n      if (!api.temporal) {\n        material.opacity = opacity;\n        material.alphaTest = alphaTest;\n      } else {\n        material.opacity = Math.min(opacity, material.opacity + opacity / api.blend);\n        material.alphaTest = Math.min(alphaTest, material.alphaTest + alphaTest / api.blend);\n      }\n\n      // Switch accumulative lights on\n      gLights.current.visible = true;\n      // Collect scene lights and meshes\n      plm.prepare();\n\n      // Update the lightmap and the accumulative lights\n      for (let i = 0; i < frames; i++) {\n        api.lights.forEach(light => light.update());\n        plm.update(camera, api.blend);\n      }\n      // Switch lights off\n      gLights.current.visible = false;\n      // Restore lights and meshes\n      plm.finish();\n    }\n  }), [plm, camera, scene, temporal, frames, blend, opacity, alphaTest]);\n  React.useLayoutEffect(() => {\n    // Reset internals, buffers, ...\n    api.reset();\n    // Update lightmap\n    if (!api.temporal && api.frames !== Infinity) api.update(api.blend);\n  });\n\n  // Expose api, allow children to set itself as the main light source\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  useFrame(() => {\n    if ((api.temporal || api.frames === Infinity) && api.count < api.frames && api.count < limit) {\n      invalidate();\n      api.update();\n      api.count++;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    traverse: () => null,\n    ref: gLights\n  }, /*#__PURE__*/React.createElement(accumulativeContext.Provider, {\n    value: api\n  }, children)), /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: true,\n    ref: gPlane,\n    scale: scale,\n    rotation: [-Math.PI / 2, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"softShadowMaterial\", {\n    transparent: true,\n    depthWrite: false,\n    toneMapped: toneMapped,\n    color: color,\n    blend: colorBlend,\n    map: plm.progressiveLightMap2.texture\n  })));\n});\nconst RandomizedLight = /* @__PURE__ */React.forwardRef(({\n  castShadow = true,\n  bias = 0.001,\n  mapSize = 512,\n  size = 5,\n  near = 0.5,\n  far = 500,\n  frames = 1,\n  position = [0, 0, 0],\n  radius = 1,\n  amount = 8,\n  intensity = version >= 155 ? Math.PI : 1,\n  ambient = 0.5,\n  ...props\n}, forwardRef) => {\n  const gLights = React.useRef(null);\n  const length = new THREE.Vector3(...position).length();\n  const parent = React.useContext(accumulativeContext);\n  const update = React.useCallback(() => {\n    let light;\n    if (gLights.current) {\n      for (let l = 0; l < gLights.current.children.length; l++) {\n        light = gLights.current.children[l];\n        if (Math.random() > ambient) {\n          light.position.set(position[0] + THREE.MathUtils.randFloatSpread(radius), position[1] + THREE.MathUtils.randFloatSpread(radius), position[2] + THREE.MathUtils.randFloatSpread(radius));\n        } else {\n          let lambda = Math.acos(2 * Math.random() - 1) - Math.PI / 2.0;\n          let phi = 2 * Math.PI * Math.random();\n          light.position.set(Math.cos(lambda) * Math.cos(phi) * length, Math.abs(Math.cos(lambda) * Math.sin(phi) * length), Math.sin(lambda) * length);\n        }\n      }\n    }\n  }, [radius, ambient, length, ...position]);\n  const api = React.useMemo(() => ({\n    update\n  }), [update]);\n  React.useImperativeHandle(forwardRef, () => api, [api]);\n  React.useLayoutEffect(() => {\n    var _parent$lights;\n    const group = gLights.current;\n    if (parent) (_parent$lights = parent.lights) == null || _parent$lights.set(group.uuid, api);\n    return () => {\n      var _parent$lights2;\n      return void (parent == null || (_parent$lights2 = parent.lights) == null ? void 0 : _parent$lights2.delete(group.uuid));\n    };\n  }, [parent, api]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: gLights\n  }, props), Array.from({\n    length: amount\n  }, (_, index) => /*#__PURE__*/React.createElement(\"directionalLight\", {\n    key: index,\n    castShadow: castShadow,\n    \"shadow-bias\": bias,\n    \"shadow-mapSize\": [mapSize, mapSize],\n    intensity: intensity / amount\n  }, /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    attach: \"shadow-camera\",\n    args: [-size, size, size, -size, near, far]\n  }))));\n});\n\n// Based on \"Progressive Light Map Accumulator\", by [zalo](https://github.com/zalo/)\nclass ProgressiveLightMap {\n  constructor(renderer, scene, res = 1024) {\n    this.renderer = renderer;\n    this.res = res;\n    this.scene = scene;\n    this.buffer1Active = false;\n    this.lights = [];\n    this.meshes = [];\n    this.object = null;\n    this.clearColor = new THREE.Color();\n    this.clearAlpha = 0;\n\n    // Create the Progressive LightMap Texture\n    const textureParams = {\n      type: THREE.HalfFloatType,\n      magFilter: THREE.NearestFilter,\n      minFilter: THREE.NearestFilter\n    };\n    this.progressiveLightMap1 = new THREE.WebGLRenderTarget(this.res, this.res, textureParams);\n    this.progressiveLightMap2 = new THREE.WebGLRenderTarget(this.res, this.res, textureParams);\n\n    // Inject some spicy new logic into a standard phong material\n    this.discardMat = new DiscardMaterial();\n    this.targetMat = new THREE.MeshLambertMaterial({\n      fog: false\n    });\n    this.previousShadowMap = {\n      value: this.progressiveLightMap1.texture\n    };\n    this.averagingWindow = {\n      value: 100\n    };\n    this.targetMat.onBeforeCompile = shader => {\n      // Vertex Shader: Set Vertex Positions to the Unwrapped UV Positions\n      shader.vertexShader = 'varying vec2 vUv;\\n' + shader.vertexShader.slice(0, -1) + 'vUv = uv; gl_Position = vec4((uv - 0.5) * 2.0, 1.0, 1.0); }';\n\n      // Fragment Shader: Set Pixels to average in the Previous frame's Shadows\n      const bodyStart = shader.fragmentShader.indexOf('void main() {');\n      shader.fragmentShader = 'varying vec2 vUv;\\n' + shader.fragmentShader.slice(0, bodyStart) + 'uniform sampler2D previousShadowMap;\\n\tuniform float averagingWindow;\\n' + shader.fragmentShader.slice(bodyStart - 1, -1) + `\\nvec3 texelOld = texture2D(previousShadowMap, vUv).rgb;\n        gl_FragColor.rgb = mix(texelOld, gl_FragColor.rgb, 1.0/ averagingWindow);\n      }`;\n\n      // Set the Previous Frame's Texture Buffer and Averaging Window\n      shader.uniforms.previousShadowMap = this.previousShadowMap;\n      shader.uniforms.averagingWindow = this.averagingWindow;\n    };\n  }\n  clear() {\n    this.renderer.getClearColor(this.clearColor);\n    this.clearAlpha = this.renderer.getClearAlpha();\n    this.renderer.setClearColor('black', 1);\n    this.renderer.setRenderTarget(this.progressiveLightMap1);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(this.progressiveLightMap2);\n    this.renderer.clear();\n    this.renderer.setRenderTarget(null);\n    this.renderer.setClearColor(this.clearColor, this.clearAlpha);\n    this.lights = [];\n    this.meshes = [];\n    this.scene.traverse(object => {\n      if (isGeometry(object)) {\n        this.meshes.push({\n          object,\n          material: object.material\n        });\n      } else if (isLight(object)) {\n        this.lights.push({\n          object,\n          intensity: object.intensity\n        });\n      }\n    });\n  }\n  prepare() {\n    this.lights.forEach(light => light.object.intensity = 0);\n    this.meshes.forEach(mesh => mesh.object.material = this.discardMat);\n  }\n  finish() {\n    this.lights.forEach(light => light.object.intensity = light.intensity);\n    this.meshes.forEach(mesh => mesh.object.material = mesh.material);\n  }\n  configure(object) {\n    this.object = object;\n  }\n  update(camera, blendWindow = 100) {\n    if (!this.object) return;\n    // Set each object's material to the UV Unwrapped Surface Mapping Version\n    this.averagingWindow.value = blendWindow;\n    this.object.material = this.targetMat;\n    // Ping-pong two surface buffers for reading/writing\n    const activeMap = this.buffer1Active ? this.progressiveLightMap1 : this.progressiveLightMap2;\n    const inactiveMap = this.buffer1Active ? this.progressiveLightMap2 : this.progressiveLightMap1;\n    // Render the object's surface maps\n    const oldBg = this.scene.background;\n    this.scene.background = null;\n    this.renderer.setRenderTarget(activeMap);\n    this.previousShadowMap.value = inactiveMap.texture;\n    this.buffer1Active = !this.buffer1Active;\n    this.renderer.render(this.scene, camera);\n    this.renderer.setRenderTarget(null);\n    this.scene.background = oldBg;\n  }\n}\n\nexport { AccumulativeShadows, RandomizedLight, accumulativeContext };\n", "import * as React from 'react';\n\nconst easeInExpo = x => x === 0 ? 0 : Math.pow(2, 10 * x - 10);\nfunction Backdrop({\n  children,\n  floor = 0.25,\n  segments = 20,\n  receiveShadow,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  React.useLayoutEffect(() => {\n    let i = 0;\n    const offset = segments / segments / 2;\n    const position = ref.current.attributes.position;\n    for (let x = 0; x < segments + 1; x++) {\n      for (let y = 0; y < segments + 1; y++) {\n        position.setXYZ(i++, x / segments - offset + (x === 0 ? -floor : 0), y / segments - offset, easeInExpo(x / segments));\n      }\n    }\n    position.needsUpdate = true;\n    ref.current.computeVertexNormals();\n  }, [segments, floor]);\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"mesh\", {\n    receiveShadow: receiveShadow,\n    rotation: [-Math.PI / 2, 0, Math.PI / 2]\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    ref: ref,\n    args: [1, 1, segments, segments]\n  }), children));\n}\n\nexport { Backdrop };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Color, DoubleSide } from 'three';\n\nconst Shadow = /* @__PURE__ */React.forwardRef(({\n  fog = false,\n  renderOrder,\n  depthWrite = false,\n  colorStop = 0.0,\n  color = 'black',\n  opacity = 0.5,\n  ...props\n}, ref) => {\n  const canvas = React.useMemo(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = 128;\n    canvas.height = 128;\n    const context = canvas.getContext('2d');\n    const gradient = context.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.width / 2);\n    gradient.addColorStop(colorStop, new Color(color).getStyle());\n    gradient.addColorStop(1, 'rgba(0,0,0,0)');\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    return canvas;\n  }, [color, colorStop]);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    renderOrder: renderOrder,\n    ref: ref,\n    \"rotation-x\": -Math.PI / 2\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    opacity: opacity,\n    fog: fog,\n    depthWrite: depthWrite,\n    side: DoubleSide\n  }, /*#__PURE__*/React.createElement(\"canvasTexture\", {\n    attach: \"map\",\n    args: [canvas]\n  })));\n});\n\nexport { Shadow };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\nimport { useHelper } from './Helper.js';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { Edges } from './Edges.js';\nimport { FullScreenQuad } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nfunction createNormalMaterial(side = THREE.FrontSide) {\n  const viewMatrix = {\n    value: new THREE.Matrix4()\n  };\n  return Object.assign(new THREE.MeshNormalMaterial({\n    side\n  }), {\n    viewMatrix,\n    onBeforeCompile: shader => {\n      shader.uniforms.viewMatrix = viewMatrix;\n      shader.fragmentShader = `vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n           return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n         }\\n` + shader.fragmentShader.replace('#include <normal_fragment_maps>', `#include <normal_fragment_maps>\n           normal = inverseTransformDirection( normal, viewMatrix );\\n`);\n    }\n  });\n}\nconst CausticsProjectionMaterial = /* @__PURE__ */shaderMaterial({\n  causticsTexture: null,\n  causticsTextureB: null,\n  color: /* @__PURE__ */new THREE.Color(),\n  lightProjMatrix: /* @__PURE__ */new THREE.Matrix4(),\n  lightViewMatrix: /* @__PURE__ */new THREE.Matrix4()\n}, `varying vec3 vWorldPosition;\n   void main() {\n     gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n     vec4 worldPosition = modelMatrix * vec4(position, 1.);\n     vWorldPosition = worldPosition.xyz;\n   }`, `varying vec3 vWorldPosition;\n  uniform vec3 color;\n  uniform sampler2D causticsTexture;\n  uniform sampler2D causticsTextureB;\n  uniform mat4 lightProjMatrix;\n  uniform mat4 lightViewMatrix;\n   void main() {\n    // Apply caustics\n    vec4 lightSpacePos = lightProjMatrix * lightViewMatrix * vec4(vWorldPosition, 1.0);\n    lightSpacePos.xyz /= lightSpacePos.w;\n    lightSpacePos.xyz = lightSpacePos.xyz * 0.5 + 0.5;\n    vec3 front = texture2D(causticsTexture, lightSpacePos.xy).rgb;\n    vec3 back = texture2D(causticsTextureB, lightSpacePos.xy).rgb;\n    gl_FragColor = vec4((front + back) * color, 1.0);\n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst CausticsMaterial = /* @__PURE__ */shaderMaterial({\n  cameraMatrixWorld: /* @__PURE__ */new THREE.Matrix4(),\n  cameraProjectionMatrixInv: /* @__PURE__ */new THREE.Matrix4(),\n  normalTexture: null,\n  depthTexture: null,\n  lightDir: /* @__PURE__ */new THREE.Vector3(0, 1, 0),\n  lightPlaneNormal: /* @__PURE__ */new THREE.Vector3(0, 1, 0),\n  lightPlaneConstant: 0,\n  near: 0.1,\n  far: 100,\n  modelMatrix: /* @__PURE__ */new THREE.Matrix4(),\n  worldRadius: 1 / 40,\n  ior: 1.1,\n  bounces: 0,\n  resolution: 1024,\n  size: 10,\n  intensity: 0.5\n}, /* glsl */`\n  varying vec2 vUv;\n  void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }`, /* glsl */`\n  uniform mat4 cameraMatrixWorld;\n  uniform mat4 cameraProjectionMatrixInv;\n  uniform vec3 lightDir;\n  uniform vec3 lightPlaneNormal;\n  uniform float lightPlaneConstant;\n  uniform float near;\n  uniform float far;\n  uniform float time;\n  uniform float worldRadius;\n  uniform float resolution;\n  uniform float size;\n  uniform float intensity;\n  uniform float ior;\n  precision highp isampler2D;\n  precision highp usampler2D;\n  uniform sampler2D normalTexture;\n  uniform sampler2D depthTexture;\n  uniform float bounces;\n  varying vec2 vUv;\n  vec3 WorldPosFromDepth(float depth, vec2 coord) {\n    float z = depth * 2.0 - 1.0;\n    vec4 clipSpacePosition = vec4(coord * 2.0 - 1.0, z, 1.0);\n    vec4 viewSpacePosition = cameraProjectionMatrixInv * clipSpacePosition;\n    // Perspective division\n    viewSpacePosition /= viewSpacePosition.w;\n    vec4 worldSpacePosition = cameraMatrixWorld * viewSpacePosition;\n    return worldSpacePosition.xyz;\n  }\n  float sdPlane( vec3 p, vec3 n, float h ) {\n    // n must be normalized\n    return dot(p,n) + h;\n  }\n  float planeIntersect( vec3 ro, vec3 rd, vec4 p ) {\n    return -(dot(ro,p.xyz)+p.w)/dot(rd,p.xyz);\n  }\n  vec3 totalInternalReflection(vec3 ro, vec3 rd, vec3 pos, vec3 normal, float ior, out vec3 rayOrigin, out vec3 rayDirection) {\n    rayOrigin = ro;\n    rayDirection = rd;\n    rayDirection = refract(rayDirection, normal, 1.0 / ior);\n    rayOrigin = pos + rayDirection * 0.1;\n    return rayDirection;\n  }\n  void main() {\n    // Each sample consists of random offset in the x and y direction\n    float caustic = 0.0;\n    float causticTexelSize = (1.0 / resolution) * size * 2.0;\n    float texelsNeeded = worldRadius / causticTexelSize;\n    float sampleRadius = texelsNeeded / resolution;\n    float sum = 0.0;\n    if (texture2D(depthTexture, vUv).x == 1.0) {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n      return;\n    }\n    vec2 offset1 = vec2(-0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 offset2 = vec2(-0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 offset3 = vec2(0.5, 0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 offset4 = vec2(0.5, -0.5);//vec2(rand() - 0.5, rand() - 0.5);\n    vec2 uv1 = vUv + offset1 * sampleRadius;\n    vec2 uv2 = vUv + offset2 * sampleRadius;\n    vec2 uv3 = vUv + offset3 * sampleRadius;\n    vec2 uv4 = vUv + offset4 * sampleRadius;\n    vec3 normal1 = texture2D(normalTexture, uv1, -10.0).rgb * 2.0 - 1.0;\n    vec3 normal2 = texture2D(normalTexture, uv2, -10.0).rgb * 2.0 - 1.0;\n    vec3 normal3 = texture2D(normalTexture, uv3, -10.0).rgb * 2.0 - 1.0;\n    vec3 normal4 = texture2D(normalTexture, uv4, -10.0).rgb * 2.0 - 1.0;\n    float depth1 = texture2D(depthTexture, uv1, -10.0).x;\n    float depth2 = texture2D(depthTexture, uv2, -10.0).x;\n    float depth3 = texture2D(depthTexture, uv3, -10.0).x;\n    float depth4 = texture2D(depthTexture, uv4, -10.0).x;\n    // Sanity check the depths\n    if (depth1 == 1.0 || depth2 == 1.0 || depth3 == 1.0 || depth4 == 1.0) {\n      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n      return;\n    }\n    vec3 pos1 = WorldPosFromDepth(depth1, uv1);\n    vec3 pos2 = WorldPosFromDepth(depth2, uv2);\n    vec3 pos3 = WorldPosFromDepth(depth3, uv3);\n    vec3 pos4 = WorldPosFromDepth(depth4, uv4);\n    vec3 originPos1 = WorldPosFromDepth(0.0, uv1);\n    vec3 originPos2 = WorldPosFromDepth(0.0, uv2);\n    vec3 originPos3 = WorldPosFromDepth(0.0, uv3);\n    vec3 originPos4 = WorldPosFromDepth(0.0, uv4);\n    vec3 endPos1, endPos2, endPos3, endPos4;\n    vec3 endDir1, endDir2, endDir3, endDir4;\n    totalInternalReflection(originPos1, lightDir, pos1, normal1, ior, endPos1, endDir1);\n    totalInternalReflection(originPos2, lightDir, pos2, normal2, ior, endPos2, endDir2);\n    totalInternalReflection(originPos3, lightDir, pos3, normal3, ior, endPos3, endDir3);\n    totalInternalReflection(originPos4, lightDir, pos4, normal4, ior, endPos4, endDir4);\n    float lightPosArea = length(cross(originPos2 - originPos1, originPos3 - originPos1)) + length(cross(originPos3 - originPos1, originPos4 - originPos1));\n    float t1 = planeIntersect(endPos1, endDir1, vec4(lightPlaneNormal, lightPlaneConstant));\n    float t2 = planeIntersect(endPos2, endDir2, vec4(lightPlaneNormal, lightPlaneConstant));\n    float t3 = planeIntersect(endPos3, endDir3, vec4(lightPlaneNormal, lightPlaneConstant));\n    float t4 = planeIntersect(endPos4, endDir4, vec4(lightPlaneNormal, lightPlaneConstant));\n    vec3 finalPos1 = endPos1 + endDir1 * t1;\n    vec3 finalPos2 = endPos2 + endDir2 * t2;\n    vec3 finalPos3 = endPos3 + endDir3 * t3;\n    vec3 finalPos4 = endPos4 + endDir4 * t4;\n    float finalArea = length(cross(finalPos2 - finalPos1, finalPos3 - finalPos1)) + length(cross(finalPos3 - finalPos1, finalPos4 - finalPos1));\n    caustic += intensity * (lightPosArea / finalArea);\n    // Calculate the area of the triangle in light spaces\n    gl_FragColor = vec4(vec3(max(caustic, 0.0)), 1.0);\n  }`);\nconst NORMALPROPS = {\n  depth: true,\n  minFilter: THREE.LinearFilter,\n  magFilter: THREE.LinearFilter,\n  type: THREE.UnsignedByteType\n};\nconst CAUSTICPROPS = {\n  minFilter: THREE.LinearMipmapLinearFilter,\n  magFilter: THREE.LinearFilter,\n  type: THREE.FloatType,\n  generateMipmaps: true\n};\nconst Caustics = /* @__PURE__ */React.forwardRef(({\n  debug,\n  children,\n  frames = 1,\n  ior = 1.1,\n  color = 'white',\n  causticsOnly = false,\n  backside = false,\n  backsideIOR = 1.1,\n  worldRadius = 0.3125,\n  intensity = 0.05,\n  resolution = 2024,\n  lightSource = [5, 5, 5],\n  ...props\n}, fref) => {\n  extend({\n    CausticsProjectionMaterial\n  });\n  const ref = React.useRef(null);\n  const camera = React.useRef(null);\n  const scene = React.useRef(null);\n  const plane = React.useRef(null);\n  const gl = useThree(state => state.gl);\n  const helper = useHelper(debug && camera, THREE.CameraHelper);\n\n  // Buffers for front and back faces\n  const normalTarget = useFBO(resolution, resolution, NORMALPROPS);\n  const normalTargetB = useFBO(resolution, resolution, NORMALPROPS);\n  const causticsTarget = useFBO(resolution, resolution, CAUSTICPROPS);\n  const causticsTargetB = useFBO(resolution, resolution, CAUSTICPROPS);\n  // Normal materials for front and back faces\n  const [normalMat] = React.useState(() => createNormalMaterial());\n  const [normalMatB] = React.useState(() => createNormalMaterial(THREE.BackSide));\n  // The quad that catches the caustics\n  const [causticsMaterial] = React.useState(() => new CausticsMaterial());\n  const [causticsQuad] = React.useState(() => new FullScreenQuad(causticsMaterial));\n  React.useLayoutEffect(() => {\n    ref.current.updateWorldMatrix(false, true);\n  });\n  let count = 0;\n  const v = new THREE.Vector3();\n  const lpF = new THREE.Frustum();\n  const lpM = new THREE.Matrix4();\n  const lpP = new THREE.Plane();\n  const lightDir = new THREE.Vector3();\n  const lightDirInv = new THREE.Vector3();\n  const bounds = new THREE.Box3();\n  const focusPos = new THREE.Vector3();\n  const boundsVertices = [];\n  const worldVerts = [];\n  const projectedVerts = [];\n  const lightDirs = [];\n  const cameraPos = new THREE.Vector3();\n  for (let i = 0; i < 8; i++) {\n    boundsVertices.push(new THREE.Vector3());\n    worldVerts.push(new THREE.Vector3());\n    projectedVerts.push(new THREE.Vector3());\n    lightDirs.push(new THREE.Vector3());\n  }\n  useFrame(() => {\n    if (frames === Infinity || count++ < frames) {\n      var _scene$current$parent, _helper$current;\n      if (Array.isArray(lightSource)) lightDir.fromArray(lightSource).normalize();else lightDir.copy(ref.current.worldToLocal(lightSource.current.getWorldPosition(v)).normalize());\n      lightDirInv.copy(lightDir).multiplyScalar(-1);\n      (_scene$current$parent = scene.current.parent) == null || _scene$current$parent.matrixWorld.identity();\n      bounds.setFromObject(scene.current, true);\n      boundsVertices[0].set(bounds.min.x, bounds.min.y, bounds.min.z);\n      boundsVertices[1].set(bounds.min.x, bounds.min.y, bounds.max.z);\n      boundsVertices[2].set(bounds.min.x, bounds.max.y, bounds.min.z);\n      boundsVertices[3].set(bounds.min.x, bounds.max.y, bounds.max.z);\n      boundsVertices[4].set(bounds.max.x, bounds.min.y, bounds.min.z);\n      boundsVertices[5].set(bounds.max.x, bounds.min.y, bounds.max.z);\n      boundsVertices[6].set(bounds.max.x, bounds.max.y, bounds.min.z);\n      boundsVertices[7].set(bounds.max.x, bounds.max.y, bounds.max.z);\n      for (let i = 0; i < 8; i++) {\n        worldVerts[i].copy(boundsVertices[i]);\n      }\n      bounds.getCenter(focusPos);\n      boundsVertices.map(v => v.sub(focusPos));\n      const lightPlane = lpP.set(lightDirInv, 0);\n      boundsVertices.map((v, i) => lightPlane.projectPoint(v, projectedVerts[i]));\n      const centralVert = projectedVerts.reduce((a, b) => a.add(b), v.set(0, 0, 0)).divideScalar(projectedVerts.length);\n      const radius = projectedVerts.map(v => v.distanceTo(centralVert)).reduce((a, b) => Math.max(a, b));\n      const dirLength = boundsVertices.map(x => x.dot(lightDir)).reduce((a, b) => Math.max(a, b));\n      // Shadows\n      camera.current.position.copy(cameraPos.copy(lightDir).multiplyScalar(dirLength).add(focusPos));\n      camera.current.lookAt(scene.current.localToWorld(focusPos));\n      const dirMatrix = lpM.lookAt(camera.current.position, focusPos, v.set(0, 1, 0));\n      camera.current.left = -radius;\n      camera.current.right = radius;\n      camera.current.top = radius;\n      camera.current.bottom = -radius;\n      const yOffset = v.set(0, radius, 0).applyMatrix4(dirMatrix);\n      const yTime = (camera.current.position.y + yOffset.y) / lightDir.y;\n      camera.current.near = 0.1;\n      camera.current.far = yTime;\n      camera.current.updateProjectionMatrix();\n      camera.current.updateMatrixWorld();\n\n      // Now find size of ground plane\n      const groundProjectedCoords = worldVerts.map((v, i) => v.add(lightDirs[i].copy(lightDir).multiplyScalar(-v.y / lightDir.y)));\n      const centerPos = groundProjectedCoords.reduce((a, b) => a.add(b), v.set(0, 0, 0)).divideScalar(groundProjectedCoords.length);\n      const maxSize = 2 * groundProjectedCoords.map(v => Math.hypot(v.x - centerPos.x, v.z - centerPos.z)).reduce((a, b) => Math.max(a, b));\n      plane.current.scale.setScalar(maxSize);\n      plane.current.position.copy(centerPos);\n      if (debug) (_helper$current = helper.current) == null || _helper$current.update();\n\n      // Inject uniforms\n      normalMatB.viewMatrix.value = normalMat.viewMatrix.value = camera.current.matrixWorldInverse;\n      const dirLightNearPlane = lpF.setFromProjectionMatrix(lpM.multiplyMatrices(camera.current.projectionMatrix, camera.current.matrixWorldInverse)).planes[4];\n      causticsMaterial.cameraMatrixWorld = camera.current.matrixWorld;\n      causticsMaterial.cameraProjectionMatrixInv = camera.current.projectionMatrixInverse;\n      causticsMaterial.lightDir = lightDirInv;\n      causticsMaterial.lightPlaneNormal = dirLightNearPlane.normal;\n      causticsMaterial.lightPlaneConstant = dirLightNearPlane.constant;\n      causticsMaterial.near = camera.current.near;\n      causticsMaterial.far = camera.current.far;\n      causticsMaterial.resolution = resolution;\n      causticsMaterial.size = radius;\n      causticsMaterial.intensity = intensity;\n      causticsMaterial.worldRadius = worldRadius;\n\n      // Switch the scene on\n      scene.current.visible = true;\n\n      // Render front face normals\n      gl.setRenderTarget(normalTarget);\n      gl.clear();\n      scene.current.overrideMaterial = normalMat;\n      gl.render(scene.current, camera.current);\n\n      // Render back face normals, if enabled\n      gl.setRenderTarget(normalTargetB);\n      gl.clear();\n      if (backside) {\n        scene.current.overrideMaterial = normalMatB;\n        gl.render(scene.current, camera.current);\n      }\n\n      // Remove the override material\n      scene.current.overrideMaterial = null;\n\n      // Render front face caustics\n      causticsMaterial.ior = ior;\n      plane.current.material.lightProjMatrix = camera.current.projectionMatrix;\n      plane.current.material.lightViewMatrix = camera.current.matrixWorldInverse;\n      causticsMaterial.normalTexture = normalTarget.texture;\n      causticsMaterial.depthTexture = normalTarget.depthTexture;\n      gl.setRenderTarget(causticsTarget);\n      gl.clear();\n      causticsQuad.render(gl);\n\n      // Render back face caustics, if enabled\n      causticsMaterial.ior = backsideIOR;\n      causticsMaterial.normalTexture = normalTargetB.texture;\n      causticsMaterial.depthTexture = normalTargetB.depthTexture;\n      gl.setRenderTarget(causticsTargetB);\n      gl.clear();\n      if (backside) causticsQuad.render(gl);\n\n      // Reset render target\n      gl.setRenderTarget(null);\n\n      // Switch the scene off if caustics is all that's wanted\n      if (causticsOnly) scene.current.visible = false;\n    }\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"scene\", {\n    ref: scene\n  }, /*#__PURE__*/React.createElement(\"orthographicCamera\", {\n    ref: camera,\n    up: [0, 1, 0]\n  }), children), /*#__PURE__*/React.createElement(\"mesh\", {\n    renderOrder: 2,\n    ref: plane,\n    \"rotation-x\": -Math.PI / 2\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"causticsProjectionMaterial\", {\n    transparent: true,\n    color: color,\n    causticsTexture: causticsTarget.texture,\n    causticsTextureB: causticsTargetB.texture,\n    blending: THREE.CustomBlending,\n    blendSrc: THREE.OneFactor,\n    blendDst: THREE.SrcAlphaFactor,\n    depthWrite: false\n  }), debug && /*#__PURE__*/React.createElement(Edges, null, /*#__PURE__*/React.createElement(\"lineBasicMaterial\", {\n    color: \"#ffff00\",\n    toneMapped: false\n  }))));\n});\n\nexport { Caustics };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Plane, Vector3, Matrix4, Vector4, PerspectiveCamera, WebGLRenderTarget, DepthTexture, DepthFormat, UnsignedShortType, HalfFloatType, LinearFilter } from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { BlurPass } from '../materials/BlurPass.js';\nimport { MeshReflectorMaterial } from '../materials/MeshReflectorMaterial.js';\n\n/**\n * @deprecated Use MeshReflectorMaterial instead\n */\nconst Reflector = /* @__PURE__ */React.forwardRef(({\n  mixBlur = 0,\n  mixStrength = 0.5,\n  resolution = 256,\n  blur = [0, 0],\n  args = [1, 1],\n  minDepthThreshold = 0.9,\n  maxDepthThreshold = 1,\n  depthScale = 0,\n  depthToBlurRatioBias = 0.25,\n  mirror = 0,\n  children,\n  debug = 0,\n  distortion = 1,\n  mixContrast = 1,\n  distortionMap,\n  ...props\n}, ref) => {\n  extend({\n    MeshReflectorMaterial\n  });\n  React.useEffect(() => {\n    console.warn('Reflector has been deprecated and will be removed next major. Replace it with <MeshReflectorMaterial />!');\n  }, []);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const camera = useThree(({\n    camera\n  }) => camera);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  blur = Array.isArray(blur) ? blur : [blur, blur];\n  const hasBlur = blur[0] + blur[1] > 0;\n  const meshRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => meshRef.current, []);\n  const [reflectorPlane] = React.useState(() => new Plane());\n  const [normal] = React.useState(() => new Vector3());\n  const [reflectorWorldPosition] = React.useState(() => new Vector3());\n  const [cameraWorldPosition] = React.useState(() => new Vector3());\n  const [rotationMatrix] = React.useState(() => new Matrix4());\n  const [lookAtPosition] = React.useState(() => new Vector3(0, 0, -1));\n  const [clipPlane] = React.useState(() => new Vector4());\n  const [view] = React.useState(() => new Vector3());\n  const [target] = React.useState(() => new Vector3());\n  const [q] = React.useState(() => new Vector4());\n  const [textureMatrix] = React.useState(() => new Matrix4());\n  const [virtualCamera] = React.useState(() => new PerspectiveCamera());\n  const beforeRender = React.useCallback(() => {\n    reflectorWorldPosition.setFromMatrixPosition(meshRef.current.matrixWorld);\n    cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);\n    rotationMatrix.extractRotation(meshRef.current.matrixWorld);\n    normal.set(0, 0, 1);\n    normal.applyMatrix4(rotationMatrix);\n    view.subVectors(reflectorWorldPosition, cameraWorldPosition);\n    // Avoid rendering when reflector is facing away\n    if (view.dot(normal) > 0) return;\n    view.reflect(normal).negate();\n    view.add(reflectorWorldPosition);\n    rotationMatrix.extractRotation(camera.matrixWorld);\n    lookAtPosition.set(0, 0, -1);\n    lookAtPosition.applyMatrix4(rotationMatrix);\n    lookAtPosition.add(cameraWorldPosition);\n    target.subVectors(reflectorWorldPosition, lookAtPosition);\n    target.reflect(normal).negate();\n    target.add(reflectorWorldPosition);\n    virtualCamera.position.copy(view);\n    virtualCamera.up.set(0, 1, 0);\n    virtualCamera.up.applyMatrix4(rotationMatrix);\n    virtualCamera.up.reflect(normal);\n    virtualCamera.lookAt(target);\n    virtualCamera.far = camera.far; // Used in WebGLBackground\n    virtualCamera.updateMatrixWorld();\n    virtualCamera.projectionMatrix.copy(camera.projectionMatrix);\n    // Update the texture matrix\n    textureMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    textureMatrix.multiply(virtualCamera.projectionMatrix);\n    textureMatrix.multiply(virtualCamera.matrixWorldInverse);\n    textureMatrix.multiply(meshRef.current.matrixWorld);\n    // Now update projection matrix with new clip plane, implementing code from: http://www.terathon.com/code/oblique.html\n    // Paper explaining this technique: http://www.terathon.com/lengyel/Lengyel-Oblique.pdf\n    reflectorPlane.setFromNormalAndCoplanarPoint(normal, reflectorWorldPosition);\n    reflectorPlane.applyMatrix4(virtualCamera.matrixWorldInverse);\n    clipPlane.set(reflectorPlane.normal.x, reflectorPlane.normal.y, reflectorPlane.normal.z, reflectorPlane.constant);\n    const projectionMatrix = virtualCamera.projectionMatrix;\n    q.x = (Math.sign(clipPlane.x) + projectionMatrix.elements[8]) / projectionMatrix.elements[0];\n    q.y = (Math.sign(clipPlane.y) + projectionMatrix.elements[9]) / projectionMatrix.elements[5];\n    q.z = -1.0;\n    q.w = (1.0 + projectionMatrix.elements[10]) / projectionMatrix.elements[14];\n    // Calculate the scaled plane vector\n    clipPlane.multiplyScalar(2.0 / clipPlane.dot(q));\n    // Replacing the third row of the projection matrix\n    projectionMatrix.elements[2] = clipPlane.x;\n    projectionMatrix.elements[6] = clipPlane.y;\n    projectionMatrix.elements[10] = clipPlane.z + 1.0;\n    projectionMatrix.elements[14] = clipPlane.w;\n  }, []);\n  const [fbo1, fbo2, blurpass, reflectorProps] = React.useMemo(() => {\n    const parameters = {\n      type: HalfFloatType,\n      minFilter: LinearFilter,\n      magFilter: LinearFilter\n    };\n    const fbo1 = new WebGLRenderTarget(resolution, resolution, parameters);\n    fbo1.depthBuffer = true;\n    fbo1.depthTexture = new DepthTexture(resolution, resolution);\n    fbo1.depthTexture.format = DepthFormat;\n    fbo1.depthTexture.type = UnsignedShortType;\n    const fbo2 = new WebGLRenderTarget(resolution, resolution, parameters);\n    const blurpass = new BlurPass({\n      gl,\n      resolution,\n      width: blur[0],\n      height: blur[1],\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias\n    });\n    const reflectorProps = {\n      mirror,\n      textureMatrix,\n      mixBlur,\n      tDiffuse: fbo1.texture,\n      tDepth: fbo1.depthTexture,\n      tDiffuseBlur: fbo2.texture,\n      hasBlur,\n      mixStrength,\n      minDepthThreshold,\n      maxDepthThreshold,\n      depthScale,\n      depthToBlurRatioBias,\n      transparent: true,\n      debug,\n      distortion,\n      distortionMap,\n      mixContrast,\n      'defines-USE_BLUR': hasBlur ? '' : undefined,\n      'defines-USE_DEPTH': depthScale > 0 ? '' : undefined,\n      'defines-USE_DISTORTION': distortionMap ? '' : undefined\n    };\n    return [fbo1, fbo2, blurpass, reflectorProps];\n  }, [gl, blur, textureMatrix, resolution, mirror, hasBlur, mixBlur, mixStrength, minDepthThreshold, maxDepthThreshold, depthScale, depthToBlurRatioBias, debug, distortion, distortionMap, mixContrast]);\n  useFrame(() => {\n    if (!(meshRef != null && meshRef.current)) return;\n    meshRef.current.visible = false;\n    const currentXrEnabled = gl.xr.enabled;\n    const currentShadowAutoUpdate = gl.shadowMap.autoUpdate;\n    beforeRender();\n    gl.xr.enabled = false;\n    gl.shadowMap.autoUpdate = false;\n    gl.setRenderTarget(fbo1);\n    gl.state.buffers.depth.setMask(true);\n    if (!gl.autoClear) gl.clear();\n    gl.render(scene, virtualCamera);\n    if (hasBlur) blurpass.render(gl, fbo1, fbo2);\n    gl.xr.enabled = currentXrEnabled;\n    gl.shadowMap.autoUpdate = currentShadowAutoUpdate;\n    meshRef.current.visible = true;\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: meshRef\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args\n  }), children ? children('meshReflectorMaterial', reflectorProps) : /*#__PURE__*/React.createElement(\"meshReflectorMaterial\", reflectorProps));\n});\n\nexport { Reflector };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Vector3, CylinderGeometry, Matrix4, WebGLRenderTarget, RGBAFormat, ShaderMaterial, DoubleSide, RepeatWrapping } from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { FullScreenQuad } from 'three-stdlib';\nimport { SpotLightMaterial } from '../materials/SpotLightMaterial.js';\nimport SpotlightShadowShader from '../helpers/glsl/DefaultSpotlightShadowShadows.glsl.js';\n\nconst isSpotLight = child => {\n  return child == null ? void 0 : child.isSpotLight;\n};\nfunction VolumetricMesh({\n  opacity = 1,\n  radiusTop,\n  radiusBottom,\n  depthBuffer,\n  color = 'white',\n  distance = 5,\n  angle = 0.15,\n  attenuation = 5,\n  anglePower = 5\n}) {\n  const mesh = React.useRef(null);\n  const size = useThree(state => state.size);\n  const camera = useThree(state => state.camera);\n  const dpr = useThree(state => state.viewport.dpr);\n  const [material] = React.useState(() => new SpotLightMaterial());\n  const [vec] = React.useState(() => new Vector3());\n  radiusTop = radiusTop === undefined ? 0.1 : radiusTop;\n  radiusBottom = radiusBottom === undefined ? angle * 7 : radiusBottom;\n  useFrame(() => {\n    material.uniforms.spotPosition.value.copy(mesh.current.getWorldPosition(vec));\n    mesh.current.lookAt(mesh.current.parent.target.getWorldPosition(vec));\n  });\n  const geom = React.useMemo(() => {\n    const geometry = new CylinderGeometry(radiusTop, radiusBottom, distance, 128, 64, true);\n    geometry.applyMatrix4(new Matrix4().makeTranslation(0, -distance / 2, 0));\n    geometry.applyMatrix4(new Matrix4().makeRotationX(-Math.PI / 2));\n    return geometry;\n  }, [distance, radiusTop, radiusBottom]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    geometry: geom,\n    raycast: () => null\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: material,\n    attach: \"material\",\n    \"uniforms-opacity-value\": opacity,\n    \"uniforms-lightColor-value\": color,\n    \"uniforms-attenuation-value\": attenuation,\n    \"uniforms-anglePower-value\": anglePower,\n    \"uniforms-depth-value\": depthBuffer,\n    \"uniforms-cameraNear-value\": camera.near,\n    \"uniforms-cameraFar-value\": camera.far,\n    \"uniforms-resolution-value\": depthBuffer ? [size.width * dpr, size.height * dpr] : [0, 0]\n  })));\n}\nfunction useCommon(spotlight, mesh, width, height, distance) {\n  const [[pos, dir]] = React.useState(() => [new Vector3(), new Vector3()]);\n  React.useLayoutEffect(() => {\n    if (isSpotLight(spotlight.current)) {\n      spotlight.current.shadow.mapSize.set(width, height);\n      spotlight.current.shadow.needsUpdate = true;\n    } else {\n      throw new Error('SpotlightShadow must be a child of a SpotLight');\n    }\n  }, [spotlight, width, height]);\n  useFrame(() => {\n    if (!spotlight.current) return;\n    const A = spotlight.current.position;\n    const B = spotlight.current.target.position;\n    dir.copy(B).sub(A);\n    var len = dir.length();\n    dir.normalize().multiplyScalar(len * distance);\n    pos.copy(A).add(dir);\n    mesh.current.position.copy(pos);\n    mesh.current.lookAt(spotlight.current.target.position);\n  });\n}\nfunction SpotlightShadowWithShader({\n  distance = 0.4,\n  alphaTest = 0.5,\n  map,\n  shader = SpotlightShadowShader,\n  width = 512,\n  height = 512,\n  scale = 1,\n  children,\n  ...rest\n}) {\n  const mesh = React.useRef(null);\n  const spotlight = rest.spotlightRef;\n  const debug = rest.debug;\n  useCommon(spotlight, mesh, width, height, distance);\n  const renderTarget = React.useMemo(() => new WebGLRenderTarget(width, height, {\n    format: RGBAFormat,\n    stencilBuffer: false\n    // depthTexture: null!\n  }), [width, height]);\n  const uniforms = React.useRef({\n    uShadowMap: {\n      value: map\n    },\n    uTime: {\n      value: 0\n    }\n  });\n  React.useEffect(() => void (uniforms.current.uShadowMap.value = map), [map]);\n  const fsQuad = React.useMemo(() => new FullScreenQuad(new ShaderMaterial({\n    uniforms: uniforms.current,\n    vertexShader: /* glsl */`\n          varying vec2 vUv;\n\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n          }\n          `,\n    fragmentShader: shader\n  })), [shader]);\n  React.useEffect(() => () => {\n    fsQuad.material.dispose();\n    fsQuad.dispose();\n  }, [fsQuad]);\n  React.useEffect(() => () => renderTarget.dispose(), [renderTarget]);\n  useFrame(({\n    gl\n  }, dt) => {\n    uniforms.current.uTime.value += dt;\n    gl.setRenderTarget(renderTarget);\n    fsQuad.render(gl);\n    gl.setRenderTarget(null);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    scale: scale,\n    castShadow: true\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    side: DoubleSide,\n    alphaTest: alphaTest,\n    alphaMap: renderTarget.texture,\n    \"alphaMap-wrapS\": RepeatWrapping,\n    \"alphaMap-wrapT\": RepeatWrapping,\n    opacity: debug ? 1 : 0\n  }, children)));\n}\nfunction SpotlightShadowWithoutShader({\n  distance = 0.4,\n  alphaTest = 0.5,\n  map,\n  width = 512,\n  height = 512,\n  scale,\n  children,\n  ...rest\n}) {\n  const mesh = React.useRef(null);\n  const spotlight = rest.spotlightRef;\n  const debug = rest.debug;\n  useCommon(spotlight, mesh, width, height, distance);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: mesh,\n    scale: scale,\n    castShadow: true\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    side: DoubleSide,\n    alphaTest: alphaTest,\n    alphaMap: map,\n    \"alphaMap-wrapS\": RepeatWrapping,\n    \"alphaMap-wrapT\": RepeatWrapping,\n    opacity: debug ? 1 : 0\n  }, children)));\n}\nfunction SpotLightShadow(props) {\n  if (props.shader) return /*#__PURE__*/React.createElement(SpotlightShadowWithShader, props);\n  return /*#__PURE__*/React.createElement(SpotlightShadowWithoutShader, props);\n}\nconst SpotLight = /*#__PURE__*/React.forwardRef(({\n  // Volumetric\n  opacity = 1,\n  radiusTop,\n  radiusBottom,\n  depthBuffer,\n  color = 'white',\n  distance = 5,\n  angle = 0.15,\n  attenuation = 5,\n  anglePower = 5,\n  volumetric = true,\n  debug = false,\n  children,\n  ...props\n}, ref) => {\n  const spotlight = React.useRef(null);\n  React.useImperativeHandle(ref, () => spotlight.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", null, debug && spotlight.current && /*#__PURE__*/React.createElement(\"spotLightHelper\", {\n    args: [spotlight.current]\n  }), /*#__PURE__*/React.createElement(\"spotLight\", _extends({\n    ref: spotlight,\n    angle: angle,\n    color: color,\n    distance: distance,\n    castShadow: true\n  }, props), volumetric && /*#__PURE__*/React.createElement(VolumetricMesh, {\n    debug: debug,\n    opacity: opacity,\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    depthBuffer: depthBuffer,\n    color: color,\n    distance: distance,\n    angle: angle,\n    attenuation: attenuation,\n    anglePower: anglePower\n  })), children && /*#__PURE__*/React.cloneElement(children, {\n    spotlightRef: spotlight,\n    debug: debug\n  }));\n});\n\nexport { SpotLight, SpotLightShadow };\n", "import * as THREE from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass SpotLightMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        depth: {\n          value: null\n        },\n        opacity: {\n          value: 1\n        },\n        attenuation: {\n          value: 2.5\n        },\n        anglePower: {\n          value: 12\n        },\n        spotPosition: {\n          value: new THREE.Vector3(0, 0, 0)\n        },\n        lightColor: {\n          value: new THREE.Color('white')\n        },\n        cameraNear: {\n          value: 0\n        },\n        cameraFar: {\n          value: 1\n        },\n        resolution: {\n          value: new THREE.Vector2(0, 0)\n        }\n      },\n      transparent: true,\n      depthWrite: false,\n      vertexShader: /* glsl */`\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n        uniform vec3 spotPosition;\n        uniform float attenuation;\n\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        void main() {\n          // compute intensity\n          vNormal = normalize(normalMatrix * normal);\n          vec4 worldPosition = modelMatrix * vec4(position, 1);\n          vec4 viewPosition = viewMatrix * worldPosition;\n          vViewZ = viewPosition.z;\n\n          vIntensity = 1.0 - saturate(distance(worldPosition.xyz, spotPosition) / attenuation);\n\n          gl_Position = projectionMatrix * viewPosition;\n\n          #include <logdepthbuf_vertex>\n        }\n      `,\n      fragmentShader: /* glsl */`\n        varying vec3 vNormal;\n        varying float vViewZ;\n        varying float vIntensity;\n\n        uniform vec3 lightColor;\n        uniform float anglePower;\n        uniform sampler2D depth;\n        uniform vec2 resolution;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float opacity;\n\n        #include <packing>\n        #include <logdepthbuf_pars_fragment>\n\n        float readDepth(sampler2D depthSampler, vec2 uv) {\n          float fragCoordZ = texture(depthSampler, uv).r;\n\n          // https://github.com/mrdoob/three.js/issues/23072\n          #ifdef USE_LOGDEPTHBUF\n            float viewZ = 1.0 - exp2(fragCoordZ * log(cameraFar + 1.0) / log(2.0));\n          #else\n            float viewZ = perspectiveDepthToViewZ(fragCoordZ, cameraNear, cameraFar);\n          #endif\n\n          return viewZ;\n        }\n\n        void main() {\n          #include <logdepthbuf_fragment>\n\n          vec3 normal = vec3(vNormal.x, vNormal.y, abs(vNormal.z));\n          float angleIntensity = pow(dot(normal, vec3(0, 0, 1)), anglePower);\n          float intensity = vIntensity * angleIntensity;\n\n          // fades when z is close to sampled depth, meaning the cone is intersecting existing geometry\n          bool isSoft = resolution[0] > 0.0 && resolution[1] > 0.0;\n          if (isSoft) {\n            vec2 uv = gl_FragCoord.xy / resolution;\n            intensity *= smoothstep(0.0, 1.0, vViewZ - readDepth(depth, uv));\n          }\n\n          gl_FragColor = vec4(lightColor, intensity * opacity);\n\n          #include <tonemapping_fragment>\n          #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n        }\n      `\n    });\n  }\n}\n\nexport { SpotLightMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { applyProps } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\nconst Lightformer = /* @__PURE__ */React.forwardRef(({\n  light,\n  args,\n  map,\n  toneMapped = false,\n  color = 'white',\n  form: Form = 'rect',\n  intensity = 1,\n  scale = 1,\n  target = [0, 0, 0],\n  children,\n  ...props\n}, forwardRef) => {\n  // Apply emissive power\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  React.useLayoutEffect(() => {\n    if (!children && !props.material) {\n      applyProps(ref.current.material, {\n        color\n      });\n      ref.current.material.color.multiplyScalar(intensity);\n    }\n  }, [color, intensity, children, props.material]);\n\n  // Target light\n  React.useLayoutEffect(() => {\n    if (!props.rotation) ref.current.quaternion.identity();\n    if (target && !props.rotation) {\n      'boolean' === typeof target ? ref.current.lookAt(0, 0, 0) : ref.current.lookAt(Array.isArray(target) ? new THREE.Vector3(...target) : target);\n    }\n  }, [target, props.rotation]);\n\n  // Fix 2-dimensional scale\n  scale = Array.isArray(scale) && scale.length === 2 ? [scale[0], scale[1], 1] : scale;\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: scale\n  }, props), Form === 'circle' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: args ? args : [0, 0.5, 64]\n  }) : Form === 'ring' ? /*#__PURE__*/React.createElement(\"ringGeometry\", {\n    args: args ? args : [0.25, 0.5, 64]\n  }) : Form === 'rect' || Form === 'plane' ? /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: args ? args : [1, 1]\n  }) : Form === 'box' ? /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: args ? args : [1, 1, 1]\n  }) : /*#__PURE__*/React.createElement(Form, {\n    args: args\n  }), children ? children : /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    toneMapped: toneMapped,\n    map: map,\n    side: THREE.DoubleSide\n  }), light && /*#__PURE__*/React.createElement(\"pointLight\", _extends({\n    castShadow: true\n  }, light)));\n});\n\nexport { Lightformer };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { Sky as Sky$1 } from 'three-stdlib';\nimport { Vector3 } from 'three';\n\nfunction calcPosFromAngles(inclination, azimuth, vector = new Vector3()) {\n  const theta = Math.PI * (inclination - 0.5);\n  const phi = 2 * Math.PI * (azimuth - 0.5);\n  vector.x = Math.cos(phi);\n  vector.y = Math.sin(theta);\n  vector.z = Math.sin(phi);\n  return vector;\n}\nconst Sky = /* @__PURE__ */React.forwardRef(({\n  inclination = 0.6,\n  azimuth = 0.1,\n  distance = 1000,\n  mieCoefficient = 0.005,\n  mieDirectionalG = 0.8,\n  rayleigh = 0.5,\n  turbidity = 10,\n  sunPosition = calcPosFromAngles(inclination, azimuth),\n  ...props\n}, ref) => {\n  const scale = React.useMemo(() => new Vector3().setScalar(distance), [distance]);\n  const [sky] = React.useState(() => new Sky$1());\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: sky,\n    ref: ref,\n    \"material-uniforms-mieCoefficient-value\": mieCoefficient,\n    \"material-uniforms-mieDirectionalG-value\": mieDirectionalG,\n    \"material-uniforms-rayleigh-value\": rayleigh,\n    \"material-uniforms-sunPosition-value\": sunPosition,\n    \"material-uniforms-turbidity-value\": turbidity,\n    scale: scale\n  }, props));\n});\n\nexport { Sky, calcPosFromAngles };\n", "import * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Color, AdditiveBlending, ShaderMaterial, Vector3, Spherical } from 'three';\nimport { version } from '../helpers/constants.js';\n\nclass StarfieldMaterial extends ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0.0\n        },\n        fade: {\n          value: 1.0\n        }\n      },\n      vertexShader: /* glsl */`\n      uniform float time;\n      attribute float size;\n      varying vec3 vColor;\n      void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 0.5);\n        gl_PointSize = size * (30.0 / -mvPosition.z) * (3.0 + sin(time + 100.0));\n        gl_Position = projectionMatrix * mvPosition;\n      }`,\n      fragmentShader: /* glsl */`\n      uniform sampler2D pointTexture;\n      uniform float fade;\n      varying vec3 vColor;\n      void main() {\n        float opacity = 1.0;\n        if (fade == 1.0) {\n          float d = distance(gl_PointCoord, vec2(0.5, 0.5));\n          opacity = 1.0 / (1.0 + exp(16.0 * (d - 0.25)));\n        }\n        gl_FragColor = vec4(vColor, opacity);\n\n        #include <tonemapping_fragment>\n\t      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n      }`\n    });\n  }\n}\nconst genStar = r => {\n  return new Vector3().setFromSpherical(new Spherical(r, Math.acos(1 - Math.random() * 2), Math.random() * 2 * Math.PI));\n};\nconst Stars = /* @__PURE__ */React.forwardRef(({\n  radius = 100,\n  depth = 50,\n  count = 5000,\n  saturation = 0,\n  factor = 4,\n  fade = false,\n  speed = 1\n}, ref) => {\n  const material = React.useRef();\n  const [position, color, size] = React.useMemo(() => {\n    const positions = [];\n    const colors = [];\n    const sizes = Array.from({\n      length: count\n    }, () => (0.5 + 0.5 * Math.random()) * factor);\n    const color = new Color();\n    let r = radius + depth;\n    const increment = depth / count;\n    for (let i = 0; i < count; i++) {\n      r -= increment * Math.random();\n      positions.push(...genStar(r).toArray());\n      color.setHSL(i / count, saturation, 0.9);\n      colors.push(color.r, color.g, color.b);\n    }\n    return [new Float32Array(positions), new Float32Array(colors), new Float32Array(sizes)];\n  }, [count, depth, factor, radius, saturation]);\n  useFrame(state => material.current && (material.current.uniforms.time.value = state.clock.elapsedTime * speed));\n  const [starfieldMaterial] = React.useState(() => new StarfieldMaterial());\n  return /*#__PURE__*/React.createElement(\"points\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [position, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [color, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [size, 1]\n  })), /*#__PURE__*/React.createElement(\"primitive\", {\n    ref: material,\n    object: starfieldMaterial,\n    attach: \"material\",\n    blending: AdditiveBlending,\n    \"uniforms-fade-value\": fade,\n    depthWrite: false,\n    transparent: true,\n    vertexColors: true\n  }));\n});\n\nexport { Stars };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { REVISION, Quaternion, Vector3, DynamicDrawUsage, MeshLambertMaterial, Matrix4, Color } from 'three';\nimport { extend, useFrame, applyProps } from '@react-three/fiber';\nimport { useTexture } from './Texture.js';\nimport { setUpdateRange } from '../helpers/deprecated.js';\n\nconst CLOUD_URL = 'https://rawcdn.githack.com/pmndrs/drei-assets/9225a9f1fbd449d9411125c2f419b843d0308c9f/cloud.png';\nconst parentMatrix = /* @__PURE__ */new Matrix4();\nconst translation = /* @__PURE__ */new Vector3();\nconst rotation = /* @__PURE__ */new Quaternion();\nconst cpos = /* @__PURE__ */new Vector3();\nconst cquat = /* @__PURE__ */new Quaternion();\nconst scale = /* @__PURE__ */new Vector3();\nconst context = /* @__PURE__ */React.createContext(null);\nconst Clouds = /* @__PURE__ */React.forwardRef(({\n  children,\n  material = MeshLambertMaterial,\n  texture = CLOUD_URL,\n  range,\n  limit = 200,\n  frustumCulled,\n  ...props\n}, fref) => {\n  var _image$width, _image$height;\n  const CloudMaterial = React.useMemo(() => {\n    return class extends material {\n      constructor() {\n        super();\n        const opaque_fragment = parseInt(REVISION.replace(/\\D+/g, '')) >= 154 ? 'opaque_fragment' : 'output_fragment';\n        this.onBeforeCompile = shader => {\n          shader.vertexShader = `attribute float cloudOpacity;\n               varying float vOpacity;\n              ` + shader.vertexShader.replace('#include <fog_vertex>', `#include <fog_vertex>\n                 vOpacity = cloudOpacity;\n                `);\n          shader.fragmentShader = `varying float vOpacity;\n              ` + shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `#include <${opaque_fragment}>\n                 gl_FragColor = vec4(outgoingLight, diffuseColor.a * vOpacity);\n                `);\n        };\n      }\n    };\n  }, [material]);\n  extend({\n    CloudMaterial\n  });\n  const instance = React.useRef(null);\n  const clouds = React.useRef([]);\n  const opacities = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => 1)), [limit]);\n  const colors = React.useMemo(() => new Float32Array(Array.from({\n    length: limit\n  }, () => [1, 1, 1]).flat()), [limit]);\n  const cloudTexture = useTexture(texture);\n  let t = 0;\n  let index = 0;\n  let config;\n  const qat = new Quaternion();\n  const dir = new Vector3(0, 0, 1);\n  const pos = new Vector3();\n  useFrame((state, delta) => {\n    t = state.clock.elapsedTime;\n    parentMatrix.copy(instance.current.matrixWorld).invert();\n    state.camera.matrixWorld.decompose(cpos, cquat, scale);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      config.ref.current.matrixWorld.decompose(translation, rotation, scale);\n      translation.add(pos.copy(config.position).applyQuaternion(rotation).multiply(scale));\n      rotation.copy(cquat).multiply(qat.setFromAxisAngle(dir, config.rotation += delta * config.rotationFactor));\n      scale.multiplyScalar(config.volume + (1 + Math.sin(t * config.density * config.speed)) / 2 * config.growth);\n      config.matrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n      config.dist = translation.distanceTo(cpos);\n    }\n\n    // Depth-sort. Instances have no specific draw order, w/o sorting z would be random\n    clouds.current.sort((a, b) => b.dist - a.dist);\n    for (index = 0; index < clouds.current.length; index++) {\n      config = clouds.current[index];\n      opacities[index] = config.opacity * (config.dist < config.fade - 1 ? config.dist / config.fade : 1);\n      instance.current.setMatrixAt(index, config.matrix);\n      instance.current.setColorAt(index, config.color);\n    }\n\n    // Update instance\n    instance.current.geometry.attributes.cloudOpacity.needsUpdate = true;\n    instance.current.instanceMatrix.needsUpdate = true;\n    if (instance.current.instanceColor) instance.current.instanceColor.needsUpdate = true;\n  });\n  React.useLayoutEffect(() => {\n    const count = Math.min(limit, range !== undefined ? range : limit, clouds.current.length);\n    instance.current.count = count;\n    setUpdateRange(instance.current.instanceMatrix, {\n      offset: 0,\n      count: count * 16\n    });\n    if (instance.current.instanceColor) {\n      setUpdateRange(instance.current.instanceColor, {\n        offset: 0,\n        count: count * 3\n      });\n    }\n    setUpdateRange(instance.current.geometry.attributes.cloudOpacity, {\n      offset: 0,\n      count: count\n    });\n  });\n  let imageBounds = [(_image$width = cloudTexture.image.width) !== null && _image$width !== void 0 ? _image$width : 1, (_image$height = cloudTexture.image.height) !== null && _image$height !== void 0 ? _image$height : 1];\n  const max = Math.max(imageBounds[0], imageBounds[1]);\n  imageBounds = [imageBounds[0] / max, imageBounds[1] / max];\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), /*#__PURE__*/React.createElement(context.Provider, {\n    value: clouds\n  }, children, /*#__PURE__*/React.createElement(\"instancedMesh\", {\n    matrixAutoUpdate: false,\n    ref: instance,\n    args: [null, null, limit],\n    frustumCulled: frustumCulled\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"instanceColor\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [...imageBounds]\n  }, /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    usage: DynamicDrawUsage,\n    attach: \"attributes-cloudOpacity\",\n    args: [opacities, 1]\n  })), /*#__PURE__*/React.createElement(\"cloudMaterial\", {\n    key: material.name,\n    map: cloudTexture,\n    transparent: true,\n    depthWrite: false\n  }))));\n});\nconst CloudInstance = /* @__PURE__ */React.forwardRef(({\n  opacity = 1,\n  speed = 0,\n  bounds = [5, 1, 1],\n  segments = 20,\n  color = '#ffffff',\n  fade = 10,\n  volume = 6,\n  smallestVolume = 0.25,\n  distribute = null,\n  growth = 4,\n  concentrate = 'inside',\n  seed = Math.random(),\n  ...props\n}, fref) => {\n  function random() {\n    const x = Math.sin(seed++) * 10000;\n    return x - Math.floor(x);\n  }\n  const parent = React.useContext(context);\n  const ref = React.useRef(null);\n  const uuid = React.useId();\n  const clouds = React.useMemo(() => {\n    return [...new Array(segments)].map((_, index) => ({\n      segments,\n      bounds: new Vector3(1, 1, 1),\n      position: new Vector3(),\n      uuid,\n      index,\n      ref,\n      dist: 0,\n      matrix: new Matrix4(),\n      color: new Color(),\n      rotation: index * (Math.PI / segments)\n    }));\n  }, [segments, uuid]);\n  React.useLayoutEffect(() => {\n    clouds.forEach((cloud, index) => {\n      applyProps(cloud, {\n        volume,\n        color,\n        speed,\n        growth,\n        opacity,\n        fade,\n        bounds,\n        density: Math.max(0.5, random()),\n        rotationFactor: Math.max(0.2, 0.5 * random()) * speed\n      });\n      // Only distribute randomly if there are multiple segments\n\n      const distributed = distribute == null ? void 0 : distribute(cloud, index);\n      if (distributed || segments > 1) {\n        var _distributed$point;\n        cloud.position.copy(cloud.bounds).multiply((_distributed$point = distributed == null ? void 0 : distributed.point) !== null && _distributed$point !== void 0 ? _distributed$point : {\n          x: random() * 2 - 1,\n          y: random() * 2 - 1,\n          z: random() * 2 - 1\n        });\n      }\n      const xDiff = Math.abs(cloud.position.x);\n      const yDiff = Math.abs(cloud.position.y);\n      const zDiff = Math.abs(cloud.position.z);\n      const max = Math.max(xDiff, yDiff, zDiff);\n      cloud.length = 1;\n      if (xDiff === max) cloud.length -= xDiff / cloud.bounds.x;\n      if (yDiff === max) cloud.length -= yDiff / cloud.bounds.y;\n      if (zDiff === max) cloud.length -= zDiff / cloud.bounds.z;\n      cloud.volume = ((distributed == null ? void 0 : distributed.volume) !== undefined ? distributed.volume : Math.max(Math.max(0, smallestVolume), concentrate === 'random' ? random() : concentrate === 'inside' ? cloud.length : 1 - cloud.length)) * volume;\n    });\n  }, [concentrate, bounds, fade, color, opacity, growth, volume, seed, segments, speed]);\n  React.useLayoutEffect(() => {\n    const temp = clouds;\n    parent.current = [...parent.current, ...temp];\n    return () => {\n      parent.current = parent.current.filter(item => item.uuid !== uuid);\n    };\n  }, [clouds]);\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n});\nconst Cloud = /* @__PURE__ */React.forwardRef((props, fref) => {\n  const parent = React.useContext(context);\n  if (parent) return /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props));\n  return /*#__PURE__*/React.createElement(Clouds, null, /*#__PURE__*/React.createElement(CloudInstance, _extends({\n    ref: fref\n  }, props)));\n});\n\nexport { Cloud, CloudInstance, Clouds };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { version } from '../helpers/constants.js';\n\nclass SparklesImplMaterial extends THREE.ShaderMaterial {\n  constructor() {\n    super({\n      uniforms: {\n        time: {\n          value: 0\n        },\n        pixelRatio: {\n          value: 1\n        }\n      },\n      vertexShader: /* glsl */`\n        uniform float pixelRatio;\n        uniform float time;\n        attribute float size;  \n        attribute float speed;  \n        attribute float opacity;\n        attribute vec3 noise;\n        attribute vec3 color;\n        varying vec3 vColor;\n        varying float vOpacity;\n\n        void main() {\n          vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n          modelPosition.y += sin(time * speed + modelPosition.x * noise.x * 100.0) * 0.2;\n          modelPosition.z += cos(time * speed + modelPosition.x * noise.y * 100.0) * 0.2;\n          modelPosition.x += cos(time * speed + modelPosition.x * noise.z * 100.0) * 0.2;\n          vec4 viewPosition = viewMatrix * modelPosition;\n          vec4 projectionPostion = projectionMatrix * viewPosition;\n          gl_Position = projectionPostion;\n          gl_PointSize = size * 25. * pixelRatio;\n          gl_PointSize *= (1.0 / - viewPosition.z);\n          vColor = color;\n          vOpacity = opacity;\n        }\n      `,\n      fragmentShader: /* glsl */`\n        varying vec3 vColor;\n        varying float vOpacity;\n        void main() {\n          float distanceToCenter = distance(gl_PointCoord, vec2(0.5));\n          float strength = 0.05 / distanceToCenter - 0.1;\n          gl_FragColor = vec4(vColor, strength * vOpacity);\n          #include <tonemapping_fragment>\n          #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n        }\n      `\n    });\n  }\n  get time() {\n    return this.uniforms.time.value;\n  }\n  set time(value) {\n    this.uniforms.time.value = value;\n  }\n  get pixelRatio() {\n    return this.uniforms.pixelRatio.value;\n  }\n  set pixelRatio(value) {\n    this.uniforms.pixelRatio.value = value;\n  }\n}\nconst isFloat32Array = def => def && def.constructor === Float32Array;\nconst expandColor = v => [v.r, v.g, v.b];\nconst isVector = v => v instanceof THREE.Vector2 || v instanceof THREE.Vector3 || v instanceof THREE.Vector4;\nconst normalizeVector = v => {\n  if (Array.isArray(v)) return v;else if (isVector(v)) return v.toArray();\n  return [v, v, v];\n};\nfunction usePropAsIsOrAsAttribute(count, prop, setDefault) {\n  return React.useMemo(() => {\n    if (prop !== undefined) {\n      if (isFloat32Array(prop)) {\n        return prop;\n      } else {\n        if (prop instanceof THREE.Color) {\n          const a = Array.from({\n            length: count * 3\n          }, () => expandColor(prop)).flat();\n          return Float32Array.from(a);\n        } else if (isVector(prop) || Array.isArray(prop)) {\n          const a = Array.from({\n            length: count * 3\n          }, () => normalizeVector(prop)).flat();\n          return Float32Array.from(a);\n        }\n        return Float32Array.from({\n          length: count\n        }, () => prop);\n      }\n    }\n    return Float32Array.from({\n      length: count\n    }, setDefault);\n  }, [prop]);\n}\nconst Sparkles = /* @__PURE__ */React.forwardRef(({\n  noise = 1,\n  count = 100,\n  speed = 1,\n  opacity = 1,\n  scale = 1,\n  size,\n  color,\n  children,\n  ...props\n}, forwardRef) => {\n  React.useMemo(() => extend({\n    SparklesImplMaterial\n  }), []);\n  const ref = React.useRef(null);\n  const dpr = useThree(state => state.viewport.dpr);\n  const _scale = normalizeVector(scale);\n  const positions = React.useMemo(() => Float32Array.from(Array.from({\n    length: count\n  }, () => _scale.map(THREE.MathUtils.randFloatSpread)).flat()), [count, ..._scale]);\n  const sizes = usePropAsIsOrAsAttribute(count, size, Math.random);\n  const opacities = usePropAsIsOrAsAttribute(count, opacity);\n  const speeds = usePropAsIsOrAsAttribute(count, speed);\n  const noises = usePropAsIsOrAsAttribute(count * 3, noise);\n  const colors = usePropAsIsOrAsAttribute(color === undefined ? count * 3 : count, !isFloat32Array(color) ? new THREE.Color(color) : color, () => 1);\n  useFrame(state => {\n    if (ref.current && ref.current.material) ref.current.material.time = state.clock.elapsedTime;\n  });\n  React.useImperativeHandle(forwardRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    key: `particle-${count}-${JSON.stringify(scale)}`\n  }, props, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    args: [positions, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    args: [sizes, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-opacity\",\n    args: [opacities, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-speed\",\n    args: [speeds, 1]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    args: [colors, 3]\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-noise\",\n    args: [noises, 3]\n  })), children ? children : /*#__PURE__*/React.createElement(\"sparklesImplMaterial\", {\n    transparent: true,\n    pixelRatio: dpr,\n    depthWrite: false\n  }));\n});\n\nexport { Sparkles };\n", "import * as React from 'react';\nimport { useTexture } from './Texture.js';\nimport { suspend } from 'suspend-react';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n    case 128:\n      return '-128px';\n    case 256:\n      return '-256px';\n    case 512:\n      return '-512px';\n    default:\n      return '';\n  }\n}\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/matcaps.json';\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nfunction useMatcapTexture(id = 0, format = 1024, onLoad) {\n  const matcapList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['matcapList']);\n  const DEFAULT_MATCAP = matcapList[0];\n  const numTot = React.useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = React.useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n    return null;\n  }, [id]);\n  const fileName = `${fileHash || DEFAULT_MATCAP}${getFormatString(format)}.png`;\n  const url = `${MATCAP_ROOT}/${format}/${fileName}`;\n  const matcapTexture = useTexture(url, onLoad);\n  return [matcapTexture, url, numTot];\n}\n\n//\n\nconst MatcapTexture = ({\n  children,\n  id,\n  format,\n  onLoad\n}) => {\n  const texture = useMatcapTexture(id, format, onLoad);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(texture));\n};\n\nexport { MatcapTexture, useMatcapTexture };\n", "import * as React from 'react';\nimport { useTexture } from './Texture.js';\nimport { RepeatWrapping, Vector2 } from 'three';\nimport { suspend } from 'suspend-react';\n\nconst NORMAL_ROOT = 'https://rawcdn.githack.com/pmndrs/drei-assets/7a3104997e1576f83472829815b00880d88b32fb';\nconst LIST_URL = 'https://cdn.jsdelivr.net/gh/pmndrs/drei-assets@master/normals/normals.json';\nfunction useNormalTexture(id = 0, settings = {}, onLoad) {\n  const {\n    repeat = [1, 1],\n    anisotropy = 1,\n    offset = [0, 0]\n  } = settings;\n  const normalsList = suspend(() => fetch(LIST_URL).then(res => res.json()), ['normalsList']);\n  const numTot = React.useMemo(() => Object.keys(normalsList).length, []);\n  const DEFAULT_NORMAL = normalsList[0];\n  const imageName = normalsList[id] || DEFAULT_NORMAL;\n  const url = `${NORMAL_ROOT}/normals/${imageName}`;\n  const normalTexture = useTexture(url, onLoad);\n  React.useLayoutEffect(() => {\n    if (!normalTexture) return;\n    normalTexture.wrapS = normalTexture.wrapT = RepeatWrapping;\n    normalTexture.repeat = new Vector2(repeat[0], repeat[1]);\n    normalTexture.offset = new Vector2(offset[0], offset[1]);\n    normalTexture.anisotropy = anisotropy;\n  }, [normalTexture, anisotropy, repeat, offset]);\n  return [normalTexture, url, numTot];\n}\n\n//\n\nconst NormalTexture = ({\n  children,\n  id,\n  onLoad,\n  ...settings\n}) => {\n  const ret = useNormalTexture(id, settings, onLoad);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children == null ? void 0 : children(ret));\n};\n\nexport { NormalTexture, useNormalTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { WireframeMaterial, WireframeMaterialShaders, useWireframeUniforms, setWireframeOverride } from '../materials/WireframeMaterial.js';\n\nfunction isWithGeometry(object) {\n  return !!(object != null && object.geometry);\n}\nfunction isGeometry(object) {\n  return !!(object != null && object.isBufferGeometry);\n}\nfunction isRefObject(object) {\n  return !!(object != null && object.current);\n}\nfunction isRef(object) {\n  return (object == null ? void 0 : object.current) !== undefined;\n}\nfunction isWireframeGeometry(geometry) {\n  return geometry.type === 'WireframeGeometry';\n}\nfunction getUniforms() {\n  const u = {};\n  for (const key in WireframeMaterialShaders.uniforms) {\n    u[key] = {\n      value: WireframeMaterialShaders.uniforms[key]\n    };\n  }\n  return u;\n}\nfunction getBarycentricCoordinates(geometry, removeEdge) {\n  const position = geometry.getAttribute('position');\n  const count = position.count;\n  const barycentric = [];\n  for (let i = 0; i < count; i++) {\n    const even = i % 2 === 0;\n    const Q = removeEdge ? 1 : 0;\n    if (even) {\n      barycentric.push(0, 0, 1, 0, 1, 0, 1, 0, Q);\n    } else {\n      barycentric.push(0, 1, 0, 0, 0, 1, 1, 0, Q);\n    }\n  }\n  return new THREE.BufferAttribute(Float32Array.from(barycentric), 3);\n}\nfunction getInputGeometry(inputGeometry) {\n  const geo = isRefObject(inputGeometry) ? inputGeometry.current : inputGeometry;\n  if (!isGeometry(geo)) {\n    // Disallow WireframeGeometry\n    if (isWireframeGeometry(geo)) {\n      throw new Error('Wireframe: WireframeGeometry is not supported.');\n    }\n    const parent = geo.parent;\n    if (isWithGeometry(parent)) {\n      // Disallow WireframeGeometry\n      if (isWireframeGeometry(parent.geometry)) {\n        throw new Error('Wireframe: WireframeGeometry is not supported.');\n      }\n      return parent.geometry;\n    }\n  } else {\n    return geo;\n  }\n}\nfunction setBarycentricCoordinates(geometry, simplify) {\n  if (geometry.index) {\n    console.warn('Wireframe: Requires non-indexed geometry, converting to non-indexed geometry.');\n    const nonIndexedGeo = geometry.toNonIndexed();\n    geometry.copy(nonIndexedGeo);\n    geometry.setIndex(null);\n  }\n  const newBarycentric = getBarycentricCoordinates(geometry, simplify);\n  geometry.setAttribute('barycentric', newBarycentric);\n}\nfunction WireframeWithCustomGeo({\n  geometry: customGeometry,\n  simplify = false,\n  ...props\n}) {\n  extend({\n    MeshWireframeMaterial: WireframeMaterial\n  });\n  const [geometry, setGeometry] = React.useState(null);\n  React.useLayoutEffect(() => {\n    const geom = getInputGeometry(customGeometry);\n    if (!geom) {\n      throw new Error('Wireframe: geometry prop must be a BufferGeometry or a ref to a BufferGeometry.');\n    }\n    setBarycentricCoordinates(geom, simplify);\n    if (isRef(customGeometry)) {\n      setGeometry(geom);\n    }\n  }, [simplify, customGeometry]);\n  const drawnGeo = isRef(customGeometry) ? geometry : customGeometry;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, drawnGeo && /*#__PURE__*/React.createElement(\"mesh\", {\n    geometry: drawnGeo\n  }, /*#__PURE__*/React.createElement(\"meshWireframeMaterial\", _extends({\n    attach: \"material\",\n    transparent: true,\n    side: THREE.DoubleSide,\n    polygonOffset: true //\n    ,\n    polygonOffsetFactor: -4\n  }, props, {\n    extensions: {\n      derivatives: true,\n      fragDepth: false,\n      drawBuffers: false,\n      shaderTextureLOD: false\n    }\n  }))));\n}\nfunction WireframeWithoutCustomGeo({\n  simplify = false,\n  ...props\n}) {\n  const objectRef = React.useRef(null);\n  const uniforms = React.useMemo(() => getUniforms(), [WireframeMaterialShaders.uniforms]);\n  useWireframeUniforms(uniforms, props);\n  React.useLayoutEffect(() => {\n    const geom = getInputGeometry(objectRef);\n    if (!geom) {\n      throw new Error('Wireframe: Must be a child of a Mesh, Line or Points object or specify a geometry prop.');\n    }\n    const og = geom.clone();\n    setBarycentricCoordinates(geom, simplify);\n    return () => {\n      geom.copy(og);\n      og.dispose();\n    };\n  }, [simplify]);\n  React.useLayoutEffect(() => {\n    const parentMesh = objectRef.current.parent;\n    const og = parentMesh.material.clone();\n    setWireframeOverride(parentMesh.material, uniforms);\n    return () => {\n      parentMesh.material.dispose();\n      parentMesh.material = og;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"object3D\", {\n    ref: objectRef\n  });\n}\nfunction Wireframe({\n  geometry: customGeometry,\n  ...props\n}) {\n  if (customGeometry) {\n    return /*#__PURE__*/React.createElement(WireframeWithCustomGeo, _extends({\n      geometry: customGeometry\n    }, props));\n  }\n  return /*#__PURE__*/React.createElement(WireframeWithoutCustomGeo, props);\n}\n\nexport { Wireframe };\n", "import * as THREE from 'three';\nimport * as React from 'react';\nimport { shaderMaterial } from '../core/shaderMaterial.js';\n\nconst WireframeMaterialShaders = {\n  uniforms: {\n    strokeOpacity: 1,\n    fillOpacity: 0.25,\n    fillMix: 0,\n    thickness: 0.05,\n    colorBackfaces: false,\n    dashInvert: true,\n    dash: false,\n    dashRepeats: 4,\n    dashLength: 0.5,\n    squeeze: false,\n    squeezeMin: 0.2,\n    squeezeMax: 1,\n    stroke: /* @__PURE__ */new THREE.Color('#ff0000'),\n    backfaceStroke: /* @__PURE__ */new THREE.Color('#0000ff'),\n    fill: /* @__PURE__ */new THREE.Color('#00ff00')\n  },\n  vertex: /* glsl */`\n\t  attribute vec3 barycentric;\n\t\n\t\tvarying vec3 v_edges_Barycentric;\n\t\tvarying vec3 v_edges_Position;\n\n\t\tvoid initWireframe() {\n\t\t\tv_edges_Barycentric = barycentric;\n\t\t\tv_edges_Position = position.xyz;\n\t\t}\n\t  `,\n  fragment: /* glsl */`\n\t\t#ifndef PI\n\t  \t#define PI 3.1415926535897932384626433832795\n\t\t#endif\n  \n\t  varying vec3 v_edges_Barycentric;\n\t  varying vec3 v_edges_Position;\n  \n\t  uniform float strokeOpacity;\n\t  uniform float fillOpacity;\n\t  uniform float fillMix;\n\t  uniform float thickness;\n\t  uniform bool colorBackfaces;\n  \n\t  // Dash\n\t  uniform bool dashInvert;\n\t  uniform bool dash;\n\t  uniform bool dashOnly;\n\t  uniform float dashRepeats;\n\t  uniform float dashLength;\n  \n\t  // Squeeze\n\t  uniform bool squeeze;\n\t  uniform float squeezeMin;\n\t  uniform float squeezeMax;\n  \n\t  // Colors\n\t  uniform vec3 stroke;\n\t  uniform vec3 backfaceStroke;\n\t  uniform vec3 fill;\n  \n\t  // This is like\n\t  float wireframe_aastep(float threshold, float dist) {\n\t\t  float afwidth = fwidth(dist) * 0.5;\n\t\t  return smoothstep(threshold - afwidth, threshold + afwidth, dist);\n\t  }\n  \n\t  float wireframe_map(float value, float min1, float max1, float min2, float max2) {\n\t\t  return min2 + (value - min1) * (max2 - min2) / (max1 - min1);\n\t  }\n  \n\t  float getWireframe() {\n\t\t\tvec3 barycentric = v_edges_Barycentric;\n\t\t\n\t\t\t// Distance from center of each triangle to its edges.\n\t\t\tfloat d = min(min(barycentric.x, barycentric.y), barycentric.z);\n\n\t\t\t// for dashed rendering, we can use this to get the 0 .. 1 value of the line length\n\t\t\tfloat positionAlong = max(barycentric.x, barycentric.y);\n\t\t\tif (barycentric.y < barycentric.x && barycentric.y < barycentric.z) {\n\t\t\t\tpositionAlong = 1.0 - positionAlong;\n\t\t\t}\n\n\t\t\t// the thickness of the stroke\n\t\t\tfloat computedThickness = wireframe_map(thickness, 0.0, 1.0, 0.0, 0.34);\n\n\t\t\t// if we want to shrink the thickness toward the center of the line segment\n\t\t\tif (squeeze) {\n\t\t\t\tcomputedThickness *= mix(squeezeMin, squeezeMax, (1.0 - sin(positionAlong * PI)));\n\t\t\t}\n\n\t\t\t// Create dash pattern\n\t\t\tif (dash) {\n\t\t\t\t// here we offset the stroke position depending on whether it\n\t\t\t\t// should overlap or not\n\t\t\t\tfloat offset = 1.0 / dashRepeats * dashLength / 2.0;\n\t\t\t\tif (!dashInvert) {\n\t\t\t\t\toffset += 1.0 / dashRepeats / 2.0;\n\t\t\t\t}\n\n\t\t\t\t// if we should animate the dash or not\n\t\t\t\t// if (dashAnimate) {\n\t\t\t\t// \toffset += time * 0.22;\n\t\t\t\t// }\n\n\t\t\t\t// create the repeating dash pattern\n\t\t\t\tfloat pattern = fract((positionAlong + offset) * dashRepeats);\n\t\t\t\tcomputedThickness *= 1.0 - wireframe_aastep(dashLength, pattern);\n\t\t\t}\n\n\t\t\t// compute the anti-aliased stroke edge  \n\t\t\tfloat edge = 1.0 - wireframe_aastep(computedThickness, d);\n\n\t\t\treturn edge;\n\t  }\n\t  `\n};\nconst WireframeMaterial = /* @__PURE__ */shaderMaterial(WireframeMaterialShaders.uniforms, WireframeMaterialShaders.vertex + /* glsl */`\n  \tvoid main() {\n\t\tinitWireframe();\n\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\t}\n  `, WireframeMaterialShaders.fragment + /* glsl */`\n  void main () {\n\t\t// Compute color\n\n\t\tfloat edge = getWireframe();\n\t\tvec4 colorStroke = vec4(stroke, edge);\n\n\t\t#ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t#endif\n    \n\t\tvec4 colorFill = vec4(fill, fillOpacity);\n\t\tvec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\tgl_FragColor = outColor;\n\t}\n  `);\nfunction setWireframeOverride(material, uniforms) {\n  material.onBeforeCompile = shader => {\n    shader.uniforms = {\n      ...shader.uniforms,\n      ...uniforms\n    };\n    shader.vertexShader = shader.vertexShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.vertex}\n\t\t  void main() {\n\t\t\tinitWireframe();\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('void main() {', `\n\t\t  ${WireframeMaterialShaders.fragment}\n\t\t  void main() {\n\t\t`);\n    shader.fragmentShader = shader.fragmentShader.replace('#include <color_fragment>', /* glsl */`\n\t\t  #include <color_fragment>\n\t\t\t  float edge = getWireframe();\n\t\t  vec4 colorStroke = vec4(stroke, edge);\n\t\t  #ifdef FLIP_SIDED\n\t\t\tcolorStroke.rgb = backfaceStroke;\n\t\t  #endif\n\t\t  vec4 colorFill = vec4(mix(diffuseColor.rgb, fill, fillMix), mix(diffuseColor.a, fillOpacity, fillMix));\n\t\t  vec4 outColor = mix(colorFill, colorStroke, edge * strokeOpacity);\n\n\t\t  diffuseColor.rgb = outColor.rgb;\n\t\t  diffuseColor.a *= outColor.a;\n\t\t`);\n  };\n  material.side = THREE.DoubleSide;\n  material.transparent = true;\n}\nfunction useWireframeUniforms(uniforms, props) {\n  React.useEffect(() => {\n    var _props$fillOpacity;\n    return void (uniforms.fillOpacity.value = (_props$fillOpacity = props.fillOpacity) !== null && _props$fillOpacity !== void 0 ? _props$fillOpacity : uniforms.fillOpacity.value);\n  }, [props.fillOpacity]);\n  React.useEffect(() => {\n    var _props$fillMix;\n    return void (uniforms.fillMix.value = (_props$fillMix = props.fillMix) !== null && _props$fillMix !== void 0 ? _props$fillMix : uniforms.fillMix.value);\n  }, [props.fillMix]);\n  React.useEffect(() => {\n    var _props$strokeOpacity;\n    return void (uniforms.strokeOpacity.value = (_props$strokeOpacity = props.strokeOpacity) !== null && _props$strokeOpacity !== void 0 ? _props$strokeOpacity : uniforms.strokeOpacity.value);\n  }, [props.strokeOpacity]);\n  React.useEffect(() => {\n    var _props$thickness;\n    return void (uniforms.thickness.value = (_props$thickness = props.thickness) !== null && _props$thickness !== void 0 ? _props$thickness : uniforms.thickness.value);\n  }, [props.thickness]);\n  React.useEffect(() => void (uniforms.colorBackfaces.value = !!props.colorBackfaces), [props.colorBackfaces]);\n  React.useEffect(() => void (uniforms.dash.value = !!props.dash), [props.dash]);\n  React.useEffect(() => void (uniforms.dashInvert.value = !!props.dashInvert), [props.dashInvert]);\n  React.useEffect(() => {\n    var _props$dashRepeats;\n    return void (uniforms.dashRepeats.value = (_props$dashRepeats = props.dashRepeats) !== null && _props$dashRepeats !== void 0 ? _props$dashRepeats : uniforms.dashRepeats.value);\n  }, [props.dashRepeats]);\n  React.useEffect(() => {\n    var _props$dashLength;\n    return void (uniforms.dashLength.value = (_props$dashLength = props.dashLength) !== null && _props$dashLength !== void 0 ? _props$dashLength : uniforms.dashLength.value);\n  }, [props.dashLength]);\n  React.useEffect(() => void (uniforms.squeeze.value = !!props.squeeze), [props.squeeze]);\n  React.useEffect(() => {\n    var _props$squeezeMin;\n    return void (uniforms.squeezeMin.value = (_props$squeezeMin = props.squeezeMin) !== null && _props$squeezeMin !== void 0 ? _props$squeezeMin : uniforms.squeezeMin.value);\n  }, [props.squeezeMin]);\n  React.useEffect(() => {\n    var _props$squeezeMax;\n    return void (uniforms.squeezeMax.value = (_props$squeezeMax = props.squeezeMax) !== null && _props$squeezeMax !== void 0 ? _props$squeezeMax : uniforms.squeezeMax.value);\n  }, [props.squeezeMax]);\n  React.useEffect(() => void (uniforms.stroke.value = props.stroke ? new THREE.Color(props.stroke) : uniforms.stroke.value), [props.stroke]);\n  React.useEffect(() => void (uniforms.fill.value = props.fill ? new THREE.Color(props.fill) : uniforms.fill.value), [props.fill]);\n  React.useEffect(() => void (uniforms.backfaceStroke.value = props.backfaceStroke ? new THREE.Color(props.backfaceStroke) : uniforms.backfaceStroke.value), [props.backfaceStroke]);\n}\n\nexport { WireframeMaterial, WireframeMaterialShaders, setWireframeOverride, useWireframeUniforms };\n", "import { useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\n\n/**\n * Integration and compilation: Faraz Shaikh (https://twitter.com/CantBeFaraz)\n *\n * Based on:\n *  - https://gkjohnson.github.io/threejs-sandbox/screendoor-transparency/ by Garrett Johnson (https://github.com/gkjohnson)\n *\n * Note:\n *  - Must depreciate in favor of https://github.com/mrdoob/three.js/issues/10600 when it's ready.\n */\nfunction ShadowAlpha({\n  opacity,\n  alphaMap\n}) {\n  const depthMaterialRef = React.useRef(null);\n  const distanceMaterialRef = React.useRef(null);\n  const uShadowOpacity = React.useRef({\n    value: 1\n  });\n  const uAlphaMap = React.useRef({\n    value: null\n  });\n  const uHasAlphaMap = React.useRef({\n    value: false\n  });\n  React.useLayoutEffect(() => {\n    depthMaterialRef.current.onBeforeCompile = distanceMaterialRef.current.onBeforeCompile = shader => {\n      // Need to get the \"void main\" line dynamically because the lines for\n      // MeshDistanceMaterial and MeshDepthMaterial are different 🤦‍♂️\n      const mainLineStart = shader.fragmentShader.indexOf('void main');\n      let mainLine = '';\n      let ch;\n      let i = mainLineStart;\n      while (ch !== '\\n' && i < mainLineStart + 100) {\n        ch = shader.fragmentShader.charAt(i);\n        mainLine += ch;\n        i++;\n      }\n      mainLine = mainLine.trim();\n      shader.vertexShader = shader.vertexShader.replace('void main() {', `\n        varying vec2 custom_vUv;\n\n        void main() {\n          custom_vUv = uv;\n          \n        `);\n      shader.fragmentShader = shader.fragmentShader.replace(mainLine, `\n          uniform float uShadowOpacity;\n          uniform sampler2D uAlphaMap;\n          uniform bool uHasAlphaMap;\n\n          varying vec2 custom_vUv;\n  \n          float bayerDither2x2( vec2 v ) {\n            return mod( 3.0 * v.y + 2.0 * v.x, 4.0 );\n          }\n    \n          float bayerDither4x4( vec2 v ) {\n            vec2 P1 = mod( v, 2.0 );\n            vec2 P2 = mod( floor( 0.5  * v ), 2.0 );\n            return 4.0 * bayerDither2x2( P1 ) + bayerDither2x2( P2 );\n          }\n  \n          void main() {\n            float alpha = \n              uHasAlphaMap ? \n                uShadowOpacity * texture2D(uAlphaMap, custom_vUv).x\n              : uShadowOpacity;\n\n            if( ( bayerDither4x4( floor( mod( gl_FragCoord.xy, 4.0 ) ) ) ) / 16.0 >= alpha ) discard;\n            \n          `);\n      shader.uniforms['uShadowOpacity'] = uShadowOpacity.current;\n      shader.uniforms['uAlphaMap'] = uAlphaMap.current;\n      shader.uniforms['uHasAlphaMap'] = uHasAlphaMap.current;\n    };\n  }, []);\n  useFrame(() => {\n    var _r3f;\n    const parent = (_r3f = depthMaterialRef.current.__r3f) == null ? void 0 : _r3f.parent;\n    if (parent) {\n      const parentMainMaterial = parent.material;\n      if (parentMainMaterial) {\n        uShadowOpacity.current.value = opacity !== null && opacity !== void 0 ? opacity : parentMainMaterial.opacity;\n        if (alphaMap === false) {\n          uAlphaMap.current.value = null;\n          uHasAlphaMap.current.value = false;\n        } else {\n          uAlphaMap.current.value = alphaMap || parentMainMaterial.alphaMap;\n          uHasAlphaMap.current.value = !!uAlphaMap.current.value;\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"meshDepthMaterial\", {\n    ref: depthMaterialRef,\n    attach: \"customDepthMaterial\",\n    depthPacking: THREE.RGBADepthPacking\n  }), /*#__PURE__*/React.createElement(\"meshDistanceMaterial\", {\n    ref: distanceMaterialRef,\n    attach: \"customDistanceMaterial\"\n  }));\n}\n\nexport { ShadowAlpha };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\n\nconst _inverseMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst _ray = /* @__PURE__ */new THREE.Ray();\nconst _sphere = /* @__PURE__ */new THREE.Sphere();\nconst _position = /* @__PURE__ */new THREE.Vector3();\nclass PositionPoint extends THREE.Group {\n  constructor() {\n    super();\n    this.size = 0;\n    this.color = new THREE.Color('white');\n    this.instance = {\n      current: undefined\n    };\n    this.instanceKey = {\n      current: undefined\n    };\n  }\n\n  // This will allow the virtual instance have bounds\n  get geometry() {\n    var _this$instance$curren;\n    return (_this$instance$curren = this.instance.current) == null ? void 0 : _this$instance$curren.geometry;\n  }\n  raycast(raycaster, intersects) {\n    var _raycaster$params$Poi, _raycaster$params$Poi2;\n    const parent = this.instance.current;\n    if (!parent || !parent.geometry) return;\n    const instanceId = parent.userData.instances.indexOf(this.instanceKey);\n    // If the instance wasn't found or exceeds the parents draw range, bail out\n    if (instanceId === -1 || instanceId > parent.geometry.drawRange.count) return;\n    const threshold = (_raycaster$params$Poi = (_raycaster$params$Poi2 = raycaster.params.Points) == null ? void 0 : _raycaster$params$Poi2.threshold) !== null && _raycaster$params$Poi !== void 0 ? _raycaster$params$Poi : 1;\n    _sphere.set(this.getWorldPosition(_position), threshold);\n    if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n    _inverseMatrix.copy(parent.matrixWorld).invert();\n    _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n    const localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n    const localThresholdSq = localThreshold * localThreshold;\n    const rayPointDistanceSq = _ray.distanceSqToPoint(this.position);\n    if (rayPointDistanceSq < localThresholdSq) {\n      const intersectPoint = new THREE.Vector3();\n      _ray.closestPointToPoint(this.position, intersectPoint);\n      intersectPoint.applyMatrix4(this.matrixWorld);\n      const distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: instanceId,\n        face: null,\n        object: this\n      });\n    }\n  }\n}\nlet i, positionRef;\nconst context = /* @__PURE__ */React.createContext(null);\nconst parentMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst position = /* @__PURE__ */new THREE.Vector3();\n\n/**\n * Instance implementation, relies on react + context to update the attributes based on the children of this component\n */\nconst PointsInstances = /* @__PURE__ */React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}, ref) => {\n  const parentRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => parentRef.current, []);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors, sizes]] = React.useState(() => [new Float32Array(limit * 3), Float32Array.from({\n    length: limit * 3\n  }, () => 1), Float32Array.from({\n    length: limit\n  }, () => 1)]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.geometry.attributes.position.needsUpdate = true;\n  });\n  useFrame(() => {\n    parentRef.current.updateMatrix();\n    parentRef.current.updateMatrixWorld();\n    parentMatrix.copy(parentRef.current.matrixWorld).invert();\n    parentRef.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n    for (i = 0; i < refs.length; i++) {\n      positionRef = refs[i].current;\n      positionRef.getWorldPosition(position).applyMatrix4(parentMatrix);\n      position.toArray(positions, i * 3);\n      parentRef.current.geometry.attributes.position.needsUpdate = true;\n      positionRef.matrixWorldNeedsUpdate = true;\n      positionRef.color.toArray(colors, i * 3);\n      parentRef.current.geometry.attributes.color.needsUpdate = true;\n      sizes.set([positionRef.size], i);\n      parentRef.current.geometry.attributes.size.needsUpdate = true;\n    }\n  });\n  const api = React.useMemo(() => ({\n    getParent: () => parentRef,\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    userData: {\n      instances: refs\n    },\n    matrixAutoUpdate: false,\n    ref: parentRef,\n    raycast: () => null\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nconst Point = /* @__PURE__ */React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    PositionPoint\n  }), []);\n  const group = React.useRef(null);\n  React.useImperativeHandle(ref, () => group.current, []);\n  const {\n    subscribe,\n    getParent\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"positionPoint\", _extends({\n    instance: getParent(),\n    instanceKey: group,\n    ref: group\n  }, props), children);\n});\n\n/**\n * Buffer implementation, relies on complete buffers of the correct number, leaves it to the user to update them\n */\n\nconst PointsBuffer = /* @__PURE__ */React.forwardRef(({\n  children,\n  positions,\n  colors,\n  sizes,\n  stride = 3,\n  ...props\n}, forwardedRef) => {\n  const pointsRef = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => pointsRef.current, []);\n  useFrame(() => {\n    const attr = pointsRef.current.geometry.attributes;\n    attr.position.needsUpdate = true;\n    if (colors) attr.color.needsUpdate = true;\n    if (sizes) attr.size.needsUpdate = true;\n  });\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: pointsRef\n  }, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-position\",\n    count: positions.length / stride,\n    array: positions,\n    itemSize: stride,\n    usage: THREE.DynamicDrawUsage\n  }), colors && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-color\",\n    count: colors.length / stride,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), sizes && /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attach: \"attributes-size\",\n    count: sizes.length / stride,\n    array: sizes,\n    itemSize: 1,\n    usage: THREE.DynamicDrawUsage\n  })), children);\n});\nconst Points = /* @__PURE__ */React.forwardRef((props, forwardedRef) => {\n  if (props.positions instanceof Float32Array) {\n    return /*#__PURE__*/React.createElement(PointsBuffer, _extends({}, props, {\n      ref: forwardedRef\n    }));\n  } else return /*#__PURE__*/React.createElement(PointsInstances, _extends({}, props, {\n    ref: forwardedRef\n  }));\n});\n\nexport { Point, Points, PointsBuffer, PositionPoint };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport { Line2, LineMaterial, LineSegmentsGeometry } from 'three-stdlib';\n\nconst context = /* @__PURE__ */React.createContext(null);\nconst Segments = /* @__PURE__ */React.forwardRef((props, forwardedRef) => {\n  React.useMemo(() => extend({\n    SegmentObject\n  }), []);\n  const {\n    limit = 1000,\n    lineWidth = 1.0,\n    children,\n    ...rest\n  } = props;\n  const [segments, setSegments] = React.useState([]);\n  const [line] = React.useState(() => new Line2());\n  const [material] = React.useState(() => new LineMaterial());\n  const [geometry] = React.useState(() => new LineSegmentsGeometry());\n  const [resolution] = React.useState(() => new THREE.Vector2(512, 512));\n  const [positions] = React.useState(() => Array(limit * 6).fill(0));\n  const [colors] = React.useState(() => Array(limit * 6).fill(0));\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setSegments(segments => [...segments, ref]);\n      return () => setSegments(segments => segments.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  useFrame(() => {\n    for (let i = 0; i < limit; i++) {\n      var _segments$i;\n      const segment = (_segments$i = segments[i]) == null ? void 0 : _segments$i.current;\n      if (segment) {\n        positions[i * 6 + 0] = segment.start.x;\n        positions[i * 6 + 1] = segment.start.y;\n        positions[i * 6 + 2] = segment.start.z;\n        positions[i * 6 + 3] = segment.end.x;\n        positions[i * 6 + 4] = segment.end.y;\n        positions[i * 6 + 5] = segment.end.z;\n        colors[i * 6 + 0] = segment.color.r;\n        colors[i * 6 + 1] = segment.color.g;\n        colors[i * 6 + 2] = segment.color.b;\n        colors[i * 6 + 3] = segment.color.r;\n        colors[i * 6 + 4] = segment.color.g;\n        colors[i * 6 + 5] = segment.color.b;\n      }\n    }\n    geometry.setColors(colors);\n    geometry.setPositions(positions);\n    line.computeLineDistances();\n  });\n  return /*#__PURE__*/React.createElement(\"primitive\", {\n    object: line,\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: geometry,\n    attach: \"geometry\"\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: material,\n    attach: \"material\",\n    vertexColors: true,\n    resolution: resolution,\n    linewidth: lineWidth\n  }, rest)), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n});\nclass SegmentObject {\n  constructor() {\n    this.color = new THREE.Color('white');\n    this.start = new THREE.Vector3(0, 0, 0);\n    this.end = new THREE.Vector3(0, 0, 0);\n  }\n}\nconst normPos = pos => pos instanceof THREE.Vector3 ? pos : new THREE.Vector3(...(typeof pos === 'number' ? [pos, pos, pos] : pos));\nconst Segment = /* @__PURE__ */React.forwardRef(({\n  color,\n  start,\n  end\n}, forwardedRef) => {\n  const api = React.useContext(context);\n  if (!api) throw 'Segment must used inside Segments component.';\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardedRef, () => ref.current, []);\n  React.useLayoutEffect(() => api.subscribe(ref), []);\n  return /*#__PURE__*/React.createElement(\"segmentObject\", {\n    ref: ref,\n    color: color,\n    start: normPos(start),\n    end: normPos(end)\n  });\n});\n\nexport { Segment, SegmentObject, Segments };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst Detailed = /* @__PURE__ */React.forwardRef(({\n  children,\n  hysteresis = 0,\n  distances,\n  ...props\n}, ref) => {\n  const lodRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => lodRef.current, []);\n  React.useLayoutEffect(() => {\n    const {\n      current: lod\n    } = lodRef;\n    lod.levels.length = 0;\n    lod.children.forEach((object, index) => lod.levels.push({\n      object,\n      hysteresis,\n      distance: distances[index]\n    }));\n  });\n  useFrame(state => {\n    var _lodRef$current;\n    return (_lodRef$current = lodRef.current) == null ? void 0 : _lodRef$current.update(state.camera);\n  });\n  return /*#__PURE__*/React.createElement(\"lOD\", _extends({\n    ref: lodRef\n  }, props), children);\n});\n\nexport { Detailed };\n", "import { WebGLCubeRenderTarget, CubeCamera } from 'three';\nimport * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction Preload({\n  all,\n  scene,\n  camera\n}) {\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const dCamera = useThree(({\n    camera\n  }) => camera);\n  const dScene = useThree(({\n    scene\n  }) => scene);\n\n  // Layout effect because it must run before React commits\n  React.useLayoutEffect(() => {\n    const invisible = [];\n    if (all) {\n      (scene || dScene).traverse(object => {\n        if (object.visible === false) {\n          invisible.push(object);\n          object.visible = true;\n        }\n      });\n    }\n    // Now compile the scene\n    gl.compile(scene || dScene, camera || dCamera);\n    // And for good measure, hit it with a cube camera\n    const cubeRenderTarget = new WebGLCubeRenderTarget(128);\n    const cubeCamera = new CubeCamera(0.01, 100000, cubeRenderTarget);\n    cubeCamera.update(gl, scene || dScene);\n    cubeRenderTarget.dispose();\n    // Flips these objects back\n    invisible.forEach(object => object.visible = false);\n  }, []);\n  return null;\n}\n\nexport { Preload };\n", "import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction BakeShadows() {\n  const gl = useThree(state => state.gl);\n  useEffect(() => {\n    gl.shadowMap.autoUpdate = false;\n    gl.shadowMap.needsUpdate = true;\n    return () => {\n      gl.shadowMap.autoUpdate = gl.shadowMap.needsUpdate = true;\n    };\n  }, [gl.shadowMap]);\n  return null;\n}\n\nexport { BakeShadows };\n", "import { Matrix4, Ray, Sphere, Vector3 } from 'three';\n\nconst _inverseMatrix = /* @__PURE__ */new Matrix4();\nconst _ray = /* @__PURE__ */new Ray();\nconst _sphere = /* @__PURE__ */new Sphere();\nconst _vA = /* @__PURE__ */new Vector3();\nfunction meshBounds(raycaster, intersects) {\n  const geometry = this.geometry;\n  const material = this.material;\n  const matrixWorld = this.matrixWorld;\n  if (material === undefined) return;\n  // Checking boundingSphere distance to ray\n  if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n  _sphere.copy(geometry.boundingSphere);\n  _sphere.applyMatrix4(matrixWorld);\n  if (raycaster.ray.intersectsSphere(_sphere) === false) return;\n  _inverseMatrix.copy(matrixWorld).invert();\n  _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n  // Check boundingBox before continuing\n  if (geometry.boundingBox !== null && _ray.intersectBox(geometry.boundingBox, _vA) === null) return;\n  intersects.push({\n    distance: _vA.distanceTo(raycaster.ray.origin),\n    point: _vA.clone(),\n    object: this\n  });\n}\n\nexport { meshBounds };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveDpr({\n  pixelated\n}) {\n  const gl = useThree(state => state.gl);\n  const active = useThree(state => state.internal.active);\n  const current = useThree(state => state.performance.current);\n  const initialDpr = useThree(state => state.viewport.initialDpr);\n  const setDpr = useThree(state => state.setDpr);\n  // Restore initial pixelratio on unmount\n  React.useEffect(() => {\n    const domElement = gl.domElement;\n    return () => {\n      if (active) setDpr(initialDpr);\n      if (pixelated && domElement) domElement.style.imageRendering = 'auto';\n    };\n  }, []);\n  // Set adaptive pixelratio\n  React.useEffect(() => {\n    setDpr(current * initialDpr);\n    if (pixelated && gl.domElement) gl.domElement.style.imageRendering = current === 1 ? 'auto' : 'pixelated';\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveDpr };\n", "import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  const get = useThree(state => state.get);\n  const setEvents = useThree(state => state.setEvents);\n  const current = useThree(state => state.performance.current);\n  React.useEffect(() => {\n    const enabled = get().events.enabled;\n    return () => setEvents({\n      enabled\n    });\n  }, []);\n  React.useEffect(() => setEvents({\n    enabled: current === 1\n  }), [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };\n", "import * as React from 'react';\nimport { useState, useContext, useRef, useLayoutEffect, createContext } from 'react';\nimport { useFrame } from '@react-three/fiber';\n\nconst context = /* @__PURE__ */createContext(null);\nfunction PerformanceMonitor({\n  iterations = 10,\n  ms = 250,\n  threshold = 0.75,\n  step = 0.1,\n  factor: _factor = 0.5,\n  flipflops = Infinity,\n  bounds = refreshrate => refreshrate > 100 ? [60, 100] : [40, 60],\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback,\n  children\n}) {\n  const decimalPlacesRatio = Math.pow(10, 0);\n  const [api, _] = useState(() => ({\n    fps: 0,\n    index: 0,\n    factor: _factor,\n    flipped: 0,\n    refreshrate: 0,\n    fallback: false,\n    frames: [],\n    averages: [],\n    subscriptions: new Map(),\n    subscribe: ref => {\n      const key = Symbol();\n      api.subscriptions.set(key, ref.current);\n      return () => void api.subscriptions.delete(key);\n    }\n  }));\n  let lastFactor = 0;\n  useFrame(() => {\n    const {\n      frames,\n      averages\n    } = api;\n\n    // If the fallback has been reached do not continue running samples\n    if (api.fallback) return;\n    if (averages.length < iterations) {\n      frames.push(performance.now());\n      const msPassed = frames[frames.length - 1] - frames[0];\n      if (msPassed >= ms) {\n        api.fps = Math.round(frames.length / msPassed * 1000 * decimalPlacesRatio) / decimalPlacesRatio;\n        api.refreshrate = Math.max(api.refreshrate, api.fps);\n        averages[api.index++ % iterations] = api.fps;\n        if (averages.length === iterations) {\n          const [lower, upper] = bounds(api.refreshrate);\n          const upperBounds = averages.filter(value => value >= upper);\n          const lowerBounds = averages.filter(value => value < lower);\n          // Trigger incline when more than -threshold- avgs exceed the upper bound\n          if (upperBounds.length > iterations * threshold) {\n            api.factor = Math.min(1, api.factor + step);\n            api.flipped++;\n            if (onIncline) onIncline(api);\n            api.subscriptions.forEach(value => value.onIncline && value.onIncline(api));\n          }\n          // Trigger decline when more than -threshold- avgs are below the lower bound\n          if (lowerBounds.length > iterations * threshold) {\n            api.factor = Math.max(0, api.factor - step);\n            api.flipped++;\n            if (onDecline) onDecline(api);\n            api.subscriptions.forEach(value => value.onDecline && value.onDecline(api));\n          }\n          if (lastFactor !== api.factor) {\n            lastFactor = api.factor;\n            if (onChange) onChange(api);\n            api.subscriptions.forEach(value => value.onChange && value.onChange(api));\n          }\n          if (api.flipped > flipflops && !api.fallback) {\n            api.fallback = true;\n            if (onFallback) onFallback(api);\n            api.subscriptions.forEach(value => value.onFallback && value.onFallback(api));\n          }\n          api.averages = [];\n\n          // Resetting the refreshrate creates more problems than it solves atm\n          // api.refreshrate = 0\n        }\n        api.frames = [];\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children);\n}\nfunction usePerformanceMonitor({\n  onIncline,\n  onDecline,\n  onChange,\n  onFallback\n}) {\n  const api = useContext(context);\n  const ref = useRef({\n    onIncline,\n    onDecline,\n    onChange,\n    onFallback\n  });\n  useLayoutEffect(() => {\n    ref.current.onIncline = onIncline;\n    ref.current.onDecline = onDecline;\n    ref.current.onChange = onChange;\n    ref.current.onFallback = onFallback;\n  }, [onIncline, onDecline, onChange, onFallback]);\n  useLayoutEffect(() => api.subscribe(ref), [api]);\n}\n\nexport { PerformanceMonitor, usePerformanceMonitor };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nimport { useFBO } from './Fbo.js';\n\nconst RenderTexture = /* @__PURE__ */React.forwardRef(({\n  children,\n  compute,\n  width,\n  height,\n  samples = 8,\n  renderPriority = 0,\n  eventPriority = 0,\n  frames = Infinity,\n  stencilBuffer = false,\n  depthBuffer = true,\n  generateMipmaps = false,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const fbo = useFBO((width || size.width) * viewport.dpr, (height || size.height) * viewport.dpr, {\n    samples,\n    stencilBuffer,\n    depthBuffer,\n    generateMipmaps\n  });\n  const [vScene] = React.useState(() => new THREE.Scene());\n  const uvCompute = React.useCallback((event, state, previous) => {\n    var _fbo$texture, _previous$previousRoo;\n    // Since this is only a texture it does not have an easy way to obtain the parent, which we\n    // need to transform event coordinates to local coordinates. We use r3f internals to find the\n    // next Object3D.\n    let parent = (_fbo$texture = fbo.texture) == null ? void 0 : _fbo$texture.__r3f.parent;\n    while (parent && !(parent instanceof THREE.Object3D)) {\n      parent = parent.__r3f.parent;\n    }\n    if (!parent) return false;\n    // First we call the previous state-onion-layers compute, this is what makes it possible to nest portals\n    if (!previous.raycaster.camera) previous.events.compute(event, previous, (_previous$previousRoo = previous.previousRoot) == null ? void 0 : _previous$previousRoo.getState());\n    // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n    const [intersection] = previous.raycaster.intersectObject(parent);\n    if (!intersection) return false;\n    // We take that hits uv coords, set up this layers raycaster, et voilà, we have raycasting on arbitrary surfaces\n    const uv = intersection.uv;\n    if (!uv) return false;\n    state.raycaster.setFromCamera(state.pointer.set(uv.x * 2 - 1, uv.y * 2 - 1), state.camera);\n  }, []);\n  React.useImperativeHandle(forwardRef, () => fbo.texture, [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(/*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    fbo: fbo\n  }, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  })), vScene, {\n    events: {\n      compute: compute || uvCompute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)));\n});\n\n// The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  fbo\n}) {\n  let count = 0;\n  let oldAutoClear;\n  let oldXrEnabled;\n  let oldRenderTarget;\n  let oldIsPresenting;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      oldAutoClear = state.gl.autoClear;\n      oldXrEnabled = state.gl.xr.enabled;\n      oldRenderTarget = state.gl.getRenderTarget();\n      oldIsPresenting = state.gl.xr.isPresenting;\n      state.gl.autoClear = true;\n      state.gl.xr.enabled = false;\n      state.gl.xr.isPresenting = false;\n      state.gl.setRenderTarget(fbo);\n      state.gl.render(state.scene, state.camera);\n      state.gl.setRenderTarget(oldRenderTarget);\n      state.gl.autoClear = oldAutoClear;\n      state.gl.xr.enabled = oldXrEnabled;\n      state.gl.xr.isPresenting = oldIsPresenting;\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nconst RenderCubeTexture = /* @__PURE__ */React.forwardRef(({\n  children,\n  compute,\n  renderPriority = -1,\n  eventPriority = 0,\n  frames = Infinity,\n  stencilBuffer = false,\n  depthBuffer = true,\n  generateMipmaps = false,\n  resolution = 896,\n  near = 0.1,\n  far = 1000,\n  flip = false,\n  position,\n  rotation,\n  scale,\n  quaternion,\n  matrix,\n  matrixAutoUpdate,\n  ...props\n}, forwardRef) => {\n  const {\n    size,\n    viewport\n  } = useThree();\n  const camera = React.useRef(null);\n  const fbo = React.useMemo(() => {\n    const fbo = new THREE.WebGLCubeRenderTarget(Math.max((resolution || size.width) * viewport.dpr, (resolution || size.height) * viewport.dpr), {\n      stencilBuffer,\n      depthBuffer,\n      generateMipmaps\n    });\n    fbo.texture.isRenderTargetTexture = !flip;\n    fbo.texture.flipY = true;\n    fbo.texture.type = THREE.HalfFloatType;\n    return fbo;\n  }, [resolution, flip]);\n  React.useEffect(() => {\n    return () => fbo.dispose();\n  }, [fbo]);\n  const [vScene] = React.useState(() => new THREE.Scene());\n  React.useImperativeHandle(forwardRef, () => ({\n    scene: vScene,\n    fbo,\n    camera: camera.current\n  }), [fbo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal(/*#__PURE__*/React.createElement(Container, {\n    renderPriority: renderPriority,\n    frames: frames,\n    camera: camera\n  }, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  })), vScene, {\n    events: {\n      compute,\n      priority: eventPriority\n    }\n  }), /*#__PURE__*/React.createElement(\"primitive\", _extends({\n    object: fbo.texture\n  }, props)), /*#__PURE__*/React.createElement(\"cubeCamera\", {\n    ref: camera,\n    args: [near, far, fbo],\n    position: position,\n    rotation: rotation,\n    scale: scale,\n    quaternion: quaternion,\n    matrix: matrix,\n    matrixAutoUpdate: matrixAutoUpdate\n  }));\n});\n\n// The container component has to be separate, it can not be inlined because \"useFrame(state\" when run inside createPortal will return\n// the portals own state which includes user-land overrides (custom cameras etc), but if it is executed in <RenderTexture>'s render function\n// it would return the default state.\nfunction Container({\n  frames,\n  renderPriority,\n  children,\n  camera\n}) {\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      camera.current.update(state.gl, state.scene);\n      count++;\n    }\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\n\nexport { RenderCubeTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\n\nconst Mask = /* @__PURE__ */React.forwardRef(({\n  id = 1,\n  colorWrite = false,\n  depthWrite = false,\n  ...props\n}, fref) => {\n  const ref = React.useRef(null);\n  const spread = React.useMemo(() => ({\n    colorWrite,\n    depthWrite,\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: THREE.AlwaysStencilFunc,\n    stencilFail: THREE.ReplaceStencilOp,\n    stencilZFail: THREE.ReplaceStencilOp,\n    stencilZPass: THREE.ReplaceStencilOp\n  }), [id, colorWrite, depthWrite]);\n  React.useLayoutEffect(() => {\n    Object.assign(ref.current.material, spread);\n  });\n  React.useImperativeHandle(fref, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    renderOrder: -id\n  }, props));\n});\nfunction useMask(id, inverse = false) {\n  return {\n    stencilWrite: true,\n    stencilRef: id,\n    stencilFunc: inverse ? THREE.NotEqualStencilFunc : THREE.EqualStencilFunc,\n    stencilFail: THREE.KeepStencilOp,\n    stencilZFail: THREE.KeepStencilOp,\n    stencilZPass: THREE.KeepStencilOp\n  };\n}\n\nexport { Mask, useMask };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { RenderCubeTexture } from './RenderCubeTexture.js';\n\nfunction Fisheye({\n  renderPriority = 1,\n  zoom = 0,\n  segments = 64,\n  children,\n  resolution = 896,\n  ...props\n}) {\n  const sphere = React.useRef(null);\n  const cubeApi = React.useRef(null);\n\n  // This isn't more than a simple sphere and a fixed orthographc camera\n  // pointing at it. A virtual scene is portalled into the environment map\n  // of its material. The cube-camera filming that scene is being synced to\n  // the portals default camera with the <UpdateCubeCamera> component.\n\n  const {\n    width,\n    height\n  } = useThree(state => state.size);\n  const [orthoC] = React.useState(() => new THREE.OrthographicCamera());\n  React.useLayoutEffect(() => {\n    orthoC.position.set(0, 0, 100);\n    orthoC.zoom = 100;\n    orthoC.left = width / -2;\n    orthoC.right = width / 2;\n    orthoC.top = height / 2;\n    orthoC.bottom = height / -2;\n    orthoC.updateProjectionMatrix();\n  }, [width, height]);\n  const radius = Math.sqrt(width * width + height * height) / 100 * (0.5 + zoom / 2);\n  const normal = new THREE.Vector3();\n  const sph = new THREE.Sphere(new THREE.Vector3(), radius);\n  const normalMatrix = new THREE.Matrix3();\n  const compute = React.useCallback((event, state, prev) => {\n    // Raycast from the render camera to the sphere and get the surface normal\n    // of the point hit in world space of the sphere scene\n    // We have to set the raycaster using the orthocam and pointer\n    // to perform sphere interscetions.\n    state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n    state.raycaster.setFromCamera(state.pointer, orthoC);\n    if (!state.raycaster.ray.intersectSphere(sph, normal)) return;else normal.normalize();\n    // Get the matrix for transforming normals into world space\n    normalMatrix.getNormalMatrix(cubeApi.current.camera.matrixWorld);\n    // Get the ray\n    cubeApi.current.camera.getWorldPosition(state.raycaster.ray.origin);\n    state.raycaster.ray.direction.set(0, 0, 1).reflect(normal);\n    state.raycaster.ray.direction.x *= -1; // flip across X to accommodate the \"flip\" of the env map\n    state.raycaster.ray.direction.applyNormalMatrix(normalMatrix).multiplyScalar(-1);\n    return undefined;\n  }, []);\n  useFrame(state => {\n    // Take over rendering\n    if (renderPriority) state.gl.render(sphere.current, orthoC);\n  }, renderPriority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: sphere\n  }, props, {\n    scale: radius\n  }), /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", null, /*#__PURE__*/React.createElement(RenderCubeTexture, {\n    compute: compute,\n    attach: \"envMap\",\n    flip: true,\n    resolution: resolution,\n    ref: cubeApi\n  }, children, /*#__PURE__*/React.createElement(UpdateCubeCamera, {\n    api: cubeApi\n  })))));\n}\nfunction UpdateCubeCamera({\n  api\n}) {\n  const t = new THREE.Vector3();\n  const r = new THREE.Quaternion();\n  const s = new THREE.Vector3();\n  const e = new THREE.Euler(0, Math.PI, 0);\n  useFrame(state => {\n    // Read out the cameras whereabouts, state.camera is the one *within* the portal\n    state.camera.matrixWorld.decompose(t, r, s);\n    // Apply its position and rotation, flip the Y axis\n    api.current.camera.position.copy(t);\n    api.current.camera.quaternion.setFromEuler(e).premultiply(r);\n  });\n  return null;\n}\n\nexport { Fisheye };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { useIntersect } from './useIntersect.js';\nimport { useFBO } from './Fbo.js';\nimport { RenderTexture } from './RenderTexture.js';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { FullScreenQuad } from 'three-stdlib';\nimport { version } from '../helpers/constants.js';\n\nconst PortalMaterialImpl = /* @__PURE__ */shaderMaterial({\n  blur: 0,\n  map: null,\n  sdf: null,\n  blend: 0,\n  size: 0,\n  resolution: /* @__PURE__ */new THREE.Vector2()\n}, `varying vec2 vUv;\n   void main() {\n     gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n     vUv = uv;\n   }`, `uniform sampler2D sdf;\n   uniform sampler2D map;\n   uniform float blur;\n   uniform float size;\n   uniform float time;\n   uniform vec2 resolution;\n   varying vec2 vUv;\n   #include <packing>\n   void main() {\n     vec2 uv = gl_FragCoord.xy / resolution.xy;\n     vec4 t = texture2D(map, uv);\n     float k = blur;\n     float d = texture2D(sdf, vUv).r/size;\n     float alpha = 1.0 - smoothstep(0.0, 1.0, clamp(d/k + 1.0, 0.0, 1.0));\n     gl_FragColor = vec4(t.rgb, blur == 0.0 ? t.a : t.a * alpha);\n     #include <tonemapping_fragment>\n     #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n   }`);\nconst MeshPortalMaterial = /* @__PURE__ */React.forwardRef(({\n  children,\n  events = undefined,\n  blur = 0,\n  eventPriority = 0,\n  renderPriority = 0,\n  worldUnits = false,\n  resolution = 512,\n  ...props\n}, fref) => {\n  extend({\n    PortalMaterialImpl\n  });\n  const ref = React.useRef(null);\n  const {\n    scene,\n    gl,\n    size,\n    viewport,\n    setEvents\n  } = useThree();\n  const maskRenderTarget = useFBO(resolution, resolution);\n  const [priority, setPriority] = React.useState(0);\n  useFrame(() => {\n    // If blend is > 0 then the portal is being entered, the render-priority must change\n    const p = ref.current.blend > 0 ? Math.max(1, renderPriority) : 0;\n    if (priority !== p) setPriority(p);\n  });\n  React.useEffect(() => {\n    if (events !== undefined) setEvents({\n      enabled: !events\n    });\n  }, [events]);\n  const [visible, setVisible] = React.useState(true);\n  // See if the parent mesh is in the camera frustum\n  const parent = useIntersect(setVisible);\n  React.useLayoutEffect(() => {\n    var _ref$current;\n    // Since the ref above is not tied to a mesh directly (we're inside a material),\n    // it has to be tied to the parent mesh here\n    parent.current = (_ref$current = ref.current) == null ? void 0 : _ref$current.__r3f.parent;\n  }, []);\n  React.useLayoutEffect(() => {\n    if (!parent.current) return;\n\n    // Apply the SDF mask only once\n    if (blur && ref.current.sdf === null) {\n      const tempMesh = new THREE.Mesh(parent.current.geometry, new THREE.MeshBasicMaterial());\n      const boundingBox = new THREE.Box3().setFromBufferAttribute(tempMesh.geometry.attributes.position);\n      const orthoCam = new THREE.OrthographicCamera(boundingBox.min.x * (1 + 2 / resolution), boundingBox.max.x * (1 + 2 / resolution), boundingBox.max.y * (1 + 2 / resolution), boundingBox.min.y * (1 + 2 / resolution), 0.1, 1000);\n      orthoCam.position.set(0, 0, 1);\n      orthoCam.lookAt(0, 0, 0);\n      gl.setRenderTarget(maskRenderTarget);\n      gl.render(tempMesh, orthoCam);\n      const sg = makeSDFGenerator(resolution, resolution, gl);\n      const sdf = sg(maskRenderTarget.texture);\n      const readSdf = new Float32Array(resolution * resolution);\n      gl.readRenderTargetPixels(sdf, 0, 0, resolution, resolution, readSdf);\n      // Get smallest value in sdf\n      let min = Infinity;\n      for (let i = 0; i < readSdf.length; i++) {\n        if (readSdf[i] < min) min = readSdf[i];\n      }\n      min = -min;\n      ref.current.size = min;\n      ref.current.sdf = sdf.texture;\n      gl.setRenderTarget(null);\n    }\n  }, [resolution, blur]);\n  React.useImperativeHandle(fref, () => ref.current);\n  const compute = React.useCallback((event, state, previous) => {\n    var _ref$current2;\n    if (!parent.current) return false;\n    state.pointer.set(event.offsetX / state.size.width * 2 - 1, -(event.offsetY / state.size.height) * 2 + 1);\n    state.raycaster.setFromCamera(state.pointer, state.camera);\n    if (((_ref$current2 = ref.current) == null ? void 0 : _ref$current2.blend) === 0) {\n      // We run a quick check against the parent, if it isn't hit there's no need to raycast at all\n      const [intersection] = state.raycaster.intersectObject(parent.current);\n      if (!intersection) {\n        // Cancel out the raycast camera if the parent mesh isn't hit\n        state.raycaster.camera = undefined;\n        return false;\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"portalMaterialImpl\", _extends({\n    ref: ref,\n    blur: blur,\n    blend: 0,\n    resolution: [size.width * viewport.dpr, size.height * viewport.dpr],\n    attach: \"material\"\n  }, props), /*#__PURE__*/React.createElement(RenderTexture, {\n    attach: \"map\",\n    frames: visible ? Infinity : 0,\n    eventPriority: eventPriority,\n    renderPriority: renderPriority,\n    compute: compute\n  }, children, /*#__PURE__*/React.createElement(ManagePortalScene, {\n    events: events,\n    rootScene: scene,\n    priority: priority,\n    material: ref,\n    worldUnits: worldUnits\n  })));\n});\nfunction ManagePortalScene({\n  events = undefined,\n  rootScene,\n  material,\n  priority,\n  worldUnits\n}) {\n  const scene = useThree(state => state.scene);\n  const setEvents = useThree(state => state.setEvents);\n  const buffer1 = useFBO();\n  const buffer2 = useFBO();\n  React.useLayoutEffect(() => {\n    scene.matrixAutoUpdate = false;\n  }, []);\n  React.useEffect(() => {\n    if (events !== undefined) setEvents({\n      enabled: events\n    });\n  }, [events]);\n  const [quad, blend] = React.useMemo(() => {\n    // This fullscreen-quad is used to blend the two textures\n    const blend = {\n      value: 0\n    };\n    const quad = new FullScreenQuad(new THREE.ShaderMaterial({\n      uniforms: {\n        a: {\n          value: buffer1.texture\n        },\n        b: {\n          value: buffer2.texture\n        },\n        blend\n      },\n      vertexShader: /*glsl*/`\n          varying vec2 vUv;\n          void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n          }`,\n      fragmentShader: /*glsl*/`\n          uniform sampler2D a;\n          uniform sampler2D b;\n          uniform float blend;\n          varying vec2 vUv;\n          #include <packing>\n          void main() {\n            vec4 ta = texture2D(a, vUv);\n            vec4 tb = texture2D(b, vUv);\n            gl_FragColor = mix(tb, ta, blend);\n            #include <tonemapping_fragment>\n            #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n          }`\n    }));\n    return [quad, blend];\n  }, []);\n  useFrame(state => {\n    var _material$current;\n    let parent = material == null || (_material$current = material.current) == null ? void 0 : _material$current.__r3f.parent;\n    if (parent) {\n      // Move portal contents along with the parent if worldUnits is true\n      if (!worldUnits) {\n        var _material$current2;\n        // If the portal renders exclusively the original scene needs to be updated\n        if (priority && ((_material$current2 = material.current) == null ? void 0 : _material$current2.blend) === 1) parent.updateWorldMatrix(true, false);\n        scene.matrixWorld.copy(parent.matrixWorld);\n      } else scene.matrixWorld.identity();\n\n      // This bit is only necessary if the portal is blended, now it has a render-priority\n      // and will take over the render loop\n      if (priority) {\n        var _material$current3, _material$current4, _material$current5;\n        if (((_material$current3 = material.current) == null ? void 0 : _material$current3.blend) > 0 && ((_material$current4 = material.current) == null ? void 0 : _material$current4.blend) < 1) {\n          // If blend is ongoing (> 0 and < 1) then we need to render both the root scene\n          // and the portal scene, both will then be mixed in the quad from above\n          blend.value = material.current.blend;\n          state.gl.setRenderTarget(buffer1);\n          state.gl.render(scene, state.camera);\n          state.gl.setRenderTarget(buffer2);\n          state.gl.render(rootScene, state.camera);\n          state.gl.setRenderTarget(null);\n          quad.render(state.gl);\n        } else if (((_material$current5 = material.current) == null ? void 0 : _material$current5.blend) === 1) {\n          // However if blend is 1 we only need to render the portal scene\n          state.gl.render(scene, state.camera);\n        }\n      }\n    }\n  }, priority);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\nconst makeSDFGenerator = (clientWidth, clientHeight, renderer) => {\n  let finalTarget = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.LinearMipmapLinearFilter,\n    magFilter: THREE.LinearFilter,\n    type: THREE.FloatType,\n    format: THREE.RedFormat,\n    generateMipmaps: true\n  });\n  let outsideRenderTarget = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let insideRenderTarget = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let outsideRenderTarget2 = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let insideRenderTarget2 = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter\n  });\n  let outsideRenderTargetFinal = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter,\n    type: THREE.FloatType,\n    format: THREE.RedFormat\n  });\n  let insideRenderTargetFinal = new THREE.WebGLRenderTarget(clientWidth, clientHeight, {\n    minFilter: THREE.NearestFilter,\n    magFilter: THREE.NearestFilter,\n    type: THREE.FloatType,\n    format: THREE.RedFormat\n  });\n  const uvRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        uniform sampler2D tex;\n        varying vec2 vUv;\n        #include <packing>\n        void main() {\n          gl_FragColor = pack2HalfToRGBA(vUv * (round(texture2D(tex, vUv).x)));\n        }`\n  }));\n  const uvRenderInside = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        uniform sampler2D tex;\n        varying vec2 vUv;\n        #include <packing>\n        void main() {\n          gl_FragColor = pack2HalfToRGBA(vUv * (1.0 - round(texture2D(tex, vUv).x)));\n        }`\n  }));\n  const jumpFloodRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      },\n      offset: {\n        value: 0.0\n      },\n      level: {\n        value: 0.0\n      },\n      maxSteps: {\n        value: 0.0\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        varying vec2 vUv;\n        uniform sampler2D tex;\n        uniform float offset;\n        uniform float level;\n        uniform float maxSteps;\n        #include <packing>\n        void main() {\n          float closestDist = 9999999.9;\n          vec2 closestPos = vec2(0.0);\n          for (float x = -1.0; x <= 1.0; x += 1.0) {\n            for (float y = -1.0; y <= 1.0; y += 1.0) {\n              vec2 voffset = vUv;\n              voffset += vec2(x, y) * vec2(${1 / clientWidth}, ${1 / clientHeight}) * offset;\n              vec2 pos = unpackRGBATo2Half(texture2D(tex, voffset));\n              float dist = distance(pos.xy, vUv);\n              if(pos.x != 0.0 && pos.y != 0.0 && dist < closestDist) {\n                closestDist = dist;\n                closestPos = pos;\n              }\n            }\n          }\n          gl_FragColor = pack2HalfToRGBA(closestPos);\n        }`\n  }));\n  const distanceFieldRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      tex: {\n        value: null\n      },\n      size: {\n        value: new THREE.Vector2(clientWidth, clientHeight)\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        varying vec2 vUv;\n        uniform sampler2D tex;\n        uniform vec2 size;\n        #include <packing>\n        void main() {\n          gl_FragColor = vec4(distance(size * unpackRGBATo2Half(texture2D(tex, vUv)), size * vUv), 0.0, 0.0, 0.0);\n        }`\n  }));\n  const compositeRender = new FullScreenQuad(new THREE.ShaderMaterial({\n    uniforms: {\n      inside: {\n        value: insideRenderTargetFinal.texture\n      },\n      outside: {\n        value: outsideRenderTargetFinal.texture\n      },\n      tex: {\n        value: null\n      }\n    },\n    vertexShader: /*glsl*/`\n        varying vec2 vUv;\n        void main() {\n          vUv = uv;\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n        }`,\n    fragmentShader: /*glsl*/`\n        varying vec2 vUv;\n        uniform sampler2D inside;\n        uniform sampler2D outside;\n        uniform sampler2D tex;\n        #include <packing>\n        void main() {\n          float i = texture2D(inside, vUv).x;\n          float o =texture2D(outside, vUv).x;\n          if (texture2D(tex, vUv).x == 0.0) {\n            gl_FragColor = vec4(o, 0.0, 0.0, 0.0);\n          } else {\n            gl_FragColor = vec4(-i, 0.0, 0.0, 0.0);\n          }\n        }`\n  }));\n  return image => {\n    let ft = finalTarget;\n    image.minFilter = THREE.NearestFilter;\n    image.magFilter = THREE.NearestFilter;\n    uvRender.material.uniforms.tex.value = image;\n    renderer.setRenderTarget(outsideRenderTarget);\n    uvRender.render(renderer);\n    const passes = Math.ceil(Math.log(Math.max(clientWidth, clientHeight)) / Math.log(2.0));\n    let lastTarget = outsideRenderTarget;\n    let target = null;\n    for (let i = 0; i < passes; i++) {\n      const offset = Math.pow(2, passes - i - 1);\n      target = lastTarget === outsideRenderTarget ? outsideRenderTarget2 : outsideRenderTarget;\n      jumpFloodRender.material.uniforms.level.value = i;\n      jumpFloodRender.material.uniforms.maxSteps.value = passes;\n      jumpFloodRender.material.uniforms.offset.value = offset;\n      jumpFloodRender.material.uniforms.tex.value = lastTarget.texture;\n      renderer.setRenderTarget(target);\n      jumpFloodRender.render(renderer);\n      lastTarget = target;\n    }\n    renderer.setRenderTarget(outsideRenderTargetFinal);\n    distanceFieldRender.material.uniforms.tex.value = target.texture;\n    distanceFieldRender.render(renderer);\n    uvRenderInside.material.uniforms.tex.value = image;\n    renderer.setRenderTarget(insideRenderTarget);\n    uvRenderInside.render(renderer);\n    lastTarget = insideRenderTarget;\n    for (let i = 0; i < passes; i++) {\n      const offset = Math.pow(2, passes - i - 1);\n      target = lastTarget === insideRenderTarget ? insideRenderTarget2 : insideRenderTarget;\n      jumpFloodRender.material.uniforms.level.value = i;\n      jumpFloodRender.material.uniforms.maxSteps.value = passes;\n      jumpFloodRender.material.uniforms.offset.value = offset;\n      jumpFloodRender.material.uniforms.tex.value = lastTarget.texture;\n      renderer.setRenderTarget(target);\n      jumpFloodRender.render(renderer);\n      lastTarget = target;\n    }\n    renderer.setRenderTarget(insideRenderTargetFinal);\n    distanceFieldRender.material.uniforms.tex.value = target.texture;\n    distanceFieldRender.render(renderer);\n    renderer.setRenderTarget(ft);\n    compositeRender.material.uniforms.tex.value = image;\n    compositeRender.render(renderer);\n    renderer.setRenderTarget(null);\n    return ft;\n  };\n};\n\nexport { MeshPortalMaterial };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { context, useThree, createPortal, useFrame } from '@react-three/fiber';\nimport tunnel from 'tunnel-rat';\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst col = /* @__PURE__ */new THREE.Color();\nconst tracked = /* @__PURE__ */tunnel();\n\n/**\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\n * information. After `v8.1.0`, position information (`top`, `left`) was added\n *\n * @todo remove this when drei supports v9 and up\n */\n\nfunction isNonLegacyCanvasSize(size) {\n  return 'top' in size;\n}\nfunction computeContainerPosition(canvasSize, trackRect) {\n  const {\n    right,\n    top,\n    left: trackLeft,\n    bottom: trackBottom,\n    width,\n    height\n  } = trackRect;\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\n  if (isNonLegacyCanvasSize(canvasSize)) {\n    const canvasBottom = canvasSize.top + canvasSize.height;\n    const bottom = canvasBottom - trackBottom;\n    const left = trackLeft - canvasSize.left;\n    return {\n      position: {\n        width,\n        height,\n        left,\n        top,\n        bottom,\n        right\n      },\n      isOffscreen\n    };\n  }\n  // Fall back on old behavior if r3f < 8.1.0\n  const bottom = canvasSize.height - trackBottom;\n  return {\n    position: {\n      width,\n      height,\n      top,\n      left: trackLeft,\n      bottom,\n      right\n    },\n    isOffscreen\n  };\n}\nfunction prepareSkissor(state, {\n  left,\n  bottom,\n  width,\n  height\n}) {\n  let autoClear;\n  const aspect = width / height;\n  if (isOrthographicCamera(state.camera)) {\n    if (!state.camera.manual) {\n      if (state.camera.left !== width / -2 || state.camera.right !== width / 2 || state.camera.top !== height / 2 || state.camera.bottom !== height / -2) {\n        Object.assign(state.camera, {\n          left: width / -2,\n          right: width / 2,\n          top: height / 2,\n          bottom: height / -2\n        });\n        state.camera.updateProjectionMatrix();\n      }\n    } else {\n      state.camera.updateProjectionMatrix();\n    }\n  } else if (state.camera.aspect !== aspect) {\n    state.camera.aspect = aspect;\n    state.camera.updateProjectionMatrix();\n  }\n  autoClear = state.gl.autoClear;\n  state.gl.autoClear = false;\n  state.gl.setViewport(left, bottom, width, height);\n  state.gl.setScissor(left, bottom, width, height);\n  state.gl.setScissorTest(true);\n  return autoClear;\n}\nfunction finishSkissor(state, autoClear) {\n  // Restore the default state\n  state.gl.setScissorTest(false);\n  state.gl.autoClear = autoClear;\n}\nfunction clear(state) {\n  state.gl.getClearColor(col);\n  state.gl.setClearColor(col, state.gl.getClearAlpha());\n  state.gl.clear(true, true);\n}\nfunction Container({\n  visible = true,\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const rootState = useThree();\n  const [isOffscreen, setOffscreen] = React.useState(false);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n      if (track) rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n    if (rect.current) {\n      const {\n        position,\n        isOffscreen: _isOffscreen\n      } = computeContainerPosition(canvasSize, rect.current);\n      if (isOffscreen !== _isOffscreen) setOffscreen(_isOffscreen);\n      if (visible && !isOffscreen && rect.current) {\n        const autoClear = prepareSkissor(state, position);\n        // When children are present render the portalled scene, otherwise the default scene\n        state.gl.render(children ? state.scene : scene, state.camera);\n        finishSkissor(state, autoClear);\n      }\n    }\n  }, index);\n  React.useLayoutEffect(() => {\n    const curRect = rect.current;\n    if (curRect && (!visible || !isOffscreen)) {\n      // If the view is not visible clear it once, but stop rendering afterwards!\n      const {\n        position\n      } = computeContainerPosition(canvasSize, curRect);\n      const autoClear = prepareSkissor(rootState, position);\n      clear(rootState);\n      finishSkissor(rootState, autoClear);\n    }\n  }, [visible, isOffscreen]);\n  React.useEffect(() => {\n    if (!track) return;\n    const curRect = rect.current;\n    // Connect the event layer to the tracking element\n    const old = rootState.get().events.connected;\n    rootState.setEvents({\n      connected: track.current\n    });\n    return () => {\n      if (curRect) {\n        const {\n          position\n        } = computeContainerPosition(canvasSize, curRect);\n        const autoClear = prepareSkissor(rootState, position);\n        clear(rootState);\n        finishSkissor(rootState, autoClear);\n      }\n      rootState.setEvents({\n        connected: old\n      });\n    };\n  }, [track]);\n  React.useEffect(() => {\n    if (isNonLegacyCanvasSize(canvasSize)) return;\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  }));\n}\nconst CanvasView = /* @__PURE__ */React.forwardRef(({\n  track,\n  visible = true,\n  index = 1,\n  id,\n  style,\n  className,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  var _rect$current, _rect$current2, _rect$current3, _rect$current4;\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const [ready, toggle] = React.useReducer(() => true, false);\n  const compute = React.useCallback((event, state) => {\n    if (rect.current && track && track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect, track]);\n  React.useEffect(() => {\n    var _track$current2;\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    if (track) rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect();\n    // And now we can proceed\n    toggle();\n  }, [track]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), ready && createPortal(/*#__PURE__*/React.createElement(Container, {\n    visible: visible,\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: (_rect$current = rect.current) == null ? void 0 : _rect$current.width,\n      height: (_rect$current2 = rect.current) == null ? void 0 : _rect$current2.height,\n      // @ts-ignore\n      top: (_rect$current3 = rect.current) == null ? void 0 : _rect$current3.top,\n      // @ts-ignore\n      left: (_rect$current4 = rect.current) == null ? void 0 : _rect$current4.left\n    }\n  }));\n});\nconst HtmlView = /* @__PURE__ */React.forwardRef(({\n  as: El = 'div',\n  id,\n  visible,\n  className,\n  style,\n  index = 1,\n  track,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  const uuid = React.useId();\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref,\n    id: id,\n    className: className,\n    style: style\n  }, props)), /*#__PURE__*/React.createElement(tracked.In, null, /*#__PURE__*/React.createElement(CanvasView, {\n    visible: visible,\n    key: uuid,\n    track: ref,\n    frames: frames,\n    index: index\n  }, children)));\n});\nconst View = /* @__PURE__ */(() => {\n  const _View = /*#__PURE__*/React.forwardRef((props, fref) => {\n    // If we're inside a canvas we should be able to access the context store\n    const store = React.useContext(context);\n    // If that's not the case we render a tunnel\n    if (!store) return /*#__PURE__*/React.createElement(HtmlView, _extends({\n      ref: fref\n    }, props));\n    // Otherwise a plain canvas-view\n    else return /*#__PURE__*/React.createElement(CanvasView, _extends({\n      ref: fref\n    }, props));\n  });\n  _View.Port = () => /*#__PURE__*/React.createElement(tracked.Out, null);\n  return _View;\n})();\n\nexport { View };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { AxisArrow } from './AxisArrow.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { ScalingSphere } from './ScalingSphere.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst mL0 = /* @__PURE__ */new THREE.Matrix4();\nconst mW0 = /* @__PURE__ */new THREE.Matrix4();\nconst mP = /* @__PURE__ */new THREE.Matrix4();\nconst mPInv = /* @__PURE__ */new THREE.Matrix4();\nconst mW = /* @__PURE__ */new THREE.Matrix4();\nconst mL = /* @__PURE__ */new THREE.Matrix4();\nconst mL0Inv = /* @__PURE__ */new THREE.Matrix4();\nconst mdL = /* @__PURE__ */new THREE.Matrix4();\nconst mG = /* @__PURE__ */new THREE.Matrix4();\nconst bb = /* @__PURE__ */new THREE.Box3();\nconst bbObj = /* @__PURE__ */new THREE.Box3();\nconst vCenter = /* @__PURE__ */new THREE.Vector3();\nconst vSize = /* @__PURE__ */new THREE.Vector3();\nconst vAnchorOffset = /* @__PURE__ */new THREE.Vector3();\nconst vPosition = /* @__PURE__ */new THREE.Vector3();\nconst vScale = /* @__PURE__ */new THREE.Vector3();\nconst xDir = /* @__PURE__ */new THREE.Vector3(1, 0, 0);\nconst yDir = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst zDir = /* @__PURE__ */new THREE.Vector3(0, 0, 1);\nconst PivotControls = /* @__PURE__ */React.forwardRef(({\n  enabled = true,\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  disableScaling = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  scaleLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  annotations = false,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children,\n  ...props\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  const cameraScale = React.useRef(new THREE.Vector3(1, 1, 1));\n  const gizmoScale = React.useRef(new THREE.Vector3(1, 1, 1));\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert();\n      // After applying the delta\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) {\n        ref.current.matrix.copy(mL);\n      }\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    depthTest,\n    userData,\n    annotations,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, scaleLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, userData, autoTransform, annotations, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n      cameraScale.current.setScalar(sf);\n    }\n    if (matrix && matrix instanceof THREE.Matrix4) {\n      ref.current.matrix = matrix;\n    }\n    // Update gizmo scale in accordance with matrix changes\n    // Without this, there might be noticable turbulences if scaling happens fast enough\n    ref.current.updateWorldMatrix(true, true);\n    mG.makeRotationFromEuler(gizmoRef.current.rotation).setPosition(gizmoRef.current.position).premultiply(ref.current.matrixWorld);\n    gizmoScale.current.setFromMatrixScale(mG);\n    vScale.copy(cameraScale.current).divide(gizmoScale.current);\n    if (Math.abs(gizmoRef.current.scale.x - vScale.x) > 1e-4 || Math.abs(gizmoRef.current.scale.y - vScale.y) > 1e-4 || Math.abs(gizmoRef.current.scale.z - vScale.z) > 1e-4) {\n      gizmoRef.current.scale.copy(vScale);\n      state.invalidate();\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, enabled && /*#__PURE__*/React.createElement(React.Fragment, null, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableScaling && activeAxes[0] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 0,\n    direction: xDir\n  }), !disableScaling && activeAxes[1] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 1,\n    direction: yDir\n  }), !disableScaling && activeAxes[2] && /*#__PURE__*/React.createElement(ScalingSphere, {\n    axis: 2,\n    direction: zDir\n  }))), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst AxisArrow = ({\n  direction,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offset0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    clickInfo.current = {\n      clickPoint,\n      dir\n    };\n    offset0.current = translation.current[axis];\n    onDragStart({\n      component: 'Arrow',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, direction, camControls, onDragStart, translation, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir\n      } = clickInfo.current;\n      const [min, max] = (translationLimits == null ? void 0 : translationLimits[axis]) || [undefined, undefined];\n      let offset = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      if (min !== undefined) {\n        offset = Math.max(offset, min - offset0.current);\n      }\n      if (max !== undefined) {\n        offset = Math.min(offset, max - offset0.current);\n      }\n      translation.current[axis] = offset0.current + offset;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[axis].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(dir.x * offset, dir.y * offset, dir.z * offset);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    cylinderLength,\n    coneWidth,\n    coneLength,\n    matrixL\n  } = React.useMemo(() => {\n    const coneWidth = fixed ? lineWidth / scale * 1.6 : scale / 20;\n    const coneLength = fixed ? 0.2 : scale / 5;\n    const cylinderLength = fixed ? 1 - coneLength : scale - coneLength;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      cylinderLength,\n      coneWidth,\n      coneLength,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color_ = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, -coneLength, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: false,\n    position: [0, (cylinderLength + coneLength) / 2.0, 0],\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"cylinderGeometry\", {\n    args: [coneWidth * 1.4, coneWidth * 1.4, cylinderLength + coneLength, 8, 1]\n  })), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: [0, 0, 0, 0, cylinderLength, 0],\n    lineWidth: lineWidth,\n    side: THREE.DoubleSide,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    renderOrder: 1,\n    polygonOffsetFactor: -10,\n    fog: false\n  }), /*#__PURE__*/React.createElement(\"mesh\", {\n    raycast: () => null,\n    position: [0, cylinderLength + coneLength / 2.0, 0],\n    renderOrder: 500\n  }, /*#__PURE__*/React.createElement(\"coneGeometry\", {\n    args: [coneWidth, coneLength, 24, 1]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color_,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }))));\n};\n\nexport { AxisArrow, calculateOffset };\n", "import * as React from 'react';\n\nconst context = /* @__PURE__ */React.createContext(null);\n\nexport { context };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst clickDir = /* @__PURE__ */new THREE.Vector3();\nconst intersectionDir = /* @__PURE__ */new THREE.Vector3();\nconst toDegrees = radians => radians * 180 / Math.PI;\nconst toRadians = degrees => degrees * Math.PI / 180;\nconst calculateAngle = (clickPoint, intersectionPoint, origin, e1, e2) => {\n  clickDir.copy(clickPoint).sub(origin);\n  intersectionDir.copy(intersectionPoint).sub(origin);\n  const dote1e1 = e1.dot(e1);\n  const dote2e2 = e2.dot(e2);\n  const uClick = clickDir.dot(e1) / dote1e1;\n  const vClick = clickDir.dot(e2) / dote2e2;\n  const uIntersection = intersectionDir.dot(e1) / dote1e1;\n  const vIntersection = intersectionDir.dot(e2) / dote2e2;\n  const angleClick = Math.atan2(vClick, uClick);\n  const angleIntersection = Math.atan2(vIntersection, uIntersection);\n  return angleIntersection - angleClick;\n};\nconst fmod = (num, denom) => {\n  let k = Math.floor(num / denom);\n  k = k < 0 ? k + 1 : k;\n  return num - k * denom;\n};\nconst minimizeAngle = angle => {\n  let result = fmod(angle, 2 * Math.PI);\n  if (Math.abs(result) < 1e-6) {\n    return 0.0;\n  }\n  if (result < 0.0) {\n    result += 2 * Math.PI;\n  }\n  return result;\n};\nconst rotMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst posNew = /* @__PURE__ */new THREE.Vector3();\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst AxisRotator = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    rotationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const angle0 = React.useRef(0);\n  const angle = React.useRef(0);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${toDegrees(angle.current).toFixed(0)}º`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      origin,\n      e1,\n      e2,\n      normal,\n      plane\n    };\n    onDragStart({\n      component: 'Rotator',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        origin,\n        e1,\n        e2,\n        normal,\n        plane\n      } = clickInfo.current;\n      const [min, max] = (rotationLimits == null ? void 0 : rotationLimits[axis]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      let deltaAngle = calculateAngle(clickPoint, intersection, origin, e1, e2);\n      let degrees = toDegrees(deltaAngle);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        degrees = Math.round(degrees / 10) * 10;\n        deltaAngle = toRadians(degrees);\n      }\n      if (min !== undefined && max !== undefined && max - min < 2 * Math.PI) {\n        deltaAngle = minimizeAngle(deltaAngle);\n        deltaAngle = deltaAngle > Math.PI ? deltaAngle - 2 * Math.PI : deltaAngle;\n        deltaAngle = THREE.MathUtils.clamp(deltaAngle, min - angle0.current, max - angle0.current);\n        angle.current = angle0.current + deltaAngle;\n      } else {\n        angle.current = minimizeAngle(angle0.current + deltaAngle);\n        angle.current = angle.current > Math.PI ? angle.current - 2 * Math.PI : angle.current;\n      }\n      if (annotations) {\n        degrees = toDegrees(angle.current);\n        divRef.current.innerText = `${degrees.toFixed(0)}º`;\n      }\n      rotMatrix.makeRotationAxis(normal, deltaAngle);\n      posNew.copy(origin).applyMatrix4(rotMatrix).sub(origin).negate();\n      rotMatrix.setPosition(posNew);\n      onDrag(rotMatrix);\n    }\n  }, [annotations, onDrag, isHovered, rotationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    angle0.current = angle.current;\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const r = fixed ? 0.65 : scale * 0.65;\n  const arc = React.useMemo(() => {\n    const segments = 32;\n    const points = [];\n    for (let j = 0; j <= segments; j++) {\n      const angle = j * (Math.PI / 2) / segments;\n      points.push(new THREE.Vector3(Math.cos(angle) * r, Math.sin(angle) * r, 0));\n    }\n    return points;\n  }, [r]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [r, r, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(Line, {\n    points: arc,\n    lineWidth: lineWidth * 4,\n    visible: false,\n    userData: userData\n  }), /*#__PURE__*/React.createElement(Line, {\n    transparent: true,\n    raycast: () => null,\n    depthTest: depthTest,\n    points: arc,\n    lineWidth: lineWidth,\n    side: THREE.DoubleSide,\n    color: isHovered ? hoveredColor : axisColors[axis],\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    fog: false\n  }));\n};\n\nexport { AxisRotator };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../../core/Line.js';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\n\nconst decomposeIntoBasis = (e1, e2, offset) => {\n  const i1 = Math.abs(e1.x) >= Math.abs(e1.y) && Math.abs(e1.x) >= Math.abs(e1.z) ? 0 : Math.abs(e1.y) >= Math.abs(e1.x) && Math.abs(e1.y) >= Math.abs(e1.z) ? 1 : 2;\n  const e2DegrowthOrder = [0, 1, 2].sort((a, b) => Math.abs(e2.getComponent(b)) - Math.abs(e2.getComponent(a)));\n  const i2 = i1 === e2DegrowthOrder[0] ? e2DegrowthOrder[1] : e2DegrowthOrder[0];\n  const a1 = e1.getComponent(i1);\n  const a2 = e1.getComponent(i2);\n  const b1 = e2.getComponent(i1);\n  const b2 = e2.getComponent(i2);\n  const c1 = offset.getComponent(i1);\n  const c2 = offset.getComponent(i2);\n  const y = (c2 - c1 * (a2 / a1)) / (b2 - b1 * (a2 / a1));\n  const x = (c1 - y * b1) / a1;\n  return [x, y];\n};\nconst ray = /* @__PURE__ */new THREE.Ray();\nconst intersection = /* @__PURE__ */new THREE.Vector3();\nconst offsetMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst PlaneSlider = ({\n  dir1,\n  dir2,\n  axis\n}) => {\n  const {\n    translation,\n    translationLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const clickInfo = React.useRef(null);\n  const offsetX0 = React.useRef(0);\n  const offsetY0 = React.useRef(0);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const e1 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 0).normalize();\n    const e2 = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 1).normalize();\n    const normal = new THREE.Vector3().setFromMatrixColumn(objRef.current.matrixWorld, 2).normalize();\n    const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(normal, origin);\n    clickInfo.current = {\n      clickPoint,\n      e1,\n      e2,\n      plane\n    };\n    offsetX0.current = translation.current[(axis + 1) % 3];\n    offsetY0.current = translation.current[(axis + 2) % 3];\n    onDragStart({\n      component: 'Slider',\n      axis,\n      origin,\n      directions: [e1, e2, normal]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragStart, axis]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        e1,\n        e2,\n        plane\n      } = clickInfo.current;\n      const [minX, maxX] = (translationLimits == null ? void 0 : translationLimits[(axis + 1) % 3]) || [undefined, undefined];\n      const [minY, maxY] = (translationLimits == null ? void 0 : translationLimits[(axis + 2) % 3]) || [undefined, undefined];\n      ray.copy(e.ray);\n      ray.intersectPlane(plane, intersection);\n      ray.direction.negate();\n      ray.intersectPlane(plane, intersection);\n      intersection.sub(clickPoint);\n      let [offsetX, offsetY] = decomposeIntoBasis(e1, e2, intersection);\n      /* let offsetY = (intersection.y - (intersection.x * e1.y) / e1.x) / (e2.y - (e2.x * e1.y) / e1.x)\n      let offsetX = (intersection.x - offsetY * e2.x) / e1.x */\n      if (minX !== undefined) {\n        offsetX = Math.max(offsetX, minX - offsetX0.current);\n      }\n      if (maxX !== undefined) {\n        offsetX = Math.min(offsetX, maxX - offsetX0.current);\n      }\n      if (minY !== undefined) {\n        offsetY = Math.max(offsetY, minY - offsetY0.current);\n      }\n      if (maxY !== undefined) {\n        offsetY = Math.min(offsetY, maxY - offsetY0.current);\n      }\n      translation.current[(axis + 1) % 3] = offsetX0.current + offsetX;\n      translation.current[(axis + 2) % 3] = offsetY0.current + offsetY;\n      if (annotations) {\n        divRef.current.innerText = `${translation.current[(axis + 1) % 3].toFixed(2)}, ${translation.current[(axis + 2) % 3].toFixed(2)}`;\n      }\n      offsetMatrix.makeTranslation(offsetX * e1.x + offsetY * e2.x, offsetX * e1.y + offsetY * e2.y, offsetX * e1.z + offsetY * e2.z);\n      onDrag(offsetMatrix);\n    }\n  }, [annotations, onDrag, isHovered, translation, translationLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    clickInfo.current = null;\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const matrixL = React.useMemo(() => {\n    const dir1N = dir1.clone().normalize();\n    const dir2N = dir2.clone().normalize();\n    return new THREE.Matrix4().makeBasis(dir1N, dir2N, dir1N.clone().cross(dir2N));\n  }, [dir1, dir2]);\n  const pos1 = fixed ? 1 / 7 : scale / 7;\n  const length = fixed ? 0.225 : scale * 0.225;\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  const points = React.useMemo(() => [new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, length, 0), new THREE.Vector3(length, length, 0), new THREE.Vector3(length, 0, 0), new THREE.Vector3(0, 0, 0)], [length]);\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef,\n    matrix: matrixL,\n    matrixAutoUpdate: false\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, 0, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    position: [pos1 * 1.7, pos1 * 1.7, 0]\n  }, /*#__PURE__*/React.createElement(\"mesh\", {\n    visible: true,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut,\n    scale: length,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"planeGeometry\", null), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    side: THREE.DoubleSide,\n    fog: false\n  })), /*#__PURE__*/React.createElement(Line, {\n    position: [-length / 2, -length / 2, 0],\n    transparent: true,\n    depthTest: depthTest,\n    points: points,\n    lineWidth: lineWidth,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10,\n    userData: userData,\n    fog: false\n  })));\n};\n\nexport { PlaneSlider };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Html } from '../Html.js';\nimport { context } from './context.js';\nimport { calculateScaleFactor } from '../../core/calculateScaleFactor.js';\n\nconst vec1 = /* @__PURE__ */new THREE.Vector3();\nconst vec2 = /* @__PURE__ */new THREE.Vector3();\nconst calculateOffset = (clickPoint, normal, rayStart, rayDir) => {\n  const e1 = normal.dot(normal);\n  const e2 = normal.dot(clickPoint) - normal.dot(rayStart);\n  const e3 = normal.dot(rayDir);\n  if (e3 === 0) {\n    return -e2 / e1;\n  }\n  vec1.copy(rayDir).multiplyScalar(e1 / e3).sub(normal);\n  vec2.copy(rayDir).multiplyScalar(e2 / e3).add(rayStart).sub(clickPoint);\n  const offset = -vec1.dot(vec2) / vec1.dot(vec1);\n  return offset;\n};\nconst upV = /* @__PURE__ */new THREE.Vector3(0, 1, 0);\nconst scaleV = /* @__PURE__ */new THREE.Vector3();\nconst scaleMatrix = /* @__PURE__ */new THREE.Matrix4();\nconst ScalingSphere = ({\n  direction,\n  axis\n}) => {\n  const {\n    scaleLimits,\n    annotations,\n    annotationsClass,\n    depthTest,\n    scale,\n    lineWidth,\n    fixed,\n    axisColors,\n    hoveredColor,\n    opacity,\n    onDragStart,\n    onDrag,\n    onDragEnd,\n    userData\n  } = React.useContext(context);\n  const size = useThree(state => state.size);\n  // @ts-expect-error new in @react-three/fiber@7.0.5\n  const camControls = useThree(state => state.controls);\n  const divRef = React.useRef(null);\n  const objRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const scale0 = React.useRef(1);\n  const scaleCur = React.useRef(1);\n  const clickInfo = React.useRef(null);\n  const [isHovered, setIsHovered] = React.useState(false);\n  const position = fixed ? 1.2 : 1.2 * scale;\n  const onPointerDown = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      divRef.current.style.display = 'block';\n    }\n    e.stopPropagation();\n    const rotation = new THREE.Matrix4().extractRotation(objRef.current.matrixWorld);\n    const clickPoint = e.point.clone();\n    const origin = new THREE.Vector3().setFromMatrixPosition(objRef.current.matrixWorld);\n    const dir = direction.clone().applyMatrix4(rotation).normalize();\n    const mPLG = objRef.current.matrixWorld.clone();\n    const mPLGInv = mPLG.clone().invert();\n    const offsetMultiplier = fixed ? 1 / calculateScaleFactor(objRef.current.getWorldPosition(vec1), scale, e.camera, size) : 1;\n    clickInfo.current = {\n      clickPoint,\n      dir,\n      mPLG,\n      mPLGInv,\n      offsetMultiplier\n    };\n    onDragStart({\n      component: 'Sphere',\n      axis,\n      origin,\n      directions: [dir]\n    });\n    camControls && (camControls.enabled = false);\n    // @ts-ignore - setPointerCapture is not in the type definition\n    e.target.setPointerCapture(e.pointerId);\n  }, [annotations, camControls, direction, onDragStart, axis, fixed, scale, size]);\n  const onPointerMove = React.useCallback(e => {\n    e.stopPropagation();\n    if (!isHovered) setIsHovered(true);\n    if (clickInfo.current) {\n      const {\n        clickPoint,\n        dir,\n        mPLG,\n        mPLGInv,\n        offsetMultiplier\n      } = clickInfo.current;\n      const [min, max] = (scaleLimits == null ? void 0 : scaleLimits[axis]) || [1e-5, undefined]; // always limit the minimal value, since setting it very low might break the transform\n\n      const offsetW = calculateOffset(clickPoint, dir, e.ray.origin, e.ray.direction);\n      const offsetL = offsetW * offsetMultiplier;\n      const offsetH = fixed ? offsetL : offsetL / scale;\n      let upscale = Math.pow(2, offsetH * 0.2);\n\n      // @ts-ignore\n      if (e.shiftKey) {\n        upscale = Math.round(upscale * 10) / 10;\n      }\n      upscale = Math.max(upscale, min / scale0.current);\n      if (max !== undefined) {\n        upscale = Math.min(upscale, max / scale0.current);\n      }\n      scaleCur.current = scale0.current * upscale;\n      meshRef.current.position.set(0, position + offsetL, 0);\n      if (annotations) {\n        divRef.current.innerText = `${scaleCur.current.toFixed(2)}`;\n      }\n      scaleV.set(1, 1, 1);\n      scaleV.setComponent(axis, upscale);\n      scaleMatrix.makeScale(scaleV.x, scaleV.y, scaleV.z).premultiply(mPLG).multiply(mPLGInv);\n      onDrag(scaleMatrix);\n    }\n  }, [annotations, position, onDrag, isHovered, scaleLimits, axis]);\n  const onPointerUp = React.useCallback(e => {\n    if (annotations) {\n      divRef.current.style.display = 'none';\n    }\n    e.stopPropagation();\n    scale0.current = scaleCur.current;\n    clickInfo.current = null;\n    meshRef.current.position.set(0, position, 0);\n    onDragEnd();\n    camControls && (camControls.enabled = true);\n    // @ts-ignore - releasePointerCapture & PointerEvent#pointerId is not in the type definition\n    e.target.releasePointerCapture(e.pointerId);\n  }, [annotations, camControls, onDragEnd, position]);\n  const onPointerOut = React.useCallback(e => {\n    e.stopPropagation();\n    setIsHovered(false);\n  }, []);\n  const {\n    radius,\n    matrixL\n  } = React.useMemo(() => {\n    const radius = fixed ? lineWidth / scale * 1.8 : scale / 22.5;\n    const quaternion = new THREE.Quaternion().setFromUnitVectors(upV, direction.clone().normalize());\n    const matrixL = new THREE.Matrix4().makeRotationFromQuaternion(quaternion);\n    return {\n      radius,\n      matrixL\n    };\n  }, [direction, scale, lineWidth, fixed]);\n  const color = isHovered ? hoveredColor : axisColors[axis];\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: objRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    matrix: matrixL,\n    matrixAutoUpdate: false,\n    onPointerDown: onPointerDown,\n    onPointerMove: onPointerMove,\n    onPointerUp: onPointerUp,\n    onPointerOut: onPointerOut\n  }, annotations && /*#__PURE__*/React.createElement(Html, {\n    position: [0, position / 2, 0]\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none',\n      background: '#151520',\n      color: 'white',\n      padding: '6px 8px',\n      borderRadius: 7,\n      whiteSpace: 'nowrap'\n    },\n    className: annotationsClass,\n    ref: divRef\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    position: [0, position, 0],\n    renderOrder: 500,\n    userData: userData\n  }, /*#__PURE__*/React.createElement(\"sphereGeometry\", {\n    args: [radius, 12, 12]\n  }), /*#__PURE__*/React.createElement(\"meshBasicMaterial\", {\n    transparent: true,\n    depthTest: depthTest,\n    color: color,\n    opacity: opacity,\n    polygonOffset: true,\n    polygonOffsetFactor: -10\n  }))));\n};\n\nexport { ScalingSphere, calculateOffset };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef, useEffect } from 'react';\nimport { suspend, clear } from 'suspend-react';\nimport { VideoTexture } from '../core/VideoTexture.js';\n\n/**\n * Create a video texture from [`getDisplayMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia)\n */\nconst ScreenVideoTexture = /* @__PURE__ */forwardRef(({\n  options = {\n    video: true\n  },\n  ...props\n}, fref) => {\n  const mediaStream = suspend(() => navigator.mediaDevices.getDisplayMedia(options), []);\n  useEffect(() => {\n    return () => {\n      mediaStream == null || mediaStream.getTracks().forEach(track => track.stop());\n      clear([]);\n    };\n  }, [mediaStream]);\n  return /*#__PURE__*/React.createElement(VideoTexture, _extends({\n    ref: fref\n  }, props, {\n    src: mediaStream\n  }));\n});\n\nexport { ScreenVideoTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport { forwardRef, useEffect } from 'react';\nimport { suspend, clear } from 'suspend-react';\nimport { VideoTexture } from '../core/VideoTexture.js';\n\n/**\n * Create a video texture from [`getUserMedia`](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n */\nconst WebcamVideoTexture = /* @__PURE__ */forwardRef(({\n  constraints = {\n    audio: false,\n    video: {\n      facingMode: 'user'\n    }\n  },\n  ...props\n}, fref) => {\n  const mediaStream = suspend(() => navigator.mediaDevices.getUserMedia(constraints), []);\n  useEffect(() => {\n    return () => {\n      mediaStream == null || mediaStream.getTracks().forEach(track => track.stop());\n      clear([]);\n    };\n  }, [mediaStream]);\n  return /*#__PURE__*/React.createElement(VideoTexture, _extends({\n    ref: fref\n  }, props, {\n    src: mediaStream\n  }));\n});\n\nexport { WebcamVideoTexture };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { forwardRef, useRef, useState, useCallback, useMemo, useImperativeHandle, useEffect, Suspense, useContext, createContext } from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { easing } from 'maath';\nimport { VideoTexture } from '../core/VideoTexture.js';\nimport { WebcamVideoTexture } from './WebcamVideoTexture.js';\nimport { Facemesh } from './Facemesh.js';\nimport { useFaceLandmarker } from './FaceLandmarker.js';\n\nfunction mean(v1, v2) {\n  return v1.clone().add(v2).multiplyScalar(0.5);\n}\nfunction localToLocal(objSrc, v, objDst) {\n  // see: https://discourse.threejs.org/t/object3d-localtolocal/51564\n  const v_world = objSrc.localToWorld(v);\n  return objDst.worldToLocal(v_world);\n}\n\n//\n//\n//\n\nconst FaceControlsContext = /* @__PURE__ */createContext({});\n\n/**\n * The camera follows your face.\n *\n * Pre-requisite: wrap into a `FaceLandmarker` provider:\n *\n * ```jsx\n * <FaceLandmarker>...</FaceLandmarker>\n * ```\n */\n\nconst FaceControls = /* @__PURE__ */forwardRef(({\n  camera,\n  videoTexture = {\n    start: true\n  },\n  manualDetect = false,\n  faceLandmarkerResult,\n  manualUpdate = false,\n  makeDefault,\n  smoothTime = 0.25,\n  offset = true,\n  offsetScalar = 80,\n  eyes = false,\n  eyesAsOrigin = true,\n  depth = 0.15,\n  debug = false,\n  facemesh\n}, fref) => {\n  var _result$facialTransfo, _result$faceBlendshap;\n  const scene = useThree(state => state.scene);\n  const defaultCamera = useThree(state => state.camera);\n  const set = useThree(state => state.set);\n  const get = useThree(state => state.get);\n  const explCamera = camera || defaultCamera;\n  const facemeshApiRef = useRef(null);\n\n  //\n  // computeTarget()\n  //\n  // Compute `target` position and rotation for the camera (according to <Facemesh>)\n  //\n  //  1. 👀 either following the 2 eyes\n  //  2. 👤 or just the head mesh\n  //\n\n  const [target] = useState(() => new THREE.Object3D());\n  const [irisRightDirPos] = useState(() => new THREE.Vector3());\n  const [irisLeftDirPos] = useState(() => new THREE.Vector3());\n  const [irisRightLookAt] = useState(() => new THREE.Vector3());\n  const [irisLeftLookAt] = useState(() => new THREE.Vector3());\n  const computeTarget = useCallback(() => {\n    // same parent as the camera\n    target.parent = explCamera.parent;\n    const facemeshApi = facemeshApiRef.current;\n    if (facemeshApi) {\n      const {\n        outerRef,\n        eyeRightRef,\n        eyeLeftRef\n      } = facemeshApi;\n      if (eyeRightRef.current && eyeLeftRef.current) {\n        // 1. 👀\n\n        const {\n          irisDirRef: irisRightDirRef\n        } = eyeRightRef.current;\n        const {\n          irisDirRef: irisLeftDirRef\n        } = eyeLeftRef.current;\n        if (irisRightDirRef.current && irisLeftDirRef.current && outerRef.current) {\n          //\n          // position: mean of irisRightDirPos,irisLeftDirPos\n          //\n          irisRightDirPos.copy(localToLocal(irisRightDirRef.current, new THREE.Vector3(0, 0, 0), outerRef.current));\n          irisLeftDirPos.copy(localToLocal(irisLeftDirRef.current, new THREE.Vector3(0, 0, 0), outerRef.current));\n          target.position.copy(localToLocal(outerRef.current, mean(irisRightDirPos, irisLeftDirPos), explCamera.parent || scene));\n\n          //\n          // lookAt: mean of irisRightLookAt,irisLeftLookAt\n          //\n          irisRightLookAt.copy(localToLocal(irisRightDirRef.current, new THREE.Vector3(0, 0, 1), outerRef.current));\n          irisLeftLookAt.copy(localToLocal(irisLeftDirRef.current, new THREE.Vector3(0, 0, 1), outerRef.current));\n          target.lookAt(outerRef.current.localToWorld(mean(irisRightLookAt, irisLeftLookAt)));\n        }\n      } else {\n        // 2. 👤\n\n        if (outerRef.current) {\n          target.position.copy(localToLocal(outerRef.current, new THREE.Vector3(0, 0, 0), explCamera.parent || scene));\n          target.lookAt(outerRef.current.localToWorld(new THREE.Vector3(0, 0, 1)));\n        }\n      }\n    }\n    return target;\n  }, [explCamera, irisLeftDirPos, irisLeftLookAt, irisRightDirPos, irisRightLookAt, scene, target]);\n\n  //\n  // update()\n  //\n  // Updating the camera `current` position and rotation, following `target`\n  //\n\n  const [current] = useState(() => new THREE.Object3D());\n  const update = useCallback(function (delta, target) {\n    if (explCamera) {\n      var _target;\n      (_target = target) !== null && _target !== void 0 ? _target : target = computeTarget();\n      if (smoothTime > 0) {\n        // damping current\n        const eps = 1e-9;\n        easing.damp3(current.position, target.position, smoothTime, delta, undefined, undefined, eps);\n        easing.dampE(current.rotation, target.rotation, smoothTime, delta, undefined, undefined, eps);\n      } else {\n        // instant\n        current.position.copy(target.position);\n        current.rotation.copy(target.rotation);\n      }\n      explCamera.position.copy(current.position);\n      explCamera.rotation.copy(current.rotation);\n    }\n  }, [explCamera, computeTarget, smoothTime, current.position, current.rotation]);\n  useFrame((_, delta) => {\n    if (manualUpdate) return;\n    update(delta);\n  });\n\n  //\n  // onVideoFrame (only used if !manualDetect)\n  //\n\n  const videoTextureRef = useRef(null);\n  const [_faceLandmarkerResult, setFaceLandmarkerResult] = useState();\n  const faceLandmarker = useFaceLandmarker();\n  const onVideoFrame = useCallback((now, metadata) => {\n    const texture = videoTextureRef.current;\n    if (!texture) return;\n    const videoFrame = texture.source.data;\n    const result = faceLandmarker == null ? void 0 : faceLandmarker.detectForVideo(videoFrame, now);\n    setFaceLandmarkerResult(result);\n  }, [faceLandmarker]);\n\n  //\n  // Ref API\n  //\n\n  const api = useMemo(() => Object.assign(Object.create(THREE.EventDispatcher.prototype), {\n    computeTarget,\n    update,\n    facemeshApiRef\n  }), [computeTarget, update]);\n  useImperativeHandle(fref, () => api, [api]);\n\n  //\n  // makeDefault (`controls` global state)\n  //\n\n  useEffect(() => {\n    if (makeDefault) {\n      const old = get().controls;\n      set({\n        controls: api\n      });\n      return () => set({\n        controls: old\n      });\n    }\n  }, [makeDefault, api, get, set]);\n\n  //\n  //\n  //\n\n  const result = faceLandmarkerResult !== null && faceLandmarkerResult !== void 0 ? faceLandmarkerResult : _faceLandmarkerResult;\n  const points = result == null ? void 0 : result.faceLandmarks[0];\n  const facialTransformationMatrix = result == null || (_result$facialTransfo = result.facialTransformationMatrixes) == null ? void 0 : _result$facialTransfo[0];\n  const faceBlendshapes = result == null || (_result$faceBlendshap = result.faceBlendshapes) == null ? void 0 : _result$faceBlendshap[0];\n  const videoTextureProps = {\n    onVideoFrame,\n    ...videoTexture\n  };\n  return /*#__PURE__*/React.createElement(FaceControlsContext.Provider, {\n    value: api\n  }, !manualDetect && /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null\n  }, 'src' in videoTextureProps ? /*#__PURE__*/React.createElement(VideoTexture, _extends({\n    ref: videoTextureRef\n  }, videoTextureProps)) : /*#__PURE__*/React.createElement(WebcamVideoTexture, _extends({\n    ref: videoTextureRef\n  }, videoTextureProps))), /*#__PURE__*/React.createElement(Facemesh, _extends({\n    ref: facemeshApiRef,\n    children: /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n      side: THREE.DoubleSide\n    })\n  }, facemesh, {\n    points: points,\n    depth: depth,\n    facialTransformationMatrix: facialTransformationMatrix,\n    faceBlendshapes: faceBlendshapes,\n    eyes: eyes,\n    eyesAsOrigin: eyesAsOrigin,\n    offset: offset,\n    offsetScalar: offsetScalar,\n    debug: debug,\n    \"rotation-z\": Math.PI,\n    visible: debug\n  })));\n});\nconst useFaceControls = () => useContext(FaceControlsContext);\n\nexport { FaceControls, useFaceControls };\n", "import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree } from '@react-three/fiber';\nimport { Line } from '../core/Line.js';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nconst defaultLookAt = /* @__PURE__ */new THREE.Vector3(0, 0, -1);\nconst normal = /* @__PURE__ */function () {\n  const a = new THREE.Vector3();\n  const b = new THREE.Vector3();\n  const c = new THREE.Vector3();\n  const ab = new THREE.Vector3();\n  const ac = new THREE.Vector3();\n  return function (v1, v2, v3, v) {\n    a.copy(v1);\n    b.copy(v2);\n    c.copy(v3);\n    ab.copy(b).sub(a);\n    ac.copy(c).sub(a);\n    return v.crossVectors(ac, ab).normalize();\n  };\n}();\nfunction mean(v1, v2) {\n  return v1.clone().add(v2).multiplyScalar(0.5);\n}\nconst Facemesh = /* @__PURE__ */React.forwardRef(({\n  points = FacemeshDatas.SAMPLE_FACELANDMARKER_RESULT.faceLandmarks[0],\n  face,\n  facialTransformationMatrix,\n  faceBlendshapes,\n  offset,\n  offsetScalar = 80,\n  width,\n  height,\n  depth = 1,\n  verticalTri = [159, 386, 152],\n  origin,\n  eyes = true,\n  eyesAsOrigin = false,\n  debug = false,\n  children,\n  ...props\n}, fref) => {\n  var _meshRef$current3;\n  if (face) {\n    points = face.keypoints;\n    console.warn('Facemesh `face` prop is deprecated: use `points` instead');\n  }\n  const offsetRef = React.useRef(null);\n  const scaleRef = React.useRef(null);\n  const originRef = React.useRef(null);\n  const outerRef = React.useRef(null);\n  const meshRef = React.useRef(null);\n  const eyeRightRef = React.useRef(null);\n  const eyeLeftRef = React.useRef(null);\n  const [sightDir] = React.useState(() => new THREE.Vector3());\n  const [transform] = React.useState(() => new THREE.Object3D());\n  const [sightDirQuaternion] = React.useState(() => new THREE.Quaternion());\n  const [_origin] = React.useState(() => new THREE.Vector3());\n  const {\n    invalidate\n  } = useThree();\n  React.useEffect(() => {\n    var _meshRef$current;\n    (_meshRef$current = meshRef.current) == null || _meshRef$current.geometry.setIndex(FacemeshDatas.TRIANGULATION);\n  }, []);\n  const [bboxSize] = React.useState(() => new THREE.Vector3());\n  React.useEffect(() => {\n    var _meshRef$current2, _outerRef$current;\n    const faceGeometry = (_meshRef$current2 = meshRef.current) == null ? void 0 : _meshRef$current2.geometry;\n    if (!faceGeometry) return;\n    faceGeometry.setFromPoints(points);\n    faceGeometry.setDrawRange(0, FacemeshDatas.TRIANGULATION.length);\n\n    //\n    // A. compute sightDir vector\n    //\n    //  - either from `facialTransformationMatrix` if available\n    //  - or from `verticalTri`\n    //\n\n    if (facialTransformationMatrix) {\n      // from facialTransformationMatrix\n      transform.matrix.fromArray(facialTransformationMatrix.data);\n      transform.matrix.decompose(transform.position, transform.quaternion, transform.scale);\n\n      // Rotation: y and z axes are inverted\n      transform.rotation.y *= -1;\n      transform.rotation.z *= -1;\n      sightDirQuaternion.setFromEuler(transform.rotation);\n\n      // Offset: y and z axes are inverted\n      if (offset) {\n        var _offsetRef$current;\n        transform.position.y *= -1;\n        transform.position.z *= -1;\n        (_offsetRef$current = offsetRef.current) == null || _offsetRef$current.position.copy(transform.position.divideScalar(offsetScalar));\n      } else {\n        var _offsetRef$current2;\n        (_offsetRef$current2 = offsetRef.current) == null || _offsetRef$current2.position.set(0, 0, 0); // reset\n      }\n    } else {\n      // normal to verticalTri\n      normal(points[verticalTri[0]], points[verticalTri[1]], points[verticalTri[2]], sightDir);\n      sightDirQuaternion.setFromUnitVectors(defaultLookAt, sightDir);\n    }\n    const sightDirQuaternionInverse = sightDirQuaternion.clone().invert();\n\n    //\n    // B. geometry (straightened)\n    //\n\n    // 1. center (before rotate back)\n    faceGeometry.computeBoundingBox();\n    if (debug) invalidate(); // invalidate to force re-render for box3Helper (after .computeBoundingBox())\n    faceGeometry.center();\n\n    // 2. rotate back + rotate outerRef (once 1.)\n    faceGeometry.applyQuaternion(sightDirQuaternionInverse);\n    (_outerRef$current = outerRef.current) == null || _outerRef$current.setRotationFromQuaternion(sightDirQuaternion);\n\n    // 3. 👀 eyes\n    if (eyes) {\n      if (!faceBlendshapes) {\n        console.warn('Facemesh `eyes` option only works if `faceBlendshapes` is provided: skipping.');\n      } else {\n        if (eyeRightRef.current && eyeLeftRef.current && originRef.current) {\n          if (eyesAsOrigin) {\n            // compute the middle of the 2 eyes as the `origin`\n            const eyeRightSphere = eyeRightRef.current._computeSphere(faceGeometry);\n            const eyeLeftSphere = eyeLeftRef.current._computeSphere(faceGeometry);\n            const eyesCenter = mean(eyeRightSphere.center, eyeLeftSphere.center);\n            origin = eyesCenter.negate(); // eslint-disable-line react-hooks/exhaustive-deps\n\n            eyeRightRef.current._update(faceGeometry, faceBlendshapes, eyeRightSphere);\n            eyeLeftRef.current._update(faceGeometry, faceBlendshapes, eyeLeftSphere);\n          } else {\n            eyeRightRef.current._update(faceGeometry, faceBlendshapes);\n            eyeLeftRef.current._update(faceGeometry, faceBlendshapes);\n          }\n        }\n      }\n    }\n\n    // 3. origin\n    if (originRef.current) {\n      if (origin !== undefined) {\n        if (typeof origin === 'number') {\n          const position = faceGeometry.getAttribute('position');\n          _origin.set(-position.getX(origin), -position.getY(origin), -position.getZ(origin));\n        } else if (origin.isVector3) {\n          _origin.copy(origin);\n        }\n      } else {\n        _origin.setScalar(0);\n      }\n      originRef.current.position.copy(_origin);\n    }\n\n    // 4. re-scale\n    if (scaleRef.current) {\n      let scale = 1;\n      if (width || height || depth) {\n        faceGeometry.boundingBox.getSize(bboxSize);\n        if (width) scale = width / bboxSize.x; // fit in width\n        if (height) scale = height / bboxSize.y; // fit in height\n        if (depth) scale = depth / bboxSize.z; // fit in depth\n      }\n      scaleRef.current.scale.setScalar(scale !== 1 ? scale : 1);\n    }\n    faceGeometry.computeVertexNormals();\n    faceGeometry.attributes.position.needsUpdate = true;\n  }, [points, facialTransformationMatrix, faceBlendshapes, transform, offset, offsetScalar, width, height, depth, verticalTri, origin, eyes, debug, invalidate, sightDir, sightDirQuaternion, bboxSize, _origin]);\n\n  //\n  // API\n  //\n\n  const api = React.useMemo(() => ({\n    outerRef,\n    meshRef,\n    eyeRightRef,\n    eyeLeftRef\n  }), []);\n  React.useImperativeHandle(fref, () => api, [api]);\n  const [meshBboxSize] = React.useState(() => new THREE.Vector3());\n  const bbox = (_meshRef$current3 = meshRef.current) == null ? void 0 : _meshRef$current3.geometry.boundingBox;\n  const one = (bbox == null ? void 0 : bbox.getSize(meshBboxSize).z) || 1;\n  return /*#__PURE__*/React.createElement(\"group\", props, /*#__PURE__*/React.createElement(\"group\", {\n    ref: offsetRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: outerRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: scaleRef\n  }, debug ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"axesHelper\", {\n    args: [one]\n  }), /*#__PURE__*/React.createElement(Line, {\n    points: [[0, 0, 0], [0, 0, -one]],\n    color: 0x00ffff\n  })) : null, /*#__PURE__*/React.createElement(\"group\", {\n    ref: originRef\n  }, eyes && faceBlendshapes && /*#__PURE__*/React.createElement(\"group\", {\n    name: \"eyes\"\n  }, /*#__PURE__*/React.createElement(FacemeshEye, {\n    side: \"left\",\n    ref: eyeRightRef,\n    debug: debug\n  }), /*#__PURE__*/React.createElement(FacemeshEye, {\n    side: \"right\",\n    ref: eyeLeftRef,\n    debug: debug\n  })), /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: meshRef,\n    name: \"face\"\n  }, children, debug ? /*#__PURE__*/React.createElement(React.Fragment, null, bbox && /*#__PURE__*/React.createElement(\"box3Helper\", {\n    args: [bbox]\n  })) : null))))));\n});\n\n//\n// 👁️ FacemeshEye\n//\n\nconst FacemeshEyeDefaults = {\n  contourLandmarks: {\n    right: [33, 133, 159, 145, 153],\n    left: [263, 362, 386, 374, 380]\n  },\n  blendshapes: {\n    right: [14, 16, 18, 12],\n    // lookIn,lookOut, lookUp,lookDown\n    left: [13, 15, 17, 11] // lookIn,lookOut, lookUp,lookDown\n  },\n  color: {\n    right: 'red',\n    left: '#00ff00'\n  },\n  fov: {\n    horizontal: 100,\n    vertical: 90\n  }\n};\nconst FacemeshEye = /* @__PURE__ */React.forwardRef(({\n  side,\n  debug = true\n}, fref) => {\n  const eyeMeshRef = React.useRef(null);\n  const irisDirRef = React.useRef(null);\n\n  //\n  // _computeSphere()\n  //\n  // Compute eye's sphere .position and .radius\n  //\n\n  const [sphere] = React.useState(() => new THREE.Sphere());\n  const _computeSphere = React.useCallback(faceGeometry => {\n    const position = faceGeometry.getAttribute('position');\n\n    // get some eye contour landmarks points (from geometry)\n    const eyeContourLandmarks = FacemeshEyeDefaults.contourLandmarks[side];\n    const eyeContourPoints = eyeContourLandmarks.map(i => new THREE.Vector3(position.getX(i), position.getY(i), position.getZ(i))); // prettier-ignore\n\n    // compute center (centroid from eyeContourPoints)\n    sphere.center.set(0, 0, 0);\n    eyeContourPoints.forEach(v => sphere.center.add(v));\n    sphere.center.divideScalar(eyeContourPoints.length);\n\n    // radius (eye half-width)\n    sphere.radius = eyeContourPoints[0].sub(eyeContourPoints[1]).length() / 2;\n    return sphere;\n  }, [sphere, side]);\n\n  //\n  // _update()\n  //\n  // Update:\n  //   - A. eye's mesh (according to sphere)\n  //   - B. iris direction (according to \"look*\" blendshapes)\n  //\n\n  const [rotation] = React.useState(() => new THREE.Euler());\n  const _update = React.useCallback((faceGeometry, faceBlendshapes, sphere) => {\n    // A.\n    if (eyeMeshRef.current) {\n      var _sphere;\n      (_sphere = sphere) !== null && _sphere !== void 0 ? _sphere : sphere = _computeSphere(faceGeometry); // compute sphere dims (if not passed)\n      eyeMeshRef.current.position.copy(sphere.center);\n      eyeMeshRef.current.scale.setScalar(sphere.radius);\n    }\n\n    // B.\n    if (faceBlendshapes && irisDirRef.current) {\n      const blendshapes = FacemeshEyeDefaults.blendshapes[side];\n      const lookIn = faceBlendshapes.categories[blendshapes[0]].score;\n      const lookOut = faceBlendshapes.categories[blendshapes[1]].score;\n      const lookUp = faceBlendshapes.categories[blendshapes[2]].score;\n      const lookDown = faceBlendshapes.categories[blendshapes[3]].score;\n      const hfov = FacemeshEyeDefaults.fov.horizontal * THREE.MathUtils.DEG2RAD;\n      const vfov = FacemeshEyeDefaults.fov.vertical * THREE.MathUtils.DEG2RAD;\n      const rx = hfov * 0.5 * (lookDown - lookUp);\n      const ry = vfov * 0.5 * (lookIn - lookOut) * (side === 'left' ? 1 : -1);\n      rotation.set(rx, ry, 0);\n      irisDirRef.current.setRotationFromEuler(rotation);\n    }\n  }, [_computeSphere, side, rotation]);\n\n  //\n  // API\n  //\n\n  const api = React.useMemo(() => ({\n    eyeMeshRef: eyeMeshRef,\n    irisDirRef: irisDirRef,\n    _computeSphere,\n    _update\n  }), [_computeSphere, _update]);\n  React.useImperativeHandle(fref, () => api, [api]);\n  const color = FacemeshEyeDefaults.color[side];\n  return /*#__PURE__*/React.createElement(\"group\", null, /*#__PURE__*/React.createElement(\"group\", {\n    ref: eyeMeshRef\n  }, debug && /*#__PURE__*/React.createElement(\"axesHelper\", null), /*#__PURE__*/React.createElement(\"group\", {\n    ref: irisDirRef\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, debug && /*#__PURE__*/React.createElement(Line, {\n    points: [[0, 0, 0], [0, 0, -2]],\n    lineWidth: 1,\n    color: color\n  })))));\n});\n\n//\n// Sample datas\n//\n\nconst FacemeshDatas = {\n  // Extracted from: https://github.com/tensorflow/tfjs-models/blob/a8f500809f5afe38feea27870c77e7ba03a6ece4/face-landmarks-detection/demos/shared/triangulation.js\n  // prettier-ignore\n  TRIANGULATION: [127, 34, 139, 11, 0, 37, 232, 231, 120, 72, 37, 39, 128, 121, 47, 232, 121, 128, 104, 69, 67, 175, 171, 148, 157, 154, 155, 118, 50, 101, 73, 39, 40, 9, 151, 108, 48, 115, 131, 194, 204, 211, 74, 40, 185, 80, 42, 183, 40, 92, 186, 230, 229, 118, 202, 212, 214, 83, 18, 17, 76, 61, 146, 160, 29, 30, 56, 157, 173, 106, 204, 194, 135, 214, 192, 203, 165, 98, 21, 71, 68, 51, 45, 4, 144, 24, 23, 77, 146, 91, 205, 50, 187, 201, 200, 18, 91, 106, 182, 90, 91, 181, 85, 84, 17, 206, 203, 36, 148, 171, 140, 92, 40, 39, 193, 189, 244, 159, 158, 28, 247, 246, 161, 236, 3, 196, 54, 68, 104, 193, 168, 8, 117, 228, 31, 189, 193, 55, 98, 97, 99, 126, 47, 100, 166, 79, 218, 155, 154, 26, 209, 49, 131, 135, 136, 150, 47, 126, 217, 223, 52, 53, 45, 51, 134, 211, 170, 140, 67, 69, 108, 43, 106, 91, 230, 119, 120, 226, 130, 247, 63, 53, 52, 238, 20, 242, 46, 70, 156, 78, 62, 96, 46, 53, 63, 143, 34, 227, 173, 155, 133, 123, 117, 111, 44, 125, 19, 236, 134, 51, 216, 206, 205, 154, 153, 22, 39, 37, 167, 200, 201, 208, 36, 142, 100, 57, 212, 202, 20, 60, 99, 28, 158, 157, 35, 226, 113, 160, 159, 27, 204, 202, 210, 113, 225, 46, 43, 202, 204, 62, 76, 77, 137, 123, 116, 41, 38, 72, 203, 129, 142, 64, 98, 240, 49, 102, 64, 41, 73, 74, 212, 216, 207, 42, 74, 184, 169, 170, 211, 170, 149, 176, 105, 66, 69, 122, 6, 168, 123, 147, 187, 96, 77, 90, 65, 55, 107, 89, 90, 180, 101, 100, 120, 63, 105, 104, 93, 137, 227, 15, 86, 85, 129, 102, 49, 14, 87, 86, 55, 8, 9, 100, 47, 121, 145, 23, 22, 88, 89, 179, 6, 122, 196, 88, 95, 96, 138, 172, 136, 215, 58, 172, 115, 48, 219, 42, 80, 81, 195, 3, 51, 43, 146, 61, 171, 175, 199, 81, 82, 38, 53, 46, 225, 144, 163, 110, 246, 33, 7, 52, 65, 66, 229, 228, 117, 34, 127, 234, 107, 108, 69, 109, 108, 151, 48, 64, 235, 62, 78, 191, 129, 209, 126, 111, 35, 143, 163, 161, 246, 117, 123, 50, 222, 65, 52, 19, 125, 141, 221, 55, 65, 3, 195, 197, 25, 7, 33, 220, 237, 44, 70, 71, 139, 122, 193, 245, 247, 130, 33, 71, 21, 162, 153, 158, 159, 170, 169, 150, 188, 174, 196, 216, 186, 92, 144, 160, 161, 2, 97, 167, 141, 125, 241, 164, 167, 37, 72, 38, 12, 145, 159, 160, 38, 82, 13, 63, 68, 71, 226, 35, 111, 158, 153, 154, 101, 50, 205, 206, 92, 165, 209, 198, 217, 165, 167, 97, 220, 115, 218, 133, 112, 243, 239, 238, 241, 214, 135, 169, 190, 173, 133, 171, 208, 32, 125, 44, 237, 86, 87, 178, 85, 86, 179, 84, 85, 180, 83, 84, 181, 201, 83, 182, 137, 93, 132, 76, 62, 183, 61, 76, 184, 57, 61, 185, 212, 57, 186, 214, 207, 187, 34, 143, 156, 79, 239, 237, 123, 137, 177, 44, 1, 4, 201, 194, 32, 64, 102, 129, 213, 215, 138, 59, 166, 219, 242, 99, 97, 2, 94, 141, 75, 59, 235, 24, 110, 228, 25, 130, 226, 23, 24, 229, 22, 23, 230, 26, 22, 231, 112, 26, 232, 189, 190, 243, 221, 56, 190, 28, 56, 221, 27, 28, 222, 29, 27, 223, 30, 29, 224, 247, 30, 225, 238, 79, 20, 166, 59, 75, 60, 75, 240, 147, 177, 215, 20, 79, 166, 187, 147, 213, 112, 233, 244, 233, 128, 245, 128, 114, 188, 114, 217, 174, 131, 115, 220, 217, 198, 236, 198, 131, 134, 177, 132, 58, 143, 35, 124, 110, 163, 7, 228, 110, 25, 356, 389, 368, 11, 302, 267, 452, 350, 349, 302, 303, 269, 357, 343, 277, 452, 453, 357, 333, 332, 297, 175, 152, 377, 384, 398, 382, 347, 348, 330, 303, 304, 270, 9, 336, 337, 278, 279, 360, 418, 262, 431, 304, 408, 409, 310, 415, 407, 270, 409, 410, 450, 348, 347, 422, 430, 434, 313, 314, 17, 306, 307, 375, 387, 388, 260, 286, 414, 398, 335, 406, 418, 364, 367, 416, 423, 358, 327, 251, 284, 298, 281, 5, 4, 373, 374, 253, 307, 320, 321, 425, 427, 411, 421, 313, 18, 321, 405, 406, 320, 404, 405, 315, 16, 17, 426, 425, 266, 377, 400, 369, 322, 391, 269, 417, 465, 464, 386, 257, 258, 466, 260, 388, 456, 399, 419, 284, 332, 333, 417, 285, 8, 346, 340, 261, 413, 441, 285, 327, 460, 328, 355, 371, 329, 392, 439, 438, 382, 341, 256, 429, 420, 360, 364, 394, 379, 277, 343, 437, 443, 444, 283, 275, 440, 363, 431, 262, 369, 297, 338, 337, 273, 375, 321, 450, 451, 349, 446, 342, 467, 293, 334, 282, 458, 461, 462, 276, 353, 383, 308, 324, 325, 276, 300, 293, 372, 345, 447, 382, 398, 362, 352, 345, 340, 274, 1, 19, 456, 248, 281, 436, 427, 425, 381, 256, 252, 269, 391, 393, 200, 199, 428, 266, 330, 329, 287, 273, 422, 250, 462, 328, 258, 286, 384, 265, 353, 342, 387, 259, 257, 424, 431, 430, 342, 353, 276, 273, 335, 424, 292, 325, 307, 366, 447, 345, 271, 303, 302, 423, 266, 371, 294, 455, 460, 279, 278, 294, 271, 272, 304, 432, 434, 427, 272, 407, 408, 394, 430, 431, 395, 369, 400, 334, 333, 299, 351, 417, 168, 352, 280, 411, 325, 319, 320, 295, 296, 336, 319, 403, 404, 330, 348, 349, 293, 298, 333, 323, 454, 447, 15, 16, 315, 358, 429, 279, 14, 15, 316, 285, 336, 9, 329, 349, 350, 374, 380, 252, 318, 402, 403, 6, 197, 419, 318, 319, 325, 367, 364, 365, 435, 367, 397, 344, 438, 439, 272, 271, 311, 195, 5, 281, 273, 287, 291, 396, 428, 199, 311, 271, 268, 283, 444, 445, 373, 254, 339, 263, 466, 249, 282, 334, 296, 449, 347, 346, 264, 447, 454, 336, 296, 299, 338, 10, 151, 278, 439, 455, 292, 407, 415, 358, 371, 355, 340, 345, 372, 390, 249, 466, 346, 347, 280, 442, 443, 282, 19, 94, 370, 441, 442, 295, 248, 419, 197, 263, 255, 359, 440, 275, 274, 300, 383, 368, 351, 412, 465, 263, 467, 466, 301, 368, 389, 380, 374, 386, 395, 378, 379, 412, 351, 419, 436, 426, 322, 373, 390, 388, 2, 164, 393, 370, 462, 461, 164, 0, 267, 302, 11, 12, 374, 373, 387, 268, 12, 13, 293, 300, 301, 446, 261, 340, 385, 384, 381, 330, 266, 425, 426, 423, 391, 429, 355, 437, 391, 327, 326, 440, 457, 438, 341, 382, 362, 459, 457, 461, 434, 430, 394, 414, 463, 362, 396, 369, 262, 354, 461, 457, 316, 403, 402, 315, 404, 403, 314, 405, 404, 313, 406, 405, 421, 418, 406, 366, 401, 361, 306, 408, 407, 291, 409, 408, 287, 410, 409, 432, 436, 410, 434, 416, 411, 264, 368, 383, 309, 438, 457, 352, 376, 401, 274, 275, 4, 421, 428, 262, 294, 327, 358, 433, 416, 367, 289, 455, 439, 462, 370, 326, 2, 326, 370, 305, 460, 455, 254, 449, 448, 255, 261, 446, 253, 450, 449, 252, 451, 450, 256, 452, 451, 341, 453, 452, 413, 464, 463, 441, 413, 414, 258, 442, 441, 257, 443, 442, 259, 444, 443, 260, 445, 444, 467, 342, 445, 459, 458, 250, 289, 392, 290, 290, 328, 460, 376, 433, 435, 250, 290, 392, 411, 416, 433, 341, 463, 464, 453, 464, 465, 357, 465, 412, 343, 412, 399, 360, 363, 440, 437, 399, 456, 420, 456, 363, 401, 435, 288, 372, 383, 353, 339, 255, 249, 448, 261, 255, 133, 243, 190, 133, 155, 112, 33, 246, 247, 33, 130, 25, 398, 384, 286, 362, 398, 414, 362, 463, 341, 263, 359, 467, 263, 249, 255, 466, 467, 260, 75, 60, 166, 238, 239, 79, 162, 127, 139, 72, 11, 37, 121, 232, 120, 73, 72, 39, 114, 128, 47, 233, 232, 128, 103, 104, 67, 152, 175, 148, 173, 157, 155, 119, 118, 101, 74, 73, 40, 107, 9, 108, 49, 48, 131, 32, 194, 211, 184, 74, 185, 191, 80, 183, 185, 40, 186, 119, 230, 118, 210, 202, 214, 84, 83, 17, 77, 76, 146, 161, 160, 30, 190, 56, 173, 182, 106, 194, 138, 135, 192, 129, 203, 98, 54, 21, 68, 5, 51, 4, 145, 144, 23, 90, 77, 91, 207, 205, 187, 83, 201, 18, 181, 91, 182, 180, 90, 181, 16, 85, 17, 205, 206, 36, 176, 148, 140, 165, 92, 39, 245, 193, 244, 27, 159, 28, 30, 247, 161, 174, 236, 196, 103, 54, 104, 55, 193, 8, 111, 117, 31, 221, 189, 55, 240, 98, 99, 142, 126, 100, 219, 166, 218, 112, 155, 26, 198, 209, 131, 169, 135, 150, 114, 47, 217, 224, 223, 53, 220, 45, 134, 32, 211, 140, 109, 67, 108, 146, 43, 91, 231, 230, 120, 113, 226, 247, 105, 63, 52, 241, 238, 242, 124, 46, 156, 95, 78, 96, 70, 46, 63, 116, 143, 227, 116, 123, 111, 1, 44, 19, 3, 236, 51, 207, 216, 205, 26, 154, 22, 165, 39, 167, 199, 200, 208, 101, 36, 100, 43, 57, 202, 242, 20, 99, 56, 28, 157, 124, 35, 113, 29, 160, 27, 211, 204, 210, 124, 113, 46, 106, 43, 204, 96, 62, 77, 227, 137, 116, 73, 41, 72, 36, 203, 142, 235, 64, 240, 48, 49, 64, 42, 41, 74, 214, 212, 207, 183, 42, 184, 210, 169, 211, 140, 170, 176, 104, 105, 69, 193, 122, 168, 50, 123, 187, 89, 96, 90, 66, 65, 107, 179, 89, 180, 119, 101, 120, 68, 63, 104, 234, 93, 227, 16, 15, 85, 209, 129, 49, 15, 14, 86, 107, 55, 9, 120, 100, 121, 153, 145, 22, 178, 88, 179, 197, 6, 196, 89, 88, 96, 135, 138, 136, 138, 215, 172, 218, 115, 219, 41, 42, 81, 5, 195, 51, 57, 43, 61, 208, 171, 199, 41, 81, 38, 224, 53, 225, 24, 144, 110, 105, 52, 66, 118, 229, 117, 227, 34, 234, 66, 107, 69, 10, 109, 151, 219, 48, 235, 183, 62, 191, 142, 129, 126, 116, 111, 143, 7, 163, 246, 118, 117, 50, 223, 222, 52, 94, 19, 141, 222, 221, 65, 196, 3, 197, 45, 220, 44, 156, 70, 139, 188, 122, 245, 139, 71, 162, 145, 153, 159, 149, 170, 150, 122, 188, 196, 206, 216, 92, 163, 144, 161, 164, 2, 167, 242, 141, 241, 0, 164, 37, 11, 72, 12, 144, 145, 160, 12, 38, 13, 70, 63, 71, 31, 226, 111, 157, 158, 154, 36, 101, 205, 203, 206, 165, 126, 209, 217, 98, 165, 97, 237, 220, 218, 237, 239, 241, 210, 214, 169, 140, 171, 32, 241, 125, 237, 179, 86, 178, 180, 85, 179, 181, 84, 180, 182, 83, 181, 194, 201, 182, 177, 137, 132, 184, 76, 183, 185, 61, 184, 186, 57, 185, 216, 212, 186, 192, 214, 187, 139, 34, 156, 218, 79, 237, 147, 123, 177, 45, 44, 4, 208, 201, 32, 98, 64, 129, 192, 213, 138, 235, 59, 219, 141, 242, 97, 97, 2, 141, 240, 75, 235, 229, 24, 228, 31, 25, 226, 230, 23, 229, 231, 22, 230, 232, 26, 231, 233, 112, 232, 244, 189, 243, 189, 221, 190, 222, 28, 221, 223, 27, 222, 224, 29, 223, 225, 30, 224, 113, 247, 225, 99, 60, 240, 213, 147, 215, 60, 20, 166, 192, 187, 213, 243, 112, 244, 244, 233, 245, 245, 128, 188, 188, 114, 174, 134, 131, 220, 174, 217, 236, 236, 198, 134, 215, 177, 58, 156, 143, 124, 25, 110, 7, 31, 228, 25, 264, 356, 368, 0, 11, 267, 451, 452, 349, 267, 302, 269, 350, 357, 277, 350, 452, 357, 299, 333, 297, 396, 175, 377, 381, 384, 382, 280, 347, 330, 269, 303, 270, 151, 9, 337, 344, 278, 360, 424, 418, 431, 270, 304, 409, 272, 310, 407, 322, 270, 410, 449, 450, 347, 432, 422, 434, 18, 313, 17, 291, 306, 375, 259, 387, 260, 424, 335, 418, 434, 364, 416, 391, 423, 327, 301, 251, 298, 275, 281, 4, 254, 373, 253, 375, 307, 321, 280, 425, 411, 200, 421, 18, 335, 321, 406, 321, 320, 405, 314, 315, 17, 423, 426, 266, 396, 377, 369, 270, 322, 269, 413, 417, 464, 385, 386, 258, 248, 456, 419, 298, 284, 333, 168, 417, 8, 448, 346, 261, 417, 413, 285, 326, 327, 328, 277, 355, 329, 309, 392, 438, 381, 382, 256, 279, 429, 360, 365, 364, 379, 355, 277, 437, 282, 443, 283, 281, 275, 363, 395, 431, 369, 299, 297, 337, 335, 273, 321, 348, 450, 349, 359, 446, 467, 283, 293, 282, 250, 458, 462, 300, 276, 383, 292, 308, 325, 283, 276, 293, 264, 372, 447, 346, 352, 340, 354, 274, 19, 363, 456, 281, 426, 436, 425, 380, 381, 252, 267, 269, 393, 421, 200, 428, 371, 266, 329, 432, 287, 422, 290, 250, 328, 385, 258, 384, 446, 265, 342, 386, 387, 257, 422, 424, 430, 445, 342, 276, 422, 273, 424, 306, 292, 307, 352, 366, 345, 268, 271, 302, 358, 423, 371, 327, 294, 460, 331, 279, 294, 303, 271, 304, 436, 432, 427, 304, 272, 408, 395, 394, 431, 378, 395, 400, 296, 334, 299, 6, 351, 168, 376, 352, 411, 307, 325, 320, 285, 295, 336, 320, 319, 404, 329, 330, 349, 334, 293, 333, 366, 323, 447, 316, 15, 315, 331, 358, 279, 317, 14, 316, 8, 285, 9, 277, 329, 350, 253, 374, 252, 319, 318, 403, 351, 6, 419, 324, 318, 325, 397, 367, 365, 288, 435, 397, 278, 344, 439, 310, 272, 311, 248, 195, 281, 375, 273, 291, 175, 396, 199, 312, 311, 268, 276, 283, 445, 390, 373, 339, 295, 282, 296, 448, 449, 346, 356, 264, 454, 337, 336, 299, 337, 338, 151, 294, 278, 455, 308, 292, 415, 429, 358, 355, 265, 340, 372, 388, 390, 466, 352, 346, 280, 295, 442, 282, 354, 19, 370, 285, 441, 295, 195, 248, 197, 457, 440, 274, 301, 300, 368, 417, 351, 465, 251, 301, 389, 385, 380, 386, 394, 395, 379, 399, 412, 419, 410, 436, 322, 387, 373, 388, 326, 2, 393, 354, 370, 461, 393, 164, 267, 268, 302, 12, 386, 374, 387, 312, 268, 13, 298, 293, 301, 265, 446, 340, 380, 385, 381, 280, 330, 425, 322, 426, 391, 420, 429, 437, 393, 391, 326, 344, 440, 438, 458, 459, 461, 364, 434, 394, 428, 396, 262, 274, 354, 457, 317, 316, 402, 316, 315, 403, 315, 314, 404, 314, 313, 405, 313, 421, 406, 323, 366, 361, 292, 306, 407, 306, 291, 408, 291, 287, 409, 287, 432, 410, 427, 434, 411, 372, 264, 383, 459, 309, 457, 366, 352, 401, 1, 274, 4, 418, 421, 262, 331, 294, 358, 435, 433, 367, 392, 289, 439, 328, 462, 326, 94, 2, 370, 289, 305, 455, 339, 254, 448, 359, 255, 446, 254, 253, 449, 253, 252, 450, 252, 256, 451, 256, 341, 452, 414, 413, 463, 286, 441, 414, 286, 258, 441, 258, 257, 442, 257, 259, 443, 259, 260, 444, 260, 467, 445, 309, 459, 250, 305, 289, 290, 305, 290, 460, 401, 376, 435, 309, 250, 392, 376, 411, 433, 453, 341, 464, 357, 453, 465, 343, 357, 412, 437, 343, 399, 344, 360, 440, 420, 437, 456, 360, 420, 363, 361, 401, 288, 265, 372, 353, 390, 339, 249, 339, 448, 255],\n  // My face as default (captured with a 640x480 webcam)\n  // prettier-ignore\n  SAMPLE_FACE: {\n    \"keypoints\": [{\n      \"x\": 356.2804412841797,\n      \"y\": 295.1960563659668,\n      \"z\": -23.786449432373047,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 354.8859405517578,\n      \"y\": 264.69520568847656,\n      \"z\": -36.718435287475586\n    }, {\n      \"x\": 355.2180862426758,\n      \"y\": 275.3360366821289,\n      \"z\": -21.183712482452393\n    }, {\n      \"x\": 347.349853515625,\n      \"y\": 242.4400234222412,\n      \"z\": -25.093655586242676\n    }, {\n      \"x\": 354.40135955810547,\n      \"y\": 256.67933464050293,\n      \"z\": -38.23572635650635\n    }, {\n      \"x\": 353.7689971923828,\n      \"y\": 247.54886627197266,\n      \"z\": -34.5475435256958\n    }, {\n      \"x\": 352.1288299560547,\n      \"y\": 227.34312057495117,\n      \"z\": -13.095386028289795\n    }, {\n      \"x\": 303.5013198852539,\n      \"y\": 234.67002868652344,\n      \"z\": 12.500141859054565,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 351.09378814697266,\n      \"y\": 211.87547206878662,\n      \"z\": -6.413471698760986\n    }, {\n      \"x\": 350.7115936279297,\n      \"y\": 202.1251630783081,\n      \"z\": -6.413471698760986\n    }, {\n      \"x\": 348.33667755126953,\n      \"y\": 168.7741756439209,\n      \"z\": 6.483500003814697,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 356.4806365966797,\n      \"y\": 299.2995357513428,\n      \"z\": -23.144519329071045\n    }, {\n      \"x\": 356.5511703491211,\n      \"y\": 302.66146659851074,\n      \"z\": -21.020312309265137\n    }, {\n      \"x\": 356.6239547729492,\n      \"y\": 304.1536331176758,\n      \"z\": -18.137459754943848,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 356.5807342529297,\n      \"y\": 305.1840591430664,\n      \"z\": -18.767719268798828,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 356.8241500854492,\n      \"y\": 308.25711250305176,\n      \"z\": -20.16829490661621\n    }, {\n      \"x\": 357.113037109375,\n      \"y\": 312.26277351379395,\n      \"z\": -22.10575819015503\n    }, {\n      \"x\": 357.34962463378906,\n      \"y\": 317.1123218536377,\n      \"z\": -21.837315559387207,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 357.6658630371094,\n      \"y\": 325.51036834716797,\n      \"z\": -16.27002477645874\n    }, {\n      \"x\": 355.0201416015625,\n      \"y\": 269.36279296875,\n      \"z\": -33.73054027557373\n    }, {\n      \"x\": 348.5237503051758,\n      \"y\": 270.33411026000977,\n      \"z\": -24.93025302886963\n    }, {\n      \"x\": 279.97331619262695,\n      \"y\": 213.24176788330078,\n      \"z\": 47.759642601013184,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 322.66529083251953,\n      \"y\": 238.5027265548706,\n      \"z\": 5.535193085670471\n    }, {\n      \"x\": 316.0983657836914,\n      \"y\": 239.94489669799805,\n      \"z\": 5.777376294136047\n    }, {\n      \"x\": 309.9431610107422,\n      \"y\": 240.24518966674805,\n      \"z\": 7.510589361190796\n    }, {\n      \"x\": 301.31994247436523,\n      \"y\": 237.86138534545898,\n      \"z\": 13.118728399276733\n    }, {\n      \"x\": 328.14266204833984,\n      \"y\": 235.80496788024902,\n      \"z\": 6.646900177001953\n    }, {\n      \"x\": 313.7326431274414,\n      \"y\": 222.11161136627197,\n      \"z\": 3.9887237548828125\n    }, {\n      \"x\": 320.45196533203125,\n      \"y\": 221.87729358673096,\n      \"z\": 4.601476192474365\n    }, {\n      \"x\": 307.35679626464844,\n      \"y\": 223.63793849945068,\n      \"z\": 5.932023525238037\n    }, {\n      \"x\": 303.0031204223633,\n      \"y\": 226.3743782043457,\n      \"z\": 8.479321002960205\n    }, {\n      \"x\": 296.80023193359375,\n      \"y\": 242.94299125671387,\n      \"z\": 15.931552648544312\n    }, {\n      \"x\": 332.2352981567383,\n      \"y\": 340.77341079711914,\n      \"z\": -10.165848731994629\n    }, {\n      \"x\": 301.38587951660156,\n      \"y\": 233.46447944641113,\n      \"z\": 14.764405488967896,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 279.0147018432617,\n      \"y\": 244.37155723571777,\n      \"z\": 45.77549457550049\n    }, {\n      \"x\": 289.60548400878906,\n      \"y\": 239.1807460784912,\n      \"z\": 23.191204071044922\n    }, {\n      \"x\": 320.32257080078125,\n      \"y\": 267.1292781829834,\n      \"z\": -4.954537749290466\n    }, {\n      \"x\": 347.64583587646484,\n      \"y\": 294.4955062866211,\n      \"z\": -23.062820434570312,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 349.28138732910156,\n      \"y\": 303.1095886230469,\n      \"z\": -20.238323211669922\n    }, {\n      \"x\": 338.9453125,\n      \"y\": 298.19186210632324,\n      \"z\": -19.456336498260498,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 333.36788177490234,\n      \"y\": 302.6706790924072,\n      \"z\": -14.776077270507812,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 342.89188385009766,\n      \"y\": 304.3561363220215,\n      \"z\": -17.752301692962646\n    }, {\n      \"x\": 337.7375030517578,\n      \"y\": 306.0098361968994,\n      \"z\": -13.410515785217285\n    }, {\n      \"x\": 325.6159210205078,\n      \"y\": 316.22995376586914,\n      \"z\": -6.681914925575256\n    }, {\n      \"x\": 349.0104675292969,\n      \"y\": 264.9818515777588,\n      \"z\": -36.274919509887695\n    }, {\n      \"x\": 347.7138900756836,\n      \"y\": 257.5664806365967,\n      \"z\": -37.67549514770508\n    }, {\n      \"x\": 291.79357528686523,\n      \"y\": 218.88171672821045,\n      \"z\": 11.578094959259033,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 332.2689437866211,\n      \"y\": 247.56946563720703,\n      \"z\": -3.3730539679527283\n    }, {\n      \"x\": 332.0074462890625,\n      \"y\": 267.1201229095459,\n      \"z\": -19.969879388809204\n    }, {\n      \"x\": 331.27952575683594,\n      \"y\": 263.6967658996582,\n      \"z\": -17.47218608856201\n    }, {\n      \"x\": 301.04373931884766,\n      \"y\": 269.56552505493164,\n      \"z\": 3.61815482378006\n    }, {\n      \"x\": 347.4863815307617,\n      \"y\": 249.0706443786621,\n      \"z\": -32.633421421051025\n    }, {\n      \"x\": 307.26118087768555,\n      \"y\": 208.2646894454956,\n      \"z\": 1.1591226607561111,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 297.91919708251953,\n      \"y\": 212.22604751586914,\n      \"z\": 5.914516448974609,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 285.1651382446289,\n      \"y\": 197.98450469970703,\n      \"z\": 36.391637325286865,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 337.04097747802734,\n      \"y\": 211.25229835510254,\n      \"z\": -4.548954665660858\n    }, {\n      \"x\": 326.5912628173828,\n      \"y\": 223.16698551177979,\n      \"z\": 6.670243740081787\n    }, {\n      \"x\": 320.05664825439453,\n      \"y\": 309.5834255218506,\n      \"z\": -4.055835008621216\n    }, {\n      \"x\": 289.6866226196289,\n      \"y\": 314.617395401001,\n      \"z\": 53.875489234924316,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 337.4256896972656,\n      \"y\": 270.8755302429199,\n      \"z\": -17.67060160636902\n    }, {\n      \"x\": 343.69922637939453,\n      \"y\": 273.0000400543213,\n      \"z\": -18.756048679351807\n    }, {\n      \"x\": 327.4242401123047,\n      \"y\": 309.22399520874023,\n      \"z\": -4.703601002693176,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 330.37220001220703,\n      \"y\": 308.3323001861572,\n      \"z\": -6.442649960517883\n    }, {\n      \"x\": 293.87027740478516,\n      \"y\": 207.7961826324463,\n      \"z\": 9.821539521217346,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 332.11437225341797,\n      \"y\": 271.22812271118164,\n      \"z\": -16.64351224899292\n    }, {\n      \"x\": 320.1197814941406,\n      \"y\": 207.40366458892822,\n      \"z\": -2.48164564371109,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 318.59575271606445,\n      \"y\": 201.07443809509277,\n      \"z\": -3.110446035861969,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 310.72303771972656,\n      \"y\": 175.75075149536133,\n      \"z\": 13.328815698623657,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 289.67578887939453,\n      \"y\": 202.29835510253906,\n      \"z\": 21.370456218719482\n    }, {\n      \"x\": 315.30879974365234,\n      \"y\": 187.35260009765625,\n      \"z\": 5.0304025411605835\n    }, {\n      \"x\": 287.8936767578125,\n      \"y\": 216.54793739318848,\n      \"z\": 17.81065821647644,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 283.9391899108887,\n      \"y\": 215.01142501831055,\n      \"z\": 32.04984903335571\n    }, {\n      \"x\": 348.35330963134766,\n      \"y\": 299.4155788421631,\n      \"z\": -22.47924566268921\n    }, {\n      \"x\": 341.1790466308594,\n      \"y\": 301.8221855163574,\n      \"z\": -18.977805376052856\n    }, {\n      \"x\": 335.69713592529297,\n      \"y\": 304.4266891479492,\n      \"z\": -14.682706594467163\n    }, {\n      \"x\": 339.4615173339844,\n      \"y\": 272.3654365539551,\n      \"z\": -16.38674020767212\n    }, {\n      \"x\": 328.99600982666016,\n      \"y\": 308.86685371398926,\n      \"z\": -5.616893768310547\n    }, {\n      \"x\": 332.00313568115234,\n      \"y\": 309.1875743865967,\n      \"z\": -10.335084199905396\n    }, {\n      \"x\": 331.0068130493164,\n      \"y\": 307.9274368286133,\n      \"z\": -6.681914925575256,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 341.13792419433594,\n      \"y\": 266.4876937866211,\n      \"z\": -26.56425952911377\n    }, {\n      \"x\": 339.02950286865234,\n      \"y\": 305.6663703918457,\n      \"z\": -12.33674168586731,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 344.22935485839844,\n      \"y\": 304.9452781677246,\n      \"z\": -15.161235332489014,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 350.1844024658203,\n      \"y\": 304.374303817749,\n      \"z\": -17.5305438041687,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 348.52630615234375,\n      \"y\": 325.9562301635742,\n      \"z\": -16.164982318878174\n    }, {\n      \"x\": 348.6581802368164,\n      \"y\": 317.1624183654785,\n      \"z\": -21.510512828826904,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 348.9766311645508,\n      \"y\": 312.1923065185547,\n      \"z\": -21.708929538726807\n    }, {\n      \"x\": 349.2427444458008,\n      \"y\": 308.0660820007324,\n      \"z\": -19.643079042434692\n    }, {\n      \"x\": 349.67491149902344,\n      \"y\": 305.42747497558594,\n      \"z\": -18.16080331802368,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 337.95589447021484,\n      \"y\": 306.6535949707031,\n      \"z\": -12.803598642349243,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 337.06878662109375,\n      \"y\": 307.63169288635254,\n      \"z\": -14.274203777313232\n    }, {\n      \"x\": 335.77449798583984,\n      \"y\": 309.8449516296387,\n      \"z\": -15.698124170303345\n    }, {\n      \"x\": 334.6099090576172,\n      \"y\": 312.7997016906738,\n      \"z\": -14.764405488967896,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 327.2330856323242,\n      \"y\": 293.80866050720215,\n      \"z\": -11.864047050476074\n    }, {\n      \"x\": 280.97679138183594,\n      \"y\": 279.79928970336914,\n      \"z\": 68.90834331512451,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 355.13843536376953,\n      \"y\": 271.7875671386719,\n      \"z\": -25.350427627563477\n    }, {\n      \"x\": 334.7235870361328,\n      \"y\": 307.4656391143799,\n      \"z\": -9.302158951759338,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 333.5293960571289,\n      \"y\": 307.89782524108887,\n      \"z\": -10.200862884521484\n    }, {\n      \"x\": 346.29688262939453,\n      \"y\": 276.4256286621094,\n      \"z\": -19.748122692108154\n    }, {\n      \"x\": 335.16246795654297,\n      \"y\": 276.22097969055176,\n      \"z\": -12.313398122787476\n    }, {\n      \"x\": 345.09132385253906,\n      \"y\": 274.7082996368408,\n      \"z\": -19.304605722427368\n    }, {\n      \"x\": 325.4267883300781,\n      \"y\": 252.95130729675293,\n      \"z\": -1.6661019623279572\n    }, {\n      \"x\": 315.347843170166,\n      \"y\": 259.05200958251953,\n      \"z\": -0.25604281574487686\n    }, {\n      \"x\": 330.44933319091797,\n      \"y\": 267.7570152282715,\n      \"z\": -14.017432928085327\n    }, {\n      \"x\": 294.96768951416016,\n      \"y\": 185.26001930236816,\n      \"z\": 23.903164863586426,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 299.63531494140625,\n      \"y\": 192.7913761138916,\n      \"z\": 12.640198469161987\n    }, {\n      \"x\": 304.5452117919922,\n      \"y\": 202.4142837524414,\n      \"z\": 3.244667649269104,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 331.6915512084961,\n      \"y\": 320.0467872619629,\n      \"z\": -10.632705688476562\n    }, {\n      \"x\": 334.5911407470703,\n      \"y\": 201.27566814422607,\n      \"z\": -6.133356094360352,\n      \"name\": \"rightEyebrow\"\n    }, {\n      \"x\": 331.4815902709961,\n      \"y\": 185.44180870056152,\n      \"z\": 0.6627205014228821\n    }, {\n      \"x\": 328.05816650390625,\n      \"y\": 170.8385467529297,\n      \"z\": 7.358860373497009,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 304.49764251708984,\n      \"y\": 239.76297855377197,\n      \"z\": 10.387605428695679\n    }, {\n      \"x\": 290.6382179260254,\n      \"y\": 248.85257720947266,\n      \"z\": 19.03616428375244\n    }, {\n      \"x\": 331.5682601928711,\n      \"y\": 233.20727348327637,\n      \"z\": 7.837390303611755\n    }, {\n      \"x\": 295.5115509033203,\n      \"y\": 228.9834451675415,\n      \"z\": 14.41426157951355\n    }, {\n      \"x\": 336.94332122802734,\n      \"y\": 241.8259334564209,\n      \"z\": -5.27842104434967\n    }, {\n      \"x\": 336.2792205810547,\n      \"y\": 262.7049922943115,\n      \"z\": -26.12074375152588\n    }, {\n      \"x\": 284.4102478027344,\n      \"y\": 255.3262710571289,\n      \"z\": 25.467140674591064\n    }, {\n      \"x\": 295.1420593261719,\n      \"y\": 253.02655220031738,\n      \"z\": 12.430112361907959\n    }, {\n      \"x\": 303.5196113586426,\n      \"y\": 254.20703887939453,\n      \"z\": 6.139191389083862\n    }, {\n      \"x\": 315.73450088500977,\n      \"y\": 251.64799690246582,\n      \"z\": 3.3788898587226868\n    }, {\n      \"x\": 324.69661712646484,\n      \"y\": 247.56494522094727,\n      \"z\": 2.3328344523906708\n    }, {\n      \"x\": 331.57970428466797,\n      \"y\": 243.02241325378418,\n      \"z\": 1.1423448473215103\n    }, {\n      \"x\": 345.6210708618164,\n      \"y\": 229.9976634979248,\n      \"z\": -10.825285911560059\n    }, {\n      \"x\": 286.26644134521484,\n      \"y\": 270.37991523742676,\n      \"z\": 21.708929538726807\n    }, {\n      \"x\": 290.2525520324707,\n      \"y\": 228.4921360015869,\n      \"z\": 17.71728754043579\n    }, {\n      \"x\": 351.65367126464844,\n      \"y\": 269.3400764465332,\n      \"z\": -33.450424671173096\n    }, {\n      \"x\": 333.1378936767578,\n      \"y\": 253.88388633728027,\n      \"z\": -7.230473756790161\n    }, {\n      \"x\": 277.8318977355957,\n      \"y\": 246.95331573486328,\n      \"z\": 68.20805549621582,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 336.6680908203125,\n      \"y\": 238.10003757476807,\n      \"z\": 0.7688578963279724\n    }, {\n      \"x\": 329.95800018310547,\n      \"y\": 269.18323516845703,\n      \"z\": -7.207130789756775\n    }, {\n      \"x\": 299.17491912841797,\n      \"y\": 234.13324356079102,\n      \"z\": 15.95489501953125\n    }, {\n      \"x\": 335.61729431152344,\n      \"y\": 258.71752738952637,\n      \"z\": -23.016133308410645\n    }, {\n      \"x\": 284.1079330444336,\n      \"y\": 297.0343494415283,\n      \"z\": 63.25934886932373,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 331.44542694091797,\n      \"y\": 230.6892442703247,\n      \"z\": 9.92658257484436,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 341.41536712646484,\n      \"y\": 253.01264762878418,\n      \"z\": -29.038610458374023\n    }, {\n      \"x\": 303.5472869873047,\n      \"y\": 327.5896739959717,\n      \"z\": 16.725212335586548\n    }, {\n      \"x\": 304.7756576538086,\n      \"y\": 337.4389457702637,\n      \"z\": 27.38126277923584,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 280.80501556396484,\n      \"y\": 275.32050132751465,\n      \"z\": 45.0752067565918\n    }, {\n      \"x\": 295.43582916259766,\n      \"y\": 318.4501647949219,\n      \"z\": 26.2608003616333\n    }, {\n      \"x\": 281.4303207397461,\n      \"y\": 228.7355661392212,\n      \"z\": 40.94350814819336\n    }, {\n      \"x\": 331.2549591064453,\n      \"y\": 349.4216537475586,\n      \"z\": -7.376367449760437\n    }, {\n      \"x\": 352.4247741699219,\n      \"y\": 271.7330074310303,\n      \"z\": -24.953596591949463\n    }, {\n      \"x\": 327.5672912597656,\n      \"y\": 260.41900634765625,\n      \"z\": -5.456410646438599\n    }, {\n      \"x\": 284.5432472229004,\n      \"y\": 241.7647933959961,\n      \"z\": 29.668869972229004\n    }, {\n      \"x\": 310,\n      \"y\": 235.66174507141113,\n      \"z\": 8.502663969993591,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 315.7071113586426,\n      \"y\": 235.7572603225708,\n      \"z\": 6.938687562942505,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 330.41088104248047,\n      \"y\": 311.04143142700195,\n      \"z\": -9.325502514839172,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 288.5377502441406,\n      \"y\": 285.31983375549316,\n      \"z\": 21.837315559387207\n    }, {\n      \"x\": 344.55039978027344,\n      \"y\": 359.4300842285156,\n      \"z\": -6.705257892608643,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 323.41880798339844,\n      \"y\": 351.67362213134766,\n      \"z\": 7.802375555038452,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 314.64088439941406,\n      \"y\": 346.11894607543945,\n      \"z\": 16.36339783668518,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 349.4945526123047,\n      \"y\": 184.8434829711914,\n      \"z\": -0.21847527474164963\n    }, {\n      \"x\": 359.24694061279297,\n      \"y\": 359.8348903656006,\n      \"z\": -8.403456211090088,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 321.26182556152344,\n      \"y\": 234.64492321014404,\n      \"z\": 6.90950870513916,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 326.318359375,\n      \"y\": 232.90250301361084,\n      \"z\": 8.029969334602356,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 329.6211624145508,\n      \"y\": 231.6195774078369,\n      \"z\": 9.722331762313843,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 285.9398078918457,\n      \"y\": 228.2351303100586,\n      \"z\": 24.650139808654785\n    }, {\n      \"x\": 325.79288482666016,\n      \"y\": 227.88007736206055,\n      \"z\": 7.469738721847534,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 320.1699447631836,\n      \"y\": 227.5934886932373,\n      \"z\": 6.168370842933655,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 314.85408782958984,\n      \"y\": 227.85282611846924,\n      \"z\": 6.2675780057907104,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 309.3084907531738,\n      \"y\": 229.1516876220703,\n      \"z\": 7.7031683921813965,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 305.5621337890625,\n      \"y\": 230.92366218566895,\n      \"z\": 9.722331762313843,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 277.8681945800781,\n      \"y\": 228.5354232788086,\n      \"z\": 59.71122741699219,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 306.1444664001465,\n      \"y\": 235.1954698562622,\n      \"z\": 10.603528022766113,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 355.4478454589844,\n      \"y\": 281.96210861206055,\n      \"z\": -20.565123558044434\n    }, {\n      \"x\": 333.02661895751953,\n      \"y\": 288.0105400085449,\n      \"z\": -14.72939133644104\n    }, {\n      \"x\": 337.15728759765625,\n      \"y\": 269.2059516906738,\n      \"z\": -19.8414945602417\n    }, {\n      \"x\": 345.9898376464844,\n      \"y\": 283.5453128814697,\n      \"z\": -20.4834246635437\n    }, {\n      \"x\": 351.48963928222656,\n      \"y\": 219.98916149139404,\n      \"z\": -7.0378947257995605\n    }, {\n      \"x\": 312.39574432373047,\n      \"y\": 336.50628089904785,\n      \"z\": 8.671900033950806\n    }, {\n      \"x\": 321.32152557373047,\n      \"y\": 343.1755256652832,\n      \"z\": 0.9067271649837494\n    }, {\n      \"x\": 343.78379821777344,\n      \"y\": 353.2975959777832,\n      \"z\": -14.355905055999756\n    }, {\n      \"x\": 296.8791389465332,\n      \"y\": 327.91497230529785,\n      \"z\": 41.01353645324707,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 329.6939468383789,\n      \"y\": 229.27897453308105,\n      \"z\": 8.934508562088013,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 341.6905212402344,\n      \"y\": 241.4073657989502,\n      \"z\": -14.589333534240723\n    }, {\n      \"x\": 359.03079986572266,\n      \"y\": 353.48859786987305,\n      \"z\": -15.803166627883911\n    }, {\n      \"x\": 333.1861877441406,\n      \"y\": 356.43213272094727,\n      \"z\": -1.0234417766332626,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 283.97483825683594,\n      \"y\": 291.4318656921387,\n      \"z\": 41.94725513458252\n    }, {\n      \"x\": 343.33770751953125,\n      \"y\": 305.830135345459,\n      \"z\": -15.756480693817139,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 342.40283966064453,\n      \"y\": 307.7453899383545,\n      \"z\": -17.4021577835083\n    }, {\n      \"x\": 341.53621673583984,\n      \"y\": 311.0595703125,\n      \"z\": -19.047834873199463\n    }, {\n      \"x\": 340.9107208251953,\n      \"y\": 315.4837703704834,\n      \"z\": -18.5576331615448,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 339.1478729248047,\n      \"y\": 323.42233657836914,\n      \"z\": -14.367576837539673\n    }, {\n      \"x\": 333.3201599121094,\n      \"y\": 307.4406337738037,\n      \"z\": -9.617288708686829\n    }, {\n      \"x\": 331.2411117553711,\n      \"y\": 306.9811820983887,\n      \"z\": -9.669809937477112\n    }, {\n      \"x\": 329.23255920410156,\n      \"y\": 306.0508346557617,\n      \"z\": -9.582273960113525,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 322.4586486816406,\n      \"y\": 301.33323669433594,\n      \"z\": -7.720675468444824\n    }, {\n      \"x\": 297.1712112426758,\n      \"y\": 286.9552803039551,\n      \"z\": 8.240055441856384\n    }, {\n      \"x\": 341.3060760498047,\n      \"y\": 235.4432201385498,\n      \"z\": -7.504753470420837\n    }, {\n      \"x\": 336.9318389892578,\n      \"y\": 224.3451976776123,\n      \"z\": 5.829898118972778\n    }, {\n      \"x\": 332.65323638916016,\n      \"y\": 226.70403957366943,\n      \"z\": 8.105834126472473\n    }, {\n      \"x\": 334.67357635498047,\n      \"y\": 306.4397621154785,\n      \"z\": -8.981193900108337,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 297.4601936340332,\n      \"y\": 306.29210472106934,\n      \"z\": 15.476365089416504\n    }, {\n      \"x\": 342.9119110107422,\n      \"y\": 222.37077713012695,\n      \"z\": -2.754466235637665\n    }, {\n      \"x\": 335.4629898071289,\n      \"y\": 332.20250129699707,\n      \"z\": -11.823196411132812\n    }, {\n      \"x\": 353.2412338256836,\n      \"y\": 240.56339263916016,\n      \"z\": -27.147831916809082\n    }, {\n      \"x\": 346.3080596923828,\n      \"y\": 236.41446590423584,\n      \"z\": -18.452589511871338\n    }, {\n      \"x\": 352.6475143432617,\n      \"y\": 234.1420555114746,\n      \"z\": -19.748122692108154\n    }, {\n      \"x\": 337.3209762573242,\n      \"y\": 253.39937210083008,\n      \"z\": -16.024924516677856\n    }, {\n      \"x\": 358.6122131347656,\n      \"y\": 344.90861892700195,\n      \"z\": -18.592647314071655\n    }, {\n      \"x\": 358.1117248535156,\n      \"y\": 334.64990615844727,\n      \"z\": -17.49552845954895\n    }, {\n      \"x\": 346.4450454711914,\n      \"y\": 335.0321102142334,\n      \"z\": -16.32838249206543\n    }, {\n      \"x\": 319.17640686035156,\n      \"y\": 320.2833938598633,\n      \"z\": -3.276764452457428\n    }, {\n      \"x\": 325.2540588378906,\n      \"y\": 276.2369728088379,\n      \"z\": -6.460157036781311\n    }, {\n      \"x\": 326.7214584350586,\n      \"y\": 327.3939514160156,\n      \"z\": -7.417217493057251\n    }, {\n      \"x\": 310.7190132141113,\n      \"y\": 277.2265148162842,\n      \"z\": -3.5452082753181458\n    }, {\n      \"x\": 319.78355407714844,\n      \"y\": 284.8238182067871,\n      \"z\": -6.4543211460113525\n    }, {\n      \"x\": 305.773983001709,\n      \"y\": 290.83580017089844,\n      \"z\": 0.06907138042151928\n    }, {\n      \"x\": 344.4001770019531,\n      \"y\": 344.85408782958984,\n      \"z\": -16.946970224380493\n    }, {\n      \"x\": 333.1879425048828,\n      \"y\": 258.74256134033203,\n      \"z\": -11.90489649772644\n    }, {\n      \"x\": 313.80598068237305,\n      \"y\": 327.08919525146484,\n      \"z\": 2.2277912497520447\n    }, {\n      \"x\": 322.9637908935547,\n      \"y\": 334.6819496154785,\n      \"z\": -3.3643004298210144\n    }, {\n      \"x\": 313.4055519104004,\n      \"y\": 311.2166690826416,\n      \"z\": -1.1175429821014404\n    }, {\n      \"x\": 291.0865783691406,\n      \"y\": 298.2831001281738,\n      \"z\": 22.467575073242188\n    }, {\n      \"x\": 305.6580924987793,\n      \"y\": 313.3707904815674,\n      \"z\": 5.561453700065613\n    }, {\n      \"x\": 288.23760986328125,\n      \"y\": 305.9941864013672,\n      \"z\": 36.765122413635254\n    }, {\n      \"x\": 315.10692596435547,\n      \"y\": 296.26991271972656,\n      \"z\": -4.604393839836121\n    }, {\n      \"x\": 337.50518798828125,\n      \"y\": 247.5944423675537,\n      \"z\": -10.597691535949707\n    }, {\n      \"x\": 338.8450622558594,\n      \"y\": 265.47778129577637,\n      \"z\": -27.778091430664062\n    }, {\n      \"x\": 334.25254821777344,\n      \"y\": 269.0671920776367,\n      \"z\": -20.938611030578613\n    }, {\n      \"x\": 341.64512634277344,\n      \"y\": 259.6387195587158,\n      \"z\": -32.189905643463135\n    }, {\n      \"x\": 331.44081115722656,\n      \"y\": 219.0976095199585,\n      \"z\": 4.207563698291779\n    }, {\n      \"x\": 320.56339263916016,\n      \"y\": 216.49658203125,\n      \"z\": 2.930997312068939\n    }, {\n      \"x\": 311.21912002563477,\n      \"y\": 216.57853603363037,\n      \"z\": 2.9674705862998962\n    }, {\n      \"x\": 303.46256256103516,\n      \"y\": 218.54614734649658,\n      \"z\": 5.357203483581543\n    }, {\n      \"x\": 297.99999237060547,\n      \"y\": 222.505202293396,\n      \"z\": 9.325502514839172\n    }, {\n      \"x\": 294.93839263916016,\n      \"y\": 236.39654159545898,\n      \"z\": 18.534289598464966\n    }, {\n      \"x\": 278.87489318847656,\n      \"y\": 259.7095584869385,\n      \"z\": 45.68212032318115\n    }, {\n      \"x\": 300.3782653808594,\n      \"y\": 245.38593292236328,\n      \"z\": 12.278382778167725\n    }, {\n      \"x\": 307.06348419189453,\n      \"y\": 246.36857986450195,\n      \"z\": 8.164191246032715\n    }, {\n      \"x\": 315.5229187011719,\n      \"y\": 245.3949737548828,\n      \"z\": 5.503097176551819\n    }, {\n      \"x\": 323.71395111083984,\n      \"y\": 242.75178909301758,\n      \"z\": 4.6335723996162415\n    }, {\n      \"x\": 330.2785873413086,\n      \"y\": 239.34658527374268,\n      \"z\": 4.937030673027039\n    }, {\n      \"x\": 334.6982192993164,\n      \"y\": 236.0460376739502,\n      \"z\": 4.823233783245087\n    }, {\n      \"x\": 279.3412208557129,\n      \"y\": 263.5196113586426,\n      \"z\": 70.91583728790283,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 334.65972900390625,\n      \"y\": 271.6648578643799,\n      \"z\": -17.775644063949585\n    }, {\n      \"x\": 342.05677032470703,\n      \"y\": 246.99846267700195,\n      \"z\": -20.84523916244507\n    }, {\n      \"x\": 344.0357971191406,\n      \"y\": 264.5701503753662,\n      \"z\": -32.936880588531494\n    }, {\n      \"x\": 348.25531005859375,\n      \"y\": 268.6645030975342,\n      \"z\": -30.695960521697998\n    }, {\n      \"x\": 344.12227630615234,\n      \"y\": 266.34212493896484,\n      \"z\": -29.808926582336426\n    }, {\n      \"x\": 337.12318420410156,\n      \"y\": 274.2556858062744,\n      \"z\": -15.768152475357056\n    }, {\n      \"x\": 349.49047088623047,\n      \"y\": 269.071683883667,\n      \"z\": -32.51670837402344\n    }, {\n      \"x\": 350.1683044433594,\n      \"y\": 271.4691352844238,\n      \"z\": -24.93025302886963\n    }, {\n      \"x\": 333.9634704589844,\n      \"y\": 230.56639194488525,\n      \"z\": 8.89949381351471\n    }, {\n      \"x\": 338.2147979736328,\n      \"y\": 231.4807891845703,\n      \"z\": 4.6715047955513\n    }, {\n      \"x\": 340.4712677001953,\n      \"y\": 231.74463272094727,\n      \"z\": -0.34996166825294495\n    }, {\n      \"x\": 303.28975677490234,\n      \"y\": 232.24980354309082,\n      \"z\": 11.916568279266357,\n      \"name\": \"rightEye\"\n    }, {\n      \"x\": 299.4649124145508,\n      \"y\": 229.53842639923096,\n      \"z\": 12.325069904327393\n    }, {\n      \"x\": 359.09618377685547,\n      \"y\": 241.77349090576172,\n      \"z\": -24.650139808654785\n    }, {\n      \"x\": 399.46216583251953,\n      \"y\": 229.89503860473633,\n      \"z\": 15.919880867004395,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 361.38919830322266,\n      \"y\": 269.6129894256592,\n      \"z\": -24.510080814361572\n    }, {\n      \"x\": 416.9973373413086,\n      \"y\": 206.0895538330078,\n      \"z\": 53.26857566833496,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 381.32179260253906,\n      \"y\": 235.5476474761963,\n      \"z\": 7.6214683055877686\n    }, {\n      \"x\": 387.8068542480469,\n      \"y\": 236.25958442687988,\n      \"z\": 8.345099091529846\n    }, {\n      \"x\": 393.95751953125,\n      \"y\": 235.8660364151001,\n      \"z\": 10.475142002105713\n    }, {\n      \"x\": 401.84600830078125,\n      \"y\": 232.77019500732422,\n      \"z\": 16.760226488113403\n    }, {\n      \"x\": 375.70568084716797,\n      \"y\": 233.48456382751465,\n      \"z\": 8.234220147132874\n    }, {\n      \"x\": 388.17752838134766,\n      \"y\": 218.94717693328857,\n      \"z\": 6.810300946235657\n    }, {\n      \"x\": 381.64928436279297,\n      \"y\": 219.2656660079956,\n      \"z\": 6.711093783378601\n    }, {\n      \"x\": 394.4760513305664,\n      \"y\": 219.66821193695068,\n      \"z\": 9.173773527145386\n    }, {\n      \"x\": 398.8843536376953,\n      \"y\": 221.8837022781372,\n      \"z\": 12.03328251838684\n    }, {\n      \"x\": 406.5454864501953,\n      \"y\": 237.12156772613525,\n      \"z\": 19.7131085395813\n    }, {\n      \"x\": 383.87447357177734,\n      \"y\": 337.6932907104492,\n      \"z\": -8.631049990653992\n    }, {\n      \"x\": 401.2682342529297,\n      \"y\": 228.5916566848755,\n      \"z\": 18.359217643737793,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 422.0449447631836,\n      \"y\": 236.73934936523438,\n      \"z\": 51.16771221160889\n    }, {\n      \"x\": 412.69153594970703,\n      \"y\": 232.80198097229004,\n      \"z\": 27.52131938934326\n    }, {\n      \"x\": 387.3497772216797,\n      \"y\": 263.298397064209,\n      \"z\": -2.8609684109687805\n    }, {\n      \"x\": 364.5124053955078,\n      \"y\": 293.39221000671387,\n      \"z\": -22.397546768188477,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 363.62987518310547,\n      \"y\": 302.1291446685791,\n      \"z\": -19.643079042434692\n    }, {\n      \"x\": 373.2334518432617,\n      \"y\": 295.8647060394287,\n      \"z\": -18.125789165496826,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 378.83365631103516,\n      \"y\": 299.5177745819092,\n      \"z\": -13.153743743896484,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 369.91477966308594,\n      \"y\": 302.5704002380371,\n      \"z\": -16.65518283843994\n    }, {\n      \"x\": 374.9167251586914,\n      \"y\": 303.5416603088379,\n      \"z\": -11.963253021240234\n    }, {\n      \"x\": 387.58888244628906,\n      \"y\": 312.2716999053955,\n      \"z\": -4.680258631706238\n    }, {\n      \"x\": 360.6635284423828,\n      \"y\": 264.31986808776855,\n      \"z\": -35.94811677932739\n    }, {\n      \"x\": 361.04564666748047,\n      \"y\": 256.8225860595703,\n      \"z\": -37.278664112091064\n    }, {\n      \"x\": 408.3855438232422,\n      \"y\": 213.52088928222656,\n      \"z\": 15.756480693817139,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 373.2946014404297,\n      \"y\": 245.38101196289062,\n      \"z\": -1.9316278398036957\n    }, {\n      \"x\": 376.83860778808594,\n      \"y\": 264.3721103668213,\n      \"z\": -18.510947227478027\n    }, {\n      \"x\": 376.9546127319336,\n      \"y\": 261.0010528564453,\n      \"z\": -15.989909172058105\n    }, {\n      \"x\": 406.1498260498047,\n      \"y\": 263.5030174255371,\n      \"z\": 7.072908878326416\n    }, {\n      \"x\": 360.07205963134766,\n      \"y\": 248.3631706237793,\n      \"z\": -32.16656446456909\n    }, {\n      \"x\": 393.11119079589844,\n      \"y\": 205.10473251342773,\n      \"z\": 3.7786373496055603,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 402.12791442871094,\n      \"y\": 207.89000988006592,\n      \"z\": 9.383859634399414,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 410.8693313598633,\n      \"y\": 191.6182279586792,\n      \"z\": 41.27030849456787,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 364.9509811401367,\n      \"y\": 210.40483474731445,\n      \"z\": -3.758212625980377\n    }, {\n      \"x\": 375.94444274902344,\n      \"y\": 221.1331844329834,\n      \"z\": 8.368442058563232\n    }, {\n      \"x\": 392.1904754638672,\n      \"y\": 305.0360298156738,\n      \"z\": -1.752179116010666\n    }, {\n      \"x\": 419.50225830078125,\n      \"y\": 307.25592613220215,\n      \"z\": 58.96425247192383,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 372.0027160644531,\n      \"y\": 268.7212657928467,\n      \"z\": -16.631840467453003\n    }, {\n      \"x\": 366.1614227294922,\n      \"y\": 271.6237449645996,\n      \"z\": -18.219159841537476\n    }, {\n      \"x\": 385.00938415527344,\n      \"y\": 305.3863334655762,\n      \"z\": -2.567722797393799\n    }, {\n      \"x\": 381.99771881103516,\n      \"y\": 304.9723720550537,\n      \"z\": -4.575215280056\n    }, {\n      \"x\": 405.078125,\n      \"y\": 203.21216583251953,\n      \"z\": 13.713973760604858,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 377.13207244873047,\n      \"y\": 268.4710121154785,\n      \"z\": -15.266278982162476\n    }, {\n      \"x\": 380.9713363647461,\n      \"y\": 205.36980628967285,\n      \"z\": -0.7250899076461792,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 381.7788314819336,\n      \"y\": 198.9268398284912,\n      \"z\": -1.184653863310814,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 385.5204772949219,\n      \"y\": 172.1484375,\n      \"z\": 16.04826807975769,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 407.94189453125,\n      \"y\": 196.76236152648926,\n      \"z\": 25.723915100097656\n    }, {\n      \"x\": 383.03890228271484,\n      \"y\": 184.5157527923584,\n      \"z\": 7.393874526023865\n    }, {\n      \"x\": 411.61781311035156,\n      \"y\": 210.79241752624512,\n      \"z\": 22.315845489501953,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 414.30870056152344,\n      \"y\": 208.4643030166626,\n      \"z\": 37.021894454956055\n    }, {\n      \"x\": 364.28722381591797,\n      \"y\": 298.35777282714844,\n      \"z\": -21.86065673828125\n    }, {\n      \"x\": 371.3682556152344,\n      \"y\": 299.78848457336426,\n      \"z\": -17.834001779556274\n    }, {\n      \"x\": 376.88201904296875,\n      \"y\": 301.6696071624756,\n      \"z\": -13.153743743896484\n    }, {\n      \"x\": 370.2193832397461,\n      \"y\": 270.49095153808594,\n      \"z\": -15.569736957550049\n    }, {\n      \"x\": 383.5081100463867,\n      \"y\": 305.2726364135742,\n      \"z\": -3.673594295978546\n    }, {\n      \"x\": 380.73760986328125,\n      \"y\": 305.96869468688965,\n      \"z\": -8.660228252410889\n    }, {\n      \"x\": 381.2334442138672,\n      \"y\": 304.63574409484863,\n      \"z\": -4.820316135883331,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 368.1698989868164,\n      \"y\": 264.8884963989258,\n      \"z\": -25.653886795043945\n    }, {\n      \"x\": 373.5087203979492,\n      \"y\": 303.4233856201172,\n      \"z\": -10.95950722694397,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 368.4544372558594,\n      \"y\": 303.29601287841797,\n      \"z\": -14.169161319732666,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 362.76554107666016,\n      \"y\": 303.5735607147217,\n      \"z\": -16.911956071853638,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 366.60980224609375,\n      \"y\": 324.8870658874512,\n      \"z\": -15.616422891616821\n    }, {\n      \"x\": 365.7067108154297,\n      \"y\": 315.95678329467773,\n      \"z\": -20.903596878051758,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 365.0083923339844,\n      \"y\": 311.2232208251953,\n      \"z\": -21.066999435424805\n    }, {\n      \"x\": 364.1508102416992,\n      \"y\": 307.0583438873291,\n      \"z\": -18.907777070999146\n    }, {\n      \"x\": 363.37512969970703,\n      \"y\": 304.5721435546875,\n      \"z\": -17.42550015449524,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 374.580078125,\n      \"y\": 304.3059539794922,\n      \"z\": -11.40302300453186,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 375.55362701416016,\n      \"y\": 305.0998020172119,\n      \"z\": -12.861957550048828\n    }, {\n      \"x\": 377.2437286376953,\n      \"y\": 307.1674346923828,\n      \"z\": -14.215847253799438\n    }, {\n      \"x\": 378.68587493896484,\n      \"y\": 309.9015712738037,\n      \"z\": -13.223772048950195,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 383.8992691040039,\n      \"y\": 290.29629707336426,\n      \"z\": -9.97326910495758\n    }, {\n      \"x\": 423.3871841430664,\n      \"y\": 271.91688537597656,\n      \"z\": 74.37058925628662,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 377.68043518066406,\n      \"y\": 304.62209701538086,\n      \"z\": -7.603961229324341,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 379.00428771972656,\n      \"y\": 304.9314594268799,\n      \"z\": -8.57852816581726\n    }, {\n      \"x\": 364.00279998779297,\n      \"y\": 275.2813911437988,\n      \"z\": -19.25792098045349\n    }, {\n      \"x\": 374.68231201171875,\n      \"y\": 273.82555961608887,\n      \"z\": -11.28047227859497\n    }, {\n      \"x\": 365.0354766845703,\n      \"y\": 273.4548568725586,\n      \"z\": -18.791062831878662\n    }, {\n      \"x\": 380.61901092529297,\n      \"y\": 249.8848056793213,\n      \"z\": 0.15501167625188828\n    }, {\n      \"x\": 391.14158630371094,\n      \"y\": 254.7934627532959,\n      \"z\": 2.0906515419483185\n    }, {\n      \"x\": 378.1761169433594,\n      \"y\": 264.9612236022949,\n      \"z\": -12.605184316635132\n    }, {\n      \"x\": 400.9540557861328,\n      \"y\": 179.99592304229736,\n      \"z\": 27.82477855682373,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 398.0038833618164,\n      \"y\": 188.50656509399414,\n      \"z\": 16.094952821731567\n    }, {\n      \"x\": 394.8717498779297,\n      \"y\": 199.0359592437744,\n      \"z\": 6.226727366447449,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 382.10926055908203,\n      \"y\": 316.83926582336426,\n      \"z\": -8.946179747581482\n    }, {\n      \"x\": 366.51588439941406,\n      \"y\": 200.32583713531494,\n      \"z\": -5.24632453918457,\n      \"name\": \"leftEyebrow\"\n    }, {\n      \"x\": 367.4893569946289,\n      \"y\": 183.87210845947266,\n      \"z\": 1.9039081037044525\n    }, {\n      \"x\": 368.6243438720703,\n      \"y\": 168.8127565383911,\n      \"z\": 8.736093044281006,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 398.96175384521484,\n      \"y\": 234.9675178527832,\n      \"z\": 13.713973760604858\n    }, {\n      \"x\": 412.9645538330078,\n      \"y\": 242.23042488098145,\n      \"z\": 23.272905349731445\n    }, {\n      \"x\": 372.05257415771484,\n      \"y\": 231.41919136047363,\n      \"z\": 9.226294755935669\n    }, {\n      \"x\": 406.0722351074219,\n      \"y\": 223.58965873718262,\n      \"z\": 18.370890617370605\n    }, {\n      \"x\": 368.27442169189453,\n      \"y\": 240.2039337158203,\n      \"z\": -4.166713654994965\n    }, {\n      \"x\": 372.3575210571289,\n      \"y\": 260.66442489624023,\n      \"z\": -24.976940155029297\n    }, {\n      \"x\": 419.2244338989258,\n      \"y\": 247.9079246520996,\n      \"z\": 30.299127101898193\n    }, {\n      \"x\": 409.43885803222656,\n      \"y\": 246.60913467407227,\n      \"z\": 16.398411989212036\n    }, {\n      \"x\": 401.69139862060547,\n      \"y\": 248.76328468322754,\n      \"z\": 9.395531415939331\n    }, {\n      \"x\": 389.7608184814453,\n      \"y\": 247.56915092468262,\n      \"z\": 5.841569304466248\n    }, {\n      \"x\": 380.5461883544922,\n      \"y\": 244.55984115600586,\n      \"z\": 4.263003468513489\n    }, {\n      \"x\": 373.25817108154297,\n      \"y\": 240.80214500427246,\n      \"z\": 2.5356262922286987\n    }, {\n      \"x\": 358.77086639404297,\n      \"y\": 229.35615062713623,\n      \"z\": -10.387605428695679\n    }, {\n      \"x\": 419.5793914794922,\n      \"y\": 262.8478717803955,\n      \"z\": 26.5175724029541\n    }, {\n      \"x\": 410.8808898925781,\n      \"y\": 222.51372814178467,\n      \"z\": 22.199130058288574\n    }, {\n      \"x\": 358.45714569091797,\n      \"y\": 268.91467094421387,\n      \"z\": -33.17030906677246\n    }, {\n      \"x\": 373.4129333496094,\n      \"y\": 251.6385841369629,\n      \"z\": -5.771540403366089\n    }, {\n      \"x\": 422.5408172607422,\n      \"y\": 239.23919677734375,\n      \"z\": 74.04378890991211,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 367.8171920776367,\n      \"y\": 236.58040523529053,\n      \"z\": 1.820748895406723\n    }, {\n      \"x\": 378.51959228515625,\n      \"y\": 266.2532329559326,\n      \"z\": -5.74819803237915\n    }, {\n      \"x\": 403.3472442626953,\n      \"y\": 229.05112266540527,\n      \"z\": 19.689764976501465\n    }, {\n      \"x\": 372.34840393066406,\n      \"y\": 256.6451168060303,\n      \"z\": -21.872329711914062\n    }, {\n      \"x\": 422.54566192626953,\n      \"y\": 289.1587829589844,\n      \"z\": 68.67491245269775,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 371.9297409057617,\n      \"y\": 228.90116214752197,\n      \"z\": 11.432201862335205,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 366.21360778808594,\n      \"y\": 251.6158962249756,\n      \"z\": -28.19826364517212\n    }, {\n      \"x\": 409.1571807861328,\n      \"y\": 321.3156223297119,\n      \"z\": 20.2266526222229\n    }, {\n      \"x\": 408.52943420410156,\n      \"y\": 331.44238471984863,\n      \"z\": 31.09278917312622,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 424.2788314819336,\n      \"y\": 267.1992301940918,\n      \"z\": 50.467424392700195\n    }, {\n      \"x\": 415.60352325439453,\n      \"y\": 311.6528606414795,\n      \"z\": 30.579242706298828\n    }, {\n      \"x\": 418.12793731689453,\n      \"y\": 221.59927368164062,\n      \"z\": 46.26569747924805\n    }, {\n      \"x\": 385.68286895751953,\n      \"y\": 346.0184955596924,\n      \"z\": -5.70151150226593\n    }, {\n      \"x\": 357.82936096191406,\n      \"y\": 271.3758373260498,\n      \"z\": -24.836881160736084\n    }, {\n      \"x\": 379.588623046875,\n      \"y\": 257.5071716308594,\n      \"z\": -3.755294680595398\n    }, {\n      \"x\": 417.4592590332031,\n      \"y\": 234.71948146820068,\n      \"z\": 34.5475435256958\n    }, {\n      \"x\": 393.4684371948242,\n      \"y\": 231.58967971801758,\n      \"z\": 11.408859491348267,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 387.8864288330078,\n      \"y\": 232.14245796203613,\n      \"z\": 9.51808214187622,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 382.4981689453125,\n      \"y\": 307.5654888153076,\n      \"z\": -7.522260546684265,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 419.00169372558594,\n      \"y\": 277.8332805633545,\n      \"z\": 26.424202919006348\n    }, {\n      \"x\": 373.62953186035156,\n      \"y\": 357.6375102996826,\n      \"z\": -5.75986921787262,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 392.8708267211914,\n      \"y\": 347.72446632385254,\n      \"z\": 10.154176950454712,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 400.3953552246094,\n      \"y\": 341.0005187988281,\n      \"z\": 19.39797878265381,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 382.25440979003906,\n      \"y\": 231.66935920715332,\n      \"z\": 8.998700976371765,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 377.14550018310547,\n      \"y\": 230.4228687286377,\n      \"z\": 9.804032444953918,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 373.8358688354492,\n      \"y\": 229.64950561523438,\n      \"z\": 11.292144060134888,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 414.5794677734375,\n      \"y\": 221.67891025543213,\n      \"z\": 29.412097930908203\n    }, {\n      \"x\": 377.00672149658203,\n      \"y\": 225.66201210021973,\n      \"z\": 9.360517263412476,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 382.29530334472656,\n      \"y\": 224.8431158065796,\n      \"z\": 8.32175612449646,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 387.5133514404297,\n      \"y\": 224.49507236480713,\n      \"z\": 8.917000889778137,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 393.15906524658203,\n      \"y\": 225.24795055389404,\n      \"z\": 10.737749338150024,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 397.05554962158203,\n      \"y\": 226.55359268188477,\n      \"z\": 13.002015352249146,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 420.5299377441406,\n      \"y\": 221.014666557312,\n      \"z\": 65.40690422058105,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 397.06920623779297,\n      \"y\": 230.6661558151245,\n      \"z\": 13.807345628738403,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 377.94647216796875,\n      \"y\": 285.1647090911865,\n      \"z\": -13.305472135543823\n    }, {\n      \"x\": 372.1118927001953,\n      \"y\": 267.1267318725586,\n      \"z\": -18.83774757385254\n    }, {\n      \"x\": 364.9968719482422,\n      \"y\": 282.24411964416504,\n      \"z\": -19.818150997161865\n    }, {\n      \"x\": 401.973876953125,\n      \"y\": 331.20131492614746,\n      \"z\": 11.566424369812012\n    }, {\n      \"x\": 394.3083190917969,\n      \"y\": 338.86693954467773,\n      \"z\": 3.142542541027069\n    }, {\n      \"x\": 373.9820861816406,\n      \"y\": 351.4504623413086,\n      \"z\": -13.50388765335083\n    }, {\n      \"x\": 414.3888854980469,\n      \"y\": 321.24735832214355,\n      \"z\": 45.51872253417969,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 373.44234466552734,\n      \"y\": 227.33163356781006,\n      \"z\": 10.626870393753052,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 364.0731430053711,\n      \"y\": 240.31539916992188,\n      \"z\": -13.807345628738403\n    }, {\n      \"x\": 384.2658233642578,\n      \"y\": 353.3793067932129,\n      \"z\": 0.7385850697755814,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 423.20526123046875,\n      \"y\": 283.5176181793213,\n      \"z\": 47.152724266052246\n    }, {\n      \"x\": 369.42798614501953,\n      \"y\": 304.0898895263672,\n      \"z\": -14.647691249847412,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 370.63812255859375,\n      \"y\": 305.90051651000977,\n      \"z\": -16.211668252944946\n    }, {\n      \"x\": 371.91192626953125,\n      \"y\": 309.0167713165283,\n      \"z\": -17.84567356109619\n    }, {\n      \"x\": 373.0583953857422,\n      \"y\": 313.3545398712158,\n      \"z\": -17.378815412521362,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 375.39905548095703,\n      \"y\": 321.09289169311523,\n      \"z\": -13.118728399276733\n    }, {\n      \"x\": 379.2567825317383,\n      \"y\": 304.3582534790039,\n      \"z\": -7.924926280975342\n    }, {\n      \"x\": 381.18797302246094,\n      \"y\": 303.7031364440918,\n      \"z\": -7.843226194381714\n    }, {\n      \"x\": 383.0918502807617,\n      \"y\": 302.4884605407715,\n      \"z\": -7.6506465673446655,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 389.09461975097656,\n      \"y\": 297.1475315093994,\n      \"z\": -5.5497825145721436\n    }, {\n      \"x\": 411.6408920288086,\n      \"y\": 280.24898529052734,\n      \"z\": 12.02161192893982\n    }, {\n      \"x\": 363.3110809326172,\n      \"y\": 234.27620887756348,\n      \"z\": -6.775286793708801\n    }, {\n      \"x\": 366.0474395751953,\n      \"y\": 223.29872131347656,\n      \"z\": 6.827808618545532\n    }, {\n      \"x\": 370.34427642822266,\n      \"y\": 225.1457118988037,\n      \"z\": 9.558931589126587\n    }, {\n      \"x\": 377.5371551513672,\n      \"y\": 303.60079765319824,\n      \"z\": -7.358860373497009,\n      \"name\": \"lips\"\n    }, {\n      \"x\": 412.9557800292969,\n      \"y\": 299.53579902648926,\n      \"z\": 19.39797878265381\n    }, {\n      \"x\": 360.0810241699219,\n      \"y\": 221.72012329101562,\n      \"z\": -2.153385728597641\n    }, {\n      \"x\": 379.82784271240234,\n      \"y\": 329.47723388671875,\n      \"z\": -10.48097848892212\n    }, {\n      \"x\": 359.08477783203125,\n      \"y\": 235.7911491394043,\n      \"z\": -18.079102039337158\n    }, {\n      \"x\": 369.6688461303711,\n      \"y\": 251.5407943725586,\n      \"z\": -14.962821006774902\n    }, {\n      \"x\": 369.5555114746094,\n      \"y\": 333.5307312011719,\n      \"z\": -15.67478060722351\n    }, {\n      \"x\": 394.0193176269531,\n      \"y\": 315.6973171234131,\n      \"z\": -0.9920747578144073\n    }, {\n      \"x\": 383.78997802734375,\n      \"y\": 272.7268695831299,\n      \"z\": -4.689012169837952\n    }, {\n      \"x\": 387.67765045166016,\n      \"y\": 323.6722755432129,\n      \"z\": -5.640236139297485\n    }, {\n      \"x\": 397.8769302368164,\n      \"y\": 272.1331214904785,\n      \"z\": -0.9395531564950943\n    }, {\n      \"x\": 389.87476348876953,\n      \"y\": 280.5630111694336,\n      \"z\": -4.29218202829361\n    }, {\n      \"x\": 403.83888244628906,\n      \"y\": 285.1167869567871,\n      \"z\": 3.0229100584983826\n    }, {\n      \"x\": 372.5467300415039,\n      \"y\": 343.1070327758789,\n      \"z\": -16.153310537338257\n    }, {\n      \"x\": 374.1112518310547,\n      \"y\": 256.3721466064453,\n      \"z\": -10.574349164962769\n    }, {\n      \"x\": 399.73785400390625,\n      \"y\": 321.77515983581543,\n      \"z\": 4.849494695663452\n    }, {\n      \"x\": 392.03365325927734,\n      \"y\": 330.56447982788086,\n      \"z\": -1.3407598435878754\n    }, {\n      \"x\": 398.59134674072266,\n      \"y\": 305.93902587890625,\n      \"z\": 1.517290621995926\n    }, {\n      \"x\": 417.95997619628906,\n      \"y\": 290.9716987609863,\n      \"z\": 26.89105987548828\n    }, {\n      \"x\": 406.04541778564453,\n      \"y\": 307.35154151916504,\n      \"z\": 8.666064143180847\n    }, {\n      \"x\": 420.75328826904297,\n      \"y\": 298.40752601623535,\n      \"z\": 41.78385257720947\n    }, {\n      \"x\": 395.4522705078125,\n      \"y\": 291.4153575897217,\n      \"z\": -2.1752697229385376\n    }, {\n      \"x\": 368.6452102661133,\n      \"y\": 245.8882999420166,\n      \"z\": -9.453888535499573\n    }, {\n      \"x\": 370.34900665283203,\n      \"y\": 263.56690406799316,\n      \"z\": -26.75100326538086\n    }, {\n      \"x\": 374.98477935791016,\n      \"y\": 266.6126346588135,\n      \"z\": -19.77146625518799\n    }, {\n      \"x\": 366.99840545654297,\n      \"y\": 258.12140464782715,\n      \"z\": -31.372904777526855\n    }, {\n      \"x\": 371.00616455078125,\n      \"y\": 217.63479709625244,\n      \"z\": 5.60522198677063\n    }, {\n      \"x\": 381.30577087402344,\n      \"y\": 214.14087295532227,\n      \"z\": 4.983716309070587\n    }, {\n      \"x\": 390.1496124267578,\n      \"y\": 213.38221549987793,\n      \"z\": 5.593550801277161\n    }, {\n      \"x\": 397.7696990966797,\n      \"y\": 214.3659782409668,\n      \"z\": 8.57852816581726\n    }, {\n      \"x\": 403.1652069091797,\n      \"y\": 217.65509605407715,\n      \"z\": 13.013685941696167\n    }, {\n      \"x\": 407.3551940917969,\n      \"y\": 230.72525024414062,\n      \"z\": 22.444231510162354\n    }, {\n      \"x\": 424.0876770019531,\n      \"y\": 251.7839241027832,\n      \"z\": 51.16771221160889\n    }, {\n      \"x\": 403.50196838378906,\n      \"y\": 239.88757610321045,\n      \"z\": 15.803166627883911\n    }, {\n      \"x\": 397.31719970703125,\n      \"y\": 241.49806022644043,\n      \"z\": 11.233787536621094\n    }, {\n      \"x\": 388.99425506591797,\n      \"y\": 241.4366912841797,\n      \"z\": 7.948269248008728\n    }, {\n      \"x\": 380.7804489135742,\n      \"y\": 239.78078842163086,\n      \"z\": 6.600214838981628\n    }, {\n      \"x\": 374.01336669921875,\n      \"y\": 237.11946487426758,\n      \"z\": 6.349278092384338\n    }, {\n      \"x\": 369.39125061035156,\n      \"y\": 234.35351371765137,\n      \"z\": 5.987462401390076\n    }, {\n      \"x\": 422.9730987548828,\n      \"y\": 255.76455116271973,\n      \"z\": 76.61150932312012,\n      \"name\": \"faceOval\"\n    }, {\n      \"x\": 374.73915100097656,\n      \"y\": 269.24214363098145,\n      \"z\": -16.608498096466064\n    }, {\n      \"x\": 364.61681365966797,\n      \"y\": 245.71088790893555,\n      \"z\": -20.02823829650879\n    }, {\n      \"x\": 365.3834533691406,\n      \"y\": 263.34174156188965,\n      \"z\": -32.32996463775635\n    }, {\n      \"x\": 361.58252716064453,\n      \"y\": 267.8273677825928,\n      \"z\": -30.345816612243652\n    }, {\n      \"x\": 365.37208557128906,\n      \"y\": 265.0249671936035,\n      \"z\": -29.178667068481445\n    }, {\n      \"x\": 372.72605895996094,\n      \"y\": 272.05135345458984,\n      \"z\": -14.834434986114502\n    }, {\n      \"x\": 360.48614501953125,\n      \"y\": 268.34827423095703,\n      \"z\": -32.189905643463135\n    }, {\n      \"x\": 359.9516296386719,\n      \"y\": 270.8049201965332,\n      \"z\": -24.650139808654785\n    }, {\n      \"x\": 369.5049285888672,\n      \"y\": 229.01945114135742,\n      \"z\": 10.107489824295044\n    }, {\n      \"x\": 365.5447769165039,\n      \"y\": 230.24096488952637,\n      \"z\": 5.593550801277161\n    }, {\n      \"x\": 363.50669860839844,\n      \"y\": 230.6208372116089,\n      \"z\": 0.43622106313705444\n    }, {\n      \"x\": 399.3529510498047,\n      \"y\": 227.65677452087402,\n      \"z\": 15.35965085029602,\n      \"name\": \"leftEye\"\n    }, {\n      \"x\": 402.5693130493164,\n      \"y\": 224.60190296173096,\n      \"z\": 15.931552648544312\n    }],\n    \"box\": {\n      \"xMin\": 277.8318977355957,\n      \"yMin\": 168.7741756439209,\n      \"xMax\": 424.2788314819336,\n      \"yMax\": 359.8348903656006,\n      \"width\": 146.4469337463379,\n      \"height\": 191.0607147216797\n    }\n  },\n  // Tasks-vision: https://developers.google.com/mediapipe/solutions/vision/face_landmarker/web_js\n  // prettier-ignore\n  SAMPLE_FACELANDMARKER_RESULT: {\n    \"faceLandmarks\": [[{\n      \"x\": 0.5760777592658997,\n      \"y\": 0.8639070391654968,\n      \"z\": -0.030997956171631813\n    }, {\n      \"x\": 0.572094738483429,\n      \"y\": 0.7886289358139038,\n      \"z\": -0.07189624011516571\n    }, {\n      \"x\": 0.5723551511764526,\n      \"y\": 0.8075382709503174,\n      \"z\": -0.03578168898820877\n    }, {\n      \"x\": 0.5548420548439026,\n      \"y\": 0.7188365459442139,\n      \"z\": -0.057787876576185226\n    }, {\n      \"x\": 0.5706077814102173,\n      \"y\": 0.7674974799156189,\n      \"z\": -0.07740399986505508\n    }, {\n      \"x\": 0.5681378245353699,\n      \"y\": 0.7387768030166626,\n      \"z\": -0.07356284558773041\n    }, {\n      \"x\": 0.5621535181999207,\n      \"y\": 0.6681165099143982,\n      \"z\": -0.04189874976873398\n    }, {\n      \"x\": 0.46613582968711853,\n      \"y\": 0.6679812073707581,\n      \"z\": 0.011289681307971478\n    }, {\n      \"x\": 0.5579932928085327,\n      \"y\": 0.6174106597900391,\n      \"z\": -0.03502821549773216\n    }, {\n      \"x\": 0.5563451647758484,\n      \"y\": 0.5905600190162659,\n      \"z\": -0.03928658738732338\n    }, {\n      \"x\": 0.5487832427024841,\n      \"y\": 0.4900572597980499,\n      \"z\": -0.029898937791585922\n    }, {\n      \"x\": 0.5765544176101685,\n      \"y\": 0.8692144751548767,\n      \"z\": -0.02831427752971649\n    }, {\n      \"x\": 0.5771114230155945,\n      \"y\": 0.873644232749939,\n      \"z\": -0.02345779910683632\n    }, {\n      \"x\": 0.5771905779838562,\n      \"y\": 0.877016007900238,\n      \"z\": -0.016658689826726913\n    }, {\n      \"x\": 0.5778058767318726,\n      \"y\": 0.8770116567611694,\n      \"z\": -0.014505492523312569\n    }, {\n      \"x\": 0.5783766508102417,\n      \"y\": 0.8835000991821289,\n      \"z\": -0.015996402129530907\n    }, {\n      \"x\": 0.5792440176010132,\n      \"y\": 0.8913810849189758,\n      \"z\": -0.01924579218029976\n    }, {\n      \"x\": 0.5796768069267273,\n      \"y\": 0.8996334671974182,\n      \"z\": -0.018261712044477463\n    }, {\n      \"x\": 0.5817288160324097,\n      \"y\": 0.9255813956260681,\n      \"z\": -0.007126849144697189\n    }, {\n      \"x\": 0.5726592540740967,\n      \"y\": 0.7992473244667053,\n      \"z\": -0.0643521398305893\n    }, {\n      \"x\": 0.5579419136047363,\n      \"y\": 0.7996989488601685,\n      \"z\": -0.04566684365272522\n    }, {\n      \"x\": 0.4216199815273285,\n      \"y\": 0.5958762764930725,\n      \"z\": 0.06776496022939682\n    }, {\n      \"x\": 0.5052269697189331,\n      \"y\": 0.6796539425849915,\n      \"z\": -0.0010737782577052712\n    }, {\n      \"x\": 0.49243026971817017,\n      \"y\": 0.6838865876197815,\n      \"z\": -0.0005227324436418712\n    }, {\n      \"x\": 0.4796970784664154,\n      \"y\": 0.6856290102005005,\n      \"z\": 0.002684245817363262\n    }, {\n      \"x\": 0.4618356227874756,\n      \"y\": 0.6764569878578186,\n      \"z\": 0.013439622707664967\n    }, {\n      \"x\": 0.5160380601882935,\n      \"y\": 0.6737282276153564,\n      \"z\": -0.000017607348127057776\n    }, {\n      \"x\": 0.48070961236953735,\n      \"y\": 0.6255870461463928,\n      \"z\": -0.008339674212038517\n    }, {\n      \"x\": 0.49719780683517456,\n      \"y\": 0.6256808042526245,\n      \"z\": -0.008027955889701843\n    }, {\n      \"x\": 0.46674346923828125,\n      \"y\": 0.6317623853683472,\n      \"z\": -0.004460199736058712\n    }, {\n      \"x\": 0.4582492709159851,\n      \"y\": 0.641118049621582,\n      \"z\": 0.0011905613355338573\n    }, {\n      \"x\": 0.45408669114112854,\n      \"y\": 0.6911458969116211,\n      \"z\": 0.020514748990535736\n    }, {\n      \"x\": 0.535312294960022,\n      \"y\": 0.9619986414909363,\n      \"z\": 0.012499462813138962\n    }, {\n      \"x\": 0.4608460068702698,\n      \"y\": 0.6628725528717041,\n      \"z\": 0.01517564244568348\n    }, {\n      \"x\": 0.4206731915473938,\n      \"y\": 0.6828458309173584,\n      \"z\": 0.07848648726940155\n    }, {\n      \"x\": 0.4390624463558197,\n      \"y\": 0.6796106696128845,\n      \"z\": 0.03283142298460007\n    }, {\n      \"x\": 0.5029968619346619,\n      \"y\": 0.7701570391654968,\n      \"z\": -0.009734481573104858\n    }, {\n      \"x\": 0.5595027208328247,\n      \"y\": 0.8607323169708252,\n      \"z\": -0.030043255537748337\n    }, {\n      \"x\": 0.5621269941329956,\n      \"y\": 0.8738374710083008,\n      \"z\": -0.021709579974412918\n    }, {\n      \"x\": 0.5451499819755554,\n      \"y\": 0.865527331829071,\n      \"z\": -0.022014077752828598\n    }, {\n      \"x\": 0.5351184010505676,\n      \"y\": 0.8705098032951355,\n      \"z\": -0.011602800339460373\n    }, {\n      \"x\": 0.5495014190673828,\n      \"y\": 0.8744956254959106,\n      \"z\": -0.016490943729877472\n    }, {\n      \"x\": 0.5395170450210571,\n      \"y\": 0.8759440779685974,\n      \"z\": -0.007333362940698862\n    }, {\n      \"x\": 0.5183624029159546,\n      \"y\": 0.8959754705429077,\n      \"z\": 0.010520773939788342\n    }, {\n      \"x\": 0.5604349374771118,\n      \"y\": 0.7895449995994568,\n      \"z\": -0.07082037627696991\n    }, {\n      \"x\": 0.557381272315979,\n      \"y\": 0.7687489986419678,\n      \"z\": -0.07590588927268982\n    }, {\n      \"x\": 0.4432901442050934,\n      \"y\": 0.6308897733688354,\n      \"z\": 0.0027153254486620426\n    }, {\n      \"x\": 0.5258325338363647,\n      \"y\": 0.7151225805282593,\n      \"z\": -0.014676518738269806\n    }, {\n      \"x\": 0.5271827578544617,\n      \"y\": 0.7833116054534912,\n      \"z\": -0.037643320858478546\n    }, {\n      \"x\": 0.5257382988929749,\n      \"y\": 0.7717816233634949,\n      \"z\": -0.03401920944452286\n    }, {\n      \"x\": 0.46516409516334534,\n      \"y\": 0.7705106735229492,\n      \"z\": 0.0065747760236263275\n    }, {\n      \"x\": 0.5558893084526062,\n      \"y\": 0.7420997619628906,\n      \"z\": -0.0694495290517807\n    }, {\n      \"x\": 0.4720408320426941,\n      \"y\": 0.6066038608551025,\n      \"z\": -0.021204356104135513\n    }, {\n      \"x\": 0.45432573556900024,\n      \"y\": 0.6158540844917297,\n      \"z\": -0.011054684408009052\n    }, {\n      \"x\": 0.4305151402950287,\n      \"y\": 0.5608053803443909,\n      \"z\": 0.0396830290555954\n    }, {\n      \"x\": 0.5310865640640259,\n      \"y\": 0.6157484650611877,\n      \"z\": -0.03081176057457924\n    }, {\n      \"x\": 0.5114666223526001,\n      \"y\": 0.6329749226570129,\n      \"z\": -0.00335998204536736\n    }, {\n      \"x\": 0.506435751914978,\n      \"y\": 0.8786543607711792,\n      \"z\": 0.012980876490473747\n    }, {\n      \"x\": 0.4480472207069397,\n      \"y\": 0.8640613555908203,\n      \"z\": 0.12569651007652283\n    }, {\n      \"x\": 0.5372058153152466,\n      \"y\": 0.7942581176757812,\n      \"z\": -0.03168361634016037\n    }, {\n      \"x\": 0.5488379597663879,\n      \"y\": 0.8001630306243896,\n      \"z\": -0.03280917927622795\n    }, {\n      \"x\": 0.5213388204574585,\n      \"y\": 0.8794381618499756,\n      \"z\": 0.011892606504261494\n    }, {\n      \"x\": 0.5242055654525757,\n      \"y\": 0.8789222240447998,\n      \"z\": 0.008370225317776203\n    }, {\n      \"x\": 0.4477175176143646,\n      \"y\": 0.6039950251579285,\n      \"z\": -0.0050799972377717495\n    }, {\n      \"x\": 0.526964008808136,\n      \"y\": 0.7916748523712158,\n      \"z\": -0.02968614175915718\n    }, {\n      \"x\": 0.4971255660057068,\n      \"y\": 0.6050706505775452,\n      \"z\": -0.028175678104162216\n    }, {\n      \"x\": 0.4938119053840637,\n      \"y\": 0.5882453918457031,\n      \"z\": -0.03210941329598427\n    }, {\n      \"x\": 0.4757143557071686,\n      \"y\": 0.5094879865646362,\n      \"z\": -0.01300730835646391\n    }, {\n      \"x\": 0.43947282433509827,\n      \"y\": 0.5816648006439209,\n      \"z\": 0.01415177434682846\n    }, {\n      \"x\": 0.485664039850235,\n      \"y\": 0.5477864146232605,\n      \"z\": -0.023685332387685776\n    }, {\n      \"x\": 0.43635931611061096,\n      \"y\": 0.6226438283920288,\n      \"z\": 0.013606148771941662\n    }, {\n      \"x\": 0.42910251021385193,\n      \"y\": 0.6102726459503174,\n      \"z\": 0.03926564007997513\n    }, {\n      \"x\": 0.5605402588844299,\n      \"y\": 0.8680099248886108,\n      \"z\": -0.027318159118294716\n    }, {\n      \"x\": 0.5474816560745239,\n      \"y\": 0.8702861070632935,\n      \"z\": -0.019686367362737656\n    }, {\n      \"x\": 0.5373021364212036,\n      \"y\": 0.8728838562965393,\n      \"z\": -0.010484928265213966\n    }, {\n      \"x\": 0.540735125541687,\n      \"y\": 0.7979167103767395,\n      \"z\": -0.029073253273963928\n    }, {\n      \"x\": 0.5228585004806519,\n      \"y\": 0.87913578748703,\n      \"z\": 0.009915109723806381\n    }, {\n      \"x\": 0.530497670173645,\n      \"y\": 0.8815253973007202,\n      \"z\": 0.0020524784922599792\n    }, {\n      \"x\": 0.5259912610054016,\n      \"y\": 0.8790552616119385,\n      \"z\": 0.007895970717072487\n    }, {\n      \"x\": 0.5433906316757202,\n      \"y\": 0.7882310748100281,\n      \"z\": -0.05121905356645584\n    }, {\n      \"x\": 0.541388213634491,\n      \"y\": 0.8777219653129578,\n      \"z\": -0.00466804439201951\n    }, {\n      \"x\": 0.5515822172164917,\n      \"y\": 0.8767023086547852,\n      \"z\": -0.010475946590304375\n    }, {\n      \"x\": 0.5637003779411316,\n      \"y\": 0.877059817314148,\n      \"z\": -0.015273625031113625\n    }, {\n      \"x\": 0.5640299320220947,\n      \"y\": 0.9263423085212708,\n      \"z\": -0.00658724969252944\n    }, {\n      \"x\": 0.5642300248146057,\n      \"y\": 0.8993074893951416,\n      \"z\": -0.017653480172157288\n    }, {\n      \"x\": 0.5637336373329163,\n      \"y\": 0.8910360932350159,\n      \"z\": -0.01852807030081749\n    }, {\n      \"x\": 0.5637134313583374,\n      \"y\": 0.8837276697158813,\n      \"z\": -0.01482592523097992\n    }, {\n      \"x\": 0.564205527305603,\n      \"y\": 0.8768964409828186,\n      \"z\": -0.01331155002117157\n    }, {\n      \"x\": 0.5419867634773254,\n      \"y\": 0.8778373599052429,\n      \"z\": -0.0037720394320786\n    }, {\n      \"x\": 0.5404468774795532,\n      \"y\": 0.880696177482605,\n      \"z\": -0.005610354244709015\n    }, {\n      \"x\": 0.5392338633537292,\n      \"y\": 0.8845721483230591,\n      \"z\": -0.007352025713771582\n    }, {\n      \"x\": 0.538469672203064,\n      \"y\": 0.8891173601150513,\n      \"z\": -0.005154991988092661\n    }, {\n      \"x\": 0.5189250111579895,\n      \"y\": 0.8452741503715515,\n      \"z\": -0.009755070321261883\n    }, {\n      \"x\": 0.4258975088596344,\n      \"y\": 0.7662280797958374,\n      \"z\": 0.1387351155281067\n    }, {\n      \"x\": 0.5725725293159485,\n      \"y\": 0.8041572570800781,\n      \"z\": -0.04583907872438431\n    }, {\n      \"x\": 0.5342061519622803,\n      \"y\": 0.8785833120346069,\n      \"z\": 0.002659974154084921\n    }, {\n      \"x\": 0.5324031114578247,\n      \"y\": 0.8804071545600891,\n      \"z\": 0.0017832003068178892\n    }, {\n      \"x\": 0.5538818836212158,\n      \"y\": 0.8078407645225525,\n      \"z\": -0.03254539892077446\n    }, {\n      \"x\": 0.5325431823730469,\n      \"y\": 0.8026832938194275,\n      \"z\": -0.019140373915433884\n    }, {\n      \"x\": 0.5514076948165894,\n      \"y\": 0.8043903112411499,\n      \"z\": -0.03313535451889038\n    }, {\n      \"x\": 0.5131856203079224,\n      \"y\": 0.7284771800041199,\n      \"z\": -0.009399853646755219\n    }, {\n      \"x\": 0.49331504106521606,\n      \"y\": 0.7443980574607849,\n      \"z\": -0.005225230939686298\n    }, {\n      \"x\": 0.5239617824554443,\n      \"y\": 0.7807451486587524,\n      \"z\": -0.025881027802824974\n    }, {\n      \"x\": 0.4473606050014496,\n      \"y\": 0.5315827131271362,\n      \"z\": 0.011164786294102669\n    }, {\n      \"x\": 0.45718759298324585,\n      \"y\": 0.5604941248893738,\n      \"z\": -0.005943301599472761\n    }, {\n      \"x\": 0.4670005738735199,\n      \"y\": 0.5909327268600464,\n      \"z\": -0.019681761041283607\n    }, {\n      \"x\": 0.5311570167541504,\n      \"y\": 0.9076261520385742,\n      \"z\": 0.00389476353302598\n    }, {\n      \"x\": 0.5249923467636108,\n      \"y\": 0.5893563628196716,\n      \"z\": -0.037981919944286346\n    }, {\n      \"x\": 0.5166932344436646,\n      \"y\": 0.5429551005363464,\n      \"z\": -0.03319704160094261\n    }, {\n      \"x\": 0.5085030198097229,\n      \"y\": 0.49676206707954407,\n      \"z\": -0.02691275253891945\n    }, {\n      \"x\": 0.4687720239162445,\n      \"y\": 0.6834565997123718,\n      \"z\": 0.008113506250083447\n    }, {\n      \"x\": 0.4426414966583252,\n      \"y\": 0.7069531679153442,\n      \"z\": 0.028577271848917007\n    }, {\n      \"x\": 0.5230373740196228,\n      \"y\": 0.6675713658332825,\n      \"z\": 0.001773772411979735\n    }, {\n      \"x\": 0.4481240212917328,\n      \"y\": 0.6527872085571289,\n      \"z\": 0.012414850294589996\n    }, {\n      \"x\": 0.5339856743812561,\n      \"y\": 0.7012367844581604,\n      \"z\": -0.020220188423991203\n    }, {\n      \"x\": 0.5347223281860352,\n      \"y\": 0.7761190533638,\n      \"z\": -0.05141595005989075\n    }, {\n      \"x\": 0.4315067231655121,\n      \"y\": 0.7211957573890686,\n      \"z\": 0.04381405934691429\n    }, {\n      \"x\": 0.45203351974487305,\n      \"y\": 0.7206180095672607,\n      \"z\": 0.017288070172071457\n    }, {\n      \"x\": 0.46892452239990234,\n      \"y\": 0.7265436053276062,\n      \"z\": 0.005602988880127668\n    }, {\n      \"x\": 0.49314674735069275,\n      \"y\": 0.7202282547950745,\n      \"z\": -0.0006408205372281373\n    }, {\n      \"x\": 0.5104925632476807,\n      \"y\": 0.7091827392578125,\n      \"z\": -0.00362918758764863\n    }, {\n      \"x\": 0.5232142210006714,\n      \"y\": 0.698553740978241,\n      \"z\": -0.00787867046892643\n    }, {\n      \"x\": 0.5497883558273315,\n      \"y\": 0.6743605136871338,\n      \"z\": -0.036349106580019\n    }, {\n      \"x\": 0.43658503890037537,\n      \"y\": 0.7627100348472595,\n      \"z\": 0.042555369436740875\n    }, {\n      \"x\": 0.4397648870944977,\n      \"y\": 0.6528646349906921,\n      \"z\": 0.017956094816327095\n    }, {\n      \"x\": 0.5653332471847534,\n      \"y\": 0.7992802858352661,\n      \"z\": -0.06365057826042175\n    }, {\n      \"x\": 0.5285563468933105,\n      \"y\": 0.736810564994812,\n      \"z\": -0.018836988136172295\n    }, {\n      \"x\": 0.4180678725242615,\n      \"y\": 0.6792560815811157,\n      \"z\": 0.12284679710865021\n    }, {\n      \"x\": 0.5328429937362671,\n      \"y\": 0.6865872144699097,\n      \"z\": -0.010484723374247551\n    }, {\n      \"x\": 0.5230283141136169,\n      \"y\": 0.7809416055679321,\n      \"z\": -0.011922398582100868\n    }, {\n      \"x\": 0.4551771283149719,\n      \"y\": 0.6650775074958801,\n      \"z\": 0.01774493046104908\n    }, {\n      \"x\": 0.5337203741073608,\n      \"y\": 0.7618928551673889,\n      \"z\": -0.04697106033563614\n    }, {\n      \"x\": 0.43463975191116333,\n      \"y\": 0.8133478164672852,\n      \"z\": 0.1354849934577942\n    }, {\n      \"x\": 0.5225707292556763,\n      \"y\": 0.6605283617973328,\n      \"z\": 0.004980515688657761\n    }, {\n      \"x\": 0.5441933870315552,\n      \"y\": 0.7497199773788452,\n      \"z\": -0.06091512367129326\n    }, {\n      \"x\": 0.4774007797241211,\n      \"y\": 0.9159183502197266,\n      \"z\": 0.059622734785079956\n    }, {\n      \"x\": 0.48068761825561523,\n      \"y\": 0.9364941716194153,\n      \"z\": 0.08404944837093353\n    }, {\n      \"x\": 0.4268292486667633,\n      \"y\": 0.7657528519630432,\n      \"z\": 0.09051097184419632\n    }, {\n      \"x\": 0.46051913499832153,\n      \"y\": 0.8880485892295837,\n      \"z\": 0.0738474428653717\n    }, {\n      \"x\": 0.4243420660495758,\n      \"y\": 0.6434382200241089,\n      \"z\": 0.06230505183339119\n    }, {\n      \"x\": 0.5342157483100891,\n      \"y\": 0.9835634231567383,\n      \"z\": 0.021662971004843712\n    }, {\n      \"x\": 0.5668109655380249,\n      \"y\": 0.8042187094688416,\n      \"z\": -0.044937074184417725\n    }, {\n      \"x\": 0.5176341533660889,\n      \"y\": 0.7530587315559387,\n      \"z\": -0.012967454269528389\n    }, {\n      \"x\": 0.430206298828125,\n      \"y\": 0.6835605502128601,\n      \"z\": 0.04612284153699875\n    }, {\n      \"x\": 0.4794231951236725,\n      \"y\": 0.6732114553451538,\n      \"z\": 0.003970044665038586\n    }, {\n      \"x\": 0.49073347449302673,\n      \"y\": 0.6722435355186462,\n      \"z\": 0.0008692514384165406\n    }, {\n      \"x\": 0.5294116139411926,\n      \"y\": 0.884677529335022,\n      \"z\": 0.004413890186697245\n    }, {\n      \"x\": 0.4430122375488281,\n      \"y\": 0.80235356092453,\n      \"z\": 0.04987282305955887\n    }, {\n      \"x\": 0.5603825449943542,\n      \"y\": 1.0092442035675049,\n      \"z\": 0.026417359709739685\n    }, {\n      \"x\": 0.5186598300933838,\n      \"y\": 0.9828659892082214,\n      \"z\": 0.0513598807156086\n    }, {\n      \"x\": 0.5010536909103394,\n      \"y\": 0.9640932679176331,\n      \"z\": 0.06591596454381943\n    }, {\n      \"x\": 0.5524769425392151,\n      \"y\": 0.539441704750061,\n      \"z\": -0.035816047340631485\n    }, {\n      \"x\": 0.5879997611045837,\n      \"y\": 1.0091472864151,\n      \"z\": 0.02285068854689598\n    }, {\n      \"x\": 0.5016193985939026,\n      \"y\": 0.6684437990188599,\n      \"z\": 0.00028415941051207483\n    }, {\n      \"x\": 0.511952817440033,\n      \"y\": 0.6642197370529175,\n      \"z\": 0.0021144719794392586\n    }, {\n      \"x\": 0.5194343328475952,\n      \"y\": 0.6623469591140747,\n      \"z\": 0.004674181342124939\n    }, {\n      \"x\": 0.4321230351924896,\n      \"y\": 0.6496355533599854,\n      \"z\": 0.03124697133898735\n    }, {\n      \"x\": 0.508686363697052,\n      \"y\": 0.6479565501213074,\n      \"z\": -0.00044765998609364033\n    }, {\n      \"x\": 0.4963986277580261,\n      \"y\": 0.6431032419204712,\n      \"z\": -0.0032507688738405704\n    }, {\n      \"x\": 0.4845542013645172,\n      \"y\": 0.6430778503417969,\n      \"z\": -0.002903624437749386\n    }, {\n      \"x\": 0.4733612537384033,\n      \"y\": 0.647506833076477,\n      \"z\": 0.00023347247042693198\n    }, {\n      \"x\": 0.4668654501438141,\n      \"y\": 0.653346598148346,\n      \"z\": 0.004762572236359119\n    }, {\n      \"x\": 0.41815051436424255,\n      \"y\": 0.633708119392395,\n      \"z\": 0.09809435904026031\n    }, {\n      \"x\": 0.47159942984580994,\n      \"y\": 0.6711485385894775,\n      \"z\": 0.007849935442209244\n    }, {\n      \"x\": 0.5734396576881409,\n      \"y\": 0.8256140351295471,\n      \"z\": -0.03155219927430153\n    }, {\n      \"x\": 0.5306524038314819,\n      \"y\": 0.8337990641593933,\n      \"z\": -0.018351426348090172\n    }, {\n      \"x\": 0.5371729135513306,\n      \"y\": 0.7910830974578857,\n      \"z\": -0.037286680191755295\n    }, {\n      \"x\": 0.5549534559249878,\n      \"y\": 0.8275275826454163,\n      \"z\": -0.030664825811982155\n    }, {\n      \"x\": 0.5597432255744934,\n      \"y\": 0.6418541669845581,\n      \"z\": -0.03318847343325615\n    }, {\n      \"x\": 0.4958484172821045,\n      \"y\": 0.9429569244384766,\n      \"z\": 0.048340678215026855\n    }, {\n      \"x\": 0.5140507817268372,\n      \"y\": 0.9634028077125549,\n      \"z\": 0.03589847311377525\n    }, {\n      \"x\": 0.5587693452835083,\n      \"y\": 0.9951097369194031,\n      \"z\": 0.00908728688955307\n    }, {\n      \"x\": 0.46411189436912537,\n      \"y\": 0.9051855206489563,\n      \"z\": 0.10601935535669327\n    }, {\n      \"x\": 0.5181609392166138,\n      \"y\": 0.6554316878318787,\n      \"z\": 0.002546071307733655\n    }, {\n      \"x\": 0.5436590909957886,\n      \"y\": 0.7085841298103333,\n      \"z\": -0.03844436630606651\n    }, {\n      \"x\": 0.5872187614440918,\n      \"y\": 0.9960382580757141,\n      \"z\": 0.0063423276878893375\n    }, {\n      \"x\": 0.5379653573036194,\n      \"y\": 0.9989125728607178,\n      \"z\": 0.03636329993605614\n    }, {\n      \"x\": 0.4350326955318451,\n      \"y\": 0.8088565468788147,\n      \"z\": 0.09147704392671585\n    }, {\n      \"x\": 0.5523084998130798,\n      \"y\": 0.8773422837257385,\n      \"z\": -0.009068487212061882\n    }, {\n      \"x\": 0.5510149598121643,\n      \"y\": 0.8816931843757629,\n      \"z\": -0.011043853126466274\n    }, {\n      \"x\": 0.5503793954849243,\n      \"y\": 0.88776695728302,\n      \"z\": -0.01348799467086792\n    }, {\n      \"x\": 0.5501549243927002,\n      \"y\": 0.8954370617866516,\n      \"z\": -0.012142189778387547\n    }, {\n      \"x\": 0.546072781085968,\n      \"y\": 0.9192524552345276,\n      \"z\": -0.003157563041895628\n    }, {\n      \"x\": 0.5314661860466003,\n      \"y\": 0.8771666884422302,\n      \"z\": 0.0005075141089037061\n    }, {\n      \"x\": 0.5293324589729309,\n      \"y\": 0.8762547969818115,\n      \"z\": 0.00039177737198770046\n    }, {\n      \"x\": 0.5275698900222778,\n      \"y\": 0.8750609755516052,\n      \"z\": 0.000047732755774632096\n    }, {\n      \"x\": 0.5104271173477173,\n      \"y\": 0.8607332110404968,\n      \"z\": 0.0012934643309563398\n    }, {\n      \"x\": 0.45938700437545776,\n      \"y\": 0.8134918212890625,\n      \"z\": 0.023569690063595772\n    }, {\n      \"x\": 0.5418947339057922,\n      \"y\": 0.6864100694656372,\n      \"z\": -0.027333909645676613\n    }, {\n      \"x\": 0.531914234161377,\n      \"y\": 0.6456130743026733,\n      \"z\": -0.005434140563011169\n    }, {\n      \"x\": 0.523697018623352,\n      \"y\": 0.647885262966156,\n      \"z\": -0.0002466466394253075\n    }, {\n      \"x\": 0.5338191390037537,\n      \"y\": 0.8783687353134155,\n      \"z\": 0.002268768846988678\n    }, {\n      \"x\": 0.46226605772972107,\n      \"y\": 0.8610277771949768,\n      \"z\": 0.04718952998518944\n    }, {\n      \"x\": 0.5434442758560181,\n      \"y\": 0.6456181406974792,\n      \"z\": -0.02327350154519081\n    }, {\n      \"x\": 0.5399754643440247,\n      \"y\": 0.940219521522522,\n      \"z\": 0.005075343884527683\n    }, {\n      \"x\": 0.5661457777023315,\n      \"y\": 0.71457839012146,\n      \"z\": -0.06242101639509201\n    }, {\n      \"x\": 0.5523148775100708,\n      \"y\": 0.6974870562553406,\n      \"z\": -0.04863070324063301\n    }, {\n      \"x\": 0.5639959573745728,\n      \"y\": 0.6923378109931946,\n      \"z\": -0.05180761218070984\n    }, {\n      \"x\": 0.5367592573165894,\n      \"y\": 0.7423217296600342,\n      \"z\": -0.03623027727007866\n    }, {\n      \"x\": 0.5853689908981323,\n      \"y\": 0.9752064943313599,\n      \"z\": -0.002361974213272333\n    }, {\n      \"x\": 0.5835235118865967,\n      \"y\": 0.9493685960769653,\n      \"z\": -0.003941743168979883\n    }, {\n      \"x\": 0.5615018606185913,\n      \"y\": 0.949194610118866,\n      \"z\": -0.0015953965485095978\n    }, {\n      \"x\": 0.5068561434745789,\n      \"y\": 0.9048219323158264,\n      \"z\": 0.01862684078514576\n    }, {\n      \"x\": 0.5134067535400391,\n      \"y\": 0.7971825003623962,\n      \"z\": -0.008485661819577217\n    }, {\n      \"x\": 0.5223897099494934,\n      \"y\": 0.925589919090271,\n      \"z\": 0.01249657291918993\n    }, {\n      \"x\": 0.48500555753707886,\n      \"y\": 0.7959478497505188,\n      \"z\": -0.0032065745908766985\n    }, {\n      \"x\": 0.5037734508514404,\n      \"y\": 0.8184596300125122,\n      \"z\": -0.004932103678584099\n    }, {\n      \"x\": 0.4766361117362976,\n      \"y\": 0.828806459903717,\n      \"z\": 0.01027688942849636\n    }, {\n      \"x\": 0.5589827299118042,\n      \"y\": 0.974656343460083,\n      \"z\": 0.0009666886180639267\n    }, {\n      \"x\": 0.5294582843780518,\n      \"y\": 0.7541216611862183,\n      \"z\": -0.025603046640753746\n    }, {\n      \"x\": 0.4973002076148987,\n      \"y\": 0.9208990931510925,\n      \"z\": 0.031931452453136444\n    }, {\n      \"x\": 0.5163551568984985,\n      \"y\": 0.9432790875434875,\n      \"z\": 0.024321340024471283\n    }, {\n      \"x\": 0.49399662017822266,\n      \"y\": 0.8814862370491028,\n      \"z\": 0.018687399104237556\n    }, {\n      \"x\": 0.44948166608810425,\n      \"y\": 0.836137592792511,\n      \"z\": 0.05702034756541252\n    }, {\n      \"x\": 0.47898444533348083,\n      \"y\": 0.8836610913276672,\n      \"z\": 0.03150695189833641\n    }, {\n      \"x\": 0.4454479217529297,\n      \"y\": 0.8499438166618347,\n      \"z\": 0.08868525922298431\n    }, {\n      \"x\": 0.49572959542274475,\n      \"y\": 0.8452823758125305,\n      \"z\": 0.0036111653316766024\n    }, {\n      \"x\": 0.5362502336502075,\n      \"y\": 0.7222585678100586,\n      \"z\": -0.027912352234125137\n    }, {\n      \"x\": 0.5393770337104797,\n      \"y\": 0.7850722074508667,\n      \"z\": -0.05415399745106697\n    }, {\n      \"x\": 0.531399667263031,\n      \"y\": 0.7898418307304382,\n      \"z\": -0.03883346915245056\n    }, {\n      \"x\": 0.5451627373695374,\n      \"y\": 0.7717036604881287,\n      \"z\": -0.06480253487825394\n    }, {\n      \"x\": 0.5206395983695984,\n      \"y\": 0.6287745833396912,\n      \"z\": -0.010521138086915016\n    }, {\n      \"x\": 0.4974782466888428,\n      \"y\": 0.6191938519477844,\n      \"z\": -0.014098240062594414\n    }, {\n      \"x\": 0.4774145185947418,\n      \"y\": 0.6193130612373352,\n      \"z\": -0.013643337413668633\n    }, {\n      \"x\": 0.4616098403930664,\n      \"y\": 0.6259890198707581,\n      \"z\": -0.008448202162981033\n    }, {\n      \"x\": 0.4516478478908539,\n      \"y\": 0.6368461847305298,\n      \"z\": 0.00009050309745362028\n    }, {\n      \"x\": 0.4485096037387848,\n      \"y\": 0.6719120740890503,\n      \"z\": 0.022984720766544342\n    }, {\n      \"x\": 0.42177659273147583,\n      \"y\": 0.7240667343139648,\n      \"z\": 0.08511673659086227\n    }, {\n      \"x\": 0.4616215229034424,\n      \"y\": 0.6988231539726257,\n      \"z\": 0.014238474890589714\n    }, {\n      \"x\": 0.4755798876285553,\n      \"y\": 0.7034608721733093,\n      \"z\": 0.00625590980052948\n    }, {\n      \"x\": 0.4924992024898529,\n      \"y\": 0.7005885243415833,\n      \"z\": 0.0009391739731654525\n    }, {\n      \"x\": 0.5082254409790039,\n      \"y\": 0.693384051322937,\n      \"z\": -0.0009464038303121924\n    }, {\n      \"x\": 0.5203112959861755,\n      \"y\": 0.6849707961082458,\n      \"z\": -0.0022114769089967012\n    }, {\n      \"x\": 0.52867591381073,\n      \"y\": 0.6779075860977173,\n      \"z\": -0.002962538506835699\n    }, {\n      \"x\": 0.4213953912258148,\n      \"y\": 0.7219811677932739,\n      \"z\": 0.1350894570350647\n    }, {\n      \"x\": 0.5320829749107361,\n      \"y\": 0.794858992099762,\n      \"z\": -0.03181503340601921\n    }, {\n      \"x\": 0.5452795028686523,\n      \"y\": 0.7286570072174072,\n      \"z\": -0.04771539941430092\n    }, {\n      \"x\": 0.5496407747268677,\n      \"y\": 0.7866933345794678,\n      \"z\": -0.06452003121376038\n    }, {\n      \"x\": 0.557040274143219,\n      \"y\": 0.7962084412574768,\n      \"z\": -0.05837344378232956\n    }, {\n      \"x\": 0.549176812171936,\n      \"y\": 0.7895247936248779,\n      \"z\": -0.057761140167713165\n    }, {\n      \"x\": 0.5362890362739563,\n      \"y\": 0.8005836606025696,\n      \"z\": -0.026903774589300156\n    }, {\n      \"x\": 0.560200035572052,\n      \"y\": 0.7983731031417847,\n      \"z\": -0.06172555685043335\n    }, {\n      \"x\": 0.5616944432258606,\n      \"y\": 0.8022753596305847,\n      \"z\": -0.045200999826192856\n    }, {\n      \"x\": 0.5273328423500061,\n      \"y\": 0.6611284017562866,\n      \"z\": 0.0029021520167589188\n    }, {\n      \"x\": 0.534850537776947,\n      \"y\": 0.6660012006759644,\n      \"z\": -0.005215510260313749\n    }, {\n      \"x\": 0.5394860506057739,\n      \"y\": 0.6701375246047974,\n      \"z\": -0.014931917190551758\n    }, {\n      \"x\": 0.4634307324886322,\n      \"y\": 0.658291757106781,\n      \"z\": 0.009295716881752014\n    }, {\n      \"x\": 0.4538393020629883,\n      \"y\": 0.6519932150840759,\n      \"z\": 0.00930330716073513\n    }, {\n      \"x\": 0.5776031613349915,\n      \"y\": 0.7159298658370972,\n      \"z\": -0.057365912944078445\n    }, {\n      \"x\": 0.6504855155944824,\n      \"y\": 0.6461779475212097,\n      \"z\": 0.014184834435582161\n    }, {\n      \"x\": 0.5860154032707214,\n      \"y\": 0.7962266206741333,\n      \"z\": -0.04522843658924103\n    }, {\n      \"x\": 0.6842049360275269,\n      \"y\": 0.5631637573242188,\n      \"z\": 0.07207967340946198\n    }, {\n      \"x\": 0.6152560710906982,\n      \"y\": 0.6674962639808655,\n      \"z\": 0.0007529259892180562\n    }, {\n      \"x\": 0.6280948519706726,\n      \"y\": 0.6684326529502869,\n      \"z\": 0.0016892586136236787\n    }, {\n      \"x\": 0.6408625245094299,\n      \"y\": 0.6663892269134521,\n      \"z\": 0.005331226624548435\n    }, {\n      \"x\": 0.6557814478874207,\n      \"y\": 0.6534678936004639,\n      \"z\": 0.01646413467824459\n    }, {\n      \"x\": 0.6035663485527039,\n      \"y\": 0.6639701724052429,\n      \"z\": 0.0013799630105495453\n    }, {\n      \"x\": 0.6329053044319153,\n      \"y\": 0.608010470867157,\n      \"z\": -0.006195899099111557\n    }, {\n      \"x\": 0.6167260408401489,\n      \"y\": 0.6117533445358276,\n      \"z\": -0.006319951266050339\n    }, {\n      \"x\": 0.6471013426780701,\n      \"y\": 0.6112449765205383,\n      \"z\": -0.0017843559617176652\n    }, {\n      \"x\": 0.6560901999473572,\n      \"y\": 0.6185776591300964,\n      \"z\": 0.004047257360070944\n    }, {\n      \"x\": 0.6666946411132812,\n      \"y\": 0.6651176810264587,\n      \"z\": 0.023647578433156013\n    }, {\n      \"x\": 0.6311345100402832,\n      \"y\": 0.9495396018028259,\n      \"z\": 0.014004078693687916\n    }, {\n      \"x\": 0.6544655561447144,\n      \"y\": 0.6397901773452759,\n      \"z\": 0.01809609681367874\n    }, {\n      \"x\": 0.6965808868408203,\n      \"y\": 0.6482675075531006,\n      \"z\": 0.08304904401302338\n    }, {\n      \"x\": 0.679817259311676,\n      \"y\": 0.650188148021698,\n      \"z\": 0.03632688894867897\n    }, {\n      \"x\": 0.6336516737937927,\n      \"y\": 0.7541458010673523,\n      \"z\": -0.007742783520370722\n    }, {\n      \"x\": 0.5921701192855835,\n      \"y\": 0.8567668199539185,\n      \"z\": -0.029399123042821884\n    }, {\n      \"x\": 0.591663658618927,\n      \"y\": 0.870215654373169,\n      \"z\": -0.02103729173541069\n    }, {\n      \"x\": 0.6068367958068848,\n      \"y\": 0.8584195375442505,\n      \"z\": -0.020668085664510727\n    }, {\n      \"x\": 0.6176617741584778,\n      \"y\": 0.860965371131897,\n      \"z\": -0.009790095500648022\n    }, {\n      \"x\": 0.6040634512901306,\n      \"y\": 0.8686612844467163,\n      \"z\": -0.015289564616978168\n    }, {\n      \"x\": 0.6143736839294434,\n      \"y\": 0.8671170473098755,\n      \"z\": -0.005712216719985008\n    }, {\n      \"x\": 0.6373105049133301,\n      \"y\": 0.8815656900405884,\n      \"z\": 0.012672550976276398\n    }, {\n      \"x\": 0.5832505822181702,\n      \"y\": 0.7866312861442566,\n      \"z\": -0.07051534950733185\n    }, {\n      \"x\": 0.5836675763130188,\n      \"y\": 0.7658692598342896,\n      \"z\": -0.07566110789775848\n    }, {\n      \"x\": 0.6709531545639038,\n      \"y\": 0.604898989200592,\n      \"z\": 0.005951565690338612\n    }, {\n      \"x\": 0.6029891967773438,\n      \"y\": 0.705652117729187,\n      \"z\": -0.013388276100158691\n    }, {\n      \"x\": 0.6131622195243835,\n      \"y\": 0.7728396058082581,\n      \"z\": -0.036248479038476944\n    }, {\n      \"x\": 0.6123163104057312,\n      \"y\": 0.7612020373344421,\n      \"z\": -0.03264721855521202\n    }, {\n      \"x\": 0.6696187853813171,\n      \"y\": 0.744706928730011,\n      \"z\": 0.009673702530562878\n    }, {\n      \"x\": 0.5803102254867554,\n      \"y\": 0.7385968565940857,\n      \"z\": -0.0689152330160141\n    }, {\n      \"x\": 0.6404349207878113,\n      \"y\": 0.5877999663352966,\n      \"z\": -0.01929756999015808\n    }, {\n      \"x\": 0.6588467955589294,\n      \"y\": 0.5929454565048218,\n      \"z\": -0.008487257175147533\n    }, {\n      \"x\": 0.6720337867736816,\n      \"y\": 0.530631422996521,\n      \"z\": 0.043437421321868896\n    }, {\n      \"x\": 0.584305465221405,\n      \"y\": 0.6099005341529846,\n      \"z\": -0.030301367864012718\n    }, {\n      \"x\": 0.6034283638000488,\n      \"y\": 0.6217452883720398,\n      \"z\": -0.001970183802768588\n    }, {\n      \"x\": 0.6460927724838257,\n      \"y\": 0.8608663082122803,\n      \"z\": 0.015541625209152699\n    }, {\n      \"x\": 0.6957815289497375,\n      \"y\": 0.8326103091239929,\n      \"z\": 0.13015234470367432\n    }, {\n      \"x\": 0.6043362617492676,\n      \"y\": 0.7861682772636414,\n      \"z\": -0.030476901680231094\n    }, {\n      \"x\": 0.594293475151062,\n      \"y\": 0.7942103147506714,\n      \"z\": -0.032218821346759796\n    }, {\n      \"x\": 0.6324057579040527,\n      \"y\": 0.8665139675140381,\n      \"z\": 0.014255806803703308\n    }, {\n      \"x\": 0.6296147704124451,\n      \"y\": 0.8667733669281006,\n      \"z\": 0.010388285852968693\n    }, {\n      \"x\": 0.663644552230835,\n      \"y\": 0.5798642635345459,\n      \"z\": -0.0022301070857793093\n    }, {\n      \"x\": 0.6140630841255188,\n      \"y\": 0.7809288501739502,\n      \"z\": -0.02835679054260254\n    }, {\n      \"x\": 0.615908145904541,\n      \"y\": 0.5921698212623596,\n      \"z\": -0.026804860681295395\n    }, {\n      \"x\": 0.617181122303009,\n      \"y\": 0.5748661756515503,\n      \"z\": -0.03060605563223362\n    }, {\n      \"x\": 0.6222207546234131,\n      \"y\": 0.49137672781944275,\n      \"z\": -0.011151673272252083\n    }, {\n      \"x\": 0.6669357419013977,\n      \"y\": 0.5541607141494751,\n      \"z\": 0.017466170713305473\n    }, {\n      \"x\": 0.6182981729507446,\n      \"y\": 0.5320425629615784,\n      \"z\": -0.021793590858578682\n    }, {\n      \"x\": 0.6760554313659668,\n      \"y\": 0.595052182674408,\n      \"z\": 0.017115700989961624\n    }, {\n      \"x\": 0.6801463961601257,\n      \"y\": 0.5800720453262329,\n      \"z\": 0.043127160519361496\n    }, {\n      \"x\": 0.5922210812568665,\n      \"y\": 0.8644017577171326,\n      \"z\": -0.02662893570959568\n    }, {\n      \"x\": 0.6054555177688599,\n      \"y\": 0.8637874722480774,\n      \"z\": -0.018363753333687782\n    }, {\n      \"x\": 0.6161889433860779,\n      \"y\": 0.8641164898872375,\n      \"z\": -0.008808949030935764\n    }, {\n      \"x\": 0.6017249822616577,\n      \"y\": 0.7901403307914734,\n      \"z\": -0.028126630932092667\n    }, {\n      \"x\": 0.631446123123169,\n      \"y\": 0.8664817810058594,\n      \"z\": 0.012112865224480629\n    }, {\n      \"x\": 0.6249198913574219,\n      \"y\": 0.8716511130332947,\n      \"z\": 0.003882825840264559\n    }, {\n      \"x\": 0.6281915903091431,\n      \"y\": 0.867301881313324,\n      \"z\": 0.009891441091895103\n    }, {\n      \"x\": 0.5986843109130859,\n      \"y\": 0.7813931703567505,\n      \"z\": -0.050227612257003784\n    }, {\n      \"x\": 0.6126407384872437,\n      \"y\": 0.869275689125061,\n      \"z\": -0.0031255714129656553\n    }, {\n      \"x\": 0.6027271151542664,\n      \"y\": 0.8711842894554138,\n      \"z\": -0.009324162267148495\n    }, {\n      \"x\": 0.59088134765625,\n      \"y\": 0.8742044568061829,\n      \"z\": -0.014608660712838173\n    }, {\n      \"x\": 0.5984604358673096,\n      \"y\": 0.9216185212135315,\n      \"z\": -0.005981989670544863\n    }, {\n      \"x\": 0.5950398445129395,\n      \"y\": 0.8964707255363464,\n      \"z\": -0.01703473925590515\n    }, {\n      \"x\": 0.5941568613052368,\n      \"y\": 0.8882410526275635,\n      \"z\": -0.017784785479307175\n    }, {\n      \"x\": 0.5928806662559509,\n      \"y\": 0.8803883194923401,\n      \"z\": -0.014153128489851952\n    }, {\n      \"x\": 0.5909661054611206,\n      \"y\": 0.8748103976249695,\n      \"z\": -0.012609979137778282\n    }, {\n      \"x\": 0.6128016710281372,\n      \"y\": 0.8702545762062073,\n      \"z\": -0.0022550546564161777\n    }, {\n      \"x\": 0.6150846481323242,\n      \"y\": 0.8726804256439209,\n      \"z\": -0.00414019962772727\n    }, {\n      \"x\": 0.6173093914985657,\n      \"y\": 0.8770190477371216,\n      \"z\": -0.005970994010567665\n    }, {\n      \"x\": 0.619335412979126,\n      \"y\": 0.8814800977706909,\n      \"z\": -0.0036864024586975574\n    }, {\n      \"x\": 0.6292637586593628,\n      \"y\": 0.8314558267593384,\n      \"z\": -0.007714875973761082\n    }, {\n      \"x\": 0.702275276184082,\n      \"y\": 0.7320667505264282,\n      \"z\": 0.1433621346950531\n    }, {\n      \"x\": 0.6204835176467896,\n      \"y\": 0.8689177632331848,\n      \"z\": 0.0044869170524179935\n    }, {\n      \"x\": 0.6223508715629578,\n      \"y\": 0.8704851269721985,\n      \"z\": 0.00352082890458405\n    }, {\n      \"x\": 0.590448260307312,\n      \"y\": 0.8029727935791016,\n      \"z\": -0.03200828656554222\n    }, {\n      \"x\": 0.6097423434257507,\n      \"y\": 0.7933741211891174,\n      \"z\": -0.018042555078864098\n    }, {\n      \"x\": 0.59229576587677,\n      \"y\": 0.7993767261505127,\n      \"z\": -0.032564569264650345\n    }, {\n      \"x\": 0.6171364188194275,\n      \"y\": 0.7153720259666443,\n      \"z\": -0.007672437466681004\n    }, {\n      \"x\": 0.6389747858047485,\n      \"y\": 0.726390540599823,\n      \"z\": -0.002999067772179842\n    }, {\n      \"x\": 0.6151940226554871,\n      \"y\": 0.769412100315094,\n      \"z\": -0.024427521973848343\n    }, {\n      \"x\": 0.6526776552200317,\n      \"y\": 0.505868136882782,\n      \"z\": 0.01412637997418642\n    }, {\n      \"x\": 0.6475822329521179,\n      \"y\": 0.5375454425811768,\n      \"z\": -0.0033899128902703524\n    }, {\n      \"x\": 0.6433356404304504,\n      \"y\": 0.5714520215988159,\n      \"z\": -0.017428796738386154\n    }, {\n      \"x\": 0.626949667930603,\n      \"y\": 0.8962116837501526,\n      \"z\": 0.005602736957371235\n    }, {\n      \"x\": 0.5868416428565979,\n      \"y\": 0.5829002261161804,\n      \"z\": -0.03727729618549347\n    }, {\n      \"x\": 0.5877229571342468,\n      \"y\": 0.5345035791397095,\n      \"z\": -0.032396964728832245\n    }, {\n      \"x\": 0.5887066125869751,\n      \"y\": 0.48655083775520325,\n      \"z\": -0.025856535881757736\n    }, {\n      \"x\": 0.6507197618484497,\n      \"y\": 0.6612282991409302,\n      \"z\": 0.011114613153040409\n    }, {\n      \"x\": 0.6803066730499268,\n      \"y\": 0.677992045879364,\n      \"z\": 0.032125361263751984\n    }, {\n      \"x\": 0.5963194370269775,\n      \"y\": 0.6598632335662842,\n      \"z\": 0.002976928371936083\n    }, {\n      \"x\": 0.667536199092865,\n      \"y\": 0.6274255514144897,\n      \"z\": 0.015618261881172657\n    }, {\n      \"x\": 0.5930740833282471,\n      \"y\": 0.6940041780471802,\n      \"z\": -0.019217798486351967\n    }, {\n      \"x\": 0.6053346395492554,\n      \"y\": 0.7676517963409424,\n      \"z\": -0.050308309495449066\n    }, {\n      \"x\": 0.6934473514556885,\n      \"y\": 0.6884298920631409,\n      \"z\": 0.04794462397694588\n    }, {\n      \"x\": 0.6738007664680481,\n      \"y\": 0.6934011578559875,\n      \"z\": 0.020697161555290222\n    }, {\n      \"x\": 0.6588084697723389,\n      \"y\": 0.7033141851425171,\n      \"z\": 0.008462334051728249\n    }, {\n      \"x\": 0.6346072554588318,\n      \"y\": 0.7029502391815186,\n      \"z\": 0.001542167621664703\n    }, {\n      \"x\": 0.6157816648483276,\n      \"y\": 0.6966525912284851,\n      \"z\": -0.002009218093007803\n    }, {\n      \"x\": 0.6015574336051941,\n      \"y\": 0.688928484916687,\n      \"z\": -0.006588225718587637\n    }, {\n      \"x\": 0.5746836066246033,\n      \"y\": 0.6711069345474243,\n      \"z\": -0.03597589209675789\n    }, {\n      \"x\": 0.6947521567344666,\n      \"y\": 0.7309479117393494,\n      \"z\": 0.046707939356565475\n    }, {\n      \"x\": 0.6759101152420044,\n      \"y\": 0.6249120831489563,\n      \"z\": 0.021654341369867325\n    }, {\n      \"x\": 0.5794773101806641,\n      \"y\": 0.7971615195274353,\n      \"z\": -0.06339326500892639\n    }, {\n      \"x\": 0.6041849851608276,\n      \"y\": 0.727514922618866,\n      \"z\": -0.017512541264295578\n    }, {\n      \"x\": 0.6968844532966614,\n      \"y\": 0.6440950036048889,\n      \"z\": 0.12727996706962585\n    }, {\n      \"x\": 0.5910853147506714,\n      \"y\": 0.679325520992279,\n      \"z\": -0.009497715160250664\n    }, {\n      \"x\": 0.6157375574111938,\n      \"y\": 0.7695677280426025,\n      \"z\": -0.010624290443956852\n    }, {\n      \"x\": 0.6606494784355164,\n      \"y\": 0.6410489678382874,\n      \"z\": 0.0208158977329731\n    }, {\n      \"x\": 0.6040687561035156,\n      \"y\": 0.7531470656394958,\n      \"z\": -0.045887019485235214\n    }, {\n      \"x\": 0.7012156248092651,\n      \"y\": 0.780247151851654,\n      \"z\": 0.14028730988502502\n    }, {\n      \"x\": 0.595149576663971,\n      \"y\": 0.6527782678604126,\n      \"z\": 0.006308757700026035\n    }, {\n      \"x\": 0.5925500392913818,\n      \"y\": 0.7436665892601013,\n      \"z\": -0.060151755809783936\n    }, {\n      \"x\": 0.6780198812484741,\n      \"y\": 0.8905693888664246,\n      \"z\": 0.0626060739159584\n    }, {\n      \"x\": 0.676746666431427,\n      \"y\": 0.9113880395889282,\n      \"z\": 0.08726003766059875\n    }, {\n      \"x\": 0.7030686140060425,\n      \"y\": 0.7312687635421753,\n      \"z\": 0.09529774636030197\n    }, {\n      \"x\": 0.688987135887146,\n      \"y\": 0.8588417172431946,\n      \"z\": 0.07752864807844162\n    }, {\n      \"x\": 0.6883691549301147,\n      \"y\": 0.6109960675239563,\n      \"z\": 0.06669612973928452\n    }, {\n      \"x\": 0.6358906030654907,\n      \"y\": 0.9702065587043762,\n      \"z\": 0.023120900616049767\n    }, {\n      \"x\": 0.5781539678573608,\n      \"y\": 0.8023634552955627,\n      \"z\": -0.044763918966054916\n    }, {\n      \"x\": 0.6170316934585571,\n      \"y\": 0.7408350706100464,\n      \"z\": -0.011375460773706436\n    }, {\n      \"x\": 0.688542366027832,\n      \"y\": 0.6516284346580505,\n      \"z\": 0.050206027925014496\n    }, {\n      \"x\": 0.6385149359703064,\n      \"y\": 0.6540714502334595,\n      \"z\": 0.006462941411882639\n    }, {\n      \"x\": 0.6279382109642029,\n      \"y\": 0.6563615798950195,\n      \"z\": 0.003062846139073372\n    }, {\n      \"x\": 0.6268895268440247,\n      \"y\": 0.8736732006072998,\n      \"z\": 0.00627936702221632\n    }, {\n      \"x\": 0.6944946050643921,\n      \"y\": 0.7709181308746338,\n      \"z\": 0.053824134171009064\n    }, {\n      \"x\": 0.614617109298706,\n      \"y\": 1.0022112131118774,\n      \"z\": 0.02719894051551819\n    }, {\n      \"x\": 0.6493719220161438,\n      \"y\": 0.9665167927742004,\n      \"z\": 0.053563784807920456\n    }, {\n      \"x\": 0.6624587178230286,\n      \"y\": 0.943530797958374,\n      \"z\": 0.068605437874794\n    }, {\n      \"x\": 0.6162528991699219,\n      \"y\": 0.6558693051338196,\n      \"z\": 0.002187855076044798\n    }, {\n      \"x\": 0.6058168411254883,\n      \"y\": 0.654328465461731,\n      \"z\": 0.0036193584091961384\n    }, {\n      \"x\": 0.5987918972969055,\n      \"y\": 0.6536934971809387,\n      \"z\": 0.006134530063718557\n    }, {\n      \"x\": 0.6831037402153015,\n      \"y\": 0.6195642948150635,\n      \"z\": 0.03511790186166763\n    }, {\n      \"x\": 0.6062582731246948,\n      \"y\": 0.6356398463249207,\n      \"z\": 0.001280312892049551\n    }, {\n      \"x\": 0.6174948811531067,\n      \"y\": 0.62776118516922,\n      \"z\": -0.0013642468256875873\n    }, {\n      \"x\": 0.6297246217727661,\n      \"y\": 0.6253792643547058,\n      \"z\": -0.0007034156005829573\n    }, {\n      \"x\": 0.6407091617584229,\n      \"y\": 0.627578616142273,\n      \"z\": 0.0028144705574959517\n    }, {\n      \"x\": 0.6479622721672058,\n      \"y\": 0.6322650909423828,\n      \"z\": 0.00750273372977972\n    }, {\n      \"x\": 0.6915091276168823,\n      \"y\": 0.5990704298019409,\n      \"z\": 0.10270945727825165\n    }, {\n      \"x\": 0.6457163095474243,\n      \"y\": 0.6504453420639038,\n      \"z\": 0.010696077719330788\n    }, {\n      \"x\": 0.6164222955703735,\n      \"y\": 0.8231936097145081,\n      \"z\": -0.016772059723734856\n    }, {\n      \"x\": 0.6042401194572449,\n      \"y\": 0.7830976843833923,\n      \"z\": -0.03630910441279411\n    }, {\n      \"x\": 0.5922216773033142,\n      \"y\": 0.8228387236595154,\n      \"z\": -0.029992375522851944\n    }, {\n      \"x\": 0.6646111011505127,\n      \"y\": 0.92097008228302,\n      \"z\": 0.050967294722795486\n    }, {\n      \"x\": 0.651232898235321,\n      \"y\": 0.9460107088088989,\n      \"z\": 0.038000158965587616\n    }, {\n      \"x\": 0.6140977144241333,\n      \"y\": 0.9882472157478333,\n      \"z\": 0.009882091544568539\n    }, {\n      \"x\": 0.6870781183242798,\n      \"y\": 0.8768675327301025,\n      \"z\": 0.10980932414531708\n    }, {\n      \"x\": 0.5986856818199158,\n      \"y\": 0.6456438899040222,\n      \"z\": 0.003999010659754276\n    }, {\n      \"x\": 0.585981547832489,\n      \"y\": 0.7034481763839722,\n      \"z\": -0.0377722829580307\n    }, {\n      \"x\": 0.6342031359672546,\n      \"y\": 0.9867448806762695,\n      \"z\": 0.03786521404981613\n    }, {\n      \"x\": 0.7013950943946838,\n      \"y\": 0.776049017906189,\n      \"z\": 0.09598205983638763\n    }, {\n      \"x\": 0.6030206680297852,\n      \"y\": 0.8719133138656616,\n      \"z\": -0.007931148633360863\n    }, {\n      \"x\": 0.6050592064857483,\n      \"y\": 0.8767156004905701,\n      \"z\": -0.009791925549507141\n    }, {\n      \"x\": 0.6073468923568726,\n      \"y\": 0.8831382393836975,\n      \"z\": -0.012361008673906326\n    }, {\n      \"x\": 0.6087977290153503,\n      \"y\": 0.890143632888794,\n      \"z\": -0.01098148338496685\n    }, {\n      \"x\": 0.6147705316543579,\n      \"y\": 0.9110084772109985,\n      \"z\": -0.0018823575228452682\n    }, {\n      \"x\": 0.622577965259552,\n      \"y\": 0.8670604825019836,\n      \"z\": 0.002609190298244357\n    }, {\n      \"x\": 0.6241236329078674,\n      \"y\": 0.8651344180107117,\n      \"z\": 0.0025534380692988634\n    }, {\n      \"x\": 0.6257084608078003,\n      \"y\": 0.8638408184051514,\n      \"z\": 0.0023300074972212315\n    }, {\n      \"x\": 0.639931321144104,\n      \"y\": 0.8449671268463135,\n      \"z\": 0.0038123116828501225\n    }, {\n      \"x\": 0.6810906529426575,\n      \"y\": 0.7856625318527222,\n      \"z\": 0.02717764675617218\n    }, {\n      \"x\": 0.583532452583313,\n      \"y\": 0.6811994910240173,\n      \"z\": -0.026588857173919678\n    }, {\n      \"x\": 0.5855660438537598,\n      \"y\": 0.6393819451332092,\n      \"z\": -0.004512844607234001\n    }, {\n      \"x\": 0.5932201743125916,\n      \"y\": 0.6398029327392578,\n      \"z\": 0.0008020466193556786\n    }, {\n      \"x\": 0.6200879812240601,\n      \"y\": 0.8683351874351501,\n      \"z\": 0.00417016725987196\n    }, {\n      \"x\": 0.6842559576034546,\n      \"y\": 0.8330534100532532,\n      \"z\": 0.050836317241191864\n    }, {\n      \"x\": 0.5754412412643433,\n      \"y\": 0.6418221592903137,\n      \"z\": -0.022838059812784195\n    }, {\n      \"x\": 0.6232790350914001,\n      \"y\": 0.9295297265052795,\n      \"z\": 0.006339520215988159\n    }, {\n      \"x\": 0.5764067769050598,\n      \"y\": 0.694546639919281,\n      \"z\": -0.04825803264975548\n    }, {\n      \"x\": 0.59778892993927,\n      \"y\": 0.7343927621841431,\n      \"z\": -0.035004377365112305\n    }, {\n      \"x\": 0.6042810678482056,\n      \"y\": 0.9441440105438232,\n      \"z\": -0.0010970570147037506\n    }, {\n      \"x\": 0.6496372222900391,\n      \"y\": 0.8869078159332275,\n      \"z\": 0.021036235615611076\n    }, {\n      \"x\": 0.6274012327194214,\n      \"y\": 0.7830310463905334,\n      \"z\": -0.006658440921455622\n    }, {\n      \"x\": 0.637792706489563,\n      \"y\": 0.9104999899864197,\n      \"z\": 0.014290250837802887\n    }, {\n      \"x\": 0.6549934148788452,\n      \"y\": 0.7748609185218811,\n      \"z\": -0.0006672973395325243\n    }, {\n      \"x\": 0.6404005289077759,\n      \"y\": 0.801220715045929,\n      \"z\": -0.0026642554439604282\n    }, {\n      \"x\": 0.6671456694602966,\n      \"y\": 0.8045546412467957,\n      \"z\": 0.013180811889469624\n    }, {\n      \"x\": 0.6107483506202698,\n      \"y\": 0.9680658578872681,\n      \"z\": 0.001778992242179811\n    }, {\n      \"x\": 0.6060343980789185,\n      \"y\": 0.744587242603302,\n      \"z\": -0.024382334202528\n    }, {\n      \"x\": 0.6602751612663269,\n      \"y\": 0.8998945355415344,\n      \"z\": 0.0344940721988678\n    }, {\n      \"x\": 0.6463775038719177,\n      \"y\": 0.9262562394142151,\n      \"z\": 0.02617623284459114\n    }, {\n      \"x\": 0.6579852104187012,\n      \"y\": 0.8602304458618164,\n      \"z\": 0.021586716175079346\n    }, {\n      \"x\": 0.6926165223121643,\n      \"y\": 0.8053340315818787,\n      \"z\": 0.061075080186128616\n    }, {\n      \"x\": 0.6724731922149658,\n      \"y\": 0.8594399690628052,\n      \"z\": 0.03457934781908989\n    }, {\n      \"x\": 0.6975721716880798,\n      \"y\": 0.8183245062828064,\n      \"z\": 0.09300774335861206\n    }, {\n      \"x\": 0.6512877941131592,\n      \"y\": 0.8258221745491028,\n      \"z\": 0.006324059329926968\n    }, {\n      \"x\": 0.594887375831604,\n      \"y\": 0.7148372530937195,\n      \"z\": -0.026898479089140892\n    }, {\n      \"x\": 0.6017440557479858,\n      \"y\": 0.7773507833480835,\n      \"z\": -0.05312420800328255\n    }, {\n      \"x\": 0.6096571683883667,\n      \"y\": 0.7806998491287231,\n      \"z\": -0.037646256387233734\n    }, {\n      \"x\": 0.5952993035316467,\n      \"y\": 0.7654367685317993,\n      \"z\": -0.06398405134677887\n    }, {\n      \"x\": 0.5950021147727966,\n      \"y\": 0.6201304793357849,\n      \"z\": -0.009297547861933708\n    }, {\n      \"x\": 0.6165438890457153,\n      \"y\": 0.6052900552749634,\n      \"z\": -0.012455573305487633\n    }, {\n      \"x\": 0.6362661719322205,\n      \"y\": 0.6015968918800354,\n      \"z\": -0.011649220250546932\n    }, {\n      \"x\": 0.6522727608680725,\n      \"y\": 0.6046400666236877,\n      \"z\": -0.005903332494199276\n    }, {\n      \"x\": 0.6625409722328186,\n      \"y\": 0.6128141283988953,\n      \"z\": 0.0030042496509850025\n    }, {\n      \"x\": 0.6688099503517151,\n      \"y\": 0.6457712054252625,\n      \"z\": 0.026322703808546066\n    }, {\n      \"x\": 0.7013440728187561,\n      \"y\": 0.6893666386604309,\n      \"z\": 0.08984331786632538\n    }, {\n      \"x\": 0.6608623266220093,\n      \"y\": 0.6749406456947327,\n      \"z\": 0.0172116681933403\n    }, {\n      \"x\": 0.6482325196266174,\n      \"y\": 0.6823726296424866,\n      \"z\": 0.008881398476660252\n    }, {\n      \"x\": 0.6313265562057495,\n      \"y\": 0.6842025518417358,\n      \"z\": 0.0031308617908507586\n    }, {\n      \"x\": 0.6147016286849976,\n      \"y\": 0.6809731721878052,\n      \"z\": 0.0007630771724507213\n    }, {\n      \"x\": 0.6018834114074707,\n      \"y\": 0.6755372285842896,\n      \"z\": -0.0008834321051836014\n    }, {\n      \"x\": 0.5925027132034302,\n      \"y\": 0.670681357383728,\n      \"z\": -0.001968748401850462\n    }, {\n      \"x\": 0.700127363204956,\n      \"y\": 0.6871103644371033,\n      \"z\": 0.13980500400066376\n    }, {\n      \"x\": 0.6095665693283081,\n      \"y\": 0.7853189706802368,\n      \"z\": -0.03074747882783413\n    }, {\n      \"x\": 0.5880423784255981,\n      \"y\": 0.7229287028312683,\n      \"z\": -0.04691500961780548\n    }, {\n      \"x\": 0.5930182337760925,\n      \"y\": 0.7811514139175415,\n      \"z\": -0.06398335844278336\n    }, {\n      \"x\": 0.5867722034454346,\n      \"y\": 0.7922660112380981,\n      \"z\": -0.05794971063733101\n    }, {\n      \"x\": 0.5933279991149902,\n      \"y\": 0.7842848896980286,\n      \"z\": -0.05714067071676254\n    }, {\n      \"x\": 0.6063535809516907,\n      \"y\": 0.7920218706130981,\n      \"z\": -0.02590685710310936\n    }, {\n      \"x\": 0.5839452743530273,\n      \"y\": 0.794978141784668,\n      \"z\": -0.0615212507545948\n    }, {\n      \"x\": 0.5828126072883606,\n      \"y\": 0.8000800013542175,\n      \"z\": -0.0449722595512867\n    }, {\n      \"x\": 0.5909603834152222,\n      \"y\": 0.6541213393211365,\n      \"z\": 0.003991890233010054\n    }, {\n      \"x\": 0.5852181911468506,\n      \"y\": 0.6602938771247864,\n      \"z\": -0.004428438376635313\n    }, {\n      \"x\": 0.5825737714767456,\n      \"y\": 0.6651063561439514,\n      \"z\": -0.014345290139317513\n    }, {\n      \"x\": 0.6517343521118164,\n      \"y\": 0.6362385153770447,\n      \"z\": 0.012151890434324741\n    }, {\n      \"x\": 0.6615052819252014,\n      \"y\": 0.6281577944755554,\n      \"z\": 0.0123682152479887\n    }, {\n      \"x\": 0.4856873154640198,\n      \"y\": 0.6568945646286011,\n      \"z\": 0.000720038078725338\n    }, {\n      \"x\": 0.49988406896591187,\n      \"y\": 0.6547410488128662,\n      \"z\": 0.0006949726957827806\n    }, {\n      \"x\": 0.48438939452171326,\n      \"y\": 0.6392973065376282,\n      \"z\": 0.000705525919329375\n    }, {\n      \"x\": 0.47143134474754333,\n      \"y\": 0.6589511632919312,\n      \"z\": 0.0006980331381782889\n    }, {\n      \"x\": 0.48704618215560913,\n      \"y\": 0.6752797961235046,\n      \"z\": 0.0006921177846379578\n    }, {\n      \"x\": 0.6243702173233032,\n      \"y\": 0.640461802482605,\n      \"z\": -0.00006592126737814397\n    }, {\n      \"x\": 0.6390967965126038,\n      \"y\": 0.6385173797607422,\n      \"z\": -0.00016105435497593135\n    }, {\n      \"x\": 0.6230536699295044,\n      \"y\": 0.6224825382232666,\n      \"z\": -0.00016136496560648084\n    }, {\n      \"x\": 0.6095397472381592,\n      \"y\": 0.641917884349823,\n      \"z\": -0.0001803556369850412\n    }, {\n      \"x\": 0.6250996589660645,\n      \"y\": 0.6586247682571411,\n      \"z\": -0.0001785515050869435\n    }]],\n    \"faceBlendshapes\": [{\n      \"categories\": [{\n        \"index\": 0,\n        \"score\": 0.000005187174338061595,\n        \"categoryName\": \"_neutral\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 1,\n        \"score\": 0.24521504342556,\n        \"categoryName\": \"browDownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 2,\n        \"score\": 0.1987743377685547,\n        \"categoryName\": \"browDownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 3,\n        \"score\": 0.013400448486208916,\n        \"categoryName\": \"browInnerUp\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 4,\n        \"score\": 0.012361560948193073,\n        \"categoryName\": \"browOuterUpLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 5,\n        \"score\": 0.019305096939206123,\n        \"categoryName\": \"browOuterUpRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 6,\n        \"score\": 0.000028426356948330067,\n        \"categoryName\": \"cheekPuff\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 7,\n        \"score\": 3.4500112633395474e-7,\n        \"categoryName\": \"cheekSquintLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 8,\n        \"score\": 4.83789051486383e-7,\n        \"categoryName\": \"cheekSquintRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 9,\n        \"score\": 0.07650448381900787,\n        \"categoryName\": \"eyeBlinkLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 10,\n        \"score\": 0.05070012807846069,\n        \"categoryName\": \"eyeBlinkRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 11,\n        \"score\": 0.13978900015354156,\n        \"categoryName\": \"eyeLookDownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 12,\n        \"score\": 0.14198613166809082,\n        \"categoryName\": \"eyeLookDownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 13,\n        \"score\": 0.2177766114473343,\n        \"categoryName\": \"eyeLookInLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 14,\n        \"score\": 0.014739357866346836,\n        \"categoryName\": \"eyeLookInRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 15,\n        \"score\": 0.02361512929201126,\n        \"categoryName\": \"eyeLookOutLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 16,\n        \"score\": 0.19679604470729828,\n        \"categoryName\": \"eyeLookOutRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 17,\n        \"score\": 0.04874616861343384,\n        \"categoryName\": \"eyeLookUpLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 18,\n        \"score\": 0.049392376095056534,\n        \"categoryName\": \"eyeLookUpRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 19,\n        \"score\": 0.34944331645965576,\n        \"categoryName\": \"eyeSquintLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 20,\n        \"score\": 0.2939716875553131,\n        \"categoryName\": \"eyeSquintRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 21,\n        \"score\": 0.005955042317509651,\n        \"categoryName\": \"eyeWideLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 22,\n        \"score\": 0.006776117719709873,\n        \"categoryName\": \"eyeWideRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 23,\n        \"score\": 0.000016942436559475027,\n        \"categoryName\": \"jawForward\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 24,\n        \"score\": 0.0045165494084358215,\n        \"categoryName\": \"jawLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 25,\n        \"score\": 0.07803940027952194,\n        \"categoryName\": \"jawOpen\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 26,\n        \"score\": 0.00002090057751047425,\n        \"categoryName\": \"jawRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 27,\n        \"score\": 0.06032035872340202,\n        \"categoryName\": \"mouthClose\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 28,\n        \"score\": 0.00228882092051208,\n        \"categoryName\": \"mouthDimpleLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 29,\n        \"score\": 0.00781762320548296,\n        \"categoryName\": \"mouthDimpleRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 30,\n        \"score\": 0.0017093931091949344,\n        \"categoryName\": \"mouthFrownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 31,\n        \"score\": 0.0019319106359034777,\n        \"categoryName\": \"mouthFrownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 32,\n        \"score\": 0.00008485237776767462,\n        \"categoryName\": \"mouthFunnel\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 33,\n        \"score\": 0.0009051355300471187,\n        \"categoryName\": \"mouthLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 34,\n        \"score\": 0.0003630454302765429,\n        \"categoryName\": \"mouthLowerDownLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 35,\n        \"score\": 0.00017601238505449146,\n        \"categoryName\": \"mouthLowerDownRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 36,\n        \"score\": 0.12865161895751953,\n        \"categoryName\": \"mouthPressLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 37,\n        \"score\": 0.20137207210063934,\n        \"categoryName\": \"mouthPressRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 38,\n        \"score\": 0.0022203284315764904,\n        \"categoryName\": \"mouthPucker\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 39,\n        \"score\": 0.0009096377179957926,\n        \"categoryName\": \"mouthRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 40,\n        \"score\": 0.34189721941947937,\n        \"categoryName\": \"mouthRollLower\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 41,\n        \"score\": 0.11409689486026764,\n        \"categoryName\": \"mouthRollUpper\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 42,\n        \"score\": 0.17172536253929138,\n        \"categoryName\": \"mouthShrugLower\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 43,\n        \"score\": 0.004038424696773291,\n        \"categoryName\": \"mouthShrugUpper\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 44,\n        \"score\": 0.00023205230536404997,\n        \"categoryName\": \"mouthSmileLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 45,\n        \"score\": 0.00019313619122840464,\n        \"categoryName\": \"mouthSmileRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 46,\n        \"score\": 0.0018571305554360151,\n        \"categoryName\": \"mouthStretchLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 47,\n        \"score\": 0.0023813238367438316,\n        \"categoryName\": \"mouthStretchRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 48,\n        \"score\": 0.000024323100660694763,\n        \"categoryName\": \"mouthUpperUpLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 49,\n        \"score\": 0.00003161552012898028,\n        \"categoryName\": \"mouthUpperUpRight\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 50,\n        \"score\": 1.08198406678639e-7,\n        \"categoryName\": \"noseSneerLeft\",\n        \"displayName\": \"\"\n      }, {\n        \"index\": 51,\n        \"score\": 0.0000012652527630052646,\n        \"categoryName\": \"noseSneerRight\",\n        \"displayName\": \"\"\n      }],\n      \"headIndex\": -1,\n      \"headName\": \"\"\n    }],\n    \"facialTransformationMatrixes\": [{\n      \"rows\": 4,\n      \"columns\": 4,\n      \"data\": [0.9947517514228821, 0.10230544209480286, 0.0013679931871592999, 0, -0.10230997204780579, 0.9947447776794434, 0.003816320328041911, 0, -0.000970348424743861, -0.0039362297393381596, 0.9999914169311523, 0, 2.8888821601867676, -7.808934211730957, -30.52109146118164, 1]\n    }]\n  }\n};\n\nexport { Facemesh, FacemeshDatas, FacemeshEye, FacemeshEyeDefaults };\n", "import * as React from 'react';\nimport { forwardRef, useEffect, useImperativeHandle, useContext, createContext } from 'react';\nimport { suspend, clear } from 'suspend-react';\n\n/* eslint react-hooks/exhaustive-deps: 1 */\nconst FaceLandmarkerContext = /* @__PURE__ */createContext({});\nconst FaceLandmarkerDefaults = {\n  basePath: 'https://cdn.jsdelivr.net/npm/@mediapipe/tasks-vision@0.10.17/wasm',\n  options: {\n    baseOptions: {\n      modelAssetPath: 'https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task',\n      delegate: 'GPU'\n    },\n    runningMode: 'VIDEO',\n    outputFaceBlendshapes: true,\n    outputFacialTransformationMatrixes: true\n  }\n};\nconst FaceLandmarker = /*#__PURE__*/forwardRef(({\n  basePath = FaceLandmarkerDefaults.basePath,\n  options = FaceLandmarkerDefaults.options,\n  children\n}, fref) => {\n  const opts = JSON.stringify(options);\n  const faceLandmarker = suspend(async () => {\n    const {\n      FilesetResolver,\n      FaceLandmarker\n    } = await import('@mediapipe/tasks-vision');\n    const vision = await FilesetResolver.forVisionTasks(basePath);\n    return FaceLandmarker.createFromOptions(vision, options);\n  }, [basePath, opts]);\n  useEffect(() => {\n    return () => {\n      faceLandmarker == null || faceLandmarker.close();\n      clear([basePath, opts]);\n    };\n  }, [faceLandmarker, basePath, opts]);\n  useImperativeHandle(fref, () => faceLandmarker, [faceLandmarker]); // expose faceLandmarker through ref\n\n  return /*#__PURE__*/React.createElement(FaceLandmarkerContext.Provider, {\n    value: faceLandmarker\n  }, children);\n});\nfunction useFaceLandmarker() {\n  return useContext(FaceLandmarkerContext);\n}\n\nexport { FaceLandmarker, FaceLandmarkerDefaults, useFaceLandmarker };\n", "wOFFOTTO\u0000\u0000.�\u0000\r\u0000\u0000\u0000\u0000C8\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000CFF \u0000\u0000\u0005 \u0000\u0000!�\u0000\u0000(QdR��FFTM\u0000\u0000-D\u0000\u0000\u0000\u001C\u0000\u0000\u0000\u001C�F\b�GDEF\u0000\u0000'\u0014\u0000\u0000\u0000+\u0000\u0000\u00004\u0000�\u0000$GPOS\u0000\u0000'�\u0000\u0000\u0005O\u0000\u0000\u000F���giGSUB\u0000\u0000'@\u0000\u0000\u0000�\u0000\u0000\u0001de\u0016r\u0010OS/2\u0000\u0000\u0001�\u0000\u0000\u0000T\u0000\u0000\u0000`����cmap\u0000\u0000\u0004p\u0000\u0000\u0000�\u0000\u0000\u0001B�ao�head\u0000\u0000\u00010\u0000\u0000\u00006\u0000\u0000\u00006\rͅ4hhea\u0000\u0000\u0001h\u0000\u0000\u0000 \u0000\u0000\u0000$\u000F\u0010\u0005)hmtx\u0000\u0000-`\u0000\u0000\u0001?\u0000\u0000\u0001��� Kmaxp\u0000\u0000\u0001�\u0000\u0000\u0000\u0006\u0000\u0000\u0000\u0006\u0000`P\u0000name\u0000\u0000\u0001�\u0000\u0000\u0002�\u0000\u0000\u0005\u001F��#^post\u0000\u0000\u0005\f\u0000\u0000\u0000\u0013\u0000\u0000\u0000 �m\u0000d\u0000\u0001\u0000\u0000\u0000\u0002#\u0012l\u0000�O_\u000F<�\u0000\u000B\b\u0000\u0000\u0000\u0000\u0000��\u0011.\u0000\u0000\u0000\u0000�#\u0007+���1\u0006�\u0006�\u0000\u0000\u0000\b\u0000\u0002\u0000\u0000\u0000\u0000\u0000\u0000x�c`d`�(�����]�����ٞ2\u0000EP@\u0002\u0000��\u0007H\u0000\u0000P\u0000\u0000`\u0000\u0000x�c`fQd������:�՘��Q\u001EB3_dHcb``\u0000a\bx���?�A!\u001A�T\u0000�����\u0019\u001C��:6�@>G1S�\u0002\u0003�|�\u001C�\u0015�\u0006��\u0002\u0003\u0013\u0000c�\f�x����N�P\u0014�?;��� \u0010eAUu'T!b�0D\u0002�j\u0014!�\u0004\f�ꄪ\u001A��X\u0018��v��\u000Bt��N\u001D;U}�>B�.}��}�\u000E��\u001CB�th,_���s��9�\u0001�؊aa�s�Z�B\r_�mT�M�D�/�\u0019�XO�g�l�\t�Q�>\bW����s(�+��x`7��X��p\r��Cx\u0001��\u0013�E�Kȟ��53�ݫ\"��-�❰M���%ʿ\u000B�`\u001D��g�f=\u0013.c�z#\\�s���\u001C�vEx\u001E\u000F�G�U��O�k8���\u0017��T\u0016^D��Vx��\u0011\u001D\u0018\fp�\u0004!z�#�B\u0013�h�Rأ�P\u001EAs��\u0018>\u001CR������+-v�Oͳ.�\u0006�D�\f�����Ts��P{��\"��c�Q�(R�\\���Nur�\u0003:t\u0019��w�[��8'�\u0010\u0017T�S�\u0019u��p�o��Q\u0013�cDtuo\u0018y����/K���Ӟj\u0012�e��)�\fk�W�aݶ��Τ�-��$\rM��Nc�����u;z��<���\u0019\u0016��xg���K�'���2��;}s&ه��T�x����seΤ\u001F��v�X�;����k��\u001Br��O��2�^Q�q�yY���˂N?\t�,�b�Dt����\u0003z�����\t�9$\u0007�g�j�b��\u001CN�v��m�\rJ�k�&\u000F\u000F}\u001D�:P�8Љ��Z�\u0007�χh6�MOh�Op�P���q1*.��o�;\f��\u0016.�1�DJ�\u0001��\u000Evq�c���$�Y6�v��h�xEp�$=7\u001A'��\u0007��ݣ��z��t��]�=\u00132\f\u0000���\u000F\u0000\u0000\u0000x�c```f�`\u0019\u0006F\u0006\u0010�\u0001�\u0018�|\u0016\u0006\u0005 �\u0002� ~���@R����\u000F�*\u0019\u0018�\u0018`L����������������_@PHXDTL\\BRJZFVN^AQIYEUM]CSK[GWO��������������������������������? 0(8$4,<\"2*:&6.����\u0007\u0000�X\u0019\u0000\u0000\u0000\u0000x�c`f\u0000��Y\f)\fX\u0000\u0000*\u001F\u0001�\u0000x��z\u0007\\TW��]aw/�UX\u0017���\r;vE��\"\u0016��(u�\n(H[���1b����\u0013,A�\" ED�ƨ\bbî�\r5v#�f��Y���h��������r�=�=e����g�\u001C$��1'�H\u0014��!����\\�Ö&-�$\u001D8\t�\"��\u0004�D��A�k$�0f���~�lܷ#g�ih?�V:�\u001D\r�j�3�l�T�]����njɷ�j�J=��\u0019g,�֙��ܹ�qVc�O��\u00187f����q+��F.I\u0014�\u001Ak1+662&�b��P+�i11\u0016���\u0004\u000B�������0�O\u0012Z|����L�\t���/9zI�\u000E�\u0011g�I9\u0019'��p&\\G�\u0013MޅSp]�n�)g�)�3�zp=�/�^\\oN����r�8\u000B�?7�\u001B�\r�\u0006s��\u0010n(7�\u001B΍�Fr�8+n47�\u001Bˍ��s\u0013���$n2g�M����l9;Ξs�\u001C�5�\u00137����䜹Y�\u000B7������q��\u001B7�\u0000��<9/Λ[�-�|�E�bΗ����\u0000.�\u000B�4\"R�h⯸\nɨ\u000EJ���C��\u0019WKGIWI�J\u001B�-2c�ZV&{(��c�\u0004\u0013\u0013��M�v|�i��:/鼹s^��]�u�����v�ajf�`\u001Aifb6���,����X�X���s�|�\nU�y���\u001E�=�{��q��Q�\u0011=\u0003z��<Գ��ݞ�Ź^�z�흪�3���>��\u0006��ٷ��c�m\u0016#,N����\u0000�\u00019\u0003%\u0003\u0007\u000F\f\u001A���\u0007�䃴��\u000E�\u0007oa�Т�k���\b�\u0016�\u0016s]����:YK��JW'\u0018Z����pE��Zܡ6�К�@<�6c��\u0011��*��X�?~|~j\u0019�A~��\u0003�\u000Fd�@\u0011�l���y�\u0007�\u000FDeh@\u0003Q���|||j4����R;վ�\f\f���\f��pA�I�2{�N�\t���O�ʬ��M*�\u0007R�)���M��!�ӟ�\u0016\u001D\u0015���\u0005+\u001C��p�0A+y-X�p58\u0018��\u0016nӓ���M{�;\u0000\u001C�V@\r�����Y\u0018H�\n\u0013�\r�\u0019&�$�W� \u0000\u001B�i��.�\u001D \u0015����\u0012ſ��U�H_\u0018o�\u001B������4R?���1M��7a�\nXς��l�ٴ�c�5<[���G�]��.i��p��W@)�~������+�E�G����\u001E�=�rxR.?)�-?��Wފ,XU\u00015p1�������O\u0017�\"�H8�w�o�\u000BL�q�\f�G��y���\u001F[���x�c\u0013�r9��\u001B�q��2c�\u0018`F�&�e�p�ue��؇�\u001E.��*�(��\f\u0000O\u001E�R�B#B#<V:�=��\u000B�����+�/�C^�\u0007�8H聖���\u0005s���C{�E�\u0007�\u001F�F���T`uرƻ��V�3x\u000E����+�:4����k�M�3^g\u001C\u000E[�h������+v:����^uS\u000E�\u0019�\u0007\u000E\u001F8���8\u001C�#k\u000F.?�|{\u0004\u0004�Nr�]\u0017\u001E\u001F\u001B\u001F�tM\b\u0004C��\u0015�+��\u0015A\u0005�m�\nM����������mnۣ�1�Ng��zݎ}\u0001/>�pH\u0014��\u001C^.��q���S�\u0018\u0018\u000B�b=�=��;�8\u0012�N\u0014�z{�����Gv�@�(B��X\u0012��w���u�\t�\t�Qk5\u0010\u0002Kv�8��0�P�+�jq!\u001B���J���1i@WL�Z���He�c�\u000Fm~ײ!�\u001D\u001E;�<\u001C\u0007�X�\u0015�q�W.�?\u001C\u000B�E�V�C�\u001F�!��x\u0016)�a�q!6<��G��K��<q2�~v��:x��ά���O��\u000F�\u0004F-u��<{�X`2\u001E�3��.޻����\f��O�\u0015��Gx�t\u0005\u0017^Y�i߫�{u|�^�f�$��m\u001F7\u0005��#Ks��\u001CO:\r�y��\u0007��\n�w\u001C����;���,�p����q;�:�3�?$���gF\u000ER�GK��\u0019^�f�O\u0017���GW����Y���*\u001C/Z�A�7�)s\u00052�\u001Dd\t+���������F���T���\u001E�@���� �\n{K\u0007=��.�8�J,�\u0000\u0006��<����\u0011��AK*����k�\u001F\u000E��\u000B��`�$Tܘi\b�K%�Y\u0002��\u0015���\u0004S���&U\u0015�-}V���\u0001J�ԡi\t���\u0007\u0007\u0000\u000E�7ߕn�~\t�[��Tܰ��\u0007�\u000F�7'��~L�\u001B+}5�:�z���r��\u0001s�\u0013��4��\u001C\u000F6��\r�8ĞW�F��Hk&Hq\u0016��aʬC�r\u0015֌g��\u0000Z\u000EFg�C\u0017V��?2܍�O\u0016�#;��\u0004�N���\"��v�7�4�H\u0015c��\u0018/\u0011\u0016�z�+�m�`f��녙B7�7t\u0013����a\u00063��u/k\u0012j%h�ˍ�ٷ*�a'=]Q~��Z��̫�\\����,�X�C��C�����q>an��\u0019!\u0013\u0017I�\t{��\t�*a/.2������=\u0012썅F����G�a��,�\u0016f�B/\u0010��e��\u0017�')��9�H>�Fa\t�\u0019}\u0010^����\u00126���{\u0003��\u000F�\u0005�\u0000�闻\u001F�~<��\u0000�yL��A�8ʮŮ�u>��\u0003�\b����\u0000�\u0001a�t��ld�T�@�\u0005��yYT[T{.�\u0011��6�hn���C����}�׬�vx�k���2;�\n���_\u000E���\u001EP�+��\u000E�k%���Fh��S�\u000E\u0015�f��\u0011�\u001Eŀ�\"\u000B�*��p��ЄiB\u0018-�I�(i2x��RiUiU��F�\u0004���5Ś�^�\f\u000B��,��ųg�񆕆��l���1\u0016�Z\u0003\n�����+�J����s\u001Bn�އ��rm�5fT���0��u\fs\f��\u000E����H�!�\u00111\u0014����F��HB\u0004\u0011q����\u000F�B/2�n�C�:>uDy\u0004Z\u0000Z\u0002�\u0014?���N�\u001F��Д|5�\\����6��K�);^�+��5{��\u001F�y�{�\u001B�7���\r��`�r��\u0019K��B�B�Rf�#/��.�����G�}\u0011n��������޴����A�A��)��y6�y�@�S��\\\u001E�+?���s'�����\tՄ��:���GsLs,�g� \"�w�Go���f\u0010�?\u000B1�ml�΄4�\u000E�M�����\u000F��z;�\u001DH\r&mv*�?�<0|hW+�\u0001.�R���\nS�X\u001A\u0007UĠ�X���O\u001C�8`�p�\u0002p\u0018�Q��ɣ'�hBv\f8<\f;�?�jQ��\u0001?\t\u001CR\\��c�^�CSF��\u0003��x\\�'-�?�77#7�hk\u0019�U��\n�\n�}�0\u000EF';\u0005/\f^�\u0019�\b�\u000B,�\f9\u001Art�/_^\u00137j����:�\u0001\u00124���ǯ��D��]r*g��Y<��N\u000Bp0`@YE����eة]��\u0011h2��i�\u000E.g*�Y\u0017\u0018\u0012b7e'~Q�{Ӎ�\u001B()B�\u0016>\u0007\u0003�el-�Y�Y76X|�c�����b&䕲N\u001C9V�S�S��\u0014\\�3��ޥ�Y�7a|���\u0005�\u000B<��\u0003?\u001D��\u0002/\u0004^H|\u0004ȵہ�[��\u0006�P��\u0002�]5S�� \u0010S\u0011z�۾�d�B\u001C�\b.���d\u0011���d��\u0014����ПV�,\u001D�����|��@�\\���[ͷJ[\u0000�Ý��!u!u\u001E�\u000E\u0005|}މ��3��Mљ�z\u0012\u0013�����as�q��\u000F050.����)t\u0018)7��=�Ћ/��\u000E��v���\u000Bq�C\\�g�\u001D��\u001D�2Tp#��x����{��KN*\r*\r��\u000E�a��#�^\u001E�N�;�gVp)\u001F\\�|\u0016���Gt\u0003Tp9�Taqaq���p\u001E��E!E!�\u000Ba\u001E��\\\u0018\u0019\u0016\u0019�X�\n�+,�\u0013Y�G\u0016�<E^O�\u0015\u0006�Q�\u0014�$V|�\u001B�H��\u0017zZ��Q�����c[�h�(�W�M��d\u0016���.�.��R6�k~\t\u000B8,��-8�*v¾��\u001C�\u0003����\u0001�jp�D�Pa�i6\u0004F�u�\f�\f��[�]�]�\u0004\u0018���m*x�u�x�����W�*��*�S6g�\u0004��G�\u0013}��4������0\u0013����\u0004�I�\t����\u0019��B����\"k������1�m���:� �\u0014ʡ`�\u0001ze��Q(N͍?\u0018p��@�\u0003a���\u0015�+Rc ��Z����P��l\u0013.WfU�O\\\n�٧(Oի�Ϫ�\u0017��M�<��ZI�����5�1�\u0019�1Qh�\u0014���5�R�$\u0014h�\u00120P��QP�~ǀ��e�`L�@�)�\u0014q\b\n1��t\u001F\u0004\u001EpA����.�1�����*Xj*��}LF\u0017\f2�Ŵ\u001C�f?���u埵����:�� � �⧳P\u000B��s�r�v�����\u000B�\u000BY\u0015\u0017\u00124g\u001E?g^�G�¤��g�1�V���}7�N��\u0015�H�8���$��x�x��ʀ|�\u000B�9\fXj���:�Zmf\u001Dy�\u001E\u000F��Qv���\u001D�{j�S��.>��O�܈�\u0012�\u001A\u0016�H��\u0000\f�\u0001�\u0002�u�8�4w�Y\u000BNWK�8F�]�\u0010���\u0016\u001Db���\u001DS�:\u0010�L\u0017��\u0012�\u0003^9�*4�а�a�鬒Cd�}���E+����B�u�\u001B���\u0005�猨\u001BQ7�i\u0000�TR���8q+�;���a7*M/�_��_D�\u0011rF��|����\u0007�*澞mNc|�� � '��YD�ᗶcO�g�V�Q���f�f��6/r\u001E3\u0013����[�\u0012<!xBܰ�L��z��8a�+����\u0019�\u0006��r{���\u0003ǎ��$�J\u0006�[�]\u0000��[���7_�`����{��\u0002'�c\u001F*��`�o�e`\u0011�J|k\rlH(�>��%3��,yz�0뿳�����j;�\u000F�T^��Z[p\u0013r��WG�񁆿I��+���I����k\"a\u0001�폯�����\u001F���'y����\u000F�J2�q\u0017`G|.�Q�Þ�O`����iA:�m�\n#��\u0018ix/U��@�\u000F݄Q�1á�UH�t�\fӕ\u001Fp���-�ɀfEOn<�Q�\u0001�\u000F<H��9�97��mV��S�\u000BO��/<�Y\u000B�)\u0002м�xi�%fz�M\u0001ސ&íj�KE㟖�x�7ݡPu\u0004�L�\u000E\f\u000B\fs��\u0012\u0016�:��&�,o���%�8�$:ˇ\u0018uNҢ�ȠH�U�J�QK\u000B����\u0016ܦ���F-��\u0014��:�:VYVY6�>�~��\u0012�ddS\u0001�(����注؉�y�.[70z���Ł�IC�I�����׃X�\f8�G��\u001B\u001C��\u001D��;w�Q\tv�Wp=�:�: �!c\u0000E���8�\u0013�\rk\u001E��Tebh�\t�ǎ�\u001C��l�;�w@\u0002�O��\u0014dc��\u0002�H�Q��یD\u0000'�DU��[ζ�m�w���\u000F�D]��� \u0012V�a\u0017�\u000F�\u001F��\u000F9;�,�\u001E\u0016����3l4�L9�~\u0017�`�`�/N3��*��FG��3�gX\u000F\u000Ea_\u00106N�\u0016z��`�yrqb�<������\n�\r�\u0004K�\u000Bj�f�\u0014����Vj?��ڒ��\u0014�\u0004\u001A\u001E\b3u\u0013��X�\u0002'k��\t\u0005��0H��P� �?��\u0011�}\u000E�.'\u0007�\u001Ct����Ko�b)����c拂\u0017\u00057~>��\u000B�\r�\u0014��bG��ӲXG\u0018]:�yv�R��\u000E�1\u0005��r�ӹ���?.A)�th\u0019�ͦ���,\u0005Gx�|佑���\u0018�D�N\u0016�:�u���9\u0000�#}O�J��� �wm�J�բ}5�޺~��1]T�t�������VJ$��A8�\r8Yl9��s\u000B�b\u0014�Um��J�1]�����x\u0012�OI�\u0007�\u000F��$\u001CGR�D1FI�����h\u0004؏�oe�m�r�պ�\u0006�\u0006z'�\"���\u001D^\u001C^�r\u000E���ڿ��\u0017̾2��Ӆ9�&x\n\f\r�����/�90�\u001B�1\u000B6\rt\u000El+\u0005@�0\"�~�Wg�%��0�J\\�p��Т���t���>��U>\u0012�I\u0017\u0012e�\u001B�:�0��#\u0005����O��.��\u001C\f��NI�\rq�����m�\r������Ą��������L��O[&n\u0015Ӕ\"\n��mok?��v9q�\u0016���\u0014\u0017�P\u001FO\u0012�Eg����;����8aq}�s��\u001E\u001Fc��� \u001F���<��v�\u001A9*\u0007Д@����q@<v[���?g�\u001F}v��\u0001��¨\f�\u001D�1�c��b&����\u0002#{�:M��,vl\u001Ev9����G�E�f\f͚��u\u0013s(�c\u0013y\u0007ʅ�c���I�'M�0c�piB�k�ks\fv#��+��\u0019\u001C%�I��^�~�W�\u001D�_d䒰Ǳ��/\u001B+�ͦ�����#\u001E�xĺ\u001Fg��H���V\u0015\rpA�p���*�*����\u0016l\u0012�������ƒi�\u000B����l3z���c\u0002�P�]�\u000F<ֳ��\u001A��o�G�x����}��,1l��\u001FP��\u000B�΢i�?�zDP��\f�ÿ�\n��T7)W����B%\u0015��X����i�'CUT\u0012T5\u0004՚��:�Ou��\u0002\u0019�\u001Bjp?�vvO�C������K���5�\u001B�-\u0000%cn���̏2bq�\u000F\"h.*\u001Aj����KIe�2;�`\u0007�\t�~\u001A?�K�$\u0002-]���F\f4��[Y\u0018M��[�/n\n�T0��M�s�sÂ'aO�ޤ�C\u001AOީ���\u0017�+_\u0003\u0011���\u0017����g\u0016W;�:��)f�|*S�}\u000By�\u001D���28\u0005�{OT\u0014T\u0014\\�|\u0000b\u0012Y��\u0012�p\u0010�\u001E\u001E&�\u000El\bl���m�mјݖ�FQZ\u0010>�a���p�d����$��5ߠy\u0019�&K��_RN?{}a.�'\u0006�>k���0\u0018��y���\u0017��q\u0017�\u0001��\u0010S��\u0004��w��r����j����*��F���\u0014�EEhJv�$\u0012���Bd4��u};��8�\u0019�6�SHA+�={���H��y}0����\u0005\u000F\u001F�|��\u0000���'}O�߂7�>���\u0015/?[w&�V\t��zw�\u001A�,Ѧs� S�-�\u000Ej�\u0004�B����\u00180����2\r�P_�9mU�\u0011��v\"`�mM,[�Ė\u0000�mkd��F�����%�X\txY��K�\\�\u0002�B]�0O\u0017�ʁ�3�c��}T\u0015\\[#���>�\u00116��lk�om�H0\u001C�m\u0000�\u0011a�~$;\u0002�I�3{�s�*���i���\u001B�\u0016w�t\u001B��d�m�(\u0007���C�Wm7���q��{�e>�i�=����\u0014V?��J\u0018�\u001E2e\u0003�BOe��\u0014�4��)\f��\u0005��.�\u0007��:n\u0000�\u0007�l�\u000E�!X�4q�\f�[�<\u0004+�����yʕ\rh���P�/�\u000FtJ�L�!��B0�2\u0004c0���hr`D���\u000B�$ߚ3/�0��+\fW��W���Z�1�V�8\u0015�cg0\u0010�\u000F�\u0011=�\u0016}�U2\u0011�(�\u0001]͞QNlI2T?�3d\u0018��\r�\r�Ob>���cw�x������1�\u001C�O����wI\u0017�5��Q\u001E�����\u0005�<�\u0004kpX3k���\u000BC�|�|����~\u0010S�YP�]�]��4\\��U�Ks��\n\u0002/~\u0006\u001B&\u0017\u000FȺ�Lt�'�\u0006SUN\u001D\u000E���������+��\u0001�=�F�\u001C\u0016\u001D\u001D��+��\u0013\u0003R��\u0007B��d�d�.�J^a�E_66Y�\u001B�\u0004g�c�(�O�8a5�(\u0019��c\u001Cd��TYym��\u0000��)\f��ĭw��\u0015a/@[~\u0007EO3(Kp|��v`5�)��Q!3�)�`irLS3\u0007��)/}~��\u00034B��\u0012�\u0012�,�ք��\bJ�4)�3��=�\u0001��c��%�{㵸P�\u0002}$��W\b�4j\u0014r���O�=\u001D��}q\u0004܅\u001B?]ο��KeqMqMV���y�R��'9(tI���+��\u0006ܲ�k�k��\u0000���Ŀ|Vs��ҳ�ٍP\u0007'��B��f-�֕Ǖ�4T\u0004��zk��\u0001Eb�4\u0012Xg��C�\u000F\r\u0012W4�W8�'L�$Kcq\u0018��l\u0014*���b���ໃ_$��\u0005ޔ�x�+We0c�P�\u0014\u0015��\u0019N�g�\u001B}��Ŵo�\"{K��2�bGfC{��\u00024�zUz��|mn#�����\t�!D\u001E0�)h(���������\u001E\u0003v �z\u0012LX�ΘIP�\nq��\u0003�\u001F$��J�z=��p4�E+x\u0006M��\u000B�\u0017��.�ȳ\u001Eh*�9vL �\u0016[�}��g��c�mx��|��\u0000\u001DC�\u000B��6/���\r\u0001+��������\u0012<)xR�\b`\u001C�[ީ~|p�bIeI�/�.S�q*�h����n�S��d:[����(��F\tF`�Q���\n����4�>\u000E]X�k\u0019v��E�o\u0001�n:��ߊ�R����\u001A�\u001C��\\��̉��:?�M�+f\u001A��\u001B��W�\u0014��Z���QXJ��b���~;���X�{��,�X,\"o\u0002/���\u0015��&%��\u000F�\u000F��4U�5F�9>噜YJ�\u0017�hnGݎ����j8`��'���/#k�\u0001��Q��b��lJ�of<\u001E^J\u0011 �\u0001\u0003\u0016�\u000E�m�����ly�(�U׽/��������[�\u001ER1�7���';\u0005\u000F#p]���\u0007�OzD�>�\u0018����H�\u000B��(�ز�9��vȪ�o���z�\\�\u0017�\u0017��\u000F8��n��G�\tw1\u0013\"��@\u0019�e��h^h �R�.��.kq\u001A�hF�)�m'[}��j�קc���\t��ڏ\r���W��AQjn�\u0003K3��\u000F���\t�|B��\u0018� ǸS��W�\u0006]fi\u0014��\u0018f��Z:��\u00042�`\u001BM������d}�W��\u0011�\u000E��9]s�\u0016hī�w2��\u0000���C�(������o�I(��ɟnzI�#���>\t�*\n�`��\u0017),ow�\u0004�)��\u001Feȡ\u0011�4�a>\u0018<t�\u0004K�G�d?�g\u000E#Aߑ�\u0011��\u0000��QO\u000B��\u0005�l�>�׫>���\u0013Ӊ�-����M\"ץ�\u000E�J\u001A\u001B��\u0011�\u0010.���)�VL�o֭����� � �b�ih�\u0013�s�s�w.\u0006g�՛��QD�Z����ǥ�GĨy �\u000E޶�h!\u001A\r=�\u0006\u0003��� �q��\u001BP�V����%�g�P���\u0014?ʪ��({K�U�:'*'j�\"q\u001A\u000Fz\u0012$O�\u001F�\u001CU,�����f8�,߀��#��w��čD��d\u001Fv�L�|����X���7x��v���s\u0017K\u001E�<��\n��7��n�ы�t��1/Y�Jf\tCaB�C�C�������/��������^�v����[9w�\u0004ѾX��Q\u0001s\u0003�΋�\u0002�\u0014��\u001BP\u001FP��DT\u000F���_�`A�-�'��d\u0012�dܨ|��\f\u0013H��Ȯٽ\n\u0013\u0003���r��o�;*����;��L�@u��9!\u0012rW\u0018��1�W��\u001Bv`�Į�0�u�JH��޿^�\u000E�����y���&\u0012i\u0001S&�\nr\rr�\u001Fm\u000F�\u0010�~<�!����H���\u0013�\u0007�T1\u0018�lj\u0014*EZ\u0011\t����\u001F�P%^�?/�v�7��:(\u001B��F\u0016#_k!rģ���\u0013���\u0011�Cy���\u001Ca�\u0019��{_��/;>�\u000E���a���a��ʌ�\u0011`\u000F�s���ꓚ�12|OY���>�C\u0001L�B�Ȋ\u001F�\u0012\u0013�|8�)o#�\r�H\u0013�M_\u0002\u0003a���(^Y�\u0015vak�@�I�st�q��-\\���o�\u0012��|q\u000B_�`����^�^�\u00045D7D7�~*��\u000F9M�M���Q�P��zE\t��$�`��\u0005�\u001D���\u001A�57+&�b���Շ�TKv\u001D�?��,�\u0014���5\u00051\u00051?��{��\u0012����ͅ�y���\u0002Cbl���\u000B�#\u000F�&a\u0017��q\rI\u000FV�\u000FV��\u0016&\u0016&�\u0014\u0005\u001A\b[\u0015\u0015�\u0010���:\u0017f���DD��I���\u0012\u0016�Z\fЅ��\u0004�\n��\u0017}��A'c!/\u0006���'���O���]�|C��X\b��?��\\��e.���{�\"7�E���v1g������L�v�}�\"t˱�`JҚ�\u000E�u�u~�T�&�\u0001-ǯ=��)[��J\u0000�\u000F\u0001Z3����I6����L�ـ}���D\u001Ef��)J�WY%(�.c$\b��\u0013\u0005�+[w�5�����}js��`5��\u0007Lѭ�5���j\u00155�\u001B0��T��Kes�ŷj�t��v3�S�\\s�\u0007\u0018-�0� �,`��\n|(��}�B��\u0002Q`Y�\u000F\f9�g\u001Dqw�Z:H+�\u0010���v~��t�����$�T7�\u0003�\u0005�.-M-��\u0000�kW�_/�\u001C^pR\u001B?`\u0019��Z��J]�8=�q��\"�}s}\u0007\\h�!\u0013~��\u0003Z�>��~�P\b���h��P\"\u001CDg\tn�@��pP��\u000B�lx?�T��R�3\u001B����*�/e���-idϸ�\fz�ǟL^���\u001A�\u001D��\u0018#�\u000Emj[P^������D�]0��i1ÿ�P�-��\u0011s\u001D����5��و\u0013�\u0018��x\u001Bl���d6�J\u0012�)F�X�����b��ggjo��>�\u001Bq\u0017���8��-T�Eg9S͹����?��u�{����ǜf]�y?f!E��ځ�2{��R�6��\u0002�x�.�n���\u001F`a�M�~�@f\u0012�+�\\��A���\u0007\u0013\\�[���埝\n\u0017��LF����\u0005\u0005?��\u00018����{�\u0017ŝ\f8\u0019P\u0019}<�xJ������Ƣ���7�ވq*s���Z�؈؈Ȕ@X\u0001�[�~L�12ۯ̯, /hO�\u001E�\u001F|�\u001F\n��nNnN�F��ڡP\u001B�]m|E�ݣ��\u0007��S\u000B2��?�й#\u0006vD�m�;c\u001A��?:wQsVJ��D�١@�\u0001؇9������h���k���k����t/��~\u001F$^6t��<�߻\u0000x�c`d`b�c``�\u0000b\u0005 �\u0011\bじ\u0005�g\u0002bF0�\u0003�\u0002@6��\u0000\u0000\u001At\u0000�\u0000x�c`d``�bhcX�����\u0013� �\\Y�à�^���`��X�����\u0002T���?\u0003\u0013�b���c`w�rU`�s\u000E\n\u0001�nA�@���\u0007H�9�\u0001� _ \u0019\u0012�\r$��1%'�\u00160��\u0015%&3��E\u0018�$P���A\u0002�\u0019�X�����!����\u0007,��0��\u0019L�\u0001�\bT�\u0017X7��7��\u0010�\u001Ej�2\u0002�\t\u0012\u0007\u0001& K\u0010�^�\u001C\u0000�0 �\u0000\u0000\u0000x��W�O\\E\u0014��e)��²V��/�؊V,\u0001Z4�A��4\u0015E\nŦZ�j\n��FӤi��\r����$�`b�&�1>Hi��\u0016E�X�؊�\u0002\u000B, m�f����{w/����ٜ�3��y̙3���\u0000��>�\u0003gU�����|��\u0015�^k?؂��\u0003o\u001FF\u0015��\u0003\u00118�g$1r4��Ն���퇱^S�19X�,=6�ӳ\u001D(vTp�B*6��c'{����g \u0007y�\u0015�1�a\u0018��R>*9�\u0006����h�1t�<��;.c\u001E�\u001A.#��b�\u001A{���\u000F�N���1�!�S_�(܈L����mC!*�K�W�I�GN�^\u0016�(�\u001C�d\u0012;�&����N�'}\u0006^x���&\u0014�\u0013(�b�RS���*��S�jB\r���\u001C��z�P�A�h\"�\u00039�����������\\�a�\u0004P!Wh�T\u0006I��h�#����\u0019�\\�l\u0017-�`t�d\u001C�q��d��&e��,�#�<5/S~%�G�g�\u001D��f���?�u\u0015q]e\u0004\u0017�x)�\ri�q=~������\u001E?��ג��\u0004�\t�\u0013 '@N��;)W���o\u000E��ҾA��6<�>�\t�Z��\u0002��\u0013Rh/�\u0016\u000B���x\u0000\u000F�a<J\r%�i9w��;�8u�B\u001D57Ps\u0013w��>�2!ӝ�O��ao>�#W\u0019M��`y˱��\u001A㰪1�V�s��}0�3�i۬19N����5Ȑܔ%�_�AY�\u000E9�YnM[$t\u0010F�_~���{9�y��\u000F��J\u0014����?��g\u0011�����|���9\u0013�d��I��1���Ŋ�2��j\u001A�\u000B�}Z%�\u0014M+��\u001E��\ti�\u0011����)iZ��2ݲm\u0012{��8:���}�\u0013k2)c�\u0013f\u001E�\u0014kB���\b��Gg\u0018�a�\u00119$ge@\u0002��<���� ��wOh޴�n\u0015\u000B٠�R���!^g�����\f���\u000BD�v�<wI1���F�Z�I�����\u001E���y9��.�2\u0010\f�1f�W�\u000B�+G\t�V�U�ݎا��\u0018�\u000E['���ɰ�Yu҈�Tl\u0019o�ry��4)SZ��\u001Ff�X\u001C\u0001�ffq�+�\u000Bkj���?ZJ�3�|��ɬO�5\u001E�����ym\u0012u14ݰ���\u0015%tV����/�����`�t��Q���K��pV����5&�\u000F�/%�i5\n�yB���*_Io��u�\u000E�\u0019�^g�\t�%�}������3\u0001�\u0002\u0011�h���f&��:�����R�Y7\u0010Sϛ�^\\�\u0013r.�\u001C�\u0017�M��΀��-��G�]���:6�{�kXJ�z���tT��X6�>���|��ҷ2r���Sɮ#�@u�z�%���\\\"/r|\u0000��\u0000�\"�#Շ7�T��Q�L��\u001C\u0004��؝�G��D\u001D�v'�}\u0011z��\u0018r�\b�2-��d�\t�9����ŋQe�\u0007ߵ��vD���\u000E�\u0017\u001B�\u0013#�{C\u0010�9x\u0017W���0��\u0017��!��!Z\u0016�w�\u000E��^q�^ǘ���t=r��N�R�~��\u0010%\u0003ꖨn��ߑ\u001Bc����\t��u�wk\r��g[�\t^�D��K�ݑ��[\u001A�w��\"��\u0014����^5\u0018�\f��\f�~��\u0014�j��_@{\u001B��(�f<�\"�zقGP�7L)��\u000Bf�~�T�I����4_�Ϡ\u0016��=���7���\u0000;G|\u001F\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000�2��\u0000\u0000\u0000\u0000��\u0011.\u0000\u0000\u0000\u0000�#\u0007+x�\u001D��+�Q\u0014�����s��,�l�4\u000B5Ԉ\"/)%R,�!I)�%/+4�L��D�~\u000B\u000B\u000BeÆ���\n��F\"{�\u0012�ŧ�{�s��\n\u0004� �\u001C�\u0011S�¸�1韙��\f\u0007�d��u�'�v�k����\n9�G��v���g͙I�~�h6L�t�\u00193&Ul\u0006��i\t\u001D�ʡֲ�^i�$m� �>F�[��m��e�l�Ȝ�$�NNu�����\u0010a$��\u000B�e���\u001C�o;{�W���LΧ(�\u0014Q�g\"zǀ4�w#�Y��<M�\u0018'!\r���n�������cP\u001EI�\u000E\u0019��\"Qr\u0012�\\i�2�^��u�X�}���ۥ_n-\u0013��9��Ȳ�����\u0002��\u001B1ˌ\\�\"eܧ��\u0002\n�OF\u0000", "import { type FC, memo, Suspense, useRef } from 'react'\nimport { matriceCount, matriceWorldCount } from './PerfHeadless'\nimport { useThree } from '@react-three/fiber'\nimport { Text } from '@react-three/drei'\nimport { getPerf } from '..'\nimport { colorsGraph } from './Perf'\nimport * as THREE from 'three'\nimport type { customData, PerfUIProps } from '../types'\nimport { useEvent } from '@utsubo/events'\nimport localFont from '../roboto.woff'\n\ninterface TextHighHZProps {\n  metric?: string\n  colorBlind?: boolean\n  isPerf?: boolean\n  hasInstance?: boolean\n  isMemory?: boolean\n  isShadersInfo?: boolean\n  fontSize: number\n  round: number\n  color?: string\n  offsetX: number\n  offsetY?: number\n  customData?: customData\n  minimal?: boolean\n}\n\nconst TextHighHZ: FC<TextHighHZProps> = memo(\n  ({\n    isPerf,\n    color,\n    colorBlind,\n    customData,\n    isMemory,\n    isShadersInfo,\n    metric,\n    fontSize,\n    offsetY = 0,\n    offsetX,\n    round,\n    hasInstance,\n  }) => {\n    const { width: w, height: h } = useThree((s) => s.viewport)\n    const fpsRef = useRef<any>(null)\n    const fpsInstanceRef = useRef<any>(null)\n\n    useEvent('log', function updateR3FPerfText([log, gl]) {\n      if (!log || !fpsRef.current) return\n\n      if (customData) {\n        fpsRef.current.text = (Math.round(getPerf().customData * Math.pow(10, round)) / Math.pow(10, round)).toFixed(\n          round\n        )\n      }\n\n      if (!metric) return\n\n      let info = log[metric]\n      if (isShadersInfo) {\n        info = gl.info.programs?.length\n      } else if (metric === 'matriceCount') {\n        info = matriceCount.value\n      } else if (!isPerf && gl.info.render) {\n        const infos: any = isMemory ? gl.info.memory : gl.info.render\n        info = infos[metric]\n      }\n\n      if (metric === 'fps') {\n        fpsRef.current.color = getPerf().overclockingFps\n          ? colorsGraph(colorBlind).overClock.toString()\n          : `rgb(${colorsGraph(colorBlind).fps.toString()})`\n      }\n      fpsRef.current.text = (Math.round(info * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round)\n\n      if (hasInstance) {\n        const infosInstance: any = gl.info.instance\n\n        if (typeof infosInstance === 'undefined' && metric !== 'matriceCount') {\n          return\n        }\n\n        let infoInstance\n        if (metric === 'matriceCount') {\n          infoInstance = matriceWorldCount.value\n        } else {\n          infoInstance = infosInstance[metric]\n        }\n\n        if (infoInstance > 0) {\n          fpsRef.current.fontSize = fontSize / 1.15\n          fpsInstanceRef.current.fontSize = info > 0 ? fontSize / 1.4 : fontSize\n\n          fpsRef.current.position.y = h / 2 - offsetY - fontSize / 1.9\n          fpsInstanceRef.current.text =\n            ' ±\t' + (Math.round(infoInstance * Math.pow(10, round)) / Math.pow(10, round)).toFixed(round)\n        } else {\n          if (fpsInstanceRef.current.text) fpsInstanceRef.current.text = ''\n\n          fpsRef.current.position.y = h / 2 - offsetY - fontSize\n          fpsRef.current.fontSize = fontSize\n        }\n      }\n      matriceCount.value -= 1\n      fpsRef.current.updateMatrix()\n      fpsRef.current.matrixWorld.copy(fpsRef.current.matrix)\n    })\n    return (\n      <Suspense fallback={null}>\n        <Text\n          textAlign=\"justify\"\n          matrixAutoUpdate={false}\n          ref={fpsRef}\n          font={localFont}\n          fontSize={fontSize}\n          position={[-w / 2 + offsetX + fontSize, h / 2 - offsetY - fontSize, 0]}\n          color={color}\n          characters=\"0123456789\"\n          onUpdate={(self) => {\n            self.updateMatrix()\n            matriceCount.value -= 1\n            self.matrixWorld.copy(self.matrix)\n          }}>\n          <meshBasicMaterial blending={THREE.NormalBlending} />0\n        </Text>\n        {hasInstance && (\n          <Text\n            textAlign=\"justify\"\n            matrixAutoUpdate={false}\n            ref={fpsInstanceRef}\n            font={localFont}\n            fontSize={8}\n            position={[-w / 2 + offsetX + fontSize, h / 2 - offsetY - fontSize * 1.15, 0]}\n            color={'lightgrey'}\n            characters=\"0123456789\"\n            onUpdate={(self) => {\n              self.updateMatrix()\n              matriceCount.value -= 1\n              self.matrixWorld.copy(self.matrix)\n            }}>\n            <meshBasicMaterial blending={THREE.NormalBlending} />\n          </Text>\n        )}\n      </Suspense>\n    )\n  }\n)\n\nexport const TextsHighHZ: FC<PerfUIProps> = ({ colorBlind, customData, minimal, matrixUpdate }) => {\n  // const [supportMemory] = useState(window.performance.memory)\n  // const supportMemory = false\n\n  const fontSize: number = 14\n  return (\n    <>\n      <TextHighHZ\n        colorBlind={colorBlind}\n        color={`rgb(${colorsGraph(colorBlind).fps.toString()})`}\n        isPerf\n        metric=\"fps\"\n        fontSize={fontSize}\n        offsetX={140}\n        round={0}\n      />\n      <TextHighHZ\n        color={`rgb(${colorsGraph(colorBlind).cpu.toString()})`}\n        isPerf\n        metric=\"cpu\"\n        fontSize={fontSize}\n        offsetX={72}\n        round={3}\n      />\n      {/* <TextHighHZ color={supportMemory ? `rgb(${colorsGraph(colorBlind).cpu.toString()})` : ''} isPerf metric='maxMemory' fontSize={8} offsetX={112} offsetY={10} round={0} /> */}\n      <TextHighHZ\n        color={`rgb(${colorsGraph(colorBlind).gpu.toString()})`}\n        isPerf\n        metric=\"gpu\"\n        fontSize={fontSize}\n        offsetX={10}\n        round={3}\n      />\n      {!minimal ? (\n        <>\n          <TextHighHZ metric=\"calls\" fontSize={fontSize} offsetX={200} round={0} hasInstance />\n          <TextHighHZ metric=\"triangles\" fontSize={fontSize} offsetX={260} round={0} hasInstance />\n          <TextHighHZ isMemory metric=\"geometries\" fontSize={fontSize} offsetY={30} offsetX={0} round={0} />\n          <TextHighHZ isMemory metric=\"textures\" fontSize={fontSize} offsetY={30} offsetX={80} round={0} />\n          <TextHighHZ isShadersInfo metric=\"programs\" fontSize={fontSize} offsetY={30} offsetX={140} round={0} />\n          <TextHighHZ metric=\"lines\" fontSize={fontSize} offsetY={30} offsetX={200} round={0} hasInstance />\n          <TextHighHZ metric=\"points\" fontSize={fontSize} offsetY={30} offsetX={260} round={0} hasInstance />\n          {matrixUpdate && (\n            <TextHighHZ\n              isPerf\n              metric=\"matriceCount\"\n              fontSize={fontSize}\n              offsetY={30}\n              offsetX={320}\n              round={0}\n              hasInstance\n            />\n          )}\n        </>\n      ) : null}\n\n      {customData && (\n        <TextHighHZ\n          color={`rgb(${colorsGraph(colorBlind).custom.toString()})`}\n          customData={customData}\n          fontSize={fontSize}\n          offsetY={0}\n          offsetX={minimal ? 200 : 320}\n          round={customData.round || 2}\n        />\n      )}\n    </>\n  )\n}\n", "import { type FC, useMemo, useRef } from 'react';\nimport { matriceCount, matriceWorldCount } from './PerfHeadless';\nimport { Graph, Graphpc } from '../styles';\nimport { PauseIcon } from '@radix-ui/react-icons';\nimport { Canvas, useFrame, type Viewport } from '@react-three/fiber';\nimport { getPerf, usePerf } from '../store';\nimport { colorsGraph } from './Perf';\nimport * as THREE from 'three';\nimport type { PerfUIProps } from '../types';\nimport { TextsHighHZ } from './TextsHighHZ';\n\nexport interface graphData {\n  curve: THREE.SplineCurve;\n  maxVal: number;\n  element: string;\n}\n\n\nconst ChartCurve:FC<PerfUIProps> = ({colorBlind, minimal, chart= {length: 120, hz: 60}}) => {\n\n  const curves: any = useMemo(() => {\n    return {\n      fps: new Float32Array(chart.length * 3),\n      cpu: new Float32Array(chart.length * 3),\n      // mem: new Float32Array(chart.length * 3),\n      gpu: new Float32Array(chart.length * 3)\n    }\n  }, [chart])\n\n  const fpsRef= useRef<any>(null)\n  const fpsMatRef= useRef<any>(null)\n  const gpuRef= useRef<any>(null)\n  const cpuRef= useRef<any>(null)\n\n  const dummyVec3 = useMemo(() => new THREE.Vector3(0,0,0), [])\n  const updatePoints = (element: string, factor: number = 1, ref: any, viewport: Viewport) => {\n    let maxVal = 0;\n    const {width: w, height: h} = viewport\n\n    const chart = getPerf().chart.data[element];\n    if (!chart || chart.length === 0) {\n      return\n    }\n    const padding = minimal ? 2 : 6\n    const paddingTop = minimal ? 12 : 50\n    let len = chart.length;\n    for (let i = 0; i < len; i++) {\n      let id = (getPerf().chart.circularId + i + 1) % len;\n      if (chart[id] !== undefined) {\n        if (chart[id] > maxVal) {\n          maxVal = chart[id] * factor;\n        }\n        dummyVec3.set(padding + i / (len - 1) * (w - padding * 2) - w / 2, (Math.min(100, chart[id]) * factor) / 100 * (h - padding * 2 - paddingTop) - h / 2, 0)\n\n        dummyVec3.toArray(ref.attributes.position.array, i * 3)\n      }\n    }\n\n    ref.attributes.position.needsUpdate = true;\n  };\n\n  // const [supportMemory] = useState(window.performance.memory)\n  useFrame(function updateChartCurve({viewport}) {\n\n    updatePoints('fps', 1, fpsRef.current, viewport)\n    if (fpsMatRef.current) {\n      fpsMatRef.current.color.set(getPerf().overclockingFps ? colorsGraph(colorBlind).overClock.toString() : `rgb(${colorsGraph(colorBlind).fps.toString()})`)\n    }\n    updatePoints('gpu', 5, gpuRef.current, viewport)\n    // if (supportMemory) {\n      updatePoints('cpu', 5, cpuRef.current, viewport)\n    // }\n  })\n  return (\n    <>\n      {/* @ts-ignore */}\n      <line onUpdate={(self)=>{\n          self.updateMatrix()\n          matriceCount.value -= 1\n          self.matrixWorld.copy(self.matrix)\n        }}>\n        <bufferGeometry ref={fpsRef}>\n          <bufferAttribute\n              attach={'attributes-position'}\n              count={chart.length}\n              array={curves.fps}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n              needsUpdate\n            />\n        </bufferGeometry>\n        <lineBasicMaterial ref={fpsMatRef} color={`rgb(${colorsGraph(colorBlind).fps.toString()})`} transparent opacity={0.5} />\n      </line>\n      {/* @ts-ignore */}\n      <line onUpdate={(self)=>{\n          self.updateMatrix()\n          matriceCount.value -= 1\n          self.matrixWorld.copy(self.matrix)\n        }}>\n        <bufferGeometry ref={gpuRef}>\n          <bufferAttribute\n              attach={'attributes-position'}\n              count={chart.length}\n              array={curves.gpu}\n              itemSize={3}\n              usage={THREE.DynamicDrawUsage}\n              needsUpdate\n            />\n        </bufferGeometry>\n        <lineBasicMaterial color={`rgb(${colorsGraph(colorBlind).gpu.toString()})`} transparent opacity={0.5} />\n      </line>\n      {/* @ts-ignore */}\n      <line onUpdate={(self)=>{\n          self.updateMatrix()\n          matriceCount.value -= 1\n          self.matrixWorld.copy(self.matrix)\n        }}>\n        <bufferGeometry ref={cpuRef}>\n          <bufferAttribute\n            attach={'attributes-position'}\n            count={chart.length}\n            array={curves.cpu}\n            itemSize={3}\n            usage={THREE.DynamicDrawUsage}\n            needsUpdate\n          />\n        </bufferGeometry>\n        <lineBasicMaterial color={`rgb(${colorsGraph(colorBlind).cpu.toString()})`} transparent opacity={0.5} />\n      </line>\n    </>\n  );\n};\n\nexport const ChartUI: FC<PerfUIProps> = ({\n  colorBlind,\n  chart,\n  customData,\n  matrixUpdate,\n  showGraph= true,\n  antialias= true,\n  minimal,\n}) => {\n  const canvas = useRef<any>(undefined);\n\n  const paused = usePerf((state) => state.paused);\n  return (\n    <Graph\n      style={{\n        display: 'flex',\n        position: 'absolute',\n        height: `${minimal ? 37 : showGraph ? 100 : 60 }px`,\n        minWidth: `${minimal ? '100px' : customData ? '370px' : '310px'}`\n      }}\n    >\n      <Canvas\n        ref={canvas}\n        orthographic\n        camera={{ rotation: [0, 0, 0] }}\n        dpr={antialias ? [1,2] : 1}\n        gl={{\n          antialias: true,\n          alpha: true,\n          stencil: false,\n          depth: false,\n        }}\n        onCreated={({scene}) => {\n          scene.traverse((obj: THREE.Object3D)=>{\n            //@ts-ignore\n            obj.matrixWorldAutoUpdate=false\n            obj.matrixAutoUpdate=false\n          })\n        }}\n        flat={true}\n        style={{\n          marginBottom: `-42px`,\n          position: 'relative',\n          pointerEvents: 'none',\n          background: 'transparent !important',\n          height: `${minimal ? 37 : showGraph ? 100 : 60 }px`\n        }}\n      >\n        {!paused ? (\n          <>\n            <Renderer />\n            <TextsHighHZ customData={customData} minimal={minimal} matrixUpdate={matrixUpdate} />\n            {showGraph && <ChartCurve\n              colorBlind={colorBlind}\n              minimal={minimal}\n              chart={chart}\n            />}\n          </>\n        ) : null}\n      </Canvas>\n      {paused && (\n        <Graphpc>\n          <PauseIcon /> PAUSED\n        </Graphpc>\n      )}\n    </Graph>\n  );\n};\n\nconst Renderer = () =>{\n\n  useFrame(function updateR3FPerf({ gl, scene, camera }) {\n    camera.updateMatrix()\n    matriceCount.value -= 1\n    camera.matrixWorld.copy(camera.matrix)\n    camera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n    gl.render(scene,camera)\n    matriceWorldCount.value = 0\n    matriceCount.value = 0\n  }, Infinity)\n\n\n  return null\n}", "import { useThree } from '@react-three/fiber'\nimport React, { forwardRef, type ReactNode, useLayoutEffect, useRef, useEffect } from 'react'\n// @ts-ignore\nimport { createRoot, Root } from 'react-dom/client'\n\ninterface HtmlProps {\n  portal?: React.MutableRefObject<HTMLElement>\n  className?: string,\n  name?: string,\n  children?: ReactNode\n}\n\nconst HtmlMinimal = forwardRef<HTMLDivElement, HtmlProps>(({ portal, className, children, name, ...props }, ref) => {\n  const gl = useThree(state => state.gl)\n  const group = useRef(null)\n  const rootRef = useRef<Root | null>(null)\n\n  const target = portal?.current != null ? portal.current : gl.domElement.parentNode\n\n  useLayoutEffect(() => {\n    if (!group.current || !target) return\n\n    const el = document.createElement('div')\n    const root = (rootRef.current = createRoot(el))\n\n    target.appendChild(el)\n\n    return () => {\n      root.unmount()\n      rootRef.current = null\n      target.removeChild(el)\n    }\n  }, [target])\n\n  useLayoutEffect(() => {\n    const root = rootRef.current\n    if (!root) return\n    root.render(\n      <div ref={ref} className={className}>\n        {children}\n      </div>\n    )\n  })\n\n  return <group name={name} {...props} ref={group} />\n})\n\nexport { HtmlMinimal }\n", "import { BufferGeometry } from \"three\"\n\n/**\n * @param {Array<BufferGeometry>} geometry\n * @return {number}\n */\nexport function estimateBytesUsed(geometry: BufferGeometry): number {\n    // Return the estimated memory used by this geometry in bytes\n    // Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\n    // for InterleavedBufferAttributes.\n    let mem = 0\n    for (let name in geometry.attributes) {\n      const attr = geometry.getAttribute(name)\n      mem += attr.count * attr.itemSize * (attr.array as any).BYTES_PER_ELEMENT\n    }\n  \n    const indices = geometry.getIndex()\n    mem += indices ? indices.count * indices.itemSize * (indices.array as any).BYTES_PER_ELEMENT : 0\n    return mem\n}", "import { type FC, useEffect, useState } from 'react';\n\nimport {\n  ProgramGeo,\n  ProgramHeader,\n  ProgramTitle,\n  ToggleVisible,\n  ProgramConsole,\n  ProgramsUL,\n  ProgramsULHeader,\n  Toggle,\n  PerfI,\n  PerfB,\n  ProgramsGeoLi,\n  ProgramsContainer,\n} from '../styles';\nimport { ActivityLogIcon, ButtonIcon, CubeIcon, EyeNoneIcon, EyeOpenIcon, ImageIcon, LayersIcon, RocketIcon, TriangleDownIcon, TriangleUpIcon, VercelLogoIcon } from '@radix-ui/react-icons';\nimport { usePerf, type ProgramsPerf } from '../store';\nimport type { PerfProps } from '../types';\nimport { estimateBytesUsed } from '../helpers/estimateBytesUsed';\n\nconst addTextureUniforms = (id: string, texture: any) => {\n  const repeatType = (wrap: number) => {\n    switch (wrap) {\n      case 1000:\n        return 'RepeatWrapping';\n      case 1001:\n        return 'ClampToEdgeWrapping';\n      case 1002:\n        return 'MirroredRepeatWrapping';\n      default:\n        return 'ClampToEdgeWrapping';\n    }\n  };\n\n  const encodingType = (encoding: number) => {\n    switch (encoding) {\n      case 3000:\n        return 'LinearEncoding';\n      case 3001:\n        return 'sRGBEncoding';\n      case 3002:\n        return 'RGBEEncoding';\n      case 3003:\n        return 'LogLuvEncoding';\n      case 3004:\n        return 'RGBM7Encoding';\n      case 3005:\n        return 'RGBM16Encoding';\n      case 3006:\n        return 'RGBDEncoding';\n      case 3007:\n        return 'GammaEncoding';\n      default:\n        return 'ClampToEdgeWrapping';\n    }\n  };\n  return {\n    name: id,\n    url: texture.image.currentSrc,\n    encoding: encodingType(texture.encoding),\n    wrapT: repeatType(texture.wrapT),\n    flipY: texture.flipY.toString(),\n  };\n};\n\nconst UniformsGL = ({ program, material, setTexNumber }: any) => {\n  const gl = usePerf((state) => state.gl);\n  const [uniforms, set] = useState<any | null>(null);\n\n  useEffect(() => {\n    if (gl) {\n      const data: any = program?.getUniforms();\n      let TexCount = 0;\n      const format: any = new Map();\n\n      data.seq.forEach((e: any) => {\n        if (\n          !e.id.includes('uTroika') &&\n          e.id !== 'isOrthographic' &&\n          e.id !== 'uvTransform' &&\n          e.id !== 'lightProbe' &&\n          e.id !== 'projectionMatrix' &&\n          e.id !== 'viewMatrix' &&\n          e.id !== 'normalMatrix' &&\n          e.id !== 'modelMatrix' &&\n          e.id !== 'modelViewMatrix'\n        ) {\n          let values: any = [];\n          let data: any = {\n            name: e.id,\n          };\n          if (e.cache) {\n            e.cache.forEach((v: any) => {\n              if (typeof v !== 'undefined') {\n                values.push(v.toString().substring(0, 4));\n              }\n            });\n            data.value = values.join();\n            if (material[e.id] && material[e.id].image) {\n              if (material[e.id].image) {\n                TexCount++;\n                data.value = addTextureUniforms(e.id, material[e.id]);\n              }\n            }\n            if (!data.value) {\n              data.value = 'empty';\n            }\n            format.set(e.id, data);\n          }\n        }\n      });\n\n      if (material.uniforms) {\n        Object.keys(material.uniforms).forEach((key: any) => {\n          const uniform = material.uniforms[key];\n          if (uniform.value) {\n            const { value } = uniform;\n            let data: any = {\n              name: key,\n            };\n            if (key.includes('uTroika')) {\n              return;\n            }\n            if (value.isTexture) {\n              TexCount++;\n              data.value = addTextureUniforms(key, value);\n            } else {\n              let sb = JSON.stringify(value);\n              try {\n                sb = JSON.stringify(value);\n              } catch (_err) {\n                sb = value.toString();\n              }\n              data.value = sb;\n            }\n            format.set(key, data);\n          }\n        });\n      }\n\n      if (TexCount > 0) {\n        setTexNumber(TexCount);\n      }\n      set(format);\n    }\n  }, []);\n\n  return (\n    <ProgramsUL>\n      {uniforms &&\n        Array.from(uniforms.values()).map((uniform: any) => {\n          return (\n            <span key={uniform.name}>\n              {typeof uniform.value === 'string' ? (\n                <li>\n                  <span>\n                    {uniform.name} :{' '}\n                    <b>\n                      {uniform.value.substring(0, 30)}\n                      {uniform.value.length > 30 ? '...' : ''}\n                    </b>\n                  </span>\n                </li>\n              ) : (\n                <>\n                  <li>\n                    <b>{uniform.value.name}:</b>\n                  </li>\n                  <div>\n                    {Object.keys(uniform.value).map((key) => {\n                      return key !== 'name' ? (\n                        <div key={key}>\n                          {key === 'url' ? (\n                            <a href={uniform.value[key]} target=\"_blank\">\n                              <img src={uniform.value[key]} />\n                            </a>\n                          ) : (\n                            <li>\n                              {key}: <b>{uniform.value[key]}</b>\n                            </li>\n                          )}\n                        </div>\n                      ) : null;\n                    })}\n                    <ProgramConsole\n                      onClick={() => {\n                        console.info(\n                          material[uniform.value.name] ||\n                            material?.uniforms[uniform.value.name]?.value\n                        );\n                      }}\n                    >\n                      console.info({uniform.value.name});\n                    </ProgramConsole>\n                  </div>\n                </>\n              )}\n            </span>\n          );\n        })}\n    </ProgramsUL>\n  );\n};\ntype ProgramUIProps = {\n  el: ProgramsPerf;\n};\n\nconst DynamicDrawCallInfo = ({ el }: any) => {\n  usePerf((state) => state.log);\n  const gl: any = usePerf((state) => state.gl);\n\n  const getVal = (el: any) => {\n    if (!gl) return 0;\n\n    const res =\n      Math.round(\n        (el.drawCounts.total /\n          (gl.info.render.triangles +\n            gl.info.render.lines +\n            gl.info.render.points)) *\n          100 *\n          10\n      ) / 10;\n    return (isFinite(res) && res) || 0;\n  };\n  return (\n    <>\n      {el.drawCounts.total > 0 && (\n        <PerfI style={{ height: 'auto', width: 'auto', margin: '0 4px' }}>\n          {el.drawCounts.type === 'Triangle' ? (\n            <VercelLogoIcon style={{ top: '-1px' }} />\n          ) : (\n            <ActivityLogIcon style={{ top: '-1px' }} />\n          )}\n          {el.drawCounts.total}\n          <small>{el.drawCounts.type}s</small>\n          {gl && (\n            <PerfB\n              style={{ bottom: '-10px', width: '40px', fontWeight: 'bold' }}\n            >\n              {el.visible && !el.material.wireframe ? getVal(el) : 0}%\n            </PerfB>\n          )}\n        </PerfI>\n      )}\n    </>\n  );\n};\nconst ProgramUI: FC<ProgramUIProps> = ({ el }) => {\n  const [showProgram, setShowProgram] = useState(el.visible);\n\n  const [toggleProgram, set] = useState(el.expand);\n  const [texNumber, setTexNumber] = useState(0);\n  const { meshes, program, material }: any = el;\n\n  return (\n    <ProgramGeo>\n      <ProgramHeader\n        onClick={() => {\n          el.expand = !toggleProgram;\n\n          Object.keys(meshes).forEach((key) => {\n            const mesh = meshes[key];\n\n            mesh.material.wireframe = false;\n          });\n\n          set(!toggleProgram);\n        }}\n      >\n        <Toggle style={{ marginRight: '6px' }}>\n          {toggleProgram ? (\n            <span>\n              <TriangleDownIcon />\n            </span>\n          ) : (\n            <span>\n              <TriangleUpIcon />\n            </span>\n          )}\n        </Toggle>\n        {program && (\n          <span>\n            <ProgramTitle>{program.name}</ProgramTitle>\n\n            <PerfI style={{ height: 'auto', width: 'auto', margin: '0 4px' }}>\n              <LayersIcon style={{ top: '-1px' }} />\n              {Object.keys(meshes).length}\n              <small>{Object.keys(meshes).length > 1 ? 'users' : 'user'}</small>\n            </PerfI>\n            {texNumber > 0 && (\n              <PerfI style={{ height: 'auto', width: 'auto', margin: '0 4px' }}>\n                {texNumber > 1 ? (\n                  <ImageIcon style={{ top: '-1px' }} />\n                ) : (\n                  <ImageIcon style={{ top: '-1px' }} />\n                )}\n                {texNumber}\n                <small>tex</small>\n              </PerfI>\n            )}\n            <DynamicDrawCallInfo el={el} />\n            {material.glslVersion === '300 es' && (\n              <PerfI style={{ height: 'auto', width: 'auto', margin: '0 4px' }}>\n                <RocketIcon style={{ top: '-1px' }} />\n                300\n                <small>es</small>\n                <PerfB style={{ bottom: '-10px', width: '40px' }}>glsl</PerfB>\n              </PerfI>\n            )}\n          </span>\n        )}\n        <ToggleVisible\n          onPointerEnter={() => {\n            Object.keys(meshes).forEach((key) => {\n              const mesh = meshes[key];\n              mesh.material.wireframe = true;\n            });\n          }}\n          onPointerLeave={() => {\n            Object.keys(meshes).forEach((key) => {\n              const mesh = meshes[key];\n              mesh.material.wireframe = false;\n            });\n          }}\n          onClick={(e: any) => {\n            e.stopPropagation();\n\n            Object.keys(meshes).forEach((key) => {\n              const mesh = meshes[key];\n              const invert = !showProgram;\n              mesh.visible = invert;\n              el.visible = invert;\n              setShowProgram(invert);\n            });\n          }}\n        >\n          {showProgram ? <EyeOpenIcon /> : <EyeNoneIcon />}\n        </ToggleVisible>\n      </ProgramHeader>\n      <div\n        style={{ maxHeight: toggleProgram ? '9999px' : 0, overflow: 'hidden' }}\n      >\n        <ProgramsULHeader>\n          <ButtonIcon /> Uniforms:\n        </ProgramsULHeader>\n        <UniformsGL\n          program={program}\n          material={material}\n          setTexNumber={setTexNumber}\n        />\n        <ProgramsULHeader>\n          <CubeIcon /> Geometries:\n        </ProgramsULHeader>\n\n        <ProgramsUL>\n          {meshes &&\n            Object.keys(meshes).map(\n              (key) =>\n                meshes[key] &&\n                meshes[key].geometry && (\n                  <ProgramsGeoLi key={key}>\n                    <span>{meshes[key].geometry.type}: </span>\n                    {meshes[key].userData && meshes[key].userData.drawCount && (\n                      <b>\n                        <div>\n                          {meshes[key].userData.drawCount.count}\n                          <small> {meshes[key].userData.drawCount.type}s</small>\n                        </div>\n                        <br />\n                        <div>\n                          {Math.round(\n                            (estimateBytesUsed(meshes[key].geometry) / 1024) *\n                              1000\n                          ) / 1000}\n                          Kb\n                          <small> memory used</small>\n                        </div>\n                      </b>\n                    )}\n                  </ProgramsGeoLi>\n                )\n            )}\n        </ProgramsUL>\n        <ProgramConsole\n          onClick={() => {\n            console.info(material);\n          }}\n        >\n          console.info({material.type})\n        </ProgramConsole>\n      </div>\n    </ProgramGeo>\n  );\n};\n\nexport const ProgramsUI: FC<PerfProps> = () => {\n  usePerf((state) => state.triggerProgramsUpdate);\n  const programs:any = usePerf((state) => state.programs);\n  return (\n    <ProgramsContainer>\n      {programs &&\n        Array.from(programs.values()).map((el: any) => {\n          if (!el) {\n            return null;\n          }\n          return el ? <ProgramUI key={el.material.uuid} el={el} /> : null;\n        })}\n    </ProgramsContainer>\n  );\n};\n", "import React, { type FC, useRef } from 'react'\nimport { ChartUI } from './Graph'\nimport {\n  ActivityLogIcon,\n  BarChartIcon,\n  DotIcon,\n  DropdownMenuIcon,\n  ImageIcon,\n  LapTimerIcon,\n  LightningBoltIcon,\n  MarginIcon,\n  MinusIcon,\n  RulerHorizontalIcon,\n  TextAlignJustifyIcon,\n  TriangleDownIcon,\n  TriangleUpIcon,\n  VercelLogoIcon,\n} from '@radix-ui/react-icons'\n\nimport { HtmlMinimal } from './HtmlMinimal'\nimport { PerfHeadless } from './PerfHeadless'\n\nimport { Toggle, PerfS, PerfIContainer, PerfI, PerfB, ToggleContainer, ContainerScroll, PerfSmallI } from '../styles'\nimport { ProgramsUI } from './Program'\nimport { setPerf, usePerf } from '../store'\nimport type { PerfPropsGui } from '../types'\n\ninterface colors {\n  [index: string]: string\n}\n\nexport const colorsGraph = (colorBlind: boolean | undefined) => {\n  const colors: colors = {\n    overClock: `#ff6eff`,\n    fps: colorBlind ? '100, 143, 255' : '238,38,110',\n    cpu: colorBlind ? '254, 254, 98' : '66,226,46',\n    gpu: colorBlind ? '254,254,254' : '253,151,31',\n    custom: colorBlind ? '86,180,233' : '40,255,255',\n  }\n  return colors\n}\n\nconst DynamicUIPerf: FC<PerfPropsGui> = ({ showGraph, colorBlind }) => {\n  const overclockingFps = usePerf((s) => s.overclockingFps)\n  const fpsLimit = usePerf((s) => s.fpsLimit)\n\n  return (\n    <PerfB\n      style={\n        showGraph\n          ? {\n              color: overclockingFps\n                ? colorsGraph(colorBlind).overClock.toString()\n                : `rgb(${colorsGraph(colorBlind).fps})`,\n            }\n          : {}\n      }>\n      FPS {overclockingFps ? `${fpsLimit}🚀` : ''}\n    </PerfB>\n  )\n}\n\nconst DynamicUI: FC<PerfPropsGui> = ({ showGraph, colorBlind, customData, minimal }) => {\n  const gl = usePerf((state) => state.gl)\n\n  return gl ? (\n    <PerfIContainer>\n      <PerfI>\n        <LightningBoltIcon />\n        <PerfB\n          style={\n            showGraph\n              ? {\n                  color: `rgb(${colorsGraph(colorBlind).gpu.toString()})`,\n                }\n              : {}\n          }>\n          GPU\n        </PerfB>\n        <PerfSmallI>ms</PerfSmallI>\n      </PerfI>\n      <PerfI>\n        <RulerHorizontalIcon />\n        <PerfB\n          style={\n            showGraph\n              ? {\n                  color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`,\n                }\n              : {}\n          }>\n          CPU\n        </PerfB>\n        <PerfSmallI>ms</PerfSmallI>\n      </PerfI>\n      {/* <PerfI>\n        <RulerHorizontalIcon />\n        <PerfB  style={\n            showGraph\n              ? {\n                  color: `rgb(${colorsGraph(colorBlind).cpu.toString()})`,\n                }\n              : {}\n          }>Memory</PerfB>\n        <PerfSmallI>mb</PerfSmallI>\n      </PerfI> */}\n      <PerfI>\n        <LapTimerIcon />\n        <DynamicUIPerf showGraph={showGraph} colorBlind={colorBlind} />\n      </PerfI>\n      {!minimal && gl && (\n        <PerfI>\n          <TextAlignJustifyIcon />\n          {/* @ts-ignore */}\n          <PerfB>{gl.info.render.calls === 1 ? 'call' : 'calls'}</PerfB>\n        </PerfI>\n      )}\n      {!minimal && gl && (\n        <PerfI>\n          <VercelLogoIcon />\n          <PerfB>Triangles</PerfB>\n        </PerfI>\n      )}\n      {customData && (\n        <PerfI>\n          <BarChartIcon />\n          <PerfB style={showGraph ? { color: `rgb(${colorsGraph(colorBlind).custom})` } : {}}>{customData.name}</PerfB>\n          {customData.info && <PerfSmallI>{customData.info}</PerfSmallI>}\n        </PerfI>\n      )}\n    </PerfIContainer>\n  ) : null\n}\n\nconst PerfUI: FC<PerfPropsGui> = ({\n  showGraph,\n  colorBlind,\n  deepAnalyze,\n  customData,\n  matrixUpdate,\n  openByDefault,\n  minimal,\n}) => {\n  return (\n    <>\n      <DynamicUI showGraph={showGraph} colorBlind={colorBlind} customData={customData} minimal={minimal} />\n      {!minimal && (\n        <PerfThree\n          matrixUpdate={matrixUpdate}\n          openByDefault={openByDefault}\n          deepAnalyze={deepAnalyze}\n          showGraph={showGraph}\n        />\n      )}\n    </>\n  )\n}\n\nconst InfoUI: FC<PerfPropsGui> = ({ matrixUpdate }) => {\n  return (\n    <div>\n      <PerfI>\n        <MarginIcon />\n        <PerfB>Geometries</PerfB>\n      </PerfI>\n      <PerfI>\n        <ImageIcon />\n        <PerfB>Textures</PerfB>\n      </PerfI>\n      <PerfI>\n        <ActivityLogIcon />\n        <PerfB>shaders</PerfB>\n      </PerfI>\n      <PerfI>\n        <MinusIcon />\n        <PerfB>Lines</PerfB>\n      </PerfI>\n      <PerfI>\n        <DotIcon />\n        <PerfB>Points</PerfB>\n      </PerfI>\n      {matrixUpdate && (\n        <PerfI>\n          <DropdownMenuIcon />\n          <PerfB>Matrices</PerfB>\n        </PerfI>\n      )}\n    </div>\n  )\n}\n\nconst ToggleEl = ({ tab, title, set }: any) => {\n  const tabStore = usePerf((s: { tab: any }) => s.tab)\n  return (\n    <Toggle\n      className={`${tabStore === tab ? ' __perf_toggle_tab_active' : ''}`}\n      onClick={() => {\n        set(true)\n        setPerf({ tab: tab })\n      }}>\n      <span>{title}</span>\n    </Toggle>\n  )\n}\nconst PerfThree: FC<PerfPropsGui> = ({ openByDefault, showGraph, deepAnalyze, matrixUpdate }) => {\n  const [show, set] = React.useState(openByDefault)\n\n  return (\n    <span>\n      <TabContainers show={show} showGraph={showGraph} matrixUpdate={matrixUpdate} />\n      {openByDefault && !deepAnalyze ? null : (\n        <ToggleContainer className={'__perf_toggle'}>\n          {/* <ToggleEl tab=\"inspector\" title=\"Inspector\" set={set} /> */}\n          {deepAnalyze && <ToggleEl tab=\"programs\" title=\"Programs\" set={set} />}\n          {deepAnalyze && <ToggleEl tab=\"infos\" title=\"Infos\" set={set} />}\n          <Toggle\n            onClick={() => {\n              set(!show)\n            }}>\n            {show ? (\n              <span>\n                <TriangleDownIcon /> Minimize\n              </span>\n            ) : (\n              <span>\n                <TriangleUpIcon /> More\n              </span>\n            )}\n          </Toggle>\n        </ToggleContainer>\n      )}\n    </span>\n  )\n}\n\nconst TabContainers = ({ show, showGraph, matrixUpdate }: any) => {\n  const tab = usePerf((state) => state.tab)\n\n  return (\n    <>\n      <InfoUI matrixUpdate={matrixUpdate} />\n      {show && (\n        <div>\n          <ContainerScroll style={{ marginTop: showGraph ? '38px' : 0 }}>\n            {tab === 'programs' && <ProgramsUI />}\n          </ContainerScroll>\n        </div>\n      )}\n    </>\n  )\n}\n/**\n * Performance profiler component\n */\nexport const Perf: FC<PerfPropsGui> = ({\n  showGraph = true,\n  colorBlind = false,\n  openByDefault = true,\n  className,\n  overClock = false,\n  style,\n  position = 'top-right',\n  chart,\n  logsPerSecond,\n  deepAnalyze = false,\n  antialias = true,\n  customData,\n  matrixUpdate,\n  minimal,\n}) => {\n  const perfContainerRef = useRef(null)\n\n  return (\n    <>\n      <PerfHeadless\n        logsPerSecond={logsPerSecond}\n        chart={chart}\n        overClock={overClock}\n        deepAnalyze={deepAnalyze}\n        matrixUpdate={matrixUpdate}\n      />\n      <HtmlMinimal name='r3f-perf'>\n        <PerfS\n          className={\n            (className ? ' '.concat(className) : ' ') + ` ${position ? position : ''} ${minimal ? 'minimal' : ''}`\n          }\n          style={{ minHeight: minimal ? '37px' : showGraph ? '100px' : '60px', ...style }}\n          ref={perfContainerRef}>\n          <ChartUI\n            perfContainerRef={perfContainerRef}\n            colorBlind={colorBlind}\n            chart={chart}\n            showGraph={showGraph}\n            antialias={antialias}\n            customData={customData}\n            minimal={minimal}\n            matrixUpdate={matrixUpdate}\n          />\n          <PerfUI\n            colorBlind={colorBlind}\n            showGraph={showGraph}\n            deepAnalyze={deepAnalyze}\n            openByDefault={openByDefault}\n            customData={customData}\n            matrixUpdate={matrixUpdate}\n            minimal={minimal}\n          />\n        </PerfS>\n      </HtmlMinimal>\n    </>\n  )\n}\n"],
  "mappings": "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AK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,QAAQ;AAAA,IACV,GAAG;AAAA,MACD,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IACP,CAAC;AAAA,IACD,OAAO;AAAA,MACL,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,UAAU;AAAA,IACZ;AAAA,EACF;AAAA;AAAA;AAAA,EAGA,8BAA8B;AAAA,IAC5B,iBAAiB,CAAC,CAAC;AAAA,MACjmBAAmB,CAAC;AAAA,MAClB,cAAc,CAAC;AAAA,QACb,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;AAAA,QACT,gBAAgB;AAAA,QAChB,eAAe;AAAA,MACjB,GAAG;AAAA,QACD,SAAS;AAAA,QACT,SAAS;A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",
  "names": ["prefix", "Events", "context", "once", "EventEmitter", "i", "ReactExports", "useSyncExternalStoreExports", "loop", "i", "_active", "geometry", "position", "EventEmitter", "handler", "context", "PerfLib", "chart", "i", "ctx", "AccessibilityIcon", "React", "forwardedRef", "color", "props", "width", "height", "viewBox", "fill", "xmlns", "ref", "d", "fillRule", "clipRule", "ActivityLogIcon", "AlignBaselineIcon", "AlignBottomIcon", "AlignCenterHorizontallyIcon", "AlignCenterVerticallyIcon", "AlignLeftIcon", "AlignRightIcon", "AlignTopIcon", "AllSidesIcon", "AngleIcon", "ArchiveIcon", "ArrowBottomLeftIcon", "ArrowBottomRightIcon", "ArrowDownIcon", "ArrowLeftIcon", "ArrowRightIcon", "ArrowTopLeftIcon", "ArrowTopRightIcon", "ArrowUpIcon", "AspectRatioIcon", "AvatarIcon", "BackpackIcon", "BadgeIcon", "BarChartIcon", "BellIcon", "BlendingModeIcon", "BookmarkIcon", "BookmarkFilledIcon", "BorderAllIcon", "x", "y", "rx", "BorderBottomIcon", "BorderDashedIcon", "BorderDottedIcon", "BorderLeftIcon", "transform", "BorderNoneIcon", "BorderRightIcon", "BorderSolidIcon", "BorderSplitIcon", "BorderStyleIcon", "BorderTopIcon", "BorderWidthIcon", "BoxIcon", "BoxModelIcon", "ButtonIcon", "CalendarIcon", "CameraIcon", "CardStackIcon", "CardStackMinusIcon", "CardStackPlusIcon", "CaretDownIcon", "CaretLeftIcon", "CaretRightIcon", "CaretSortIcon", "CaretUpIcon", "ChatBubbleIcon", "CheckIcon", "CheckCircledIcon", "CheckboxIcon", "ChevronDownIcon", "ChevronLeftIcon", "ChevronRightIcon", "ChevronUpIcon", "CircleIcon", "CircleBackslashIcon", "ClipboardIcon", "ClipboardCopyIcon", "ClockIcon", "CodeIcon", "CodeSandboxLogoIcon", "ColorWheelIcon", "ColumnSpacingIcon", "ColumnsIcon", "CommitIcon", "Component1Icon", "Component2Icon", "ComponentBooleanIcon", "ComponentInstanceIcon", "ComponentNoneIcon", "ComponentPlaceholderIcon", "ContainerIcon", "CookieIcon", "CopyIcon", "CornerBottomLeftIcon", "CornerBottomRightIcon", "CornerTopLeftIcon", "CornerTopRightIcon", "CornersIcon", "CountdownTimerIcon", "CounterClockwiseClockIcon", "CropIcon", "Cross1Icon", "Cross2Icon", "CrossCircledIcon", "Crosshair1Icon", "Crosshair2Icon", "CrumpledPaperIcon", "CubeIcon", "CursorArrowIcon", "CursorTextIcon", "DashIcon", "DashboardIcon", "DesktopIcon", "DimensionsIcon", "DiscIcon", "DiscordLogoIcon", "DividerHorizontalIcon", "DividerVerticalIcon", "DotIcon", "DotFilledIcon", "DotsHorizontalIcon", "DotsVerticalIcon", "DoubleArrowDownIcon", "DoubleArrowLeftIcon", "DoubleArrowRightIcon", "DoubleArrowUpIcon", "DownloadIcon", "DragHandleDots1Icon", "cx", "cy", "r", "DragHandleDots2Icon", "DragHandleHorizontalIcon", "DragHandleVerticalIcon", "DrawingPinIcon", "DrawingPinFilledIcon", "DropdownMenuIcon", "EnterIcon", "EnterFullScreenIcon", "EnvelopeClosedIcon", "EnvelopeOpenIcon", "EraserIcon", "ExclamationTriangleIcon", "ExitIcon", "ExitFullScreenIcon", "ExternalLinkIcon", "EyeClosedIcon", "EyeNoneIcon", "EyeOpenIcon", "FaceIcon", "FigmaLogoIcon", "FileIcon", "FileMinusIcon", "FilePlusIcon", "FileTextIcon", "FontBoldIcon", "FontFamilyIcon", "FontItalicIcon", "FontRomanIcon", "FontSizeIcon", "FontStyleIcon", "FrameIcon", "FramerLogoIcon", "GearIcon", "GitHubLogoIcon", "GlobeIcon", "GridIcon", "GroupIcon", "Half1Icon", "Half2Icon", "HamburgerMenuIcon", "HandIcon", "HeadingIcon", "HeartIcon", "HeartFilledIcon", "HeightIcon", "HobbyKnifeIcon", "HomeIcon", "IconJarLogoIcon", "IdCardIcon", "ImageIcon", "InfoCircledIcon", "InputIcon", "InstagramLogoIcon", "KeyboardIcon", "LapTimerIcon", "LaptopIcon", "LayersIcon", "LayoutIcon", "LetterCaseCapitalizeIcon", "LetterCaseLowercaseIcon", "LetterCaseToggleIcon", "LetterCaseUppercaseIcon", "LetterSpacingIcon", "LightningBoltIcon", "LineHeightIcon", "Link1Icon", "Link2Icon", "LinkBreak1Icon", "LinkBreak2Icon", "LinkNone1Icon", "LinkNone2Icon", "LinkedInLogoIcon", "ListBulletIcon", "LockClosedIcon", "LockOpen1Icon", "LockOpen2Icon", "LoopIcon", "MagicWandIcon", "MagnifyingGlassIcon", "MarginIcon", "MaskOffIcon", "MaskOnIcon", "MinusIcon", "MinusCircledIcon", "MixIcon", "MixerHorizontalIcon", "MixerVerticalIcon", "MobileIcon", "ModulzLogoIcon", "MoonIcon", "MoveIcon", "NotionLogoIcon", "OpacityIcon", "OpenInNewWindowIcon", "OverlineIcon", "PaddingIcon", "PaperPlaneIcon", "PauseIcon", "Pencil1Icon", "Pencil2Icon", "PersonIcon", "PieChartIcon", "PilcrowIcon", "PinBottomIcon", "PinLeftIcon", "PinRightIcon", "PinTopIcon", "PlayIcon", "PlusIcon", "PlusCircledIcon", "QuestionMarkIcon", "QuestionMarkCircledIcon", "QuoteIcon", "RadiobuttonIcon", "ReaderIcon", "ReloadIcon", "ResetIcon", "ResumeIcon", "RocketIcon", "RotateCounterClockwiseIcon", "RowSpacingIcon", "RowsIcon", "RulerHorizontalIcon", "RulerSquareIcon", "ScissorsIcon", "SectionIcon", "SewingPinIcon", "SewingPinFilledIcon", "ShadowIcon", "opacity", "ShadowInnerIcon", "ShadowNoneIcon", "ShadowOuterIcon", "Share1Icon", "Share2Icon", "ShuffleIcon", "SizeIcon", "SketchLogoIcon", "SlashIcon", "SliderIcon", "SpaceBetweenHorizontallyIcon", "SpaceBetweenVerticallyIcon", "SpaceEvenlyHorizontallyIcon", "SpaceEvenlyVerticallyIcon", "SpeakerLoudIcon", "SpeakerModerateIcon", "SpeakerOffIcon", "SpeakerQuietIcon", "SquareIcon", "StackIcon", "StarIcon", "StarFilledIcon", "StitchesLogoIcon", "StopIcon", "StopwatchIcon", "StretchHorizontallyIcon", "StretchVerticallyIcon", "StrikethroughIcon", "SunIcon", "SwitchIcon", "SymbolIcon", "TableIcon", "TargetIcon", "TextIcon", "TextAlignBottomIcon", "TextAlignCenterIcon", "TextAlignJustifyIcon", "TextAlignLeftIcon", "TextAlignMiddleIcon", "TextAlignRightIcon", "TextAlignTopIcon", "TextNoneIcon", "ThickArrowDownIcon", "ThickArrowLeftIcon", "ThickArrowRightIcon", "ThickArrowUpIcon", "TimerIcon", "TokensIcon", "TrackNextIcon", "TrackPreviousIcon", "TransformIcon", "TransparencyGridIcon", "TrashIcon", "TriangleDownIcon", "TriangleLeftIcon", "TriangleRightIcon", "TriangleUpIcon", "TwitterLogoIcon", "UnderlineIcon", "UpdateIcon", "UploadIcon", "ValueIcon", "ValueNoneIcon", "VercelLogoIcon", "VideoIcon", "ViewGridIcon", "ViewHorizontalIcon", "ViewNoneIcon", "ViewVerticalIcon", "WidthIcon", "ZoomInIcon", "ZoomOutIcon", "matrix", "i", "f", "eps", "geometry", "target", "el", "gl", "isOrthographicCamera", "scale", "React", "React", "React", "React", "createStoreImpl", "createStore", "import_react", "identity", "React", "createStore", "React", "matrix", "tempMatrix", "React", "ReactDOM", "context", "state", "context", "React", "i", "each", "import_react", "__export", "i", "ctx", "raf", "i", "v", "colors", "config", "easing", "range", "steps", "direction", "progress", "observer", "target", "target", "observer", "value", "createStringInterpolator", "config", "i", "output", "useRef", "update", "useState", "useEffect", "i", "import_react", "React", "import_react", "is", "animated", "i", "isAnimatedString", "host", "each", "observer", "update", "eachProp", "React", "import_react", "import_react", "React2", "import_react", "import_react", "FluidValue", "priority", "G", "target", "getAnimatedType", "setAnimated", "isEqual", "getAnimated", "is", "getFluidValue", "toArray", "each", "getPayload", "G", "raf", "frameLoop", "priority", "hasFluidValue", "addFluidObserver", "removeFluidObserver", "callFluidObservers", "update", "frameLoop", "React", "context", "React", "import_react", "context", "React", "Billboard", "React", "React", "import_react", "scale", "i", "scale", "React", "React", "Line", "isArray", "QuadraticBezierLine", "start", "end", "mid", "segments", "points", "React", "CubicBezierLine", "start", "React", "CatmullRomLine", "i", "React", "loop", "camera", "React", "Text", "invalidate", "React", "import_react", "React", "target", "React", "GradientType", "React", "v", "React", "import_react", "i", "scale", "React", "geometry", "React", "React", "defaults", "steps", "target", "i", "forwardRef", "React", "React", "React", "forwardRef", "config", "object", "React", "MarchingCubes", "React", "Decal", "position", "rotation", "scale", "forwardRef", "target", "normal", "i", "React", "import_react", "React", "loader", "React", "React", "React", "React", "target", "OrthographicCamera", "set", "camera", "size", "React", "isFunction", "PerspectiveCamera", "set", "camera", "size", "React", "import_react", "React", "DeviceOrientationControls", "React", "FlyControls", "React", "MapControls", "React", "OrbitControls", "performance", "React", "TrackballControls", "performance", "React", "import_react", "ArcballControls", "performance", "React", "TransformControls", "onChange", "onMouseDown", "onMouseUp", "onObjectChange", "React", "PointerLockControls", "React", "FirstPersonControls", "React", "import_react", "CameraControls", "performance", "React", "context", "geometry", "loop", "eps", "i", "target", "React", "React", "React", "React", "React", "React", "loader", "React", "React", "import_react", "loader", "React", "import_react", "start", "loop", "video", "texture", "VideoTexture", "config", "f", "React", "import_react", "i", "totalFrames", "ctx", "col", "json", "React", "React", "React", "React", "StatsGl", "stats", "React", "React", "React", "React", "i", "start", "geometry", "target", "i", "target", "i", "target", "leftBounds", "i", "i", "i", "uint16Array", "uint32Array", "i", "geometry", "i", "offset", "count", "i", "areIntersecting", "closestPointLineToLine", "v2", "temp1", "temp2", "closestPointsSegmentToSegment", "sphereIntersectTriangle", "triangle", "start", "i", "target", "i2", "matrix", "update", "i", "v", "triangle", "i2", "closestPointToPoint", "target", "start", "primitives", "geometry", "float32Array", "uint16Array", "uint32Array", "nodeIndex32", "nodeIndex16", "c1", "c2", "temp", "target", "ray", "position", "normal", "intersection", "i", "i2", "ray", "geometry", "i", "intersection", "triangle", "geometry", "uint32Array", "uint16Array", "float32Array", "i", "_traverse", "byteOffset", "ray", "ray", "geometry", "i", "intersection", "triangle", "ray", "float32Array", "uint16Array", "uint32Array", "ray", "float32Array", "uint16Array", "uint32Array", "c1", "c2", "float32Array", "uint16Array", "uint32Array", "i", "i2", "obb", "obb2", "temp1", "geometry", "triangle", "triangle2", "i", "geometry", "uint32Array", "uint16Array", "float32Array", "i", "_traverse", "byteOffset", "ray", "_raycast", "float32Array", "uint16Array", "uint32Array", "_xyzFields", "ray", "_raycastFirst", "float32Array", "uint16Array", "uint32Array", "c1", "c2", "boundingBox", "triangle", "triangle2", "invertedMat", "obb", "obb2", "_intersectsGeometry", "float32Array", "uint16Array", "uint32Array", "i", "i2", "tempMatrix", "obb", "obb2", "temp1", "temp2", "temp3", "temp4", "geometry", "triangle", "triangle2", "i", "i", "obb", "geometry", "i", "uint32Array", "uint16Array", "_traverse", "ray", "triangle", "triangle2", "box", "target", "boundingBox", "matrix", "_box1", "_box2", "BatchedMesh", "i", "l", "i", "geometry", "position", "target", "i", "v3", "uint16Array", "uint32Array", "float32Array", "React", "React", "React", "temp", "React", "React", "boundingBox", "React", "import_react", "React", "React", "Center", "cacheKey", "React", "React", "import_react", "PropTypes", "_mesh", "i", "globalContext", "tempMatrix", "context", "localContext", "props", "ref", "colors", "instance", "instances", "Merged", "isArray", "geometry", "i", "context", "loop", "currentFrame", "aspect", "context", "React", "React", "v", "React", "v", "React", "geometry", "i", "v", "MeshReflectorMaterial", "gl", "camera", "scene", "normal", "target", "fbo1", "fbo2", "blurpass", "reflectorProps", "React", "import_react", "React", "v", "React", "React", "React", "React", "React", "create", "Sphere", "Plane", "Shape", "geometry", "v", "i", "React", "RoundedBox", "steps", "React", "geometry", "ScreenQuad", "React", "React", "AnimationState", "context", "React", "React", "forwardRef", "React", "React", "import_react", "isArray", "extensions", "loader", "React", "scale", "renderTarget", "renderTargetBlur", "planeGeometry", "blurPlane", "depthMaterial", "horizontalBlurMaterial", "verticalBlurMaterial", "blur", "React", "scale", "forwardRef", "frames", "i", "position", "update", "React", "React", "canvas", "context", "React", "v", "i", "React", "gl", "camera", "scene", "normal", "target", "fbo1", "fbo2", "blurpass", "reflectorProps", "React", "geometry", "React", "scale", "target", "forwardRef", "React", "Sky", "scale", "React", "position", "colors", "color", "i", "React", "parentMatrix", "translation", "rotation", "scale", "context", "opaque_fragment", "colors", "config", "temp", "React", "v", "scale", "forwardRef", "colors", "React", "React", "React", "React", "React", "React", "context", "parentMatrix", "colors", "ref", "refs", "Points", "React", "context", "geometry", "colors", "segments", "i", "start", "React", "React", "import_react", "_inverseMatrix", "_ray", "_sphere", "_vA", "React", "React", "React", "import_react", "context", "React", "forwardRef", "intersection", "React", "position", "rotation", "scale", "matrix", "forwardRef", "fbo", "Container", "React", "React", "React", "priority", "boundingBox", "i", "intersection", "blend", "quad", "target", "React", "bottom", "clear", "Container", "position", "React", "React", "React", "context", "normal", "direction", "translation", "scale", "context", "rotation", "coneWidth", "coneLength", "cylinderLength", "matrixL", "React", "ray", "scale", "context", "normal", "angle", "React", "c1", "c2", "ray", "intersection", "offsetMatrix", "translation", "scale", "context", "normal", "React", "vec1", "vec2", "calculateOffset", "normal", "upV", "direction", "scale", "context", "position", "rotation", "radius", "matrixL", "matrix", "rotation", "scale", "translation", "config", "props", "context", "React", "import_react", "VideoTexture", "React", "import_react", "VideoTexture", "React", "import_react", "React", "v1", "v2", "v3", "v", "position", "scale", "i", "rotation", "sphere", "_sphere", "React", "import_react", "FaceLandmarker", "mean", "v1", "v2", "v", "target", "update", "eps", "result", "VideoTexture", "Text", "chart", "i", "target", "geometry", "data", "v", "el", "colors", "React", "position"]
}
